// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/AvailabilityStatus
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus Online
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus Online
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Online(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus MaintenanceUpcoming
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_MaintenanceUpcoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_MaintenanceUpcoming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "MaintenanceUpcoming"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus MaintenanceUpcoming
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_MaintenanceUpcoming(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_MaintenanceUpcoming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "MaintenanceUpcoming", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerStatusData/AvailabilityStatus Offline
::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus>("", "MultiplayerStatusData/AvailabilityStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerStatusData/AvailabilityStatus Offline
void GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Offline(::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusData/AvailabilityStatus", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::AvailabilityStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/UserMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage.hpp"
// Including type: MultiplayerStatusData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage_LocalizedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData/UserMessage/LocalizedMessage[] localizations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>& GlobalNamespace::MultiplayerStatusData::UserMessage::dyn_localizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::dyn_localizations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MultiplayerStatusData_UserMessage_LocalizedMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusData::UserMessage::LocalizedMessage::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel
#include "GlobalNamespace/MultiplayerStatusModel.hpp"
// Including type: MultiplayerStatusModel/MultiplayerStatusDataFB
#include "GlobalNamespace/MultiplayerStatusModel_MultiplayerStatusDataFB.hpp"
// Including type: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9
#include "GlobalNamespace/MultiplayerStatusModel_-GetMultiplayerStatusAsyncInternal-d__9.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::MultiplayerStatusModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MultiplayerStatusModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::MultiplayerStatusModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerStatusModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::MultiplayerStatusModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpClient _client
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& GlobalNamespace::MultiplayerStatusModel::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<MultiplayerStatusData> _request
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*& GlobalNamespace::MultiplayerStatusModel::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerStatusModel.Init
void GlobalNamespace::MultiplayerStatusModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.GetMultiplayerStatusAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>* GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: MultiplayerStatusModel.IsAvailabilityTaskValid
bool GlobalNamespace::MultiplayerStatusModel::IsAvailabilityTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::IsAvailabilityTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAvailabilityTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.StartRequest
void GlobalNamespace::MultiplayerStatusModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel.GetMultiplayerStatusAsyncInternal
::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>* GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::GetMultiplayerStatusAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerStatusAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::MultiplayerStatusData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel/MultiplayerStatusDataFB
#include "GlobalNamespace/MultiplayerStatusModel_MultiplayerStatusDataFB.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusData[] data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MultiplayerStatusData*>& GlobalNamespace::MultiplayerStatusModel::MultiplayerStatusDataFB::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::MultiplayerStatusDataFB::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MultiplayerStatusData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9
#include "GlobalNamespace/MultiplayerStatusModel_-GetMultiplayerStatusAsyncInternal-d__9.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<MultiplayerStatusData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::MultiplayerStatusData*>& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::MultiplayerStatusData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerStatusModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerStatusModel*& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerStatusModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriBuilder <uriBuilder>5__2
[[deprecated("Use field access instead!")]] ::System::UriBuilder*& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$uriBuilder$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$uriBuilder$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<uriBuilder>5__2"))->offset;
  return *reinterpret_cast<::System::UriBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9.MoveNext
void GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerStatusModel/<GetMultiplayerStatusAsyncInternal>d__9.SetStateMachine
void GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerStatusModel::$GetMultiplayerStatusAsyncInternal$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData/QuickPlaySongPacksOverride quickPlayAvailablePacksOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride*& GlobalNamespace::QuickPlaySetupData::dyn_quickPlayAvailablePacksOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::dyn_quickPlayAvailablePacksOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayAvailablePacksOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupData.get_hasOverride
bool GlobalNamespace::QuickPlaySetupData::get_hasOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::get_hasOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack> predefinedPackIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_predefinedPackIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_predefinedPackIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predefinedPackIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack> localizedCustomPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_localizedCustomPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::dyn_localizedCustomPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedCustomPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String language
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_packName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName::dyn_packName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPack.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_LocalizedCustomPackName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData/QuickPlaySongPacksOverride/LocalizedCustomPackName[] localizedNames
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_localizedNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_localizedNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedNames"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPackName*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> packIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_packIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::LocalizedCustomPack::dyn_packIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupData/QuickPlaySongPacksOverride/PredefinedPack
#include "GlobalNamespace/QuickPlaySetupData_QuickPlaySongPacksOverride_PredefinedPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 order
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupData::QuickPlaySongPacksOverride::PredefinedPack::dyn_packId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel
#include "GlobalNamespace/QuickPlaySetupModel.hpp"
// Including type: QuickPlaySetupModel/QuickPlaySetupDataFB
#include "GlobalNamespace/QuickPlaySetupModel_QuickPlaySetupDataFB.hpp"
// Including type: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/QuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestCacheTimeoutMinutes
int GlobalNamespace::QuickPlaySetupModel::_get_kRequestCacheTimeoutMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_get_kRequestCacheTimeoutMinutes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuickPlaySetupModel", "kRequestCacheTimeoutMinutes"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestCacheTimeoutMinutes
void GlobalNamespace::QuickPlaySetupModel::_set_kRequestCacheTimeoutMinutes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_set_kRequestCacheTimeoutMinutes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuickPlaySetupModel", "kRequestCacheTimeoutMinutes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::QuickPlaySetupModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuickPlaySetupModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::QuickPlaySetupModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuickPlaySetupModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::QuickPlaySetupModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.Http.HttpClient _client
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& GlobalNamespace::QuickPlaySetupModel::dyn__client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_client"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<QuickPlaySetupData> _request
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*& GlobalNamespace::QuickPlaySetupModel::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime _lastRequestTime
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::QuickPlaySetupModel::dyn__lastRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::dyn__lastRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastRequestTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupModel.GetQuickPlaySetupAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>* GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: QuickPlaySetupModel.Init
void GlobalNamespace::QuickPlaySetupModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.StartRequest
void GlobalNamespace::QuickPlaySetupModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.GetQuickPlaySetupInternal
::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>* GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::GetQuickPlaySetupInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetQuickPlaySetupInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::QuickPlaySetupData*>*, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.IsQuickPlaySetupTaskValid
bool GlobalNamespace::QuickPlaySetupModel::IsQuickPlaySetupTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::IsQuickPlaySetupTaskValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQuickPlaySetupTaskValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel.IsUrlValid
bool GlobalNamespace::QuickPlaySetupModel::IsUrlValid(::StringW url) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::IsUrlValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUrlValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, url);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel/QuickPlaySetupDataFB
#include "GlobalNamespace/QuickPlaySetupModel_QuickPlaySetupDataFB.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupData[] data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::QuickPlaySetupData*>& GlobalNamespace::QuickPlaySetupModel::QuickPlaySetupDataFB::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::QuickPlaySetupDataFB::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::QuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10
#include "GlobalNamespace/QuickPlaySetupModel_-GetQuickPlaySetupInternal-d__10.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<QuickPlaySetupData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::QuickPlaySetupData*>& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::QuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuickPlaySetupModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickPlaySetupModel*& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriBuilder <uriBuilder>5__2
[[deprecated("Use field access instead!")]] ::System::UriBuilder*& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$uriBuilder$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$uriBuilder$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<uriBuilder>5__2"))->offset;
  return *reinterpret_cast<::System::UriBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>& GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.MoveNext
void GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupModel/<GetQuickPlaySetupInternal>d__10.SetStateMachine
void GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuickPlaySetupModel::$GetQuickPlaySetupInternal$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CannotStartGameReasonMethods
#include "GlobalNamespace/CannotStartGameReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1120400
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersSpectating
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kAllPlayersSpectating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersSpectating
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersSpectating", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120410
// Autogenerated static field getter
// Get static field: static private System.String kNoSongSelected
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kNoSongSelected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoSongSelected
void GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kNoSongSelected", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120420
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersNotInLobby
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersNotInLobby
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120430
// Autogenerated static field getter
// Get static field: static private System.String kDoNotOwnSong
::StringW GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CannotStartGameReasonMethods", "kDoNotOwnSong"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDoNotOwnSong
void GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kDoNotOwnSong", value));
}
// Autogenerated method: CannotStartGameReasonMethods.LocalizedKey
::StringW GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey(::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CannotStartGameReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cannotStartGameReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionFailedReasonMethods
#include "GlobalNamespace/ConnectionFailedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1120440
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedUnknown
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedUnknown
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120450
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedConnectionCanceled
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedConnectionCanceled
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120460
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerUnreachable
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120470
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerDoesNotExist
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerDoesNotExist
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120480
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerAtCapacity
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerAtCapacity
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120490
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedVersionMismatch
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedVersionMismatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204A0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedInvalidPassword
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedInvalidPassword
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204B0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerUnreachable
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204C0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204D0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedNetworkNotConnected
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedNetworkNotConnected
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204E0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed", value));
}
// [LocalizationKeyAttribute] Offset: 0x11204F0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerIsTerminating
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerIsTerminating
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120500
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedTimeout
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedTimeout
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedTimeout(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120510
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedFailedToFindMatch
::StringW GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedFailedToFindMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedFailedToFindMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ConnectionFailedReasonMethods", "kConnectionFailedFailedToFindMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedFailedToFindMatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedFailedToFindMatch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedFailedToFindMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedFailedToFindMatch", value));
}
// Autogenerated method: ConnectionFailedReasonMethods.LocalizedKey
::StringW GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey(::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: ConnectionFailedReasonMethods.ErrorCode
::StringW GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode(::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectedReasonMethods
#include "GlobalNamespace/DisconnectedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1120520
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUnknown
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUnknown
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120530
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUserInitiated
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUserInitiated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120540
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedTimeout
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedTimeout
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120550
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedKicked
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedKicked"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedKicked
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedKicked", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120560
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerAtCapacity
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerAtCapacity
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120570
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerConnectionClosed
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerConnectionClosed
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120580
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedMasterServerUnreachable
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedMasterServerUnreachable
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120590
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerTerminated
::StringW GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerTerminated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated", value));
}
// Autogenerated method: DisconnectedReasonMethods.LocalizedKey
::StringW GlobalNamespace::DisconnectedReasonMethods::LocalizedKey(::GlobalNamespace::DisconnectedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: DisconnectedReasonMethods.ErrorCode
::StringW GlobalNamespace::DisconnectedReasonMethods::ErrorCode(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListItem
#include "GlobalNamespace/GameServerListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String serverName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameServerListItem::dyn_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 capacity
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameServerListItem::dyn_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 occupied
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameServerListItem::dyn_occupied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_occupied");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "occupied"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean password
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerListItem::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListItem::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableItem
#include "GlobalNamespace/GameServerPlayerTableItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedLevel
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suggestedLevel"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedModifiers
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_suggestedModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suggestedModifiers"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayerTableItem::dyn_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableItem::dyn_isReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelGameplaySetupData.get_beatmapLevel
::GlobalNamespace::PreviewDifficultyBeatmap* GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PreviewDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyGameStateController.get_state
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::ILobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.set_state
void GlobalNamespace::ILobbyGameStateController::set_state(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.get_cannotStartGameReason
::GlobalNamespace::CannotStartGameReason GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_selectedLevelGameplaySetupData
::GlobalNamespace::ILevelGameplaySetupData* GlobalNamespace::ILobbyGameStateController::get_selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_selectedLevelGameplaySetupData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILevelGameplaySetupData*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownStarted
bool GlobalNamespace::ILobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startTime
float GlobalNamespace::ILobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_isDisconnected
bool GlobalNamespace::ILobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::ILobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.add_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.Activate
void GlobalNamespace::ILobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.Deactivate
void GlobalNamespace::ILobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetGameStateAndConfigurationAsync
::System::Threading::Tasks::Task* GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: ILobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::ILobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isPartyOwner
void GlobalNamespace::ILobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isActive
bool GlobalNamespace::ILobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isActive
void GlobalNamespace::ILobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isReady
bool GlobalNamespace::ILobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isReady
void GlobalNamespace::ILobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isInLobby
bool GlobalNamespace::ILobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isInLobby
void GlobalNamespace::ILobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayersDataModel.get_localUserId
::StringW GlobalNamespace::ILobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_partyOwnerId
::StringW GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: ILobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer(::StringW kickedUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedUserId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kickedUserId);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearData
void GlobalNamespace::ILobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Activate
void GlobalNamespace::ILobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Deactivate
void GlobalNamespace::ILobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyStateDataModel.get_isConnected
bool GlobalNamespace::ILobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_connectedPlayers
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_rawConnectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::ILobbyStateDataModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.Activate
void GlobalNamespace::ILobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.Deactivate
void GlobalNamespace::ILobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.GetPlayerById
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::GetPlayerById(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ILobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IInvitePlatformHandler
#include "GlobalNamespace/IInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IInvitePlatformHandler.get_isSupported
bool GlobalNamespace::IInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoInvitePlatformHandler
#include "GlobalNamespace/NoInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoInvitePlatformHandler.get_isSupported
bool GlobalNamespace::NoInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::NoInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusInvitePlatformHandler
#include "GlobalNamespace/OculusInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusInvitePlatformHandler.get_isSupported
bool GlobalNamespace::OculusInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::OculusInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestInvitePlatformHandler
#include "GlobalNamespace/TestInvitePlatformHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestInvitePlatformHandler.get_isSupported
bool GlobalNamespace::TestInvitePlatformHandler::get_isSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestInvitePlatformHandler::get_isSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TestInvitePlatformHandler.OpenInvitePanel
void GlobalNamespace::TestInvitePlatformHandler::OpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestInvitePlatformHandler::OpenInvitePanel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewDifficultyBeatmap _beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewDifficultyBeatmap*& GlobalNamespace::LevelGameplaySetupData::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::LevelGameplaySetupData::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapLevel
::GlobalNamespace::PreviewDifficultyBeatmap* GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PreviewDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.ClearGameplaySetupData
void GlobalNamespace::LevelGameplaySetupData::ClearGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::ClearGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.SetBeatmapLevel
void GlobalNamespace::LevelGameplaySetupData::SetBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::SetBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LevelGameplaySetupData.SetGameplayModifiers
void GlobalNamespace::LevelGameplaySetupData::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelGameplaySetupData::SetGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::LobbyDataModelsManager::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyDataModelsManager.Activate
void GlobalNamespace::LobbyDataModelsManager::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyDataModelsManager.Deactivate
void GlobalNamespace::LobbyDataModelsManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelsManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController
#include "GlobalNamespace/LobbyGameStateController.hpp"
// Including type: LobbyGameStateController/<>c__DisplayClass98_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass98_0.hpp"
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kShortTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kShortTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kShortTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kShortTimerSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kLongTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kLongTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kLongTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kLongTimerSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::LobbyGameStateController::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyGameStateController::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyGameStateController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelLoader _multiplayerLevelLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelLoader*& GlobalNamespace::LobbyGameStateController::dyn__multiplayerLevelLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__multiplayerLevelLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::LobbyGameStateController::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::LobbyGameStateController::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::LobbyGameStateController::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ILevelGameplaySetupData> selectedLevelGameplaySetupDataChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>*& GlobalNamespace::LobbyGameStateController::dyn_selectedLevelGameplaySetupDataChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_selectedLevelGameplaySetupDataChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLevelGameplaySetupDataChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ILevelGameplaySetupData> gameStartedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>*& GlobalNamespace::LobbyGameStateController::dyn_gameStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_gameStartedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStartedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action gameStartCancelledEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_gameStartCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_gameStartCancelledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStartCancelledEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownStartedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_countdownStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_countdownStartedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownStartedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownCancelledEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_countdownCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_countdownCancelledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "countdownCancelledEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action songStillDownloadingEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_songStillDownloadingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_songStillDownloadingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songStillDownloadingEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action startTimeChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_startTimeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_startTimeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTimeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> levelFinishedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>*& GlobalNamespace::LobbyGameStateController::dyn_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> levelDidGetDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LobbyGameStateController::dyn_levelDidGetDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_levelDidGetDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelDidGetDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action lobbyDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_lobbyDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_lobbyDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action beforeSceneSwitchCallbackEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyGameStateController::dyn_beforeSceneSwitchCallbackEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_beforeSceneSwitchCallbackEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beforeSceneSwitchCallbackEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerLobbyState> lobbyStateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>*& GlobalNamespace::LobbyGameStateController::dyn_lobbyStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_lobbyStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CannotStartGameReason> startButtonEnabledEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::CannotStartGameReason>*& GlobalNamespace::LobbyGameStateController::dyn_startButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_startButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startButtonEnabledEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::CannotStartGameReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PlayersMissingEntitlementsNetSerializable> playerMissingEntitlementsChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& GlobalNamespace::LobbyGameStateController::dyn_playerMissingEntitlementsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_playerMissingEntitlementsChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerMissingEntitlementsChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <levelStartInitiated>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyGameStateController::dyn_$levelStartInitiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$levelStartInitiated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelStartInitiated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <countdownStarted>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyGameStateController::dyn_$countdownStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$countdownStarted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<countdownStarted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <countdownEndTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LobbyGameStateController::dyn_$countdownEndTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$countdownEndTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<countdownEndTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDisconnected>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyGameStateController::dyn_$isDisconnected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$isDisconnected$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isDisconnected>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DisconnectedReason <disconnectedReason>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectedReason& GlobalNamespace::LobbyGameStateController::dyn_$disconnectedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn_$disconnectedReason$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disconnectedReason>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _predictedStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LobbyGameStateController::dyn__predictedStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__predictedStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_predictedStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LobbyGameStateController::dyn__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _levelStartedOnTime
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyGameStateController::dyn__levelStartedOnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__levelStartedOnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelStartedOnTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyState _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyState& GlobalNamespace::LobbyGameStateController::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CannotStartGameReason _cannotStartGameReason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CannotStartGameReason& GlobalNamespace::LobbyGameStateController::dyn__cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__cannotStartGameReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cannotStartGameReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CannotStartGameReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelGameplaySetupData _selectedLevelGameplaySetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelGameplaySetupData*& GlobalNamespace::LobbyGameStateController::dyn__selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::dyn__selectedLevelGameplaySetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedLevelGameplaySetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelGameplaySetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_startTime
float GlobalNamespace::LobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_startTime
void GlobalNamespace::LobbyGameStateController::set_startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::LobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_levelStartInitiated
void GlobalNamespace::LobbyGameStateController::set_levelStartInitiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_selectedLevelGameplaySetupData
::GlobalNamespace::ILevelGameplaySetupData* GlobalNamespace::LobbyGameStateController::get_selectedLevelGameplaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_selectedLevelGameplaySetupData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILevelGameplaySetupData*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_countdownStarted
bool GlobalNamespace::LobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownStarted
void GlobalNamespace::LobbyGameStateController::set_countdownStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_countdownEndTime
float GlobalNamespace::LobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownEndTime
void GlobalNamespace::LobbyGameStateController::set_countdownEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_state
::GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_state
void GlobalNamespace::LobbyGameStateController::set_state(::GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_cannotStartGameReason
::GlobalNamespace::CannotStartGameReason GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_isDisconnected
bool GlobalNamespace::LobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_isDisconnected
void GlobalNamespace::LobbyGameStateController::set_isDisconnected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_disconnectedReason
void GlobalNamespace::LobbyGameStateController::set_disconnectedReason(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::set_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::LobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_selectedLevelGameplaySetupDataChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_selectedLevelGameplaySetupDataChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelGameplaySetupDataChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent(::System::Action_1<::GlobalNamespace::ILevelGameplaySetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, ::GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent(::System::Action_1<::GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent(::System::Action_1<::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(::System::Action_1<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.Activate
void GlobalNamespace::LobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Deactivate
void GlobalNamespace::LobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Dispose
void GlobalNamespace::LobbyGameStateController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::LobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetGameStateAndConfigurationAsync
::System::Threading::Tasks::Task* GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: LobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::LobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerDisconnected
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerConnectionOwnerStateChanged
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionOwnerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyGameStateController.StopListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StopListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StopListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelledLevelStart
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelledLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetCountdownEndTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime(::StringW userId, float countdownTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(countdownTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, countdownTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelCountdown
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetStartGameTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime(::StringW userId, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleSetIsStartButtonEnabled
void GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled(::StringW userId, ::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, cannotStartGameReason);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel(::StringW userId, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersMissingEntitlements);
}
// Autogenerated method: LobbyGameStateController.HandleStartTimeChanged
void GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderStillDownloadingSong
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderStillDownloadingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetSelectedBeatmap
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetSelectedGameplayModifiers
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerClearSelectedBeatmap
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerClearSelectedGameplayModifiers
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderCountdownFinished
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished(::GlobalNamespace::ILevelGameplaySetupData* gameplaySetupData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderCountdownFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplaySetupData), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplaySetupData, difficultyBeatmap);
}
// Autogenerated method: LobbyGameStateController.StartMultiplayerLevel
void GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel(::GlobalNamespace::ILevelGameplaySetupData* gameplaySetupData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplaySetupData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplaySetupData, difficultyBeatmap, beforeSceneSwitchCallback);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidFinish
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.StopLoading
void GlobalNamespace::LobbyGameStateController::StopLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::StopLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController/<>c__DisplayClass98_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass98_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: PlayerLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayerLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LobbyGameStateController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyGameStateController*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> getGameStateAsyncTcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getGameStateAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getGameStateAsyncTcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getGameStateAsyncTcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> getPlayerPermissionAsyncTcs
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getPlayerPermissionAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::dyn_getPlayerPermissionAsyncTcs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getPlayerPermissionAsyncTcs"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$g__HandleSetMultiplayerGameState_0(::StringW userId, ::GlobalNamespace::MultiplayerGameState newMultiplayerGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newMultiplayerGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, newMultiplayerGameState);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$g__HandleSetPlayerPermissionConfiguration_1(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass98_0.<GetGameStateAndConfigurationAsync>b__2
bool GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::$GetGameStateAndConfigurationAsync$b__2(::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c__DisplayClass98_0::<GetGameStateAndConfigurationAsync>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyGameStateController/<>c <>9
::GlobalNamespace::LobbyGameStateController::$$c* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LobbyGameStateController::$$c*>("", "LobbyGameStateController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyGameStateController/<>c <>9
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9(::GlobalNamespace::LobbyGameStateController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__99_0
::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__99_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__99_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>*>("", "LobbyGameStateController/<>c", "<>9__99_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__99_0
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__99_0(::System::Func_2<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__99_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9__99_0", value)));
}
// Autogenerated method: LobbyGameStateController/<>c..cctor
void GlobalNamespace::LobbyGameStateController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyGameStateController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyGameStateController/<>c.<PredictCountdownEndTime>b__99_0
bool GlobalNamespace::LobbyGameStateController::$$c::$PredictCountdownEndTime$b__99_0(::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*> pair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateController::$$c::<PredictCountdownEndTime>b__99_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PredictCountdownEndTime>b__99_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pair)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pair);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeAlwaysSentEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeAlwaysSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn_gameStateDidChangeAlwaysSentEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameStateDidChangeAlwaysSentEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerGameState _gameState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerGameState& GlobalNamespace::LobbyGameStateModel::dyn__gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::dyn__gameState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerGameState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyGameStateModel.get_gameState
::GlobalNamespace::MultiplayerGameState GlobalNamespace::LobbyGameStateModel::get_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::get_gameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerGameState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent(::System::Action_1<::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameStateWithoutNotification
void GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameStateWithoutNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(::GlobalNamespace::MultiplayerGameState newGameState, bool sendNotification) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState), ::il2cpp_utils::ExtractType(sendNotification)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState, sendNotification);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerData::dyn_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isPartyOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPartyOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isActive>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerData::dyn_$isActive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isActive$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isActive>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isReady>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerData::dyn_$isReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isReady$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isReady>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInLobby>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerData::dyn_$isInLobby$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::dyn_$isInLobby$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInLobby>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isPartyOwner
void GlobalNamespace::LobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isActive
bool GlobalNamespace::LobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isActive
void GlobalNamespace::LobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isReady
bool GlobalNamespace::LobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isReady
void GlobalNamespace::LobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isInLobby
bool GlobalNamespace::LobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isInLobby
void GlobalNamespace::LobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$isPartyOwner$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isPartyOwner>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendBeatmapPermission>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendBeatmapPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendBeatmapPermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasRecommendBeatmapPermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendModifiersPermission>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendModifiersPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasRecommendModifiersPermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasRecommendModifiersPermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasKickVotePermission>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasKickVotePermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasKickVotePermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasKickVotePermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasInvitePermission>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasInvitePermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_$hasInvitePermission$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasInvitePermission>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action permissionsChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LobbyPlayerPermissionsModel::dyn_permissionsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::dyn_permissionsChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionsChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_isPartyOwner
void GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendBeatmapPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendBeatmapPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendModifiersPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendModifiersPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasKickVotePermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasKickVotePermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasInvitePermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasInvitePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::get_hasInvitePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasInvitePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasInvitePermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasInvitePermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::set_hasInvitePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasInvitePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.add_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.remove_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Activate
void GlobalNamespace::LobbyPlayerPermissionsModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Deactivate
void GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.SetPlayerPermissions
void GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions(bool isPartyOwner, bool hasRecommendBeatmapPermission, bool hasRecommendModifiersPermission, bool hasKickVotePermission, bool hasInvitePermission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(hasRecommendBeatmapPermission), ::il2cpp_utils::ExtractType(hasRecommendModifiersPermission), ::il2cpp_utils::ExtractType(hasKickVotePermission), ::il2cpp_utils::ExtractType(hasInvitePermission)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, hasRecommendBeatmapPermission, hasRecommendModifiersPermission, hasKickVotePermission, hasInvitePermission);
}
// Autogenerated method: LobbyPlayerPermissionsModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel
#include "GlobalNamespace/LobbyPlayersDataModel.hpp"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__43.hpp"
// Including type: LobbyPlayersDataModel/<GetEnumerator>d__60
#include "GlobalNamespace/LobbyPlayersDataModel_-GetEnumerator-d__60.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::LobbyPlayersDataModel::dyn__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__menuRpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuRpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyPlayersDataModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::LobbyPlayersDataModel::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerData _emptyLobbyPlayerData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerData*& GlobalNamespace::LobbyPlayersDataModel::dyn__emptyLobbyPlayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__emptyLobbyPlayerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyLobbyPlayerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,LobbyPlayerData> _playersData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>*& GlobalNamespace::LobbyPlayersDataModel::dyn__playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__playersData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LobbyPlayersDataModel::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <partyOwnerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LobbyPlayersDataModel::dyn_$partyOwnerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn_$partyOwnerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<partyOwnerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> didChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::LobbyPlayersDataModel::dyn_didChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::dyn_didChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel.get_localUserId
::StringW GlobalNamespace::LobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_partyOwnerId
::StringW GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.set_partyOwnerId
void GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.get_Item
::GlobalNamespace::ILobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::get_Item(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILobbyPlayerData*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.get_Count
int GlobalNamespace::LobbyPlayersDataModel::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_Keys
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::LobbyPlayersDataModel::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_Values
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::ILobbyPlayerData*>* GlobalNamespace::LobbyPlayersDataModel::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::ILobbyPlayerData*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.GetOrCreateLobbyPlayerDataModel
::GlobalNamespace::LobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel(::StringW userId, ByRef<bool> alreadyExists) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LobbyPlayerData*, false>(this, ___internal__method, userId, byref(alreadyExists));
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel(::StringW userId, ::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapLevel);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive(::StringW userId, bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady(::StringW userId, bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby(::StringW userId, bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsPartyOwner
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner(::StringW userId, bool isPartyOwner, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isPartyOwner, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.ClearData
void GlobalNamespace::LobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Activate
void GlobalNamespace::LobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Deactivate
void GlobalNamespace::LobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Dispose
void GlobalNamespace::LobbyPlayersDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady(::StringW userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby(::StringW userId, bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerStateChanged
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.NotifyModelChange
void GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyModelChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated method: LobbyPlayersDataModel.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>>* GlobalNamespace::LobbyPlayersDataModel::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::LobbyPlayersDataModel::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ContainsKey
bool GlobalNamespace::LobbyPlayersDataModel::ContainsKey(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::ContainsKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: LobbyPlayersDataModel.TryGetValue
bool GlobalNamespace::LobbyPlayersDataModel::TryGetValue(::StringW key, ByRef<::GlobalNamespace::ILobbyPlayerData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::TryGetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ILobbyPlayerData*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key, byref(value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyPlayersDataModel/<>c <>9
::GlobalNamespace::LobbyPlayersDataModel::$$c* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LobbyPlayersDataModel::$$c*>("", "LobbyPlayersDataModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyPlayersDataModel/<>c <>9
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9(::GlobalNamespace::LobbyPlayersDataModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__43_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "LobbyPlayersDataModel/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__43_0
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__43_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9__43_0", value)));
}
// Autogenerated method: LobbyPlayersDataModel/<>c..cctor
void GlobalNamespace::LobbyPlayersDataModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyPlayersDataModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<>c.<SetOwnedSongPacks>b__43_0
::StringW GlobalNamespace::LobbyPlayersDataModel::$$c::$SetOwnedSongPacks$b__43_0(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$$c::<SetOwnedSongPacks>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetOwnedSongPacks>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__43.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LobbyPlayersDataModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayersDataModel*& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask <songPackMask>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$songPackMask$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$songPackMask$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songPackMask>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] <>7__wrap2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IBeatmapLevelPack*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack <dlcSongPack>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$dlcSongPack$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$dlcSongPack$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<dlcSongPack>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43.MoveNext
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__43.SetStateMachine
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__43::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<GetEnumerator>d__60
#include "GlobalNamespace/LobbyPlayersDataModel_-GetEnumerator-d__60.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData> <>2__current
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LobbyPlayersDataModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayersDataModel*& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.Enumerator<System.String,LobbyPlayerData> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>::Enumerator& GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::LobbyPlayerData*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current
::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*> GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_ILobbyPlayerData$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,ILobbyPlayerData>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<::StringW, ::GlobalNamespace::ILobbyPlayerData*>, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.IDisposable.Dispose
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.MoveNext
bool GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.<>m__Finally1
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<GetEnumerator>d__60.System.Collections.IEnumerator.Reset
void GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyPlayersDataModel::$GetEnumerator$d__60::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyStateDataModel
#include "GlobalNamespace/LobbyStateDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::LobbyStateDataModel::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::LobbyStateDataModel::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,IConnectedPlayer> _connectedPlayersById
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayersById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__connectedPlayersById");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayersById"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LobbyStateDataModel::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn_playerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::LobbyStateDataModel::dyn_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::dyn_playerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyStateDataModel.get_isConnected
bool GlobalNamespace::LobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_connectedPlayers
::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_rawConnectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LobbyStateDataModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.Activate
void GlobalNamespace::LobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Deactivate
void GlobalNamespace::LobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Dispose
void GlobalNamespace::LobbyStateDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.GetPlayerById
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::GetPlayerById(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectionSuccessEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionSuccessEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLobbyConnectionController/LobbyConnectionType,ConnectionFailedReason> connectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_connectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionState <connectionState>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionType <connectionType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConnectionFailedReason <connectionFailedReason>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectionFailedReason& GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionFailedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn_$connectionFailedReason$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<connectionFailedReason>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectionFailedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig _partyConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig*& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__partyConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__partyConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _retryAttemptsLeft
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyConnectionController::dyn__retryAttemptsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::dyn__retryAttemptsLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryAttemptsLeft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionState
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionState
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionType
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionType
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionFailedReason
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionFailedReason
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent(::System::Action_2<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, ::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty(::GlobalNamespace::CreateServerFormData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToParty
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty(::StringW serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateOrConnectToDestinationParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty(::GlobalNamespace::SelectMultiplayerLobbyDestination* lobbyDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrConnectToDestinationParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyDestination);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToServer
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer(::GlobalNamespace::INetworkPlayer* server, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, server, password);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToMatchmaking
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, ::GlobalNamespace::SongPackMask songPackMask, bool allowSongSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowSongSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask, allowSongSelection);
}
// Autogenerated method: MultiplayerLobbyConnectionController.LeaveLobby
void GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ClearCurrentConnection
void GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCurrentConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnected
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailedWithRetry
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailedWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionState
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 createServerPlayersCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_createServerPlayersCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createServerPlayersCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficultyMask quickPlayBeatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayBeatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayBeatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlaySongPackMaskSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlaySongPackMaskSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean quickPlayEnableLevelSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayEnableLevelSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason NetworkUnreachable
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason NetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason UpdateRequired
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason UpdateRequired
void GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "UpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason ServerOffline
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "ServerOffline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason ServerOffline
void GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "ServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason MaintenanceMode
::GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "MaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason MaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode(::GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "MaintenanceMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerUnavailableReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x11209D0
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// [LocalizationKeyAttribute] Offset: 0x11209E0
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// [LocalizationKeyAttribute] Offset: 0x11209F0
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// [LocalizationKeyAttribute] Offset: 0x1120A00
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableTryAgain
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableTryAgain
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(::GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(::GlobalNamespace::MultiplayerStatusData* data, ByRef<::GlobalNamespace::MultiplayerUnavailableReason> reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::MultiplayerUnavailableReason&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(reason));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::StringW GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(::GlobalNamespace::MultiplayerStatusData* data, ::Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::StringW currentVersion, ::StringW minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentVersion), ::il2cpp_utils::ExtractType(minVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, currentVersion, minVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__defaultSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSongPackMaskItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>& GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__customSongPackMaskItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customSongPackMaskItems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__ostAndExtrasCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__dlcCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language _currentLocalizedLanguage
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__currentLocalizedLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLocalizedLanguage"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToLocalizedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToLocalizedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::ValueTuple_2<::StringW, bool>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackSerializedNameToMaskDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackSerializedNameToMaskDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>*& GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::dyn__songPackMaskToSerializedNameDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskToSerializedNameDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SongPackMask, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO.get_defaultSongPackMaskItems
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_customSongPackMaskItems
::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*> GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_ostAndExtrasCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_dlcCollection
::GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::get_dlcCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::StringW serializedName, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, serializedName, byref(plural));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
bool GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName, ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::SongPackMask&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, serializedName, byref(songPackMask));
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::StringW serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
bool GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask, ByRef<::StringW> serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, songPackMask, byref(serializedName));
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
::StringW GlobalNamespace::SongPackMaskModelSO::ToSerializedName(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPackMaskModelSO.LazyInit
void GlobalNamespace::SongPackMaskModelSO::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
::GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections(::GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackDataType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SongPackMaskModelSO/SongPackDataType _type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO::SongPackDataType& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO::SongPackDataType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackSO _beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelPackSO _previewBeatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String _serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackCollectionSO _levelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackSO> _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _previewBeatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__previewBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackCollectionSO> _levelPackCollections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>*& GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::dyn__levelPackCollections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPackCollections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapLevelPackCollectionSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_serializedName
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_songPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_containsMultiplePacks
bool GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsMultiplePacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9(::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1(::System::Func_2<::GlobalNamespace::BeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4(::System::Func_2<::GlobalNamespace::IBeatmapLevelPack*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3(::System::Func_2<::GlobalNamespace::BeatmapLevelPackCollectionSO*, ::System::Collections::Generic::IEnumerable_1<::StringW>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3", value)));
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c..cctor
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMaskModelSO/SongPackMaskItem/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_0
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_0(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_1
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_1(::GlobalNamespace::BeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_2
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_2(::GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_3
::System::Collections::Generic::IEnumerable_1<::StringW>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_3(::GlobalNamespace::BeatmapLevelPackCollectionSO* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::StringW>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_4
::StringW GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_4(::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMask _allSongPackMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::dyn__allSongPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allSongPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMasksModel.GetAllSongsMask
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::GetAllSongsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetAllSongsMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllSongsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask));
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::StringW GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(ByRef<::GlobalNamespace::SongPackMask> songPackMask, ByRef<bool> plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(songPackMask), byref(plural));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationTokenPlatformExtensions
#include "GlobalNamespace/AuthenticationTokenPlatformExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToAuthenticationTokenPlatform
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform(::GlobalNamespace::UserInfo::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToAuthenticationTokenPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AuthenticationToken::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToUserInfoPlatform
::GlobalNamespace::UserInfo::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform(::GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToUserInfoPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::UserInfo::Platform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, platform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel
#include "GlobalNamespace/BaseNetworkPlayerModel.hpp"
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__connectedPlayerManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <discoveryEnabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_$discoveryEnabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<discoveryEnabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerCreatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerCreatedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::dyn_connectedPlayerManagerDestroyedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedPlayerManagerDestroyedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyManager
::GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectedOrConnecting
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectionOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.INetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel_get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel.get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayerModel.get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isServer
bool GlobalNamespace::BaseNetworkPlayerModel::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isClient
bool GlobalNamespace::BaseNetworkPlayerModel::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerConnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: BaseNetworkPlayerModel.Connected
void GlobalNamespace::BaseNetworkPlayerModel::Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Connected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnected
void GlobalNamespace::BaseNetworkPlayerModel::Disconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Disconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyConnectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyConnectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Log
void GlobalNamespace::BaseNetworkPlayerModel::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BaseNetworkPlayerModel.OnDestroy
void GlobalNamespace::BaseNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Update
void GlobalNamespace::BaseNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public INetworkPlayerModel partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::dyn_partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
::GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
::GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftNetworkPlayerModel
#include "GlobalNamespace/GameLiftNetworkPlayerModel.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: BGNet.Core.GameLift.IGameLiftPlayerSessionProvider
#include "BGNet/Core/GameLift/IGameLiftPlayerSessionProvider.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameLiftConnectionManager/ConnectToServerParams
#include "GlobalNamespace/GameLiftConnectionManager_ConnectToServerParams.hpp"
// Including type: GameLiftConnectionManager/StartClientParams
#include "GlobalNamespace/GameLiftConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BGNet.Core.GameLift.IGameLiftPlayerSessionProvider _gameLiftPlayerSessionProvider
[[deprecated("Use field access instead!")]] ::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__gameLiftPlayerSessionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__gameLiftPlayerSessionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameLiftPlayerSessionProvider"))->offset;
  return *reinterpret_cast<::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftConnectionManager/ConnectToServerParams _cachedConnectToServerParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedConnectToServerParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedConnectToServerParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedConnectToServerParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftConnectionManager/StartClientParams _cachedStartClientParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager::StartClientParams*& GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedStartClientParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::dyn__cachedStartClientParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedStartClientParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager::StartClientParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameLiftNetworkPlayerModel.GetConnectToServerParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>* GlobalNamespace::GameLiftNetworkPlayerModel::GetConnectToServerParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::GetConnectToServerParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToServerParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration, secret, code);
}
// Autogenerated method: GameLiftNetworkPlayerModel.GetStartClientParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>* GlobalNamespace::GameLiftNetworkPlayerModel::GetStartClientParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::GetStartClientParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartClientParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::GameLiftConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_secret
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_code
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_partyOwnerId
::StringW GlobalNamespace::GameLiftNetworkPlayerModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameLiftNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::GameLiftNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.Update
void GlobalNamespace::GameLiftNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftNetworkPlayerModel.RefreshPublicServers
void GlobalNamespace::GameLiftNetworkPlayerModel::RefreshPublicServers(::GlobalNamespace::BeatmapLevelSelectionMask localSelectionMask, ::GlobalNamespace::GameplayServerConfiguration localConfiguration, ::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftNetworkPlayerModel::RefreshPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localSelectionMask), ::il2cpp_utils::ExtractType(localConfiguration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localSelectionMask, localConfiguration, onSuccess, onFailure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: UnifiedNetworkPlayerModel/ActiveNetworkPlayerModelType
#include "GlobalNamespace/UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_publicServers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_localNetworkPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_secret
::StringW GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_code
::StringW GlobalNamespace::IUnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetActiveNetworkPlayerModelType
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType(::GlobalNamespace::UnifiedNetworkPlayerModel_ActiveNetworkPlayerModelType activeNetworkPlayerModelType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IUnifiedNetworkPlayerModel::SetActiveNetworkPlayerModelType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveNetworkPlayerModelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeNetworkPlayerModelType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeNetworkPlayerModelType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBroadcastInterval
float GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkDiscoveryManager", "kBroadcastInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBroadcastInterval
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kBroadcastInterval", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kSignature
uint GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "LocalNetworkDiscoveryManager", "kSignature"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kSignature
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kSignature", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/PeerUpdatedDelegate peerUpdatedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_peerUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_peerUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "peerUpdatedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRequestedDelegate joinRequestedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRequestedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRespondedDelegate joinRespondedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_joinRespondedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRespondedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRequestedDelegate inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRespondedDelegate inviteRespondedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn_inviteRespondedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRespondedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.NetManager _netManager
[[deprecated("Use field access instead!")]] ::LiteNetLib::NetManager*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netManager"))->offset;
  return *reinterpret_cast<::LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<LocalNetworkDiscoveryManager/PacketType,System.Net.IPEndPoint> _packetSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, ::System::Net::IPEndPoint*>*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__packetSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packetSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, ::System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _netDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__netDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkDiscoveryManager/BroadcastPacket _broadcastPacket
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket*& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__broadcastPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__broadcastPacket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_broadcastPacket"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__discoveryPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBroadcasting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__enableBroadcasting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableBroadcasting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastBroadcastTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkDiscoveryManager::dyn__lastBroadcastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::dyn__lastBroadcastTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastBroadcastTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userId
::StringW GlobalNamespace::LocalNetworkDiscoveryManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userName
::StringW GlobalNamespace::LocalNetworkDiscoveryManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_currentPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_currentPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration(::GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask(::GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_enableBroadcasting
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_enableBroadcasting
void GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Init
void GlobalNamespace::LocalNetworkDiscoveryManager::Init(int discoveryPort, ::StringW initUserId, ::StringW initUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(discoveryPort), ::il2cpp_utils::ExtractType(initUserId), ::il2cpp_utils::ExtractType(initUserName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, discoveryPort, initUserId, initUserName);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnEnable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnDisable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Update
void GlobalNamespace::LocalNetworkDiscoveryManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest(::System::Net::IPAddress* ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse(::System::Net::IPAddress* ip, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest(::System::Net::IPAddress* ip, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse(::System::Net::IPAddress* ip, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ip, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(::System::Net::IPEndPoint* remoteEndPoint, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnConnectionRequest(::LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkError(::System::Net::IPEndPoint* endPoint, ::System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketErrorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(::LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, latency);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerConnected(::LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerDisconnected(::LiteNetLib::NetPeer* peer, ::LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceive(::LiteNetLib::NetPeer* peer, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_0
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_0(::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_1
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_1(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_2
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_2(::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_3
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_3(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_4
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_4(::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket* packet, ::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/PacketType
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse(::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 version
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_currentPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean accepted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_accepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_accepted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "accepted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::dyn_blocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke(::StringW userId, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke(::StringW userId, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke(::StringW userId, ::System::Net::IPAddress* remoteEndPoint, ::StringW userName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke(::StringW userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke(::StringW userId, bool accepted, bool blocked, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, userId, accepted, blocked, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: LocalNetworkPlayerModel/<Start>d__41
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__41.hpp"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: BasicConnectionRequestHandler
#include "GlobalNamespace/BasicConnectionRequestHandler.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager _discoveryManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkDiscoveryManager*& GlobalNamespace::LocalNetworkPlayerModel::dyn__discoveryManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__discoveryManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkDiscoveryManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPlatformUserModel*& GlobalNamespace::LocalNetworkPlayerModel::dyn__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__platformUserModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformUserModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPlatformUserModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::LocalNetworkPlayerModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _partyPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _otherPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn__otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__otherPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_otherPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkPlayerModel/LocalNetworkPlayer _localPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*& GlobalNamespace::LocalNetworkPlayerModel::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _networkingFailed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::dyn__networkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__networkingFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkingFailed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _partyEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::dyn__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__partyManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BasicConnectionRequestHandler _connectionRequestHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicConnectionRequestHandler*& GlobalNamespace::LocalNetworkPlayerModel::dyn__connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn__connectionRequestHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionRequestHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicConnectionRequestHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_partySizeChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partySizeChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_partyChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_joinRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::LocalNetworkPlayerModel::dyn_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::dyn_inviteRequestedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inviteRequestedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel.get_canInvitePlayers
bool GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvitePlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasConnectedPeers
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasConnectedPeers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_liteNetLibConnectionManager
::GlobalNamespace::LiteNetLibConnectionManager* GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liteNetLibConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LiteNetLibConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryGetPlayer
bool GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer(::StringW userId, ByRef<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*> player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userId, byref(player));
}
// Autogenerated method: LocalNetworkPlayerModel.GetPlayer
::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::GetPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LocalNetworkPlayerModel.RefreshLocalPlayer
void GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer(bool forcePlayersChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forcePlayersChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, forcePlayersChanged);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePeerUpdate
void GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName, int currentPartySize, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePeerUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool allowJoin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(allowJoin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, allowJoin);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse(::StringW id, ::StringW secret, int multiplayerPort, bool blocked, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest(::StringW userId, ::System::Net::IPAddress* ipAddress, ::StringW encryptedUserName, ::StringW secret, int multiplayerPort, bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool acceptInvite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(acceptInvite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, acceptInvite);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse(::StringW userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectToPeer
bool GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.DisconnectPeer
void GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer(::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryStartServer
bool GlobalNamespace::LocalNetworkPlayerModel::TryStartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::TryStartServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStartServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.Start
void GlobalNamespace::LocalNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.Update
void GlobalNamespace::LocalNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.OnDestroy
void GlobalNamespace::LocalNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetPartyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetOtherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerConnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: LocalNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPeerBroadcastTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPeerBroadcastTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kConnectionTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kConnectionTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRequestTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _playerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__playerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.IPAddress _ipAddress
[[deprecated("Use field access instead!")]] ::System::Net::IPAddress*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__ipAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ipAddress"))->offset;
  return *reinterpret_cast<::System::Net::IPAddress**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPartyOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isPartyOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPartyOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joinRequestTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__joinRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__joinRequestTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinRequestTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _inviteSentTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__inviteSentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__inviteSentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inviteSentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__isBlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasBlockedMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__hasBlockedMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasBlockedMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _connectingStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__connectingStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectingStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__currentPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__lastUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastUpdateTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowedJoinToMyParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__allowedJoinToMyParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedJoinToMyParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requestedToJoinMyParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__requestedToJoinMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__requestedToJoinMyParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_requestedToJoinMyParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invitedMeToJoinTheirParty
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__invitedMeToJoinTheirParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::dyn__invitedMeToJoinTheirParty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invitedMeToJoinTheirParty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userId
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userName
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_ipAddress
::System::Net::IPAddress* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ipAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_connectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isBlocked
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_hasBlockedMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlockedMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_secret
::StringW GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_multiplayerPort
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_allowedJoinToMyParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedJoinToMyParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_wasConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isTimedOut
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_requiresPassword
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canKick
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canLeave
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canBlock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canUnblock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnectable
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Invite
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Kick
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Leave
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Block
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Unblock
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Update
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update(bool isPartyOwner, int currentPartySize, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, isPartyOwner, currentPartySize, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.HasFailedToConnect
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFailedToConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInvited
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited(bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, int multiplayerPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInvited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse(bool isPartyOwner, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, int multiplayerPort, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse(bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinRequested
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetDisconnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Connect
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/<Start>d__41
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__41.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LocalNetworkPlayerModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalNetworkPlayerModel*& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>& GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::UserInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__41.MoveNext
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__41.SetStateMachine
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalNetworkPlayerModel::$Start$d__41::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerNetworkPlayerModel
#include "GlobalNamespace/MasterServerNetworkPlayerModel.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MasterServerConnectionManager/ConnectToServerParams
#include "GlobalNamespace/MasterServerConnectionManager_ConnectToServerParams.hpp"
// Including type: MasterServerConnectionManager/StartClientParams
#include "GlobalNamespace/MasterServerConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkConfig*& GlobalNamespace::MasterServerNetworkPlayerModel::dyn__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::dyn__networkConfig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_networkConfig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServerConnectionManager/ConnectToServerParams _cachedConnectToServerParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams*& GlobalNamespace::MasterServerNetworkPlayerModel::dyn__cachedConnectToServerParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::dyn__cachedConnectToServerParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedConnectToServerParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MasterServerConnectionManager::ConnectToServerParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MasterServerConnectionManager/StartClientParams _cachedStartClientParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MasterServerConnectionManager::StartClientParams*& GlobalNamespace::MasterServerNetworkPlayerModel::dyn__cachedStartClientParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::dyn__cachedStartClientParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cachedStartClientParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MasterServerConnectionManager::StartClientParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MasterServerNetworkPlayerModel.GetConnectToServerParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::MasterServerConnectionManager*>* GlobalNamespace::MasterServerNetworkPlayerModel::GetConnectToServerParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::StringW secret, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::GetConnectToServerParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectToServerParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::MasterServerConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration, secret, code);
}
// Autogenerated method: MasterServerNetworkPlayerModel.GetStartClientParams
::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::MasterServerConnectionManager*>* GlobalNamespace::MasterServerNetworkPlayerModel::GetStartClientParams(::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::GetStartClientParams");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartClientParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionInitParams_1<::GlobalNamespace::MasterServerConnectionManager*>*, false>(this, ___internal__method, selectionMask, configuration);
}
// Autogenerated method: MasterServerNetworkPlayerModel.get_secret
::StringW GlobalNamespace::MasterServerNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerNetworkPlayerModel.get_code
::StringW GlobalNamespace::MasterServerNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerNetworkPlayerModel.get_partyOwnerId
::StringW GlobalNamespace::MasterServerNetworkPlayerModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerNetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::MasterServerNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerNetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::MasterServerNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerNetworkPlayerModel.RefreshPublicServers
void GlobalNamespace::MasterServerNetworkPlayerModel::RefreshPublicServers(::GlobalNamespace::BeatmapLevelSelectionMask localSelectionMask, ::GlobalNamespace::GameplayServerConfiguration localConfiguration, ::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MasterServerNetworkPlayerModel::RefreshPublicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localSelectionMask), ::il2cpp_utils::ExtractType(localConfiguration), ::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localSelectionMask, localConfiguration, onSuccess, onFailure);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPartySize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__maxPartySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPartySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__discoveryPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_discoveryPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _partyPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__partyPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__multiplayerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _masterServerPort
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkConfigSO::dyn__masterServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__masterServerPort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerPort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _masterServerHostName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__masterServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__masterServerHostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_masterServerHostName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _multiplayerStatusUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__multiplayerStatusUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerStatusUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _quickPlaySetupUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__quickPlaySetupUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlaySetupUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _graphUrl
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__graphUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _graphAppId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkConfigSO::dyn__graphAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__graphAppId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphAppId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceGameLift
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NetworkConfigSO::dyn__forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__forceGameLift");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceGameLift"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ServiceEnvironment _serviceEnvironment
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ServiceEnvironment& GlobalNamespace::NetworkConfigSO::dyn__serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::dyn__serviceEnvironment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serviceEnvironment"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ServiceEnvironment*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkConfigSO.get_maxPartySize
int GlobalNamespace::NetworkConfigSO::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_discoveryPort
int GlobalNamespace::NetworkConfigSO::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_partyPort
int GlobalNamespace::NetworkConfigSO::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_multiplayerPort
int GlobalNamespace::NetworkConfigSO::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_masterServerEndPoint
::GlobalNamespace::DnsEndPoint* GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DnsEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_multiplayerStatusUrl
::StringW GlobalNamespace::NetworkConfigSO::get_multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_multiplayerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_quickPlaySetupUrl
::StringW GlobalNamespace::NetworkConfigSO::get_quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_quickPlaySetupUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quickPlaySetupUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_graphUrl
::StringW GlobalNamespace::NetworkConfigSO::get_graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_graphUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_graphAccessToken
::StringW GlobalNamespace::NetworkConfigSO::get_graphAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_graphAccessToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_forceGameLift
bool GlobalNamespace::NetworkConfigSO::get_forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_forceGameLift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceGameLift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_serviceEnvironment
::GlobalNamespace::ServiceEnvironment GlobalNamespace::NetworkConfigSO::get_serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::get_serviceEnvironment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serviceEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ServiceEnvironment, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.GetAppId
::StringW GlobalNamespace::NetworkConfigSO::GetAppId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkConfigSO::GetAppId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker
#include "GlobalNamespace/NetworkPlayerEntitlementChecker.hpp"
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _rpcManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMenuRpcManager*& GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__rpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__rpcManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.Start
void GlobalNamespace::NetworkPlayerEntitlementChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.OnDestroy
void GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleDataInvalidated
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDataInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleGetIsEntitledToLevel
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel(::StringW userId, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.GetEntitlementStatus
::System::Threading::Tasks::Task_1<::GlobalNamespace::EntitlementsStatus>* GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntitlementStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::EntitlementsStatus>*, false>(this, ___internal__method, levelId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerEntitlementChecker*& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerEntitlementChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EntitlementsStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EntitlementsStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EntitlementsStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EntitlementsStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EntitlementsStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::EntitlementsStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPlayerEntitlementChecker*& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPlayerEntitlementChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateManager
#include "GlobalNamespace/NodePoseSyncStateManager.hpp"
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: MultiplayerSessionManager/MessageType
#include "GlobalNamespace/MultiplayerSessionManager_MessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NodePoseSyncStateManager.get_serializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_serializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_serializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaSerializablePool
::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaSerializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPacketPool_1<::GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.Interpolate
::GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Interpolate(::GlobalNamespace::PoseSerializable prev, float prevTime, ::GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(this, ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: NodePoseSyncStateManager.Smooth
::GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Smooth(::GlobalNamespace::PoseSerializable a, ::GlobalNamespace::PoseSerializable b, float smooth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::Smooth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Smooth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(smooth)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(this, ___internal__method, a, b, smooth);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_fullStateUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullStateUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_localBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_remoteBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_messageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_messageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_messageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaMessageType
::GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
