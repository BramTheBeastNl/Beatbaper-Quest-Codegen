// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType energyType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_energyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "energyType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noFail
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_noFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_noFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noFail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean instaFail
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_instaFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instaFail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean failOnSaberClash
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_failOnSaberClash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOnSaberClash"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType enabledObstacleType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_enabledObstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_enabledObstacleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledObstacleType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fastNotes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_fastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_fastNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean strictAngles
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_strictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_strictAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strictAngles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disappearingArrows
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_disappearingArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disappearingArrows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noBombs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noBombs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed songSpeed
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_songSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::dyn_songSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeed"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType All
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_All(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType FullHeightOnly
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType None
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType None
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_None(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnabledObstacleType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnabledObstacleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Bar
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Bar
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Bar(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Battery
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType>("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType Battery
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Battery(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::EnergyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Normal
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Normal
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Normal(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Faster
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Faster
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Faster(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Slower
::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed>("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed Slower
void GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Slower(::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveDataV1_0_1/GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers::SongSpeed::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticLights
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_staticLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_staticLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticLights"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHanded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_leftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean swapColors
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_swapColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_swapColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "swapColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableSFX
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_disableSFX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_disableSFX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableSFX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reduceDebris
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_reduceDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_reduceDebris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reduceDebris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean advancedHud
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_advancedHud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_advancedHud");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advancedHud"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noTextsAndHuds
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_noTextsAndHuds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings::dyn_noTextsAndHuds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noTextsAndHuds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerOverallStatsData campaignOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_campaignOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_campaignOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "campaignOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerOverallStatsData soloFreePlayOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_soloFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_soloFreePlayOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soloFreePlayOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerOverallStatsData partyFreePlayOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_partyFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData::dyn_partyFreePlayOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyFreePlayOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 goodCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_goodCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 badCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_badCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 missedCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_missedCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_missedCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missedCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalScore
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_totalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_totalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalScore"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playedLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_playedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_playedLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playedLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cleardLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_cleardLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_cleardLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleardLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 failedLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_failedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_failedLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failedLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fullComboCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_fullComboCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_fullComboCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullComboCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timePlayed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_timePlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_timePlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timePlayed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 handDistanceTravelled
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_handDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_handDistanceTravelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handDistanceTravelled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 cummulativeCutScoreWithoutMultiplier
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_cummulativeCutScoreWithoutMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData::dyn_cummulativeCutScoreWithoutMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cummulativeCutScoreWithoutMultiplier"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerLevelStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_levelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 highScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_highScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_highScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxCombo
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_maxCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RankModel/Rank maxRank
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RankModel::Rank& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_maxRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_maxRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRank"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean validScore
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_validScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_validScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_playCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData::dyn_playCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerMissionStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String missionId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData::dyn_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData::dyn_missionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData::dyn_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData::dyn_cleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/AchievementsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_AchievementsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String[] unlockedAchievements
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData::dyn_unlockedAchievements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData::dyn_unlockedAchievements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedAchievements"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] unlockedAchievementsToUpload
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData::dyn_unlockedAchievementsToUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData::dyn_unlockedAchievementsToUpload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedAchievementsToUpload"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/LocalPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_LocalPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerSaveDataV1_0_1/GameplayModifiers
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GameplayModifiers.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/AchievementsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_AchievementsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldShowTutorialPrompt
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_shouldShowTutorialPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_shouldShowTutorialPrompt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldShowTutorialPrompt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/GameplayModifiers gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerAllOverallStatsData playerAllOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerAllOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_playerAllOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAllOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveDataV1_0_1/PlayerLevelStatsData> levelsStatsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData*>*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_levelsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_levelsStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelsStatsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerLevelStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveDataV1_0_1/PlayerMissionStatsData> missionsStatsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData*>*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_missionsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_missionsStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionsStatsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerMissionStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> showedMissionHelpIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_showedMissionHelpIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_showedMissionHelpIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showedMissionHelpIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/AchievementsData achievementsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData*& GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_achievementsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::LocalPlayer::dyn_achievementsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievementsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::AchievementsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataV1_0_1/GuestPlayer
#include "GlobalNamespace/PlayerSaveDataV1_0_1_GuestPlayer.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveDataV1_0_1::GuestPlayer::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GuestPlayer::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveDataV1_0_1/PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings*& GlobalNamespace::PlayerSaveDataV1_0_1::GuestPlayer::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataV1_0_1::GuestPlayer::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset AllEffects
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_AllEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_get_AllEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "AllEffects"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset AllEffects
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_AllEffects(::GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_set_AllEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "AllEffects", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset StrobeFilter
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_StrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_get_StrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "StrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset StrobeFilter
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_StrobeFilter(::GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_set_StrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "StrobeFilter", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentEffectsFilterPreset NoEffects
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::EnvironmentEffectsFilterPreset::_get_NoEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_get_NoEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentEffectsFilterPreset>("", "EnvironmentEffectsFilterPreset", "NoEffects"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentEffectsFilterPreset NoEffects
void GlobalNamespace::EnvironmentEffectsFilterPreset::_set_NoEffects(::GlobalNamespace::EnvironmentEffectsFilterPreset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::_set_NoEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentEffectsFilterPreset", "NoEffects", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentEffectsFilterPreset::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentEffectsFilterPreset::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteJumpDurationTypeSettings
#include "GlobalNamespace/NoteJumpDurationTypeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteJumpDurationTypeSettings Dynamic
::GlobalNamespace::NoteJumpDurationTypeSettings GlobalNamespace::NoteJumpDurationTypeSettings::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettings::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteJumpDurationTypeSettings>("", "NoteJumpDurationTypeSettings", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public NoteJumpDurationTypeSettings Dynamic
void GlobalNamespace::NoteJumpDurationTypeSettings::_set_Dynamic(::GlobalNamespace::NoteJumpDurationTypeSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettings::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteJumpDurationTypeSettings", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public NoteJumpDurationTypeSettings Static
::GlobalNamespace::NoteJumpDurationTypeSettings GlobalNamespace::NoteJumpDurationTypeSettings::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettings::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteJumpDurationTypeSettings>("", "NoteJumpDurationTypeSettings", "Static"));
}
// Autogenerated static field setter
// Set static field: static public NoteJumpDurationTypeSettings Static
void GlobalNamespace::NoteJumpDurationTypeSettings::_set_Static(::GlobalNamespace::NoteJumpDurationTypeSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettings::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteJumpDurationTypeSettings", "Static", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteJumpDurationTypeSettings::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteJumpDurationTypeSettings::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OverrideEnvironmentSettings::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideEnvironmentSettings::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<EnvironmentTypeSO,EnvironmentInfoSO> _data
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EnvironmentTypeSO*, ::GlobalNamespace::EnvironmentInfoSO*>*& GlobalNamespace::OverrideEnvironmentSettings::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideEnvironmentSettings::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EnvironmentTypeSO*, ::GlobalNamespace::EnvironmentInfoSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OverrideEnvironmentSettings.SetEnvironmentInfoForType
void GlobalNamespace::OverrideEnvironmentSettings::SetEnvironmentInfoForType(::GlobalNamespace::EnvironmentTypeSO* environmentType, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideEnvironmentSettings::SetEnvironmentInfoForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnvironmentInfoForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType), ::il2cpp_utils::ExtractType(environmentInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, environmentType, environmentInfo);
}
// Autogenerated method: OverrideEnvironmentSettings.GetOverrideEnvironmentInfoForType
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverrideEnvironmentSettings::GetOverrideEnvironmentInfoForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverrideEnvironmentInfoForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerAgreements
#include "GlobalNamespace/PlayerAgreements.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kFirstEulaVersion
int GlobalNamespace::PlayerAgreements::_get_kFirstEulaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_get_kFirstEulaVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerAgreements", "kFirstEulaVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFirstEulaVersion
void GlobalNamespace::PlayerAgreements::_set_kFirstEulaVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_set_kFirstEulaVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAgreements", "kFirstEulaVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFirstPrivacyPolicyVersion
int GlobalNamespace::PlayerAgreements::_get_kFirstPrivacyPolicyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_get_kFirstPrivacyPolicyVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerAgreements", "kFirstPrivacyPolicyVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFirstPrivacyPolicyVersion
void GlobalNamespace::PlayerAgreements::_set_kFirstPrivacyPolicyVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_set_kFirstPrivacyPolicyVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAgreements", "kFirstPrivacyPolicyVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCurrentEulaVersion
int GlobalNamespace::PlayerAgreements::_get_kCurrentEulaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_get_kCurrentEulaVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerAgreements", "kCurrentEulaVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCurrentEulaVersion
void GlobalNamespace::PlayerAgreements::_set_kCurrentEulaVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_set_kCurrentEulaVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAgreements", "kCurrentEulaVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCurrentPrivacyPolicyVersion
int GlobalNamespace::PlayerAgreements::_get_kCurrentPrivacyPolicyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_get_kCurrentPrivacyPolicyVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerAgreements", "kCurrentPrivacyPolicyVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCurrentPrivacyPolicyVersion
void GlobalNamespace::PlayerAgreements::_set_kCurrentPrivacyPolicyVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_set_kCurrentPrivacyPolicyVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAgreements", "kCurrentPrivacyPolicyVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCurrentHealthAndSafetyVersion
int GlobalNamespace::PlayerAgreements::_get_kCurrentHealthAndSafetyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_get_kCurrentHealthAndSafetyVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerAgreements", "kCurrentHealthAndSafetyVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCurrentHealthAndSafetyVersion
void GlobalNamespace::PlayerAgreements::_set_kCurrentHealthAndSafetyVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::_set_kCurrentHealthAndSafetyVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerAgreements", "kCurrentHealthAndSafetyVersion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 eulaVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAgreements::dyn_eulaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::dyn_eulaVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eulaVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 privacyPolicyVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAgreements::dyn_privacyPolicyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::dyn_privacyPolicyVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privacyPolicyVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 healthAndSafetyVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAgreements::dyn_healthAndSafetyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::dyn_healthAndSafetyVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healthAndSafetyVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerAgreements.AgreeToEula
void GlobalNamespace::PlayerAgreements::AgreeToEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreeToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreeToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreeToPrivacyPolicy
void GlobalNamespace::PlayerAgreements::AgreeToPrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreeToPrivacyPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreeToPrivacyPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreeToHealthAndSafety
void GlobalNamespace::PlayerAgreements::AgreeToHealthAndSafety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreeToHealthAndSafety");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreeToHealthAndSafety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToPreviousPrivacyPolicy
bool GlobalNamespace::PlayerAgreements::AgreedToPreviousPrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToPreviousPrivacyPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToPreviousPrivacyPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToAnyPreviousEula
bool GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToAnyPreviousEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToAnyPreviousPrivacyPolicy
bool GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousPrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousPrivacyPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToAnyPreviousPrivacyPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToAnyPreviousHealthAndSafety
bool GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousHealthAndSafety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToAnyPreviousHealthAndSafety");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToAnyPreviousHealthAndSafety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToEula
bool GlobalNamespace::PlayerAgreements::AgreedToEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToPrivacyPolicy
bool GlobalNamespace::PlayerAgreements::AgreedToPrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToPrivacyPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToPrivacyPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAgreements.AgreedToHealthAndSafety
bool GlobalNamespace::PlayerAgreements::AgreedToHealthAndSafety() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAgreements::AgreedToHealthAndSafety");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AgreedToHealthAndSafety", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerAllOverallStatsData/PlayerOverallStatsData <campaignOverallStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*& GlobalNamespace::PlayerAllOverallStatsData::dyn_$campaignOverallStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_$campaignOverallStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<campaignOverallStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerAllOverallStatsData/PlayerOverallStatsData <soloFreePlayOverallStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*& GlobalNamespace::PlayerAllOverallStatsData::dyn_$soloFreePlayOverallStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_$soloFreePlayOverallStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<soloFreePlayOverallStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerAllOverallStatsData/PlayerOverallStatsData <partyFreePlayOverallStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*& GlobalNamespace::PlayerAllOverallStatsData::dyn_$partyFreePlayOverallStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_$partyFreePlayOverallStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<partyFreePlayOverallStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerAllOverallStatsData/PlayerOverallStatsData <onlinePlayOverallStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*& GlobalNamespace::PlayerAllOverallStatsData::dyn_$onlinePlayOverallStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_$onlinePlayOverallStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<onlinePlayOverallStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<LevelCompletionResults,IDifficultyBeatmap> didUpdateSoloFreePlayOverallStatsDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdateSoloFreePlayOverallStatsDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdateSoloFreePlayOverallStatsDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdateSoloFreePlayOverallStatsDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<LevelCompletionResults,IDifficultyBeatmap> didUpdatePartyFreePlayOverallStatsDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdatePartyFreePlayOverallStatsDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdatePartyFreePlayOverallStatsDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdatePartyFreePlayOverallStatsDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MissionCompletionResults,MissionNode> didUpdateCampaignOverallStatsDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::MissionCompletionResults*, ::GlobalNamespace::MissionNode*>*& GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdateCampaignOverallStatsDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::dyn_didUpdateCampaignOverallStatsDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdateCampaignOverallStatsDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::MissionCompletionResults*, ::GlobalNamespace::MissionNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerAllOverallStatsData.get_allOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_allOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::get_allOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.get_campaignOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_campaignOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::get_campaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_campaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_campaignOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_campaignOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::set_campaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_campaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_soloFreePlayOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::get_soloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_soloFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::set_soloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_soloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_partyFreePlayOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::get_partyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_partyFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::set_partyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.get_onlinePlayOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerAllOverallStatsData::get_onlinePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::get_onlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData.set_onlinePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::set_onlinePlayOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::set_onlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdateSoloFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateSoloFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdateSoloFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateSoloFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateSoloFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdatePartyFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::add_didUpdatePartyFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdatePartyFreePlayOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::LevelCompletionResults*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdatePartyFreePlayOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdatePartyFreePlayOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.add_didUpdateCampaignOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::MissionCompletionResults*, ::GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::add_didUpdateCampaignOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.remove_didUpdateCampaignOverallStatsDataEvent
void GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent(::System::Action_2<::GlobalNamespace::MissionCompletionResults*, ::GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::remove_didUpdateCampaignOverallStatsDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateCampaignOverallStatsDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateSoloFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::UpdateSoloFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSoloFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdatePartyFreePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::UpdatePartyFreePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePartyFreePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateCampaignOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateCampaignOverallStatsData(::GlobalNamespace::MissionCompletionResults* missionCompletionResults, ::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::UpdateCampaignOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCampaignOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionCompletionResults), ::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionCompletionResults, missionNode);
}
// Autogenerated method: PlayerAllOverallStatsData.UpdateOnlinePlayOverallStatsData
void GlobalNamespace::PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::UpdateOnlinePlayOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateOnlinePlayOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <goodCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$goodCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$goodCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<goodCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <badCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$badCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$badCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<badCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <missedCutsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$missedCutsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$missedCutsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missedCutsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <totalScore>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$totalScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$totalScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalScore>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <playedLevelsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$playedLevelsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$playedLevelsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playedLevelsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <clearedLevelsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$clearedLevelsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$clearedLevelsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clearedLevelsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <failedLevelsCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$failedLevelsCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$failedLevelsCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<failedLevelsCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <fullComboCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$fullComboCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$fullComboCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullComboCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timePlayed>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$timePlayed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$timePlayed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timePlayed>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <handDistanceTravelled>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$handDistanceTravelled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$handDistanceTravelled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handDistanceTravelled>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <totalCutScore>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$totalCutScore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::dyn_$totalCutScore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<totalCutScore>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_goodCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_goodCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_goodCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_goodCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_badCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_badCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_badCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_badCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_missedCutsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_missedCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missedCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_missedCutsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_missedCutsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missedCutsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_totalScore
int64_t GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_totalScore
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_playedLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_playedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_playedLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_playedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_clearedLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_clearedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_clearedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_clearedLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_clearedLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_clearedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clearedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_failedLevelsCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_failedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_failedLevelsCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_failedLevelsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_failedLevelsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_fullComboCount
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_fullComboCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullComboCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_fullComboCount
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_fullComboCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullComboCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_timePlayed
float GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_timePlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timePlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_timePlayed
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_timePlayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timePlayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_handDistanceTravelled
int GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_handDistanceTravelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handDistanceTravelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_handDistanceTravelled
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_handDistanceTravelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handDistanceTravelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.get_totalCutScore
int64_t GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::get_totalCutScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_totalCutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.set_totalCutScore
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalCutScore(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::set_totalCutScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_totalCutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.UpdateWithLevelCompletionResults
void GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults(::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::UpdateWithLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWithLevelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Autogenerated method: PlayerAllOverallStatsData/PlayerOverallStatsData.op_Addition
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::operator+(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* a, ::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerAllOverallStatsData/PlayerOverallStatsData", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(&b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: PlayerAgreements
#include "GlobalNamespace/PlayerAgreements.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: PlayerMissionStatsData
#include "GlobalNamespace/PlayerMissionStatsData.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxGuestPlayers
int GlobalNamespace::PlayerData::_get_kMaxGuestPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::_get_kMaxGuestPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerData", "kMaxGuestPlayers"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxGuestPlayers
void GlobalNamespace::PlayerData::_set_kMaxGuestPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::_set_kMaxGuestPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerData", "kMaxGuestPlayers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kCurrentRegionVersion
int GlobalNamespace::PlayerData::_get_kCurrentRegionVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::_get_kCurrentRegionVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PlayerData", "kCurrentRegionVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kCurrentRegionVersion
void GlobalNamespace::PlayerData::_set_kCurrentRegionVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::_set_kCurrentRegionVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerData", "kCurrentRegionVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerData::dyn_$playerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$playerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerData::dyn_$playerName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$playerName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldShowTutorialPrompt>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$shouldShowTutorialPrompt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$shouldShowTutorialPrompt$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldShowTutorialPrompt>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <shouldShow360Warning>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$shouldShow360Warning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$shouldShow360Warning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<shouldShow360Warning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <agreedToEula>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$agreedToEula$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$agreedToEula$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<agreedToEula>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <didSelectLanguage>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$didSelectLanguage$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$didSelectLanguage$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<didSelectLanguage>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <agreedToMultiplayerDisclaimer>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$agreedToMultiplayerDisclaimer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$agreedToMultiplayerDisclaimer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<agreedToMultiplayerDisclaimer>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <avatarCreated>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerData::dyn_$avatarCreated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$avatarCreated$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<avatarCreated>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <didSelectRegionVersion>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerData::dyn_$didSelectRegionVersion$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$didSelectRegionVersion$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<didSelectRegionVersion>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerAgreements <playerAgreements>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAgreements*& GlobalNamespace::PlayerData::dyn_$playerAgreements$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$playerAgreements$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerAgreements>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAgreements**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty <lastSelectedBeatmapDifficulty>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PlayerData::dyn_$lastSelectedBeatmapDifficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$lastSelectedBeatmapDifficulty$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastSelectedBeatmapDifficulty>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <lastSelectedBeatmapCharacteristic>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::PlayerData::dyn_$lastSelectedBeatmapCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$lastSelectedBeatmapCharacteristic$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastSelectedBeatmapCharacteristic>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers <gameplayModifiers>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::PlayerData::dyn_$gameplayModifiers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$gameplayModifiers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayModifiers>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings <playerSpecificSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::PlayerData::dyn_$playerSpecificSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$playerSpecificSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerSpecificSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PracticeSettings <practiceSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PracticeSettings*& GlobalNamespace::PlayerData::dyn_$practiceSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$practiceSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<practiceSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerAllOverallStatsData <playerAllOverallStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerAllOverallStatsData*& GlobalNamespace::PlayerData::dyn_$playerAllOverallStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$playerAllOverallStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerAllOverallStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerAllOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PlayerLevelStatsData> <levelsStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLevelStatsData*>*& GlobalNamespace::PlayerData::dyn_$levelsStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$levelsStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<levelsStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLevelStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PlayerMissionStatsData> <missionsStatsData>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerMissionStatsData*>*& GlobalNamespace::PlayerData::dyn_$missionsStatsData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$missionsStatsData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<missionsStatsData>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerMissionStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <showedMissionHelpIds>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayerData::dyn_$showedMissionHelpIds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$showedMissionHelpIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<showedMissionHelpIds>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <guestPlayerNames>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayerData::dyn_$guestPlayerNames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$guestPlayerNames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<guestPlayerNames>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemesSettings <colorSchemesSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemesSettings*& GlobalNamespace::PlayerData::dyn_$colorSchemesSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$colorSchemesSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorSchemesSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemesSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OverrideEnvironmentSettings <overrideEnvironmentSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OverrideEnvironmentSettings*& GlobalNamespace::PlayerData::dyn_$overrideEnvironmentSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$overrideEnvironmentSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<overrideEnvironmentSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OverrideEnvironmentSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> <favoritesLevelIds>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::PlayerData::dyn_$favoritesLevelIds$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$favoritesLevelIds$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<favoritesLevelIds>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerModeSettings <multiplayerModeSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSettings*& GlobalNamespace::PlayerData::dyn_$multiplayerModeSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$multiplayerModeSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerModeSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentDlcPromoDisplayCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerData::dyn_$currentDlcPromoDisplayCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$currentDlcPromoDisplayCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentDlcPromoDisplayCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <currentDlcPromoId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerData::dyn_$currentDlcPromoId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_$currentDlcPromoId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentDlcPromoId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action favoriteLevelsSetDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlayerData::dyn_favoriteLevelsSetDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_favoriteLevelsSetDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "favoriteLevelsSetDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didIncreaseNumberOfGameplaysEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlayerData::dyn_didIncreaseNumberOfGameplaysEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::dyn_didIncreaseNumberOfGameplaysEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didIncreaseNumberOfGameplaysEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerData.get_playerId
::StringW GlobalNamespace::PlayerData::get_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerId
void GlobalNamespace::PlayerData::set_playerId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_playerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerName
::StringW GlobalNamespace::PlayerData::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerName
void GlobalNamespace::PlayerData::set_playerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_shouldShowTutorialPrompt
bool GlobalNamespace::PlayerData::get_shouldShowTutorialPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_shouldShowTutorialPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldShowTutorialPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_shouldShowTutorialPrompt
void GlobalNamespace::PlayerData::set_shouldShowTutorialPrompt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_shouldShowTutorialPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldShowTutorialPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_shouldShow360Warning
bool GlobalNamespace::PlayerData::get_shouldShow360Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_shouldShow360Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldShow360Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_shouldShow360Warning
void GlobalNamespace::PlayerData::set_shouldShow360Warning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_shouldShow360Warning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldShow360Warning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_agreedToEula
bool GlobalNamespace::PlayerData::get_agreedToEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_agreedToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agreedToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_agreedToEula
void GlobalNamespace::PlayerData::set_agreedToEula(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_agreedToEula");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agreedToEula", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_didSelectLanguage
bool GlobalNamespace::PlayerData::get_didSelectLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_didSelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didSelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_didSelectLanguage
void GlobalNamespace::PlayerData::set_didSelectLanguage(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_didSelectLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_didSelectLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_agreedToMultiplayerDisclaimer
bool GlobalNamespace::PlayerData::get_agreedToMultiplayerDisclaimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_agreedToMultiplayerDisclaimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_agreedToMultiplayerDisclaimer
void GlobalNamespace::PlayerData::set_agreedToMultiplayerDisclaimer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_agreedToMultiplayerDisclaimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_agreedToMultiplayerDisclaimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_avatarCreated
bool GlobalNamespace::PlayerData::get_avatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_avatarCreated
void GlobalNamespace::PlayerData::set_avatarCreated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_avatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_didSelectRegionVersion
int GlobalNamespace::PlayerData::get_didSelectRegionVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_didSelectRegionVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didSelectRegionVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_didSelectRegionVersion
void GlobalNamespace::PlayerData::set_didSelectRegionVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_didSelectRegionVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_didSelectRegionVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerAgreements
::GlobalNamespace::PlayerAgreements* GlobalNamespace::PlayerData::get_playerAgreements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_playerAgreements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerAgreements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAgreements*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerAgreements
void GlobalNamespace::PlayerData::set_playerAgreements(::GlobalNamespace::PlayerAgreements* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_playerAgreements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerAgreements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapDifficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerData::get_lastSelectedBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_lastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapDifficulty(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_lastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_lastSelectedBeatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerData::get_lastSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_lastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_lastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::set_lastSelectedBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_lastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::PlayerData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_gameplayModifiers
void GlobalNamespace::PlayerData::set_gameplayModifiers(::GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerSpecificSettings
::GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PlayerData::get_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerSpecificSettings
void GlobalNamespace::PlayerData::set_playerSpecificSettings(::GlobalNamespace::PlayerSpecificSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_playerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_practiceSettings
::GlobalNamespace::PracticeSettings* GlobalNamespace::PlayerData::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_practiceSettings
void GlobalNamespace::PlayerData::set_practiceSettings(::GlobalNamespace::PracticeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_playerAllOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerData::get_playerAllOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_playerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_playerAllOverallStatsData
void GlobalNamespace::PlayerData::set_playerAllOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_playerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_levelsStatsData
::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLevelStatsData*>* GlobalNamespace::PlayerData::get_levelsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_levelsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLevelStatsData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_levelsStatsData
void GlobalNamespace::PlayerData::set_levelsStatsData(::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLevelStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_levelsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_levelsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_missionsStatsData
::System::Collections::Generic::List_1<::GlobalNamespace::PlayerMissionStatsData*>* GlobalNamespace::PlayerData::get_missionsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_missionsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerMissionStatsData*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_missionsStatsData
void GlobalNamespace::PlayerData::set_missionsStatsData(::System::Collections::Generic::List_1<::GlobalNamespace::PlayerMissionStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_missionsStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionsStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_showedMissionHelpIds
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::PlayerData::get_showedMissionHelpIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_showedMissionHelpIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showedMissionHelpIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_showedMissionHelpIds
void GlobalNamespace::PlayerData::set_showedMissionHelpIds(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_showedMissionHelpIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showedMissionHelpIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_guestPlayerNames
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::PlayerData::get_guestPlayerNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_guestPlayerNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_guestPlayerNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_guestPlayerNames
void GlobalNamespace::PlayerData::set_guestPlayerNames(::System::Collections::Generic::List_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_guestPlayerNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_guestPlayerNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_colorSchemesSettings
::GlobalNamespace::ColorSchemesSettings* GlobalNamespace::PlayerData::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSchemesSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_colorSchemesSettings
void GlobalNamespace::PlayerData::set_colorSchemesSettings(::GlobalNamespace::ColorSchemesSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_overrideEnvironmentSettings
::GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::PlayerData::get_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_overrideEnvironmentSettings
void GlobalNamespace::PlayerData::set_overrideEnvironmentSettings(::GlobalNamespace::OverrideEnvironmentSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_favoritesLevelIds
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::PlayerData::get_favoritesLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_favoritesLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_favoritesLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_favoritesLevelIds
void GlobalNamespace::PlayerData::set_favoritesLevelIds(::System::Collections::Generic::HashSet_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_favoritesLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_favoritesLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_multiplayerModeSettings
::GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::PlayerData::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_multiplayerModeSettings
void GlobalNamespace::PlayerData::set_multiplayerModeSettings(::GlobalNamespace::MultiplayerModeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_currentDlcPromoDisplayCount
int GlobalNamespace::PlayerData::get_currentDlcPromoDisplayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_currentDlcPromoDisplayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDlcPromoDisplayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_currentDlcPromoDisplayCount
void GlobalNamespace::PlayerData::set_currentDlcPromoDisplayCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_currentDlcPromoDisplayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentDlcPromoDisplayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.get_currentDlcPromoId
::StringW GlobalNamespace::PlayerData::get_currentDlcPromoId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::get_currentDlcPromoId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDlcPromoId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.set_currentDlcPromoId
void GlobalNamespace::PlayerData::set_currentDlcPromoId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::set_currentDlcPromoId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentDlcPromoId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.add_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::add_favoriteLevelsSetDidChangeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::add_favoriteLevelsSetDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.remove_favoriteLevelsSetDidChangeEvent
void GlobalNamespace::PlayerData::remove_favoriteLevelsSetDidChangeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::remove_favoriteLevelsSetDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_favoriteLevelsSetDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.add_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::add_didIncreaseNumberOfGameplaysEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::add_didIncreaseNumberOfGameplaysEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.remove_didIncreaseNumberOfGameplaysEvent
void GlobalNamespace::PlayerData::remove_didIncreaseNumberOfGameplaysEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::remove_didIncreaseNumberOfGameplaysEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didIncreaseNumberOfGameplaysEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerData.SetNewDlcPromo
void GlobalNamespace::PlayerData::SetNewDlcPromo(::StringW dlcPromoId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetNewDlcPromo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNewDlcPromo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dlcPromoId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dlcPromoId);
}
// Autogenerated method: PlayerData.IncreaseCurrentDlcPromoDisplayCount
void GlobalNamespace::PlayerData::IncreaseCurrentDlcPromoDisplayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::IncreaseCurrentDlcPromoDisplayCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseCurrentDlcPromoDisplayCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
::GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::GetPlayerLevelStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerLevelStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerLevelStatsData*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: PlayerData.GetPlayerLevelStatsData
::GlobalNamespace::PlayerLevelStatsData* GlobalNamespace::PlayerData::GetPlayerLevelStatsData(::StringW levelId, ::GlobalNamespace::BeatmapDifficulty difficulty, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::GetPlayerLevelStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerLevelStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(difficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerLevelStatsData*, false>(this, ___internal__method, levelId, difficulty, beatmapCharacteristic);
}
// Autogenerated method: PlayerData.GetPlayerMissionStatsData
::GlobalNamespace::PlayerMissionStatsData* GlobalNamespace::PlayerData::GetPlayerMissionStatsData(::StringW missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::GetPlayerMissionStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerMissionStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerMissionStatsData*, false>(this, ___internal__method, missionId);
}
// Autogenerated method: PlayerData.WasMissionHelpShowed
bool GlobalNamespace::PlayerData::WasMissionHelpShowed(::GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::WasMissionHelpShowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasMissionHelpShowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: PlayerData.MissionHelpWasShowed
void GlobalNamespace::PlayerData::MissionHelpWasShowed(::GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MissionHelpWasShowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionHelpWasShowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: PlayerData.IncreaseNumberOfGameplays
void GlobalNamespace::PlayerData::IncreaseNumberOfGameplays(::GlobalNamespace::PlayerLevelStatsData* playerLevelStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::IncreaseNumberOfGameplays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerLevelStats)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerLevelStats);
}
// Autogenerated method: PlayerData.IsLevelUserFavorite
bool GlobalNamespace::PlayerData::IsLevelUserFavorite(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::IsLevelUserFavorite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLevelUserFavorite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.AddLevelToFavorites
void GlobalNamespace::PlayerData::AddLevelToFavorites(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::AddLevelToFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLevelToFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.RemoveLevelFromFavorites
void GlobalNamespace::PlayerData::RemoveLevelFromFavorites(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::RemoveLevelFromFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveLevelFromFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: PlayerData.MarkTutorialAsShown
void GlobalNamespace::PlayerData::MarkTutorialAsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkTutorialAsShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkTutorialAsShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.Mark360WarningAsShown
void GlobalNamespace::PlayerData::Mark360WarningAsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::Mark360WarningAsShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mark360WarningAsShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkEulaAsAgreed
void GlobalNamespace::PlayerData::MarkEulaAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkEulaAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkEulaAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkLanguageAsSelected
void GlobalNamespace::PlayerData::MarkLanguageAsSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkLanguageAsSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkLanguageAsSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkRegionAsSelected
void GlobalNamespace::PlayerData::MarkRegionAsSelected(int version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkRegionAsSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkRegionAsSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, version);
}
// Autogenerated method: PlayerData.MarkMultiplayerDisclaimerAsAgreed
void GlobalNamespace::PlayerData::MarkMultiplayerDisclaimerAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkMultiplayerDisclaimerAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkMultiplayerDisclaimerAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkPrivacyPolicyAsAgreed
void GlobalNamespace::PlayerData::MarkPrivacyPolicyAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkPrivacyPolicyAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkPrivacyPolicyAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkHealthAndSafetyAsAgreed
void GlobalNamespace::PlayerData::MarkHealthAndSafetyAsAgreed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkHealthAndSafetyAsAgreed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkHealthAndSafetyAsAgreed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.MarkAvatarCreated
void GlobalNamespace::PlayerData::MarkAvatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::MarkAvatarCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAvatarCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.AddGuestPlayerName
void GlobalNamespace::PlayerData::AddGuestPlayerName(::StringW guestPlayerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::AddGuestPlayerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGuestPlayerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guestPlayerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, guestPlayerName);
}
// Autogenerated method: PlayerData.DeleteAllGuestPlayers
void GlobalNamespace::PlayerData::DeleteAllGuestPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::DeleteAllGuestPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteAllGuestPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapDifficulty
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapDifficulty(::GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetLastSelectedBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastSelectedBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficulty);
}
// Autogenerated method: PlayerData.SetLastSelectedBeatmapCharacteristic
void GlobalNamespace::PlayerData::SetLastSelectedBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetLastSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: PlayerData.SetGameplayModifiers
void GlobalNamespace::PlayerData::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* newGameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameplayModifiers);
}
// Autogenerated method: PlayerData.SetPlayerSpecificSettings
void GlobalNamespace::PlayerData::SetPlayerSpecificSettings(::GlobalNamespace::PlayerSpecificSettings* newPlayerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetPlayerSpecificSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerSpecificSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPlayerSpecificSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayerSpecificSettings);
}
// Autogenerated method: PlayerData.SetMultiplayerModeSettings
void GlobalNamespace::PlayerData::SetMultiplayerModeSettings(::GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::SetMultiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerModeSettings);
}
// Autogenerated method: PlayerData.DidSelectRegion
bool GlobalNamespace::PlayerData::DidSelectRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerData::DidSelectRegion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidSelectRegion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerDataFileManagerSO
#include "GlobalNamespace/PlayerDataFileManagerSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: ColorSchemesListSO
#include "GlobalNamespace/ColorSchemesListSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: PlayerSaveData
#include "GlobalNamespace/PlayerSaveData.hpp"
// Including type: PlayerSaveDataV1_0_1
#include "GlobalNamespace/PlayerSaveDataV1_0_1.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kPlayerDataFileName
::StringW GlobalNamespace::PlayerDataFileManagerSO::_get_kPlayerDataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_get_kPlayerDataFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerDataFileManagerSO", "kPlayerDataFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayerDataFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kPlayerDataFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_set_kPlayerDataFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kPlayerDataFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::StringW GlobalNamespace::PlayerDataFileManagerSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerDataFileManagerSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kTempFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::StringW GlobalNamespace::PlayerDataFileManagerSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerDataFileManagerSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::PlayerDataFileManagerSO::_set_kBackupFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "kBackupFileName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x111365C
// Autogenerated static field getter
// Get static field: static private readonly System.Version lastVersionWithoutSavedCustomColorSchemeBoostColors
::System::Version* GlobalNamespace::PlayerDataFileManagerSO::_get_lastVersionWithoutSavedCustomColorSchemeBoostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_get_lastVersionWithoutSavedCustomColorSchemeBoostColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "PlayerDataFileManagerSO", "lastVersionWithoutSavedCustomColorSchemeBoostColors"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Version lastVersionWithoutSavedCustomColorSchemeBoostColors
void GlobalNamespace::PlayerDataFileManagerSO::_set_lastVersionWithoutSavedCustomColorSchemeBoostColors(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::_set_lastVersionWithoutSavedCustomColorSchemeBoostColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerDataFileManagerSO", "lastVersionWithoutSavedCustomColorSchemeBoostColors", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemesListSO _defaultColorSchemes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemesListSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__defaultColorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__defaultColorSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColorSchemes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemesListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _allEnvironmentInfos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__allEnvironmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__allEnvironmentInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allEnvironmentInfos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentTypeSO _normalEnvironmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__normalEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__normalEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentTypeSO _a360DegreesEnvironmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__a360DegreesEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__a360DegreesEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a360DegreesEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _defaultLastSelectedBeatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::PlayerDataFileManagerSO::dyn__defaultLastSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__defaultLastSelectedBeatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLastSelectedBeatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _buildInSongPackSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerDataFileManagerSO::dyn__buildInSongPackSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__buildInSongPackSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buildInSongPackSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _allSongPackSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerDataFileManagerSO::dyn__allSongPackSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__allSongPackSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allSongPackSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Version _eulaUpdateVersion
[[deprecated("Use field access instead!")]] ::System::Version*& GlobalNamespace::PlayerDataFileManagerSO::dyn__eulaUpdateVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::dyn__eulaUpdateVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eulaUpdateVersion"))->offset;
  return *reinterpret_cast<::System::Version**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerDataFileManagerSO..cctor
void GlobalNamespace::PlayerDataFileManagerSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataFileManagerSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.Save
void GlobalNamespace::PlayerDataFileManagerSO::Save(::GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerData);
}
// Autogenerated method: PlayerDataFileManagerSO.Load
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromJSONString
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromJSONString(::StringW jsonString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::LoadFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonString)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method, jsonString);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromCurrentVersion
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromCurrentVersion(::GlobalNamespace::PlayerSaveData* playerSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::LoadFromCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method, playerSaveData);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadFromVersionV1_0_1
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::LoadFromVersionV1_0_1(::GlobalNamespace::PlayerSaveDataV1_0_1* playerDataModelSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::LoadFromVersionV1_0_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromVersionV1_0_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerDataModelSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method, playerDataModelSaveData);
}
// Autogenerated method: PlayerDataFileManagerSO.CreateDefaultPlayerData
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultPlayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.GetLevelIdFromV_1_0_1LevelId
::StringW GlobalNamespace::PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId(::StringW oldLevelId, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::GetLevelIdFromV_1_0_1LevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataFileManagerSO", "GetLevelIdFromV_1_0_1LevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldLevelId), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oldLevelId, beatmapCharacteristic);
}
// Autogenerated method: PlayerDataFileManagerSO.GetBeatmapCharacteristicFromV_1_0_1LevelId
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId(::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::GetBeatmapCharacteristicFromV_1_0_1LevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataFileManagerSO", "GetBeatmapCharacteristicFromV_1_0_1LevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection), ::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapCharacteristicCollection, levelId);
}
// Autogenerated method: PlayerDataFileManagerSO.CreateDefaultOverrideEnvironmentSettings
::GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::CreateDefaultOverrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultOverrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataFileManagerSO.GetEnvironmentInfoBySerializedName
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PlayerDataFileManagerSO::GetEnvironmentInfoBySerializedName(::StringW environmentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::GetEnvironmentInfoBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvironmentInfoBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentName);
}
// Autogenerated method: PlayerDataFileManagerSO.LoadCorrectedSongPackMask
::StringW GlobalNamespace::PlayerDataFileManagerSO::LoadCorrectedSongPackMask(::ArrayW<uint8_t> songMaskPackBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataFileManagerSO::LoadCorrectedSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCorrectedSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songMaskPackBytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, songMaskPackBytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: PlayerDataFileManagerSO
#include "GlobalNamespace/PlayerDataFileManagerSO.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerDataFileManagerSO _playerDataFileManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataFileManagerSO*& GlobalNamespace::PlayerDataModel::dyn__playerDataFileManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::dyn__playerDataFileManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataFileManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataFileManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerData _playerData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerData*& GlobalNamespace::PlayerDataModel::dyn__playerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::dyn__playerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerDataModel.get_playerDataFileManager
::GlobalNamespace::PlayerDataFileManagerSO* GlobalNamespace::PlayerDataModel::get_playerDataFileManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::get_playerDataFileManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerDataFileManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerDataFileManagerSO*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.get_playerData
::GlobalNamespace::PlayerData* GlobalNamespace::PlayerDataModel::get_playerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::get_playerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.OnEnable
void GlobalNamespace::PlayerDataModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.OnApplicationPause
void GlobalNamespace::PlayerDataModel::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: PlayerDataModel.OnDisable
void GlobalNamespace::PlayerDataModel::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.ResetData
void GlobalNamespace::PlayerDataModel::ResetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::ResetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.Save
void GlobalNamespace::PlayerDataModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerDataModel.Load
void GlobalNamespace::PlayerDataModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerDataModelHelper
#include "GlobalNamespace/PlayerDataModelHelper.hpp"
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerAllOverallStatsData.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveDataV1_0_1/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveDataV1_0_1_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
::GlobalNamespace::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStats
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats(::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStats
::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats(::GlobalNamespace::PlayerSaveDataV1_0_1::PlayerOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerAllOverallStatsData
::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData* playerAllOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerAllOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerAllOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerAllOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerAllOverallStatsData);
}
// Autogenerated method: PlayerDataModelHelper.ToPlayerOverallStatsData
::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData* GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStatsData(::GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* playerOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerDataModelHelper::ToPlayerOverallStatsData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerDataModelHelper", "ToPlayerOverallStatsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOverallStatsData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerOverallStatsData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _highScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerLevelStatsData::dyn__highScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__highScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCombo
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerLevelStatsData::dyn__maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__maxCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLevelStatsData::dyn__fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RankModel/Rank _maxRank
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RankModel::Rank& GlobalNamespace::PlayerLevelStatsData::dyn__maxRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__maxRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRank"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _validScore
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLevelStatsData::dyn__validScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__validScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_validScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _playCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerLevelStatsData::dyn__playCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__playCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerLevelStatsData::dyn__levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty _difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PlayerLevelStatsData::dyn__difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::PlayerLevelStatsData::dyn__beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::dyn__beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerLevelStatsData.get_levelID
::StringW GlobalNamespace::PlayerLevelStatsData::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_levelID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_difficulty
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::PlayerLevelStatsData::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_beatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PlayerLevelStatsData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_highScore
int GlobalNamespace::PlayerLevelStatsData::get_highScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_highScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_maxCombo
int GlobalNamespace::PlayerLevelStatsData::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_maxCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_fullCombo
bool GlobalNamespace::PlayerLevelStatsData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_maxRank
::GlobalNamespace::RankModel::Rank GlobalNamespace::PlayerLevelStatsData::get_maxRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_maxRank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RankModel::Rank, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_validScore
bool GlobalNamespace::PlayerLevelStatsData::get_validScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_validScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_validScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.get_playCount
int GlobalNamespace::PlayerLevelStatsData::get_playCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::get_playCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLevelStatsData.UpdateScoreData
void GlobalNamespace::PlayerLevelStatsData::UpdateScoreData(int score, int maxCombo, bool fullCombo, ::GlobalNamespace::RankModel::Rank rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::UpdateScoreData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScoreData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(maxCombo), ::il2cpp_utils::ExtractType(fullCombo), ::il2cpp_utils::ExtractType(rank)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score, maxCombo, fullCombo, rank);
}
// Autogenerated method: PlayerLevelStatsData.IncreaseNumberOfGameplays
void GlobalNamespace::PlayerLevelStatsData::IncreaseNumberOfGameplays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLevelStatsData::IncreaseNumberOfGameplays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncreaseNumberOfGameplays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerMissionStatsData
#include "GlobalNamespace/PlayerMissionStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _missionId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerMissionStatsData::dyn__missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMissionStatsData::dyn__missionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerMissionStatsData::dyn__cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMissionStatsData::dyn__cleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerMissionStatsData.get_missionId
::StringW GlobalNamespace::PlayerMissionStatsData::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMissionStatsData::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMissionStatsData.get_cleared
bool GlobalNamespace::PlayerMissionStatsData::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMissionStatsData::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerMissionStatsData.set_cleared
void GlobalNamespace::PlayerMissionStatsData::set_cleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerMissionStatsData::set_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData
#include "GlobalNamespace/PlayerSaveData.hpp"
// Including type: PlayerSaveData/GameplayModifiers
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
// Including type: PlayerSaveData/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveData/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveData/PracticeSettings
#include "GlobalNamespace/PlayerSaveData_PracticeSettings.hpp"
// Including type: PlayerSaveData/ColorScheme
#include "GlobalNamespace/PlayerSaveData_ColorScheme.hpp"
// Including type: PlayerSaveData/ColorSchemesSettings
#include "GlobalNamespace/PlayerSaveData_ColorSchemesSettings.hpp"
// Including type: PlayerSaveData/OverrideEnvironmentSettings
#include "GlobalNamespace/PlayerSaveData_OverrideEnvironmentSettings.hpp"
// Including type: PlayerSaveData/GuestPlayer
#include "GlobalNamespace/PlayerSaveData_GuestPlayer.hpp"
// Including type: PlayerSaveData/MultiplayerModeSettings
#include "GlobalNamespace/PlayerSaveData_MultiplayerModeSettings.hpp"
// Including type: PlayerSaveData/PlayerAgreementsData
#include "GlobalNamespace/PlayerSaveData_PlayerAgreementsData.hpp"
// Including type: PlayerSaveData/LocalPlayer
#include "GlobalNamespace/PlayerSaveData_LocalPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::StringW GlobalNamespace::PlayerSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayerSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::PlayerSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData", "kCurrentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveData/LocalPlayer> localPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::LocalPlayer*>*& GlobalNamespace::PlayerSaveData::dyn_localPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::dyn_localPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::LocalPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveData/GuestPlayer> guestPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::GuestPlayer*>*& GlobalNamespace::PlayerSaveData::dyn_guestPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::dyn_guestPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "guestPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::GuestPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/GameplayModifiers/EnergyType energyType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_energyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "energyType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean instaFail
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_instaFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instaFail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean failOnSaberClash
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_failOnSaberClash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOnSaberClash"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/GameplayModifiers/EnabledObstacleType enabledObstacleType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_enabledObstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_enabledObstacleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledObstacleType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fastNotes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_fastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_fastNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean strictAngles
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_strictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_strictAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strictAngles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disappearingArrows
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_disappearingArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disappearingArrows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ghostNotes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_ghostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_ghostNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noBombs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noBombs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/GameplayModifiers/SongSpeed songSpeed
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_songSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_songSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeed"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noArrows
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noArrows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noFailOn0Energy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noFailOn0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_noFailOn0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noFailOn0Energy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean proMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_proMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_proMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean zenMode
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_zenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_zenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "zenMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean smallCubes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_smallCubes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::dyn_smallCubes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smallCubes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType All
::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_All(::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType FullHeightOnly
::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType None
::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType>("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "None"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnabledObstacleType None
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_None(::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnabledObstacleType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnabledObstacleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/EnergyType
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnergyType Bar
::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType>("", "PlayerSaveData/GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnergyType Bar
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Bar(::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/EnergyType Battery
::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType>("", "PlayerSaveData/GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/EnergyType Battery
void GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Battery(::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::EnergyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GameplayModifiers/SongSpeed
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Normal
::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Normal
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Normal(::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Faster
::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Faster
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Faster(::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Slower
::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed>("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/GameplayModifiers/SongSpeed Slower
void GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Slower(::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GameplayModifiers::SongSpeed::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean staticLights
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_staticLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_staticLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "staticLights"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHanded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_leftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single playerHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean automaticPlayerHeight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_automaticPlayerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaticPlayerHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single sfxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_sfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_sfxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sfxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean reduceDebris
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_reduceDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_reduceDebris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reduceDebris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noTextsAndHuds
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noTextsAndHuds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noTextsAndHuds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noTextsAndHuds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean advancedHud
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_advancedHud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_advancedHud");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "advancedHud"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single saberTrailIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_saberTrailIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_saberTrailIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberTrailIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData _noteJumpDurationTypeSettingsSaveData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn__noteJumpDurationTypeSettingsSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn__noteJumpDurationTypeSettingsSaveData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpDurationTypeSettingsSaveData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noteJumpFixedDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noteJumpFixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noteJumpFixedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpFixedDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoRestart
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noFailEffects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noFailEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noFailEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noFailEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noteJumpBeatOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noteJumpBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_noteJumpBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hideNoteSpawnEffect
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_hideNoteSpawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_hideNoteSpawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hideNoteSpawnEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean adaptiveSfx
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_adaptiveSfx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_adaptiveSfx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "adaptiveSfx"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData environmentEffectsFilterDefaultPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_environmentEffectsFilterDefaultPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_environmentEffectsFilterDefaultPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentEffectsFilterDefaultPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData environmentEffectsFilterExpertPlusPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_environmentEffectsFilterExpertPlusPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::dyn_environmentEffectsFilterExpertPlusPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentEffectsFilterExpertPlusPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData AllEffects
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_AllEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_AllEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData>("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "AllEffects"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData AllEffects
void GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_AllEffects(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_AllEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "AllEffects", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData StrobeFilter
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_StrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_StrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData>("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "StrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData StrobeFilter
void GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_StrobeFilter(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_StrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "StrobeFilter", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData NoEffects
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_NoEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_get_NoEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData>("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "NoEffects"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData NoEffects
void GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_NoEffects(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::_set_NoEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/PlayerSpecificSettings/EnvironmentEffectsFilterPresetSaveData", "NoEffects", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData Dynamic
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData>("", "PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData Dynamic
void GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_set_Dynamic(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData Static
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData>("", "PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData", "Static"));
}
// Autogenerated static field setter
// Set static field: static public PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData Static
void GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_set_Static(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayerSaveData/PlayerSpecificSettings/NoteJumpDurationTypeSettingsSaveData", "Static", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerOverallStatsData campaignOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_campaignOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_campaignOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "campaignOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerOverallStatsData soloFreePlayOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_soloFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_soloFreePlayOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "soloFreePlayOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerOverallStatsData partyFreePlayOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_partyFreePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_partyFreePlayOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partyFreePlayOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerOverallStatsData onlinePlayOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData*& GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_onlinePlayOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData::dyn_onlinePlayOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlinePlayOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerOverallStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 goodCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_goodCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 badCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_badCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 missedCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_missedCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_missedCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missedCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 totalScore
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_totalScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_totalScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalScore"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playedLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_playedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_playedLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playedLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cleardLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_cleardLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_cleardLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleardLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 failedLevelsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_failedLevelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_failedLevelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failedLevelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fullComboCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_fullComboCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_fullComboCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullComboCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timePlayed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_timePlayed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_timePlayed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timePlayed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 handDistanceTravelled
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_handDistanceTravelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_handDistanceTravelled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handDistanceTravelled"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 cummulativeCutScoreWithoutMultiplier
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_cummulativeCutScoreWithoutMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerOverallStatsData::dyn_cummulativeCutScoreWithoutMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cummulativeCutScoreWithoutMultiplier"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerLevelStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_levelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String beatmapCharacteristicName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_beatmapCharacteristicName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristicName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 highScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_highScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_highScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 maxCombo
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_maxCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RankModel/Rank maxRank
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RankModel::Rank& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_maxRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_maxRank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxRank"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean validScore
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_validScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_validScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validScore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 playCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_playCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData::dyn_playCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerMissionStatsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String missionId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::PlayerMissionStatsData::dyn_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerMissionStatsData::dyn_missionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::PlayerMissionStatsData::dyn_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerMissionStatsData::dyn_cleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PracticeSettings
#include "GlobalNamespace/PlayerSaveData_PracticeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PracticeSettings::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PracticeSettings::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMul
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSaveData::PracticeSettings::dyn_songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PracticeSettings::dyn_songSpeedMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/ColorScheme
#include "GlobalNamespace/PlayerSaveData_ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String colorSchemeId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_colorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_colorSchemeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSchemeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color saberAColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_saberAColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_saberAColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberAColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color saberBColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_saberBColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_saberBColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberBColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color environmentColor0
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color environmentColor1
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color obstaclesColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_obstaclesColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstaclesColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color environmentColor0Boost
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor0Boost"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color environmentColor1Boost
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorScheme::dyn_environmentColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor1Boost"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/ColorSchemesSettings
#include "GlobalNamespace/PlayerSaveData_ColorSchemesSettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerSaveData/ColorScheme
#include "GlobalNamespace/PlayerSaveData_ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideDefaultColors
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_overrideDefaultColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_overrideDefaultColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDefaultColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String selectedColorSchemeId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_selectedColorSchemeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_selectedColorSchemeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedColorSchemeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveData/ColorScheme> colorSchemes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::ColorScheme*>*& GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_colorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::ColorSchemesSettings::dyn_colorSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSchemes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::ColorScheme*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/OverrideEnvironmentSettings
#include "GlobalNamespace/PlayerSaveData_OverrideEnvironmentSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String overrideNormalEnvironmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_overrideNormalEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_overrideNormalEnvironmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideNormalEnvironmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String override360EnvironmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_override360EnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings::dyn_override360EnvironmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "override360EnvironmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/GuestPlayer
#include "GlobalNamespace/PlayerSaveData_GuestPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::GuestPlayer::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::GuestPlayer::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/MultiplayerModeSettings
#include "GlobalNamespace/PlayerSaveData_MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 createServerNumberOfPlayers
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_createServerNumberOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_createServerNumberOfPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createServerNumberOfPlayers"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlayDifficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlayDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlayDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayDifficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] quickPlaySongPackMask
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlaySongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlaySongPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlaySongPackMask"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlaySongPackMaskSerializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlaySongPackMaskSerializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlaySongPackMaskSerializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean quickPlayEnableLevelSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings::dyn_quickPlayEnableLevelSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quickPlayEnableLevelSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/PlayerAgreementsData
#include "GlobalNamespace/PlayerSaveData_PlayerAgreementsData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 eulaVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_eulaVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_eulaVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eulaVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 privacyPolicyVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_privacyPolicyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_privacyPolicyVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "privacyPolicyVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 healthAndSafetyVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_healthAndSafetyVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::PlayerAgreementsData::dyn_healthAndSafetyVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "healthAndSafetyVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveData/LocalPlayer
#include "GlobalNamespace/PlayerSaveData_LocalPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerSaveData/PlayerAgreementsData
#include "GlobalNamespace/PlayerSaveData_PlayerAgreementsData.hpp"
// Including type: PlayerSaveData/GameplayModifiers
#include "GlobalNamespace/PlayerSaveData_GameplayModifiers.hpp"
// Including type: PlayerSaveData/PlayerSpecificSettings
#include "GlobalNamespace/PlayerSaveData_PlayerSpecificSettings.hpp"
// Including type: PlayerSaveData/PracticeSettings
#include "GlobalNamespace/PlayerSaveData_PracticeSettings.hpp"
// Including type: PlayerSaveData/PlayerAllOverallStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerAllOverallStatsData.hpp"
// Including type: PlayerSaveData/PlayerLevelStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerLevelStatsData.hpp"
// Including type: PlayerSaveData/PlayerMissionStatsData
#include "GlobalNamespace/PlayerSaveData_PlayerMissionStatsData.hpp"
// Including type: PlayerSaveData/ColorSchemesSettings
#include "GlobalNamespace/PlayerSaveData_ColorSchemesSettings.hpp"
// Including type: PlayerSaveData/OverrideEnvironmentSettings
#include "GlobalNamespace/PlayerSaveData_OverrideEnvironmentSettings.hpp"
// Including type: PlayerSaveData/MultiplayerModeSettings
#include "GlobalNamespace/PlayerSaveData_MultiplayerModeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String playerId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldShowTutorialPrompt
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_shouldShowTutorialPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_shouldShowTutorialPrompt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldShowTutorialPrompt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean shouldShow360Warning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_shouldShow360Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_shouldShow360Warning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shouldShow360Warning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean agreedToEula
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_agreedToEula() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_agreedToEula");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agreedToEula"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean didSelectLanguage
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_didSelectLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_didSelectLanguage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectLanguage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean agreedToMultiplayerDisclaimer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_agreedToMultiplayerDisclaimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_agreedToMultiplayerDisclaimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agreedToMultiplayerDisclaimer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean avatarCreated
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_avatarCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_avatarCreated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "avatarCreated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 didSelectRegionVersion
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_didSelectRegionVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_didSelectRegionVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRegionVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerAgreementsData playerAgreements
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerAgreementsData*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerAgreements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerAgreements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAgreements"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerAgreementsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty lastSelectedBeatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_lastSelectedBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_lastSelectedBeatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSelectedBeatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String lastSelectedBeatmapCharacteristicName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_lastSelectedBeatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_lastSelectedBeatmapCharacteristicName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSelectedBeatmapCharacteristicName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/GameplayModifiers gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::GameplayModifiers*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PracticeSettings practiceSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PracticeSettings*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_practiceSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practiceSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PracticeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/PlayerAllOverallStatsData playerAllOverallStatsData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerAllOverallStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_playerAllOverallStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAllOverallStatsData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::PlayerAllOverallStatsData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveData/PlayerLevelStatsData> levelsStatsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData*>*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_levelsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_levelsStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelsStatsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::PlayerLevelStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayerSaveData/PlayerMissionStatsData> missionsStatsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::PlayerMissionStatsData*>*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_missionsStatsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_missionsStatsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missionsStatsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerSaveData::PlayerMissionStatsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> showedMissionHelpIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_showedMissionHelpIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_showedMissionHelpIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showedMissionHelpIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/ColorSchemesSettings colorSchemesSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::ColorSchemesSettings*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_colorSchemesSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSchemesSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::ColorSchemesSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/OverrideEnvironmentSettings overrideEnvironmentSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_overrideEnvironmentSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironmentSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::OverrideEnvironmentSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> favoritesLevelIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_favoritesLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_favoritesLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "favoritesLevelIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSaveData/MultiplayerModeSettings multiplayerModeSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings*& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_multiplayerModeSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerModeSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSaveData::MultiplayerModeSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentDlcPromoDisplayCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_currentDlcPromoDisplayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_currentDlcPromoDisplayCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDlcPromoDisplayCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentDlcPromoId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_currentDlcPromoId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveData::LocalPlayer::dyn_currentDlcPromoId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentDlcPromoId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSaveDataConvertor
#include "GlobalNamespace/PlayerSaveDataConvertor.hpp"
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
// Including type: NoteJumpDurationTypeSettings
#include "GlobalNamespace/NoteJumpDurationTypeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerSaveDataConvertor.GetRuntimeData
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::PlayerSaveDataConvertor::GetRuntimeData(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataConvertor::GetRuntimeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerSaveDataConvertor", "GetRuntimeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentEffectsFilterPreset, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated method: PlayerSaveDataConvertor.GetSaveData
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData GlobalNamespace::PlayerSaveDataConvertor::GetSaveData(::GlobalNamespace::EnvironmentEffectsFilterPreset data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataConvertor::GetSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerSaveDataConvertor", "GetSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::EnvironmentEffectsFilterPresetSaveData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: PlayerSaveDataConvertor.GetRuntimeData
::GlobalNamespace::NoteJumpDurationTypeSettings GlobalNamespace::PlayerSaveDataConvertor::GetRuntimeData(::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData saveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataConvertor::GetRuntimeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerSaveDataConvertor", "GetRuntimeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteJumpDurationTypeSettings, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saveData);
}
// Autogenerated method: PlayerSaveDataConvertor.GetSaveData
::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData GlobalNamespace::PlayerSaveDataConvertor::GetSaveData(::GlobalNamespace::NoteJumpDurationTypeSettings data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSaveDataConvertor::GetSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerSaveDataConvertor", "GetSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSaveData::PlayerSpecificSettings::NoteJumpDurationTypeSettingsSaveData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leftHanded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__leftHanded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHanded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playerHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettings::dyn__playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__playerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _automaticPlayerHeight
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__automaticPlayerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_automaticPlayerHeight"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sfxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettings::dyn__sfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__sfxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sfxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _reduceDebris
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__reduceDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__reduceDebris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reduceDebris"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noTextsAndHuds
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__noTextsAndHuds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__noTextsAndHuds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noTextsAndHuds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noFailEffects
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__noFailEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__noFailEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noFailEffects"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _advancedHud
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__advancedHud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__advancedHud");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_advancedHud"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _autoRestart
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__autoRestart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoRestart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _saberTrailIntensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettings::dyn__saberTrailIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__saberTrailIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberTrailIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteJumpDurationTypeSettings _noteJumpDurationTypeSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteJumpDurationTypeSettings& GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpDurationTypeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpDurationTypeSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpDurationTypeSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteJumpDurationTypeSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpFixedDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpFixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpFixedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpFixedDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hideNoteSpawnEffect
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__hideNoteSpawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__hideNoteSpawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideNoteSpawnEffect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _adaptiveSfx
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerSpecificSettings::dyn__adaptiveSfx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__adaptiveSfx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adaptiveSfx"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentEffectsFilterPreset _environmentEffectsFilterDefaultPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentEffectsFilterPreset& GlobalNamespace::PlayerSpecificSettings::dyn__environmentEffectsFilterDefaultPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__environmentEffectsFilterDefaultPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentEffectsFilterDefaultPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentEffectsFilterPreset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentEffectsFilterPreset _environmentEffectsFilterExpertPlusPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentEffectsFilterPreset& GlobalNamespace::PlayerSpecificSettings::dyn__environmentEffectsFilterExpertPlusPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::dyn__environmentEffectsFilterExpertPlusPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentEffectsFilterExpertPlusPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentEffectsFilterPreset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpecificSettings.get_leftHanded
bool GlobalNamespace::PlayerSpecificSettings::get_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_leftHanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_playerHeight
float GlobalNamespace::PlayerSpecificSettings::get_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_playerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_automaticPlayerHeight
bool GlobalNamespace::PlayerSpecificSettings::get_automaticPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_automaticPlayerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_automaticPlayerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_sfxVolume
float GlobalNamespace::PlayerSpecificSettings::get_sfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_sfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_reduceDebris
bool GlobalNamespace::PlayerSpecificSettings::get_reduceDebris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_reduceDebris");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reduceDebris", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_noTextsAndHuds
bool GlobalNamespace::PlayerSpecificSettings::get_noTextsAndHuds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_noTextsAndHuds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noTextsAndHuds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_noFailEffects
bool GlobalNamespace::PlayerSpecificSettings::get_noFailEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_noFailEffects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noFailEffects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_advancedHud
bool GlobalNamespace::PlayerSpecificSettings::get_advancedHud() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_advancedHud");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_advancedHud", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_autoRestart
bool GlobalNamespace::PlayerSpecificSettings::get_autoRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_autoRestart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoRestart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_saberTrailIntensity
float GlobalNamespace::PlayerSpecificSettings::get_saberTrailIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_saberTrailIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberTrailIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_noteJumpDurationTypeSettings
::GlobalNamespace::NoteJumpDurationTypeSettings GlobalNamespace::PlayerSpecificSettings::get_noteJumpDurationTypeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_noteJumpDurationTypeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpDurationTypeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteJumpDurationTypeSettings, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_noteJumpFixedDuration
float GlobalNamespace::PlayerSpecificSettings::get_noteJumpFixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_noteJumpFixedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpFixedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_noteJumpStartBeatOffset
float GlobalNamespace::PlayerSpecificSettings::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_hideNoteSpawnEffect
bool GlobalNamespace::PlayerSpecificSettings::get_hideNoteSpawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_hideNoteSpawnEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideNoteSpawnEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_adaptiveSfx
bool GlobalNamespace::PlayerSpecificSettings::get_adaptiveSfx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_adaptiveSfx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_adaptiveSfx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_environmentEffectsFilterDefaultPreset
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::PlayerSpecificSettings::get_environmentEffectsFilterDefaultPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_environmentEffectsFilterDefaultPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentEffectsFilterDefaultPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentEffectsFilterPreset, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.get_environmentEffectsFilterExpertPlusPreset
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::PlayerSpecificSettings::get_environmentEffectsFilterExpertPlusPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::get_environmentEffectsFilterExpertPlusPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentEffectsFilterExpertPlusPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentEffectsFilterPreset, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpecificSettings.CopyWith
::GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::PlayerSpecificSettings::CopyWith(::System::Nullable_1<bool> leftHanded, ::System::Nullable_1<float> playerHeight, ::System::Nullable_1<bool> automaticPlayerHeight, ::System::Nullable_1<float> sfxVolume, ::System::Nullable_1<bool> reduceDebris, ::System::Nullable_1<bool> noTextsAndHuds, ::System::Nullable_1<bool> noFailEffects, ::System::Nullable_1<bool> advancedHud, ::System::Nullable_1<bool> autoRestart, ::System::Nullable_1<float> saberTrailIntensity, ::System::Nullable_1<::GlobalNamespace::NoteJumpDurationTypeSettings> noteJumpDurationTypeSettings, ::System::Nullable_1<float> noteJumpFixedDuration, ::System::Nullable_1<float> noteJumpStartBeatOffset, ::System::Nullable_1<bool> hideNoteSpawnEffect, ::System::Nullable_1<bool> adaptiveSfx, ::System::Nullable_1<::GlobalNamespace::EnvironmentEffectsFilterPreset> environmentEffectsFilterDefaultPreset, ::System::Nullable_1<::GlobalNamespace::EnvironmentEffectsFilterPreset> environmentEffectsFilterExpertPlusPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::CopyWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHanded), ::il2cpp_utils::ExtractType(playerHeight), ::il2cpp_utils::ExtractType(automaticPlayerHeight), ::il2cpp_utils::ExtractType(sfxVolume), ::il2cpp_utils::ExtractType(reduceDebris), ::il2cpp_utils::ExtractType(noTextsAndHuds), ::il2cpp_utils::ExtractType(noFailEffects), ::il2cpp_utils::ExtractType(advancedHud), ::il2cpp_utils::ExtractType(autoRestart), ::il2cpp_utils::ExtractType(saberTrailIntensity), ::il2cpp_utils::ExtractType(noteJumpDurationTypeSettings), ::il2cpp_utils::ExtractType(noteJumpFixedDuration), ::il2cpp_utils::ExtractType(noteJumpStartBeatOffset), ::il2cpp_utils::ExtractType(hideNoteSpawnEffect), ::il2cpp_utils::ExtractType(adaptiveSfx), ::il2cpp_utils::ExtractType(environmentEffectsFilterDefaultPreset), ::il2cpp_utils::ExtractType(environmentEffectsFilterExpertPlusPreset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method, leftHanded, playerHeight, automaticPlayerHeight, sfxVolume, reduceDebris, noTextsAndHuds, noFailEffects, advancedHud, autoRestart, saberTrailIntensity, noteJumpDurationTypeSettings, noteJumpFixedDuration, noteJumpStartBeatOffset, hideNoteSpawnEffect, adaptiveSfx, environmentEffectsFilterDefaultPreset, environmentEffectsFilterExpertPlusPreset);
}
// Autogenerated method: PlayerSpecificSettings.GetEnvironmentEffectsFilterPreset
::GlobalNamespace::EnvironmentEffectsFilterPreset GlobalNamespace::PlayerSpecificSettings::GetEnvironmentEffectsFilterPreset(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerSpecificSettings::GetEnvironmentEffectsFilterPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvironmentEffectsFilterPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentEffectsFilterPreset, false>(this, ___internal__method, difficulty);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <headTopId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$headTopId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$headTopId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headTopId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <glassesId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$glassesId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$glassesId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<glassesId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <facialHairId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$facialHairId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$facialHairId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<facialHairId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <handsId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$handsId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$handsId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <clothesId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$clothesId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$clothesId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <eyesId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$eyesId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$eyesId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<eyesId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <mouthId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$mouthId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$mouthId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mouthId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <headTopPrimaryColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$headTopPrimaryColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$headTopPrimaryColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headTopPrimaryColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <headTopSecondaryColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$headTopSecondaryColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$headTopSecondaryColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headTopSecondaryColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <glassesColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$glassesColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$glassesColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<glassesColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <facialHairColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$facialHairColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$facialHairColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<facialHairColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <handsColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$handsColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$handsColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <clothesPrimaryColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$clothesPrimaryColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$clothesPrimaryColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesPrimaryColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <clothesSecondaryColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$clothesSecondaryColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$clothesSecondaryColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesSecondaryColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <clothesDetailColor>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarData::dyn_$clothesDetailColor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$clothesDetailColor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesDetailColor>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <skinColorId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarData::dyn_$skinColorId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::dyn_$skinColorId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<skinColorId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarData.get_headTopId
::StringW GlobalNamespace::AvatarData::get_headTopId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_headTopId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTopId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_headTopId
void GlobalNamespace::AvatarData::set_headTopId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_headTopId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headTopId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_glassesId
::StringW GlobalNamespace::AvatarData::get_glassesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_glassesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glassesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_glassesId
void GlobalNamespace::AvatarData::set_glassesId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_glassesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glassesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_facialHairId
::StringW GlobalNamespace::AvatarData::get_facialHairId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_facialHairId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_facialHairId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_facialHairId
void GlobalNamespace::AvatarData::set_facialHairId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_facialHairId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_facialHairId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_handsId
::StringW GlobalNamespace::AvatarData::get_handsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_handsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_handsId
void GlobalNamespace::AvatarData::set_handsId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_handsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_clothesId
::StringW GlobalNamespace::AvatarData::get_clothesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_clothesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_clothesId
void GlobalNamespace::AvatarData::set_clothesId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_clothesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clothesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_eyesId
::StringW GlobalNamespace::AvatarData::get_eyesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_eyesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_eyesId
void GlobalNamespace::AvatarData::set_eyesId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_eyesId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eyesId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_mouthId
::StringW GlobalNamespace::AvatarData::get_mouthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_mouthId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mouthId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_mouthId
void GlobalNamespace::AvatarData::set_mouthId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_mouthId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mouthId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_headTopPrimaryColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_headTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_headTopPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTopPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_headTopPrimaryColor
void GlobalNamespace::AvatarData::set_headTopPrimaryColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_headTopPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headTopPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_headTopSecondaryColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_headTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_headTopSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTopSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_headTopSecondaryColor
void GlobalNamespace::AvatarData::set_headTopSecondaryColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_headTopSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headTopSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_glassesColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_glassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_glassesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glassesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_glassesColor
void GlobalNamespace::AvatarData::set_glassesColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_glassesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glassesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_facialHairColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_facialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_facialHairColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_facialHairColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_facialHairColor
void GlobalNamespace::AvatarData::set_facialHairColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_facialHairColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_facialHairColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_handsColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_handsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_handsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_handsColor
void GlobalNamespace::AvatarData::set_handsColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_handsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_clothesPrimaryColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_clothesPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_clothesPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_clothesPrimaryColor
void GlobalNamespace::AvatarData::set_clothesPrimaryColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_clothesPrimaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clothesPrimaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_clothesSecondaryColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_clothesSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_clothesSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_clothesSecondaryColor
void GlobalNamespace::AvatarData::set_clothesSecondaryColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_clothesSecondaryColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clothesSecondaryColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_clothesDetailColor
::UnityEngine::Color GlobalNamespace::AvatarData::get_clothesDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_clothesDetailColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesDetailColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_clothesDetailColor
void GlobalNamespace::AvatarData::set_clothesDetailColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_clothesDetailColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clothesDetailColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.get_skinColorId
::StringW GlobalNamespace::AvatarData::get_skinColorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::get_skinColorId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinColorId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AvatarData.set_skinColorId
void GlobalNamespace::AvatarData::set_skinColorId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::set_skinColorId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_skinColorId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarData.Clone
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarData::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarData::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarDataFileManagerSO
#include "GlobalNamespace/AvatarDataFileManagerSO.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
// Including type: AvatarSaveData
#include "GlobalNamespace/AvatarSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAvatarDataFileName
::StringW GlobalNamespace::AvatarDataFileManagerSO::_get_kAvatarDataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_get_kAvatarDataFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AvatarDataFileManagerSO", "kAvatarDataFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAvatarDataFileName
void GlobalNamespace::AvatarDataFileManagerSO::_set_kAvatarDataFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_set_kAvatarDataFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarDataFileManagerSO", "kAvatarDataFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::StringW GlobalNamespace::AvatarDataFileManagerSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AvatarDataFileManagerSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::AvatarDataFileManagerSO::_set_kTempFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarDataFileManagerSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::StringW GlobalNamespace::AvatarDataFileManagerSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AvatarDataFileManagerSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::AvatarDataFileManagerSO::_set_kBackupFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarDataFileManagerSO", "kBackupFileName", value));
}
// Autogenerated method: AvatarDataFileManagerSO.Save
void GlobalNamespace::AvatarDataFileManagerSO::Save(::GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarData);
}
// Autogenerated method: AvatarDataFileManagerSO.Load
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataFileManagerSO::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataFileManagerSO.LoadFromCurrentVersion
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataFileManagerSO::LoadFromCurrentVersion(::GlobalNamespace::AvatarSaveData* avatarSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataFileManagerSO::LoadFromCurrentVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromCurrentVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method, avatarSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: AvatarDataFileManagerSO
#include "GlobalNamespace/AvatarDataFileManagerSO.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarDataFileManagerSO _avatarDataFileManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataFileManagerSO*& GlobalNamespace::AvatarDataModel::dyn__avatarDataFileManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn__avatarDataFileManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataFileManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataFileManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartsModel*& GlobalNamespace::AvatarDataModel::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarData <avatarData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarData*& GlobalNamespace::AvatarDataModel::dyn_$avatarData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn_$avatarData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<avatarData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarDataModel.get_avatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataModel::get_avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::get_avatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.set_avatarData
void GlobalNamespace::AvatarDataModel::set_avatarData(::GlobalNamespace::AvatarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::set_avatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarDataModel.OnEnable
void GlobalNamespace::AvatarDataModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Randomize
void GlobalNamespace::AvatarDataModel::Randomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Save
void GlobalNamespace::AvatarDataModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Load
void GlobalNamespace::AvatarDataModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.CreateDefaultAvatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataModel::CreateDefaultAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::CreateDefaultAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarDataMultiplayerAvatarDataConverter
#include "GlobalNamespace/AvatarDataMultiplayerAvatarDataConverter.hpp"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarDataMultiplayerAvatarDataConverter.CreateMultiplayerAvatarData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateMultiplayerAvatarData(::GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateMultiplayerAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarDataMultiplayerAvatarDataConverter", "CreateMultiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarData);
}
// Autogenerated method: AvatarDataMultiplayerAvatarDataConverter.CreateAvatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateAvatarData(::GlobalNamespace::MultiplayerAvatarData multiplayerAvatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarDataMultiplayerAvatarDataConverter", "CreateAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerAvatarData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerAvatarData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarMeshPartSO.get_mesh
::UnityEngine::Mesh* GlobalNamespace::AvatarMeshPartSO::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarMeshPartSO::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarPartCollection`1
#include "GlobalNamespace/AvatarPartCollection_1.hpp"
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <headTopCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$headTopCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$headTopCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headTopCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarSpritePartSO> <eyesCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$eyesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$eyesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<eyesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarSpritePartSO> <mouthCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$mouthCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$mouthCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mouthCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <glassesCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$glassesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$glassesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<glassesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <facialHairCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$facialHairCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$facialHairCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<facialHairCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <handsCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$handsCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$handsCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <clothesCollection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$clothesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$clothesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SkinColorSO[] <skinColors>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SkinColorSO*>& GlobalNamespace::AvatarPartsModel::dyn_$skinColors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$skinColors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<skinColors>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SkinColorSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32> _indexById
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& GlobalNamespace::AvatarPartsModel::dyn__indexById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn__indexById");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexById"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPartsModel.get_headTopCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_headTopCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_headTopCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTopCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_eyesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>* GlobalNamespace::AvatarPartsModel::get_eyesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_eyesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_mouthCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>* GlobalNamespace::AvatarPartsModel::get_mouthCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_mouthCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mouthCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_glassesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_glassesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_glassesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glassesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_facialHairCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_facialHairCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_facialHairCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_facialHairCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_handsCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_handsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_handsCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handsCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_clothesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_clothesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_clothesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_skinColors
::ArrayW<::GlobalNamespace::SkinColorSO*> GlobalNamespace::AvatarPartsModel::get_skinColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_skinColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SkinColorSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.GetColorIndexById
int GlobalNamespace::AvatarPartsModel::GetColorIndexById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetColorIndexById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorIndexById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: AvatarPartsModel.GetSkinColorById
::GlobalNamespace::SkinColorSO* GlobalNamespace::AvatarPartsModel::GetSkinColorById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetSkinColorById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkinColorById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SkinColorSO*, false>(this, ___internal__method, id);
}
// Autogenerated method: AvatarPartsModel.GetRandomColor
::GlobalNamespace::SkinColorSO* GlobalNamespace::AvatarPartsModel::GetRandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetRandomColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRandomColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SkinColorSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _headTops
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__headTops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__headTops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTops"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarSpritePartSO[] _eyes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__eyes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarSpritePartSO[] _mouths
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__mouths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__mouths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouths"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _glasses
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__glasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__glasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glasses"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _facialHair
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__facialHair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__facialHair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHair"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _hands
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__hands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hands"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _clothes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__clothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__clothes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPartsModelSO.get_headTops
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_headTops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_headTops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Eyes
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*> GlobalNamespace::AvatarPartsModelSO::get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Eyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Mouths
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*> GlobalNamespace::AvatarPartsModelSO::get_Mouths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Mouths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mouths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Glasses
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Glasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Glasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Glasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_FacialHair
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_FacialHair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_FacialHair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacialHair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Hands
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Hands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Clothes
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Clothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Clothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarSaveData
#include "GlobalNamespace/AvatarSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String headTopId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_headTopId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String glassesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_glassesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_glassesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String facialHairId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_facialHairId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_facialHairId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String handsId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_handsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_handsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String clothesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_clothesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String skinColorId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_skinColorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_skinColorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinColorId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String mouthId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_mouthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_mouthId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mouthId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String eyesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AvatarSaveData::dyn_eyesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_eyesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color headTopPrimaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_headTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopPrimaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color headTopSecondaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_headTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopSecondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color glassesColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_glassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_glassesColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color facialHairColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_facialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_facialHairColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color handsColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_handsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_handsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesPrimaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesPrimaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesSecondaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesSecondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesDetailColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesDetailColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesDetailColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarSpritePartSO.get_sprite
::UnityEngine::Sprite* GlobalNamespace::AvatarSpritePartSO::get_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSpritePartSO::get_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAvatarPart
#include "GlobalNamespace/IAvatarPart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAvatarPart.get_id
::StringW GlobalNamespace::IAvatarPart::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAvatarPart::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IAvatarPart.get_localizedName
::StringW GlobalNamespace::IAvatarPart::get_localizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAvatarPart::get_localizedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _id
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SkinColorSO::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SkinColorSO::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SkinColorSO.get_id
::StringW GlobalNamespace::SkinColorSO::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SkinColorSO.get_Color
::UnityEngine::Color GlobalNamespace::SkinColorSO::get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::get_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SkinColorSO[] _colors
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SkinColorSO*>& GlobalNamespace::SkinColorSetSO::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSetSO::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SkinColorSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SkinColorSetSO.get_colors
::ArrayW<::GlobalNamespace::SkinColorSO*> GlobalNamespace::SkinColorSetSO::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSetSO::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SkinColorSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDelayBeforeStart
float GlobalNamespace::PracticeSettings::_get_kDelayBeforeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::_get_kDelayBeforeStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeSettings", "kDelayBeforeStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDelayBeforeStart
void GlobalNamespace::PracticeSettings::_set_kDelayBeforeStart(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::_set_kDelayBeforeStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeSettings", "kDelayBeforeStart", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PracticeSettings::dyn__startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songSpeedMul
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PracticeSettings::dyn__songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__songSpeedMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSpeedMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startInAdvanceAndClearNotes
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PracticeSettings::dyn__startInAdvanceAndClearNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__startInAdvanceAndClearNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startInAdvanceAndClearNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PracticeSettings.get_startSongTime
float GlobalNamespace::PracticeSettings::get_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_startSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_startSongTime
void GlobalNamespace::PracticeSettings::set_startSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_startSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_songSpeedMul
float GlobalNamespace::PracticeSettings::get_songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_songSpeedMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSpeedMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_songSpeedMul
void GlobalNamespace::PracticeSettings::set_songSpeedMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_songSpeedMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_songSpeedMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_startInAdvanceAndClearNotes
bool GlobalNamespace::PracticeSettings::get_startInAdvanceAndClearNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_startInAdvanceAndClearNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startInAdvanceAndClearNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_startInAdvanceAndClearNotes
void GlobalNamespace::PracticeSettings::set_startInAdvanceAndClearNotes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_startInAdvanceAndClearNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startInAdvanceAndClearNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_defaultPracticeSettings
::GlobalNamespace::PracticeSettings* GlobalNamespace::PracticeSettings::get_defaultPracticeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_defaultPracticeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PracticeSettings", "get_defaultPracticeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PracticeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PracticeSettings.ResetToDefault
void GlobalNamespace::PracticeSettings::ResetToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::ResetToDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetToDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModelHelper
#include "GlobalNamespace/RankModelHelper.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RankModelHelper.MaxRankForGameplayModifiers
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RankModelHelper", "MaxRankForGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RankModel::Rank, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameplayModifiers, gameplayModifiersModel, energy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeSfxVolumePerLevelSO
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO.hpp"
// Including type: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO_RelativeSfxVolumePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair[] _relativeSfxVolumePerLevel
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>& GlobalNamespace::RelativeSfxVolumePerLevelSO::dyn__relativeSfxVolumePerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::dyn__relativeSfxVolumePerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevel"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO.get_relativeSfxVolumePerLevel
::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*> GlobalNamespace::RelativeSfxVolumePerLevelSO::get_relativeSfxVolumePerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::get_relativeSfxVolumePerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeSfxVolumePerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO_RelativeSfxVolumePair.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelSO _previewLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelSO*& GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__previewLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__previewLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _relativeSfxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__relativeSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__relativeSfxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair.get_levelId
::StringW GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair.get_relativeSfxVolume
float GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_relativeSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_relativeSfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeSfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetLocalLeaderboardOnKey
#include "GlobalNamespace/ResetLocalLeaderboardOnKey.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalLeaderboardsModel _localLeaderboardsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalLeaderboardsModel*& GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__localLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__localLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.KeyCode _keyCode
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__keyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__keyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyCode"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResetLocalLeaderboardOnKey.Update
void GlobalNamespace::ResetLocalLeaderboardOnKey::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMultiplayerRichPresenceData
#include "GlobalNamespace/IMultiplayerRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerRichPresenceData.get_multiplayerSecret
::StringW GlobalNamespace::IMultiplayerRichPresenceData::get_multiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_multiplayerSecret
void GlobalNamespace::IMultiplayerRichPresenceData::set_multiplayerSecret(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_atMaxPartySize
bool GlobalNamespace::IMultiplayerRichPresenceData::get_atMaxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_atMaxPartySize
void GlobalNamespace::IMultiplayerRichPresenceData::set_atMaxPartySize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_canInvite
bool GlobalNamespace::IMultiplayerRichPresenceData::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_canInvite
void GlobalNamespace::IMultiplayerRichPresenceData::set_canInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_isJoinable
bool GlobalNamespace::IMultiplayerRichPresenceData::get_isJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_isJoinable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InMultiplayerRichPresenceData
#include "GlobalNamespace/InMultiplayerRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1113B8C
// Autogenerated static field getter
// Get static field: static private System.String kInMultiplayerLobbyRichPresenceLocalizationKey
::StringW GlobalNamespace::InMultiplayerRichPresenceData::_get_kInMultiplayerLobbyRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::_get_kInMultiplayerLobbyRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "InMultiplayerRichPresenceData", "kInMultiplayerLobbyRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInMultiplayerLobbyRichPresenceLocalizationKey
void GlobalNamespace::InMultiplayerRichPresenceData::_set_kInMultiplayerLobbyRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::_set_kInMultiplayerLobbyRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InMultiplayerRichPresenceData", "kInMultiplayerLobbyRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <apiName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$apiName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$apiName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<apiName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <multiplayerSecret>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$multiplayerSecret$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$multiplayerSecret$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerSecret>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <atMaxPartySize>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$atMaxPartySize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$atMaxPartySize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<atMaxPartySize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <canInvite>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$canInvite$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$canInvite$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<canInvite>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_apiName
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_apiName
void GlobalNamespace::InMultiplayerRichPresenceData::set_apiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_apiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_localizedDescription
void GlobalNamespace::InMultiplayerRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_multiplayerSecret
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_multiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_multiplayerSecret
void GlobalNamespace::InMultiplayerRichPresenceData::set_multiplayerSecret(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_atMaxPartySize
bool GlobalNamespace::InMultiplayerRichPresenceData::get_atMaxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_atMaxPartySize
void GlobalNamespace::InMultiplayerRichPresenceData::set_atMaxPartySize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_canInvite
bool GlobalNamespace::InMultiplayerRichPresenceData::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_canInvite
void GlobalNamespace::InMultiplayerRichPresenceData::set_canInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_isJoinable
bool GlobalNamespace::InMultiplayerRichPresenceData::get_isJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_isJoinable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingMultiplayerRichPresenceData
#include "GlobalNamespace/PlayingMultiplayerRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1113B9C
// Autogenerated static field getter
// Get static field: static private System.String kPlayingMultiplayerLobbyRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingMultiplayerRichPresenceData::_get_kPlayingMultiplayerLobbyRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingMultiplayerRichPresenceData::_get_kPlayingMultiplayerLobbyRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingMultiplayerRichPresenceData", "kPlayingMultiplayerLobbyRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingMultiplayerLobbyRichPresenceLocalizationKey
void GlobalNamespace::PlayingMultiplayerRichPresenceData::_set_kPlayingMultiplayerLobbyRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingMultiplayerRichPresenceData::_set_kPlayingMultiplayerLobbyRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingMultiplayerRichPresenceData", "kPlayingMultiplayerLobbyRichPresenceLocalizationKey", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusRichPresencePlatformHandler
#include "GlobalNamespace/OculusRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusRichPresencePlatformHandler.SetPresence
void GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: OculusRichPresencePlatformHandler.Clear
void GlobalNamespace::OculusRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresenceData.get_apiName
::StringW GlobalNamespace::IRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::IRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1113BBC
// Autogenerated static field getter
// Get static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
void GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BrowsingMenusRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_apiName
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BrowsingMenusRichPresenceData.set_localizedDescription
void GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1113BDC
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayingCampaignRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_apiName
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingCampaignRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1113BFC
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayingTutorialPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingTutorialPresenceData.get_apiName
::StringW GlobalNamespace::PlayingTutorialPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingTutorialPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingTutorialPresenceData.set_localizedDescription
void GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingDifficultyBeatmapRichPresenceData
#include "GlobalNamespace/PlayingDifficultyBeatmapRichPresenceData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <apiName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$apiName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$apiName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<apiName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_apiName
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_apiName
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.GetDestinationLocalizedString
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayingDifficultyBeatmapRichPresenceData", "GetDestinationLocalizedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceManager
#include "GlobalNamespace/RichPresenceManager.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: InMultiplayerRichPresenceData
#include "GlobalNamespace/InMultiplayerRichPresenceData.hpp"
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _tutorialScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__tutorialScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__tutorialScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuScenesTransitionSetupDataSO _menuScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__menuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__menuScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IRichPresencePlatformHandler _richPresencePlatformHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IRichPresencePlatformHandler*& GlobalNamespace::RichPresenceManager::dyn__richPresencePlatformHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__richPresencePlatformHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_richPresencePlatformHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IRichPresencePlatformHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::RichPresenceManager::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::RichPresenceManager::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::RichPresenceManager::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::RichPresenceManager::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _menuWasLoaded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RichPresenceManager::dyn__menuWasLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__menuWasLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuWasLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInMultiplayerLobby
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RichPresenceManager::dyn__isInMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__isInMultiplayerLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInMultiplayerLobby"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrowsingMenusRichPresenceData _browsingMenusRichPresenceData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BrowsingMenusRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__browsingMenusRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__browsingMenusRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_browsingMenusRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrowsingMenusRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InMultiplayerRichPresenceData _inMultiplayerRichPresenceData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InMultiplayerRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__inMultiplayerRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__inMultiplayerRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inMultiplayerRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InMultiplayerRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayingCampaignRichPresenceData _playingCampaignRichPresenceData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayingCampaignRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__playingCampaignRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__playingCampaignRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingCampaignRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayingCampaignRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayingTutorialPresenceData _playingTutorialPresenceData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayingTutorialPresenceData*& GlobalNamespace::RichPresenceManager::dyn__playingTutorialPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__playingTutorialPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingTutorialPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayingTutorialPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IRichPresenceData _currentPresenceData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__currentPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__currentPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RichPresenceManager.Awake
void GlobalNamespace::RichPresenceManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.OnDestroy
void GlobalNamespace::RichPresenceManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.HandleLobbyGameStateModelDidChange
void GlobalNamespace::RichPresenceManager::HandleLobbyGameStateModelDidChange(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleLobbyGameStateModelDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateModelDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: RichPresenceManager.SetMenuPresence
void GlobalNamespace::RichPresenceManager::SetMenuPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::SetMenuPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMenuPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.HandleGameScenesManagerTransitionDidFinish
void GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* diContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(diContainer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, diContainer);
}
// Autogenerated method: RichPresenceManager.HandleMultiplayerPartySizeChanged
void GlobalNamespace::RichPresenceManager::HandleMultiplayerPartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleMultiplayerPartySizeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerPartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: RichPresenceManager.HandleLobbyPlayerPermissionChanged
void GlobalNamespace::RichPresenceManager::HandleLobbyPlayerPermissionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleLobbyPlayerPermissionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayerPermissionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.SetPresence
void GlobalNamespace::RichPresenceManager::SetPresence(::GlobalNamespace::IRichPresenceData* presenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(presenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, presenceData);
}
// Autogenerated method: RichPresenceManager.Clear
void GlobalNamespace::RichPresenceManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresencePlatformHandler.SetPresence
void GlobalNamespace::IRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: IRichPresencePlatformHandler.Clear
void GlobalNamespace::IRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestRichPresencePlatformHandler
#include "GlobalNamespace/TestRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestRichPresencePlatformHandler.SetPresence
void GlobalNamespace::TestRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: TestRichPresencePlatformHandler.Clear
void GlobalNamespace::TestRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamRichPresencePlatformHandler
#include "GlobalNamespace/SteamRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamRichPresencePlatformHandler.SetPresence
void GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: SteamRichPresencePlatformHandler.Clear
void GlobalNamespace::SteamRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel
#include "GlobalNamespace/ScoreModel.hpp"
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
// Including type: ScoreModel/MaxScoreCounterElement
#include "GlobalNamespace/ScoreModel_MaxScoreCounterElement.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ScoreMultiplierCounter
#include "GlobalNamespace/ScoreMultiplierCounter.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxMultiplier
int GlobalNamespace::ScoreModel::_get_kMaxMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxMultiplier
void GlobalNamespace::ScoreModel::_set_kMaxMultiplier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxDistanceForDistanceToCenterScore
float GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxDistanceForDistanceToCenterScore
void GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1113CCC
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.HashSet`1<NoteData/ScoringType> fullScoreScoringTypes
::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>* GlobalNamespace::ScoreModel::_get_fullScoreScoringTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_fullScoreScoringTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>*>("", "ScoreModel", "fullScoreScoringTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.HashSet`1<NoteData/ScoringType> fullScoreScoringTypes
void GlobalNamespace::ScoreModel::_set_fullScoreScoringTypes(::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_fullScoreScoringTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "fullScoreScoringTypes", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1113CDC
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<NoteData/ScoringType,ScoreModel/NoteScoreDefinition> _scoreDefinitions
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>* GlobalNamespace::ScoreModel::_get__scoreDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get__scoreDefinitions");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>*>("", "ScoreModel", "_scoreDefinitions")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<NoteData/ScoringType,ScoreModel/NoteScoreDefinition> _scoreDefinitions
void GlobalNamespace::ScoreModel::_set__scoreDefinitions(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set__scoreDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "_scoreDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxBeforeCutScore
int GlobalNamespace::ScoreModel::_get_kMaxBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxBeforeCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxBeforeCutScore"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxBeforeCutScore
void GlobalNamespace::ScoreModel::_set_kMaxBeforeCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxBeforeCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxBeforeCutScore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxCenterDistanceCutScore
int GlobalNamespace::ScoreModel::_get_kMaxCenterDistanceCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxCenterDistanceCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxCenterDistanceCutScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxCenterDistanceCutScore
void GlobalNamespace::ScoreModel::_set_kMaxCenterDistanceCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxCenterDistanceCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxCenterDistanceCutScore", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxAfterCutScore
int GlobalNamespace::ScoreModel::_get_kMaxAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxAfterCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxAfterCutScore"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxAfterCutScore
void GlobalNamespace::ScoreModel::_set_kMaxAfterCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxAfterCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxAfterCutScore", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1113CEC
// Autogenerated static field getter
// Get static field: static private readonly ScoreMultiplierCounter _scoreMultiplierCounter
::GlobalNamespace::ScoreMultiplierCounter* GlobalNamespace::ScoreModel::_get__scoreMultiplierCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get__scoreMultiplierCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScoreMultiplierCounter*>("", "ScoreModel", "_scoreMultiplierCounter"));
}
// Autogenerated static field setter
// Set static field: static private readonly ScoreMultiplierCounter _scoreMultiplierCounter
void GlobalNamespace::ScoreModel::_set__scoreMultiplierCounter(::GlobalNamespace::ScoreMultiplierCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set__scoreMultiplierCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "_scoreMultiplierCounter", value));
}
// Autogenerated method: ScoreModel..cctor
void GlobalNamespace::ScoreModel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ScoreModel.GetNoteScoreDefinition
::GlobalNamespace::ScoreModel::NoteScoreDefinition* GlobalNamespace::ScoreModel::GetNoteScoreDefinition(::GlobalNamespace::NoteData::ScoringType scoringType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::GetNoteScoreDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "GetNoteScoreDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoringType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScoreModel::NoteScoreDefinition*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scoringType);
}
// Autogenerated method: ScoreModel.ComputeMaxMultipliedScoreForBeatmap
int GlobalNamespace::ScoreModel::ComputeMaxMultipliedScoreForBeatmap(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::ComputeMaxMultipliedScoreForBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "ComputeMaxMultipliedScoreForBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: ScoreModel.GetModifiedScoreForGameplayModifiersScoreMultiplier
int GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier(int multipliedScore, float gameplayModifiersScoreMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "GetModifiedScoreForGameplayModifiersScoreMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(gameplayModifiersScoreMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multipliedScore, gameplayModifiersScoreMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxCenterDistanceCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxCenterDistanceCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxCenterDistanceCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCenterDistanceCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minBeforeCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minBeforeCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minBeforeCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxBeforeCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxBeforeCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBeforeCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minAfterCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minAfterCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAfterCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxAfterCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxAfterCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAfterCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 fixedCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_fixedCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_fixedCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScoreModel/NoteScoreDefinition.get_maxCutScore
int GlobalNamespace::ScoreModel::NoteScoreDefinition::get_maxCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::get_maxCutScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreModel/NoteScoreDefinition.get_executionOrder
int GlobalNamespace::ScoreModel::NoteScoreDefinition::get_executionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::get_executionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel/MaxScoreCounterElement
#include "GlobalNamespace/ScoreModel_MaxScoreCounterElement.hpp"
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScoreModel/NoteScoreDefinition noteScoreDefinition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScoreModel::NoteScoreDefinition*& GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_noteScoreDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_noteScoreDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteScoreDefinition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScoreModel::NoteScoreDefinition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScoreModel/MaxScoreCounterElement.CompareTo
int GlobalNamespace::ScoreModel::MaxScoreCounterElement::CompareTo(::GlobalNamespace::ScoreModel::MaxScoreCounterElement* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelLoader
#include "GlobalNamespace/StandardLevelLoader.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelLoader.LoadStandardLevelSaveData
::GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData(::StringW levelInfoFilenamePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelLoader", "LoadStandardLevelSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelInfoFilenamePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelInfoFilenamePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersValueSOOffsets
#include "GlobalNamespace/VRControllersValueSOOffsets.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _positionOffset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::VRControllersValueSOOffsets::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _rotationOffset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::VRControllersValueSOOffsets::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirror
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersValueSOOffsets::dyn__mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersValueSOOffsets.get_positionOffset
::UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersValueSOOffsets.get_rotationOffset
::UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VersionSaveData
#include "GlobalNamespace/VersionSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String version
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VersionSaveData::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VersionSaveData::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseResultsEnvironmentController.Activate
void GlobalNamespace::BaseResultsEnvironmentController::Activate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Deactivate
void GlobalNamespace::BaseResultsEnvironmentController::Deactivate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Setup
void GlobalNamespace::BaseResultsEnvironmentController::Setup(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Setup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentBrandingManager
#include "GlobalNamespace/EnvironmentBrandingManager.hpp"
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _brandingObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnvironmentBrandingManager::dyn__brandingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__brandingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brandingObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _replacementBrandingObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnvironmentBrandingManager::dyn__replacementBrandingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__replacementBrandingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replacementBrandingObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentBrandingManager/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentBrandingManager::InitData*& GlobalNamespace::EnvironmentBrandingManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentBrandingManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentBrandingManager.Start
void GlobalNamespace::EnvironmentBrandingManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hideBranding
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EnvironmentBrandingManager::InitData::dyn_hideBranding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::InitData::dyn_hideBranding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hideBranding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentObjects[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects*>& GlobalNamespace::MenuEnvironmentManager::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentType _prevMenuEnvironmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType& GlobalNamespace::MenuEnvironmentManager::dyn__prevMenuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::dyn__prevMenuEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMenuEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuEnvironmentManager.Start
void GlobalNamespace::MenuEnvironmentManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager.ShowEnvironmentType
void GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType menuEnvironmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowEnvironmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuEnvironmentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuEnvironmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentType
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType None
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType None
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentType _menuEnvironmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__menuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__menuEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapper
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__wrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_menuEnvironmentType
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuEnvironmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_wrapper
::UnityEngine::GameObject* GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuNeonLightsGenerator
#include "GlobalNamespace/MenuNeonLightsGenerator.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _generate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MenuNeonLightsGenerator::dyn__generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__generate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MenuNeonLightsGenerator::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _angle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MenuNeonLightsGenerator::dyn__angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MenuNeonLightsGenerator::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _intensityCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensityCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensityMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lengthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lengthMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _widthCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__widthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_widthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _widthMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MenuNeonLightsGenerator::dyn__widthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__widthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_widthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _neonLightPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::MenuNeonLightsGenerator::dyn__neonLightPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__neonLightPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_neonLightPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterSpawnRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MenuNeonLightsGenerator::dyn__afterSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__afterSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterSpawnRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OffsetByBeatmapObjectSpawnCenter
#include "GlobalNamespace/OffsetByBeatmapObjectSpawnCenter.hpp"
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnCenter _spawnCenter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectSpawnCenter*& GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::dyn__spawnCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::dyn__spawnCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnCenter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.Start
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.HandleSpawnCenterDistanceWasFound
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnCenterDistanceWasFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager
#include "GlobalNamespace/ResultsEnvironmentManager.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword[] _resultEnvironmentControllersWithKeyword
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword*>& GlobalNamespace::ResultsEnvironmentManager::dyn__resultEnvironmentControllersWithKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::dyn__resultEnvironmentControllersWithKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultEnvironmentControllersWithKeyword"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _currentShownKeyword
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ResultsEnvironmentManager::dyn__currentShownKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::dyn__currentShownKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentShownKeyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager.GetResultEnvironmentControllerForKeyword
::GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword(::StringW keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultEnvironmentControllerForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method, keyword);
}
// Autogenerated method: ResultsEnvironmentManager.ShowResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword(::StringW keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowResultForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated method: ResultsEnvironmentManager.HideResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword(::StringW keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideResultForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _keyword
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BaseResultsEnvironmentController _resultsEnvironmentController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BaseResultsEnvironmentController*& GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__resultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__resultsEnvironmentController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsEnvironmentController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BaseResultsEnvironmentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_keyword
::StringW GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_resultsEnvironmentController
::GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String keyword
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::dyn_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::dyn_keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager/<>c__DisplayClass3_0.<GetResultEnvironmentControllerForKeyword>b__0
bool GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::$GetResultEnvironmentControllerForKeyword$b__0(::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword* controllerWithKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::<GetResultEnvironmentControllerForKeyword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetResultEnvironmentControllerForKeyword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerWithKeyword)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, controllerWithKeyword);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _tubeBloomPrePassLight
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::BeatLine::dyn__tubeBloomPrePassLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__tubeBloomPrePassLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeBloomPrePassLight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _arriveFadeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::BeatLine::dyn__arriveFadeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__arriveFadeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arriveFadeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _jumpFadeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::BeatLine::dyn__jumpFadeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__jumpFadeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpFadeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaMul
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLine::dyn__alphaMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__alphaMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAlpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLine::dyn__maxAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__maxAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatLine/HighlightData> _highlights
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatLine::HighlightData>*& GlobalNamespace::BeatLine::dyn__highlights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__highlights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlights"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatLine::HighlightData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BeatLine::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLine::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatLine.get_isFinished
bool GlobalNamespace::BeatLine::get_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::get_isFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.get_rotation
float GlobalNamespace::BeatLine::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.Init
void GlobalNamespace::BeatLine::Init(::UnityEngine::Vector3 position, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: BeatLine.AddHighlight
void GlobalNamespace::BeatLine::AddHighlight(float startTime, float arriveDuration, float jumpDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::AddHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(arriveDuration), ::il2cpp_utils::ExtractType(jumpDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTime, arriveDuration, jumpDuration);
}
// Autogenerated method: BeatLine.ManualUpdate
void GlobalNamespace::BeatLine::ManualUpdate(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: BeatLine.ColorWasSet
void GlobalNamespace::BeatLine::ColorWasSet(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _linesYPosition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLineManager::dyn__linesYPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__linesYPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linesYPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectManager _beatmapObjectManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BeatLineManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatLine/Pool _beatLinePool
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatLine::Pool*& GlobalNamespace::BeatLineManager::dyn__beatLinePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__beatLinePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLinePool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatLine::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BeatLineManager::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Vector4,BeatLine> _activeBeatLines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Vector4, ::GlobalNamespace::BeatLine*>*& GlobalNamespace::BeatLineManager::dyn__activeBeatLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__activeBeatLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeBeatLines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Vector4, ::GlobalNamespace::BeatLine*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector4> _removeBeatLineKeyList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& GlobalNamespace::BeatLineManager::dyn__removeBeatLineKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__removeBeatLineKeyList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removeBeatLineKeyList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMidRotationValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatLineManager::dyn__isMidRotationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__isMidRotationValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMidRotationValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _midRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLineManager::dyn__midRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__midRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_midRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatLineManager::dyn__rotationRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__rotationRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatLineManager.get_isMidRotationValid
bool GlobalNamespace::BeatLineManager::get_isMidRotationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_isMidRotationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMidRotationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_midRotation
float GlobalNamespace::BeatLineManager::get_midRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_midRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_midRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_rotationRange
float GlobalNamespace::BeatLineManager::get_rotationRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_rotationRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Start
void GlobalNamespace::BeatLineManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.OnDestroy
void GlobalNamespace::BeatLineManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Update
void GlobalNamespace::BeatLineManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.HandleNoteWasSpawned
void GlobalNamespace::BeatLineManager::HandleNoteWasSpawned(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
