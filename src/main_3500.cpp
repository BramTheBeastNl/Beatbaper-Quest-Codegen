// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: AvatarDataFileManagerSO
#include "GlobalNamespace/AvatarDataFileManagerSO.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarDataFileManagerSO _avatarDataFileManager
::GlobalNamespace::AvatarDataFileManagerSO*& GlobalNamespace::AvatarDataModel::dyn__avatarDataFileManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn__avatarDataFileManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataFileManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataFileManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
::GlobalNamespace::AvatarPartsModel*& GlobalNamespace::AvatarDataModel::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarData <avatarData>k__BackingField
::GlobalNamespace::AvatarData*& GlobalNamespace::AvatarDataModel::dyn_$avatarData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::dyn_$avatarData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<avatarData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarDataModel.get_avatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataModel::get_avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::get_avatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.set_avatarData
void GlobalNamespace::AvatarDataModel::set_avatarData(::GlobalNamespace::AvatarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::set_avatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AvatarDataModel.OnEnable
void GlobalNamespace::AvatarDataModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Randomize
void GlobalNamespace::AvatarDataModel::Randomize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Randomize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Randomize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Save
void GlobalNamespace::AvatarDataModel::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.Load
void GlobalNamespace::AvatarDataModel::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AvatarDataModel.CreateDefaultAvatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataModel::CreateDefaultAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataModel::CreateDefaultAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarDataMultiplayerAvatarDataConverter
#include "GlobalNamespace/AvatarDataMultiplayerAvatarDataConverter.hpp"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarDataMultiplayerAvatarDataConverter.CreateMultiplayerAvatarData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateMultiplayerAvatarData(::GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateMultiplayerAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarDataMultiplayerAvatarDataConverter", "CreateMultiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, avatarData);
}
// Autogenerated method: AvatarDataMultiplayerAvatarDataConverter.CreateAvatarData
::GlobalNamespace::AvatarData* GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateAvatarData(::GlobalNamespace::MultiplayerAvatarData multiplayerAvatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarDataMultiplayerAvatarDataConverter::CreateAvatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarDataMultiplayerAvatarDataConverter", "CreateAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerAvatarData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multiplayerAvatarData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarMeshPartSO.get_mesh
::UnityEngine::Mesh* GlobalNamespace::AvatarMeshPartSO::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarMeshPartSO::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: AvatarPartCollection`1
#include "GlobalNamespace/AvatarPartCollection_1.hpp"
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <headTopCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$headTopCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$headTopCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headTopCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarSpritePartSO> <eyesCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$eyesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$eyesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<eyesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarSpritePartSO> <mouthCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$mouthCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$mouthCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<mouthCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <glassesCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$glassesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$glassesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<glassesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <facialHairCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$facialHairCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$facialHairCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<facialHairCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <handsCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$handsCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$handsCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handsCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartCollection`1<AvatarMeshPartSO> <clothesCollection>k__BackingField
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*& GlobalNamespace::AvatarPartsModel::dyn_$clothesCollection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$clothesCollection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<clothesCollection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SkinColorSO[] <skinColors>k__BackingField
::ArrayW<::GlobalNamespace::SkinColorSO*>& GlobalNamespace::AvatarPartsModel::dyn_$skinColors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn_$skinColors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<skinColors>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SkinColorSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.Int32> _indexById
::System::Collections::Generic::Dictionary_2<::StringW, int>*& GlobalNamespace::AvatarPartsModel::dyn__indexById() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::dyn__indexById");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indexById"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPartsModel.get_headTopCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_headTopCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_headTopCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTopCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_eyesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>* GlobalNamespace::AvatarPartsModel::get_eyesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_eyesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eyesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_mouthCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>* GlobalNamespace::AvatarPartsModel::get_mouthCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_mouthCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mouthCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarSpritePartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_glassesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_glassesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_glassesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glassesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_facialHairCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_facialHairCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_facialHairCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_facialHairCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_handsCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_handsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_handsCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handsCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_clothesCollection
::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>* GlobalNamespace::AvatarPartsModel::get_clothesCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_clothesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clothesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AvatarPartCollection_1<::GlobalNamespace::AvatarMeshPartSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.get_skinColors
::ArrayW<::GlobalNamespace::SkinColorSO*> GlobalNamespace::AvatarPartsModel::get_skinColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::get_skinColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_skinColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SkinColorSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModel.GetColorIndexById
int GlobalNamespace::AvatarPartsModel::GetColorIndexById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetColorIndexById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorIndexById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, id);
}
// Autogenerated method: AvatarPartsModel.GetSkinColorById
::GlobalNamespace::SkinColorSO* GlobalNamespace::AvatarPartsModel::GetSkinColorById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetSkinColorById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSkinColorById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SkinColorSO*, false>(this, ___internal__method, id);
}
// Autogenerated method: AvatarPartsModel.GetRandomColor
::GlobalNamespace::SkinColorSO* GlobalNamespace::AvatarPartsModel::GetRandomColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModel::GetRandomColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRandomColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SkinColorSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPartsModelSO
#include "GlobalNamespace/AvatarPartsModelSO.hpp"
// Including type: AvatarMeshPartSO
#include "GlobalNamespace/AvatarMeshPartSO.hpp"
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _headTops
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__headTops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__headTops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTops"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarSpritePartSO[] _eyes
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__eyes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarSpritePartSO[] _mouths
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__mouths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__mouths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouths"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _glasses
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__glasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__glasses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glasses"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _facialHair
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__facialHair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__facialHair");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHair"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _hands
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__hands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hands"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarMeshPartSO[] _clothes
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>& GlobalNamespace::AvatarPartsModelSO::dyn__clothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::dyn__clothes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPartsModelSO.get_headTops
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_headTops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_headTops");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headTops", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Eyes
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*> GlobalNamespace::AvatarPartsModelSO::get_Eyes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Eyes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eyes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Mouths
::ArrayW<::GlobalNamespace::AvatarSpritePartSO*> GlobalNamespace::AvatarPartsModelSO::get_Mouths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Mouths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mouths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarSpritePartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Glasses
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Glasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Glasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Glasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_FacialHair
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_FacialHair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_FacialHair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FacialHair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Hands
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Hands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Hands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AvatarPartsModelSO.get_Clothes
::ArrayW<::GlobalNamespace::AvatarMeshPartSO*> GlobalNamespace::AvatarPartsModelSO::get_Clothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarPartsModelSO::get_Clothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Clothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::AvatarMeshPartSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarSaveData
#include "GlobalNamespace/AvatarSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String headTopId
::StringW& GlobalNamespace::AvatarSaveData::dyn_headTopId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String glassesId
::StringW& GlobalNamespace::AvatarSaveData::dyn_glassesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_glassesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String facialHairId
::StringW& GlobalNamespace::AvatarSaveData::dyn_facialHairId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_facialHairId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String handsId
::StringW& GlobalNamespace::AvatarSaveData::dyn_handsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_handsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String clothesId
::StringW& GlobalNamespace::AvatarSaveData::dyn_clothesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String skinColorId
::StringW& GlobalNamespace::AvatarSaveData::dyn_skinColorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_skinColorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinColorId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String mouthId
::StringW& GlobalNamespace::AvatarSaveData::dyn_mouthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_mouthId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mouthId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String eyesId
::StringW& GlobalNamespace::AvatarSaveData::dyn_eyesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_eyesId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color headTopPrimaryColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_headTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopPrimaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color headTopSecondaryColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_headTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_headTopSecondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color glassesColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_glassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_glassesColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color facialHairColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_facialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_facialHairColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color handsColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_handsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_handsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesPrimaryColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesPrimaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesSecondaryColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesSecondaryColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color clothesDetailColor
::UnityEngine::Color& GlobalNamespace::AvatarSaveData::dyn_clothesDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSaveData::dyn_clothesDetailColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesDetailColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarSpritePartSO
#include "GlobalNamespace/AvatarSpritePartSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarSpritePartSO.get_sprite
::UnityEngine::Sprite* GlobalNamespace::AvatarSpritePartSO::get_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarSpritePartSO::get_sprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAvatarPart
#include "GlobalNamespace/IAvatarPart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAvatarPart.get_id
::StringW GlobalNamespace::IAvatarPart::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAvatarPart::get_id");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IAvatarPart.get_localizedName
::StringW GlobalNamespace::IAvatarPart::get_localizedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAvatarPart::get_localizedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _id
::StringW& GlobalNamespace::SkinColorSO::dyn__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::dyn__id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::SkinColorSO::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SkinColorSO.get_id
::StringW GlobalNamespace::SkinColorSO::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SkinColorSO.get_Color
::UnityEngine::Color GlobalNamespace::SkinColorSO::get_Color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSO::get_Color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SkinColorSetSO
#include "GlobalNamespace/SkinColorSetSO.hpp"
// Including type: SkinColorSO
#include "GlobalNamespace/SkinColorSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SkinColorSO[] _colors
::ArrayW<::GlobalNamespace::SkinColorSO*>& GlobalNamespace::SkinColorSetSO::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSetSO::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SkinColorSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SkinColorSetSO.get_colors
::ArrayW<::GlobalNamespace::SkinColorSO*> GlobalNamespace::SkinColorSetSO::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SkinColorSetSO::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SkinColorSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDelayBeforeStart
float GlobalNamespace::PracticeSettings::_get_kDelayBeforeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::_get_kDelayBeforeStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeSettings", "kDelayBeforeStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDelayBeforeStart
void GlobalNamespace::PracticeSettings::_set_kDelayBeforeStart(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::_set_kDelayBeforeStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeSettings", "kDelayBeforeStart", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startSongTime
float& GlobalNamespace::PracticeSettings::dyn__startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songSpeedMul
float& GlobalNamespace::PracticeSettings::dyn__songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__songSpeedMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songSpeedMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startInAdvanceAndClearNotes
bool& GlobalNamespace::PracticeSettings::dyn__startInAdvanceAndClearNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::dyn__startInAdvanceAndClearNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startInAdvanceAndClearNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PracticeSettings.get_startSongTime
float GlobalNamespace::PracticeSettings::get_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_startSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_startSongTime
void GlobalNamespace::PracticeSettings::set_startSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_startSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_songSpeedMul
float GlobalNamespace::PracticeSettings::get_songSpeedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_songSpeedMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songSpeedMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_songSpeedMul
void GlobalNamespace::PracticeSettings::set_songSpeedMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_songSpeedMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_songSpeedMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_startInAdvanceAndClearNotes
bool GlobalNamespace::PracticeSettings::get_startInAdvanceAndClearNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_startInAdvanceAndClearNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startInAdvanceAndClearNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PracticeSettings.set_startInAdvanceAndClearNotes
void GlobalNamespace::PracticeSettings::set_startInAdvanceAndClearNotes(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::set_startInAdvanceAndClearNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startInAdvanceAndClearNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeSettings.get_defaultPracticeSettings
::GlobalNamespace::PracticeSettings* GlobalNamespace::PracticeSettings::get_defaultPracticeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::get_defaultPracticeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PracticeSettings", "get_defaultPracticeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PracticeSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PracticeSettings.ResetToDefault
void GlobalNamespace::PracticeSettings::ResetToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PracticeSettings::ResetToDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetToDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModelHelper
#include "GlobalNamespace/RankModelHelper.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RankModelHelper.MaxRankForGameplayModifiers
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers, ::GlobalNamespace::GameplayModifiersModelSO* gameplayModifiersModel, float energy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModelHelper::MaxRankForGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RankModelHelper", "MaxRankForGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(gameplayModifiersModel), ::il2cpp_utils::ExtractType(energy)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RankModel::Rank, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameplayModifiers, gameplayModifiersModel, energy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeSfxVolumePerLevelSO
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO.hpp"
// Including type: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO_RelativeSfxVolumePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair[] _relativeSfxVolumePerLevel
::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>& GlobalNamespace::RelativeSfxVolumePerLevelSO::dyn__relativeSfxVolumePerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::dyn__relativeSfxVolumePerLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevel"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO.get_relativeSfxVolumePerLevel
::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*> GlobalNamespace::RelativeSfxVolumePerLevelSO::get_relativeSfxVolumePerLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::get_relativeSfxVolumePerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeSfxVolumePerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair
#include "GlobalNamespace/RelativeSfxVolumePerLevelSO_RelativeSfxVolumePair.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelSO _previewLevel
::GlobalNamespace::PreviewBeatmapLevelSO*& GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__previewLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__previewLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _relativeSfxVolume
float& GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__relativeSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::dyn__relativeSfxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair.get_levelId
::StringW GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_levelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RelativeSfxVolumePerLevelSO/RelativeSfxVolumePair.get_relativeSfxVolume
float GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_relativeSfxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RelativeSfxVolumePerLevelSO::RelativeSfxVolumePair::get_relativeSfxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_relativeSfxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetLocalLeaderboardOnKey
#include "GlobalNamespace/ResetLocalLeaderboardOnKey.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalLeaderboardsModel _localLeaderboardsModel
::GlobalNamespace::LocalLeaderboardsModel*& GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__localLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__localLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.KeyCode _keyCode
::UnityEngine::KeyCode& GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__keyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::dyn__keyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyCode"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResetLocalLeaderboardOnKey.Update
void GlobalNamespace::ResetLocalLeaderboardOnKey::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResetLocalLeaderboardOnKey::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMultiplayerRichPresenceData
#include "GlobalNamespace/IMultiplayerRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerRichPresenceData.get_multiplayerSecret
::StringW GlobalNamespace::IMultiplayerRichPresenceData::get_multiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_multiplayerSecret
void GlobalNamespace::IMultiplayerRichPresenceData::set_multiplayerSecret(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_atMaxPartySize
bool GlobalNamespace::IMultiplayerRichPresenceData::get_atMaxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_atMaxPartySize
void GlobalNamespace::IMultiplayerRichPresenceData::set_atMaxPartySize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_canInvite
bool GlobalNamespace::IMultiplayerRichPresenceData::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerRichPresenceData.set_canInvite
void GlobalNamespace::IMultiplayerRichPresenceData::set_canInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::set_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerRichPresenceData.get_isJoinable
bool GlobalNamespace::IMultiplayerRichPresenceData::get_isJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerRichPresenceData::get_isJoinable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InMultiplayerRichPresenceData
#include "GlobalNamespace/InMultiplayerRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B4290
// Autogenerated static field getter
// Get static field: static private System.String kInMultiplayerLobbyRichPresenceLocalizationKey
::StringW GlobalNamespace::InMultiplayerRichPresenceData::_get_kInMultiplayerLobbyRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::_get_kInMultiplayerLobbyRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "InMultiplayerRichPresenceData", "kInMultiplayerLobbyRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInMultiplayerLobbyRichPresenceLocalizationKey
void GlobalNamespace::InMultiplayerRichPresenceData::_set_kInMultiplayerLobbyRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::_set_kInMultiplayerLobbyRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InMultiplayerRichPresenceData", "kInMultiplayerLobbyRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <apiName>k__BackingField
::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$apiName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$apiName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<apiName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <multiplayerSecret>k__BackingField
::StringW& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$multiplayerSecret$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$multiplayerSecret$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerSecret>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <atMaxPartySize>k__BackingField
bool& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$atMaxPartySize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$atMaxPartySize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<atMaxPartySize>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <canInvite>k__BackingField
bool& GlobalNamespace::InMultiplayerRichPresenceData::dyn_$canInvite$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::dyn_$canInvite$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<canInvite>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_apiName
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_apiName
void GlobalNamespace::InMultiplayerRichPresenceData::set_apiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_apiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_localizedDescription
void GlobalNamespace::InMultiplayerRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_multiplayerSecret
::StringW GlobalNamespace::InMultiplayerRichPresenceData::get_multiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_multiplayerSecret
void GlobalNamespace::InMultiplayerRichPresenceData::set_multiplayerSecret(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_multiplayerSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_atMaxPartySize
bool GlobalNamespace::InMultiplayerRichPresenceData::get_atMaxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_atMaxPartySize
void GlobalNamespace::InMultiplayerRichPresenceData::set_atMaxPartySize(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_atMaxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atMaxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_canInvite
bool GlobalNamespace::InMultiplayerRichPresenceData::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: InMultiplayerRichPresenceData.set_canInvite
void GlobalNamespace::InMultiplayerRichPresenceData::set_canInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::set_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: InMultiplayerRichPresenceData.get_isJoinable
bool GlobalNamespace::InMultiplayerRichPresenceData::get_isJoinable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InMultiplayerRichPresenceData::get_isJoinable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isJoinable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingMultiplayerRichPresenceData
#include "GlobalNamespace/PlayingMultiplayerRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B42A0
// Autogenerated static field getter
// Get static field: static private System.String kPlayingMultiplayerLobbyRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingMultiplayerRichPresenceData::_get_kPlayingMultiplayerLobbyRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingMultiplayerRichPresenceData::_get_kPlayingMultiplayerLobbyRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingMultiplayerRichPresenceData", "kPlayingMultiplayerLobbyRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingMultiplayerLobbyRichPresenceLocalizationKey
void GlobalNamespace::PlayingMultiplayerRichPresenceData::_set_kPlayingMultiplayerLobbyRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingMultiplayerRichPresenceData::_set_kPlayingMultiplayerLobbyRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingMultiplayerRichPresenceData", "kPlayingMultiplayerLobbyRichPresenceLocalizationKey", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusRichPresencePlatformHandler
#include "GlobalNamespace/OculusRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusRichPresencePlatformHandler.SetPresence
void GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: OculusRichPresencePlatformHandler.Clear
void GlobalNamespace::OculusRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresenceData.get_apiName
::StringW GlobalNamespace::IRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::IRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B42C0
// Autogenerated static field getter
// Get static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::_get_kBrowsingMenusRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBrowsingMenusRichPresenceLocalizationKey
void GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::_set_kBrowsingMenusRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BrowsingMenusRichPresenceData", "kBrowsingMenusRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
::StringW& GlobalNamespace::BrowsingMenusRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_apiName
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BrowsingMenusRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BrowsingMenusRichPresenceData.set_localizedDescription
void GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BrowsingMenusRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B42E0
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingCampaignRichPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
::StringW& GlobalNamespace::PlayingCampaignRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_apiName
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingCampaignRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingCampaignRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingCampaignRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10B4300
// Autogenerated static field getter
// Get static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
::StringW GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::_get_kPlayingCampaignRichPresenceLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayingCampaignRichPresenceLocalizationKey
void GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::_set_kPlayingCampaignRichPresenceLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlayingTutorialPresenceData", "kPlayingCampaignRichPresenceLocalizationKey", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
::StringW& GlobalNamespace::PlayingTutorialPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingTutorialPresenceData.get_apiName
::StringW GlobalNamespace::PlayingTutorialPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingTutorialPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingTutorialPresenceData.set_localizedDescription
void GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingTutorialPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayingDifficultyBeatmapRichPresenceData
#include "GlobalNamespace/PlayingDifficultyBeatmapRichPresenceData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <apiName>k__BackingField
::StringW& GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$apiName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$apiName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<apiName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <localizedDescription>k__BackingField
::StringW& GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$localizedDescription$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::dyn_$localizedDescription$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<localizedDescription>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_apiName
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_apiName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_apiName
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_apiName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_apiName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.get_localizedDescription
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::get_localizedDescription");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.set_localizedDescription
void GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::set_localizedDescription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localizedDescription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayingDifficultyBeatmapRichPresenceData.GetDestinationLocalizedString
::StringW GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayingDifficultyBeatmapRichPresenceData::GetDestinationLocalizedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayingDifficultyBeatmapRichPresenceData", "GetDestinationLocalizedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RichPresenceManager
#include "GlobalNamespace/RichPresenceManager.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: BrowsingMenusRichPresenceData
#include "GlobalNamespace/BrowsingMenusRichPresenceData.hpp"
// Including type: InMultiplayerRichPresenceData
#include "GlobalNamespace/InMultiplayerRichPresenceData.hpp"
// Including type: PlayingCampaignRichPresenceData
#include "GlobalNamespace/PlayingCampaignRichPresenceData.hpp"
// Including type: PlayingTutorialPresenceData
#include "GlobalNamespace/PlayingTutorialPresenceData.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
// Including type: MultiplayerGameState
#include "GlobalNamespace/MultiplayerGameState.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private StandardLevelScenesTransitionSetupDataSO _standardLevelScenesTransitionSetupData
::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__standardLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__standardLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ScenesTransitionSetupDataSO _tutorialScenesTransitionSetupData
::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__tutorialScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__tutorialScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionLevelScenesTransitionSetupDataSO _missionLevelScenesTransitionSetupData
::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__missionLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__missionLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLevelScenesTransitionSetupDataSO _multiplayerLevelScenesTransitionSetupData
::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__multiplayerLevelScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__multiplayerLevelScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuScenesTransitionSetupDataSO _menuScenesTransitionSetupData
::GlobalNamespace::MenuScenesTransitionSetupDataSO*& GlobalNamespace::RichPresenceManager::dyn__menuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__menuScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IRichPresencePlatformHandler _richPresencePlatformHandler
::GlobalNamespace::IRichPresencePlatformHandler*& GlobalNamespace::RichPresenceManager::dyn__richPresencePlatformHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__richPresencePlatformHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_richPresencePlatformHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IRichPresencePlatformHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::RichPresenceManager::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
::GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::RichPresenceManager::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::RichPresenceManager::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::RichPresenceManager::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _menuWasLoaded
bool& GlobalNamespace::RichPresenceManager::dyn__menuWasLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__menuWasLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuWasLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInMultiplayerLobby
bool& GlobalNamespace::RichPresenceManager::dyn__isInMultiplayerLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__isInMultiplayerLobby");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInMultiplayerLobby"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BrowsingMenusRichPresenceData _browsingMenusRichPresenceData
::GlobalNamespace::BrowsingMenusRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__browsingMenusRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__browsingMenusRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_browsingMenusRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BrowsingMenusRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private InMultiplayerRichPresenceData _inMultiplayerRichPresenceData
::GlobalNamespace::InMultiplayerRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__inMultiplayerRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__inMultiplayerRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inMultiplayerRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InMultiplayerRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayingCampaignRichPresenceData _playingCampaignRichPresenceData
::GlobalNamespace::PlayingCampaignRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__playingCampaignRichPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__playingCampaignRichPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingCampaignRichPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayingCampaignRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayingTutorialPresenceData _playingTutorialPresenceData
::GlobalNamespace::PlayingTutorialPresenceData*& GlobalNamespace::RichPresenceManager::dyn__playingTutorialPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__playingTutorialPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playingTutorialPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayingTutorialPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IRichPresenceData _currentPresenceData
::GlobalNamespace::IRichPresenceData*& GlobalNamespace::RichPresenceManager::dyn__currentPresenceData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::dyn__currentPresenceData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPresenceData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IRichPresenceData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RichPresenceManager.Awake
void GlobalNamespace::RichPresenceManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.OnDestroy
void GlobalNamespace::RichPresenceManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.HandleLobbyGameStateModelDidChange
void GlobalNamespace::RichPresenceManager::HandleLobbyGameStateModelDidChange(::GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleLobbyGameStateModelDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateModelDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: RichPresenceManager.SetMenuPresence
void GlobalNamespace::RichPresenceManager::SetMenuPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::SetMenuPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMenuPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.HandleGameScenesManagerTransitionDidFinish
void GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* diContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleGameScenesManagerTransitionDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerTransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(diContainer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, diContainer);
}
// Autogenerated method: RichPresenceManager.HandleMultiplayerPartySizeChanged
void GlobalNamespace::RichPresenceManager::HandleMultiplayerPartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleMultiplayerPartySizeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerPartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: RichPresenceManager.HandleLobbyPlayerPermissionChanged
void GlobalNamespace::RichPresenceManager::HandleLobbyPlayerPermissionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::HandleLobbyPlayerPermissionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayerPermissionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RichPresenceManager.SetPresence
void GlobalNamespace::RichPresenceManager::SetPresence(::GlobalNamespace::IRichPresenceData* presenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::SetPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(presenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, presenceData);
}
// Autogenerated method: RichPresenceManager.Clear
void GlobalNamespace::RichPresenceManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RichPresenceManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRichPresencePlatformHandler
#include "GlobalNamespace/IRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRichPresencePlatformHandler.SetPresence
void GlobalNamespace::IRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: IRichPresencePlatformHandler.Clear
void GlobalNamespace::IRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestRichPresencePlatformHandler
#include "GlobalNamespace/TestRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestRichPresencePlatformHandler.SetPresence
void GlobalNamespace::TestRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: TestRichPresencePlatformHandler.Clear
void GlobalNamespace::TestRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamRichPresencePlatformHandler
#include "GlobalNamespace/SteamRichPresencePlatformHandler.hpp"
// Including type: IRichPresenceData
#include "GlobalNamespace/IRichPresenceData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SteamRichPresencePlatformHandler.SetPresence
void GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence(::GlobalNamespace::IRichPresenceData* richPresenceData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamRichPresencePlatformHandler::SetPresence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(richPresenceData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, richPresenceData);
}
// Autogenerated method: SteamRichPresencePlatformHandler.Clear
void GlobalNamespace::SteamRichPresencePlatformHandler::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamRichPresencePlatformHandler::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel
#include "GlobalNamespace/ScoreModel.hpp"
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
// Including type: ScoreModel/MaxScoreCounterElement
#include "GlobalNamespace/ScoreModel_MaxScoreCounterElement.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ScoreMultiplierCounter
#include "GlobalNamespace/ScoreMultiplierCounter.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxMultiplier
int GlobalNamespace::ScoreModel::_get_kMaxMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxMultiplier
void GlobalNamespace::ScoreModel::_set_kMaxMultiplier(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kMaxDistanceForDistanceToCenterScore
float GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxDistanceForDistanceToCenterScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMaxDistanceForDistanceToCenterScore
void GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxDistanceForDistanceToCenterScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxDistanceForDistanceToCenterScore", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B43D0
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Generic.HashSet`1<NoteData/ScoringType> fullScoreScoringTypes
::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>* GlobalNamespace::ScoreModel::_get_fullScoreScoringTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_fullScoreScoringTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>*>("", "ScoreModel", "fullScoreScoringTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Generic.HashSet`1<NoteData/ScoringType> fullScoreScoringTypes
void GlobalNamespace::ScoreModel::_set_fullScoreScoringTypes(::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData::ScoringType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_fullScoreScoringTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "fullScoreScoringTypes", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B43E0
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<NoteData/ScoringType,ScoreModel/NoteScoreDefinition> _scoreDefinitions
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>* GlobalNamespace::ScoreModel::_get__scoreDefinitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get__scoreDefinitions");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>*>("", "ScoreModel", "_scoreDefinitions")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<NoteData/ScoringType,ScoreModel/NoteScoreDefinition> _scoreDefinitions
void GlobalNamespace::ScoreModel::_set__scoreDefinitions(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::NoteData::ScoringType, ::GlobalNamespace::ScoreModel::NoteScoreDefinition*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set__scoreDefinitions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "_scoreDefinitions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxBeforeCutScore
int GlobalNamespace::ScoreModel::_get_kMaxBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxBeforeCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxBeforeCutScore"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxBeforeCutScore
void GlobalNamespace::ScoreModel::_set_kMaxBeforeCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxBeforeCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxBeforeCutScore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxCenterDistanceCutScore
int GlobalNamespace::ScoreModel::_get_kMaxCenterDistanceCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxCenterDistanceCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxCenterDistanceCutScore"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxCenterDistanceCutScore
void GlobalNamespace::ScoreModel::_set_kMaxCenterDistanceCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxCenterDistanceCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxCenterDistanceCutScore", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxAfterCutScore
int GlobalNamespace::ScoreModel::_get_kMaxAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get_kMaxAfterCutScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ScoreModel", "kMaxAfterCutScore"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxAfterCutScore
void GlobalNamespace::ScoreModel::_set_kMaxAfterCutScore(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set_kMaxAfterCutScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "kMaxAfterCutScore", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B43F0
// Autogenerated static field getter
// Get static field: static private readonly ScoreMultiplierCounter _scoreMultiplierCounter
::GlobalNamespace::ScoreMultiplierCounter* GlobalNamespace::ScoreModel::_get__scoreMultiplierCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_get__scoreMultiplierCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ScoreMultiplierCounter*>("", "ScoreModel", "_scoreMultiplierCounter"));
}
// Autogenerated static field setter
// Set static field: static private readonly ScoreMultiplierCounter _scoreMultiplierCounter
void GlobalNamespace::ScoreModel::_set__scoreMultiplierCounter(::GlobalNamespace::ScoreMultiplierCounter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::_set__scoreMultiplierCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ScoreModel", "_scoreMultiplierCounter", value));
}
// Autogenerated method: ScoreModel..cctor
void GlobalNamespace::ScoreModel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ScoreModel.GetNoteScoreDefinition
::GlobalNamespace::ScoreModel::NoteScoreDefinition* GlobalNamespace::ScoreModel::GetNoteScoreDefinition(::GlobalNamespace::NoteData::ScoringType scoringType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::GetNoteScoreDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "GetNoteScoreDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoringType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScoreModel::NoteScoreDefinition*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scoringType);
}
// Autogenerated method: ScoreModel.ComputeMaxMultipliedScoreForBeatmap
int GlobalNamespace::ScoreModel::ComputeMaxMultipliedScoreForBeatmap(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::ComputeMaxMultipliedScoreForBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "ComputeMaxMultipliedScoreForBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: ScoreModel.GetModifiedScoreForGameplayModifiersScoreMultiplier
int GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier(int multipliedScore, float gameplayModifiersScoreMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::GetModifiedScoreForGameplayModifiersScoreMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ScoreModel", "GetModifiedScoreForGameplayModifiersScoreMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(gameplayModifiersScoreMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multipliedScore, gameplayModifiersScoreMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxCenterDistanceCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxCenterDistanceCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxCenterDistanceCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCenterDistanceCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minBeforeCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minBeforeCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minBeforeCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxBeforeCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxBeforeCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxBeforeCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBeforeCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minAfterCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_minAfterCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAfterCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxAfterCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxAfterCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_maxAfterCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxAfterCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 fixedCutScore
int& GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_fixedCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::dyn_fixedCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fixedCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScoreModel/NoteScoreDefinition.get_maxCutScore
int GlobalNamespace::ScoreModel::NoteScoreDefinition::get_maxCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::get_maxCutScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreModel/NoteScoreDefinition.get_executionOrder
int GlobalNamespace::ScoreModel::NoteScoreDefinition::get_executionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::NoteScoreDefinition::get_executionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreModel/MaxScoreCounterElement
#include "GlobalNamespace/ScoreModel_MaxScoreCounterElement.hpp"
// Including type: ScoreModel/NoteScoreDefinition
#include "GlobalNamespace/ScoreModel_NoteScoreDefinition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScoreModel/NoteScoreDefinition noteScoreDefinition
::GlobalNamespace::ScoreModel::NoteScoreDefinition*& GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_noteScoreDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_noteScoreDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteScoreDefinition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScoreModel::NoteScoreDefinition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single time
float& GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScoreModel/MaxScoreCounterElement.CompareTo
int GlobalNamespace::ScoreModel::MaxScoreCounterElement::CompareTo(::GlobalNamespace::ScoreModel::MaxScoreCounterElement* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ScoreModel::MaxScoreCounterElement::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelLoader
#include "GlobalNamespace/StandardLevelLoader.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelLoader.LoadStandardLevelSaveData
::GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData(::StringW levelInfoFilenamePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelLoader::LoadStandardLevelSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StandardLevelLoader", "LoadStandardLevelSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelInfoFilenamePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelInfoFilenamePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerToolConfigurationProcessor
#include "GlobalNamespace/TrailerToolConfigurationProcessor.hpp"
// Including type: TrailerToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/TrailerToolConfigurationProcessor_PlaybackScreenshot.hpp"
// Including type: TrailerToolConfigurationProcessor/TrailerToolConfiguration
#include "GlobalNamespace/TrailerToolConfigurationProcessor_TrailerToolConfiguration.hpp"
// Including type: TrailerToolConfigurationProcessor/<>c__DisplayClass20_0
#include "GlobalNamespace/TrailerToolConfigurationProcessor_--c__DisplayClass20_0.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kSoloMode
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kSoloMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kSoloMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kSoloMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSoloMode
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kSoloMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kSoloMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kSoloMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kRecordRecordingMode
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kRecordRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kRecordRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kRecordRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kRecordRecordingMode
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kRecordRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kRecordRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kRecordRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kPlaybackRecordingMode
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kPlaybackRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kPlaybackRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kPlaybackRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlaybackRecordingMode
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kPlaybackRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kPlaybackRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kPlaybackRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFirstPersonCameraView
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kFirstPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kFirstPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kFirstPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstPersonCameraView
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kFirstPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kFirstPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kFirstPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kThirdPersonCameraView
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kThirdPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kThirdPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kThirdPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kThirdPersonCameraView
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kThirdPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kThirdPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kThirdPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentType
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentType
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentTypeSuffix
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentTypeSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentTypeSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentTypeSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentTypeSuffix
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentTypeSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentTypeSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentTypeSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentNameSuffix
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentNameSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentNameSuffix
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kNormalEnvironmentNameSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEverythingLayerMask
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kEverythingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kEverythingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kEverythingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEverythingLayerMask
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kEverythingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kEverythingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kEverythingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNothingLayerMask
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNothingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kNothingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kNothingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNothingLayerMask
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNothingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kNothingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kNothingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultMrcLayersMask
::StringW GlobalNamespace::TrailerToolConfigurationProcessor::_get_kDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_get_kDefaultMrcLayersMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "TrailerToolConfigurationProcessor", "kDefaultMrcLayersMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultMrcLayersMask
void GlobalNamespace::TrailerToolConfigurationProcessor::_set_kDefaultMrcLayersMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::_set_kDefaultMrcLayersMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TrailerToolConfigurationProcessor", "kDefaultMrcLayersMask", value));
}
// Autogenerated method: TrailerToolConfigurationProcessor.ApplyConfigurationFromCommandLineParameters
void GlobalNamespace::TrailerToolConfigurationProcessor::ApplyConfigurationFromCommandLineParameters(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::ApplyConfigurationFromCommandLineParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "ApplyConfigurationFromCommandLineParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, container);
}
// Autogenerated method: TrailerToolConfigurationProcessor.LoadConfigurationFile
::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration* GlobalNamespace::TrailerToolConfigurationProcessor::LoadConfigurationFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::LoadConfigurationFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "LoadConfigurationFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: TrailerToolConfigurationProcessor.ReadConfiguration
::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration* GlobalNamespace::TrailerToolConfigurationProcessor::ReadConfiguration(::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::ReadConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "ReadConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, args);
}
// Autogenerated method: TrailerToolConfigurationProcessor.GetDefaultMrcLayersMask
::UnityEngine::LayerMask GlobalNamespace::TrailerToolConfigurationProcessor::GetDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::GetDefaultMrcLayersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "GetDefaultMrcLayersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TrailerToolConfigurationProcessor.GetLayerMask
::UnityEngine::LayerMask GlobalNamespace::TrailerToolConfigurationProcessor::GetLayerMask(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::GetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "GetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerName);
}
// Autogenerated method: TrailerToolConfigurationProcessor.CreateObjectsMovementRecorderInitDataFromConfiguration
::GlobalNamespace::ObjectsMovementRecorder::InitData* GlobalNamespace::TrailerToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration(::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration* trailerToolConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "CreateObjectsMovementRecorderInitDataFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailerToolConfiguration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectsMovementRecorder::InitData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trailerToolConfiguration);
}
// Autogenerated method: TrailerToolConfigurationProcessor.CreateMenuDestinationFromConfiguration
::GlobalNamespace::MenuDestination* GlobalNamespace::TrailerToolConfigurationProcessor::CreateMenuDestinationFromConfiguration(::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration* trailerToolConfiguration, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks, ::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::CreateMenuDestinationFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "CreateMenuDestinationFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailerToolConfiguration), ::il2cpp_utils::ExtractType(beatmapLevelPacks), ::il2cpp_utils::ExtractType(beatmapCharacteristicCollection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, trailerToolConfiguration, beatmapLevelPacks, beatmapCharacteristicCollection);
}
// Autogenerated method: TrailerToolConfigurationProcessor.GetLevelPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::TrailerToolConfigurationProcessor::GetLevelPack(::StringW levePackId, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::GetLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "GetLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levePackId), ::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levePackId, beatmapLevelPacks);
}
// Autogenerated method: TrailerToolConfigurationProcessor.GetLevelPackAndLevelPreviewForLevelId
::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*> GlobalNamespace::TrailerToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId(::StringW levelId, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TrailerToolConfigurationProcessor", "GetLevelPackAndLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, levelId, beatmapLevelPacks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/TrailerToolConfigurationProcessor_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] includedLayers
::ArrayW<::StringW>& GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] excludedLayers
::ArrayW<::StringW>& GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerToolConfigurationProcessor/TrailerToolConfiguration
#include "GlobalNamespace/TrailerToolConfigurationProcessor_TrailerToolConfiguration.hpp"
// Including type: TrailerToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/TrailerToolConfigurationProcessor_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String mode
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packID
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String difficulty
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characteristic
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characteristic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runLevel
bool& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_runLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_runLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingMode
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_recordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_recordingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingPath
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cameraView
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addDateTimeSuffixToRecordingName
bool& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenshotRecording
bool& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotWidth
int& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotHeight
int& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
int& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TrailerToolConfigurationProcessor/PlaybackScreenshot[] playbackScreenshots
::ArrayW<::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot*>& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TrailerToolConfigurationProcessor::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
bool& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
float& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMultiplier
float& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
bool& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentType
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentName
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::TrailerToolConfiguration::dyn_environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailerToolConfigurationProcessor/<>c__DisplayClass20_0
#include "GlobalNamespace/TrailerToolConfigurationProcessor_--c__DisplayClass20_0.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String levePackId
::StringW& GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::dyn_levePackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::dyn_levePackId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levePackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrailerToolConfigurationProcessor/<>c__DisplayClass20_0.<GetLevelPack>b__0
bool GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::$GetLevelPack$b__0(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailerToolConfigurationProcessor::$$c__DisplayClass20_0::<GetLevelPack>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPack>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersValueSOOffsets
#include "GlobalNamespace/VRControllersValueSOOffsets.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _positionOffset
::GlobalNamespace::Vector3SO*& GlobalNamespace::VRControllersValueSOOffsets::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Vector3SO _rotationOffset
::GlobalNamespace::Vector3SO*& GlobalNamespace::VRControllersValueSOOffsets::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirror
bool& GlobalNamespace::VRControllersValueSOOffsets::dyn__mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::dyn__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersValueSOOffsets.get_positionOffset
::UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::get_positionOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersValueSOOffsets.get_rotationOffset
::UnityEngine::Vector3 GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersValueSOOffsets::get_rotationOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VersionSaveData
#include "GlobalNamespace/VersionSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String version
::StringW& GlobalNamespace::VersionSaveData::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VersionSaveData::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseResultsEnvironmentController.Activate
void GlobalNamespace::BaseResultsEnvironmentController::Activate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Deactivate
void GlobalNamespace::BaseResultsEnvironmentController::Deactivate(bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, immediately);
}
// Autogenerated method: BaseResultsEnvironmentController.Setup
void GlobalNamespace::BaseResultsEnvironmentController::Setup(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseResultsEnvironmentController::Setup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentBrandingManager
#include "GlobalNamespace/EnvironmentBrandingManager.hpp"
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _brandingObjects
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnvironmentBrandingManager::dyn__brandingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__brandingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brandingObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _replacementBrandingObjects
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::EnvironmentBrandingManager::dyn__replacementBrandingObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__replacementBrandingObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replacementBrandingObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentBrandingManager/InitData _initData
::GlobalNamespace::EnvironmentBrandingManager::InitData*& GlobalNamespace::EnvironmentBrandingManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentBrandingManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentBrandingManager.Start
void GlobalNamespace::EnvironmentBrandingManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentBrandingManager/InitData
#include "GlobalNamespace/EnvironmentBrandingManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hideBranding
bool& GlobalNamespace::EnvironmentBrandingManager::InitData::dyn_hideBranding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentBrandingManager::InitData::dyn_hideBranding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hideBranding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentObjects[] _data
::ArrayW<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects*>& GlobalNamespace::MenuEnvironmentManager::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentType _prevMenuEnvironmentType
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType& GlobalNamespace::MenuEnvironmentManager::dyn__prevMenuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::dyn__prevMenuEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevMenuEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuEnvironmentManager.Start
void GlobalNamespace::MenuEnvironmentManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager.ShowEnvironmentType
void GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType menuEnvironmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::ShowEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowEnvironmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuEnvironmentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuEnvironmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentType
#include "GlobalNamespace/MenuEnvironmentManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType None
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType None
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Default
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_get_Lobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType>("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuEnvironmentManager/MenuEnvironmentType Lobby
void GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby(::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::_set_Lobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuEnvironmentManager/MenuEnvironmentType", "Lobby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuEnvironmentManager/MenuEnvironmentObjects
#include "GlobalNamespace/MenuEnvironmentManager_MenuEnvironmentObjects.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuEnvironmentManager/MenuEnvironmentType _menuEnvironmentType
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__menuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__menuEnvironmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuEnvironmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapper
::UnityEngine::GameObject*& GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::dyn__wrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_menuEnvironmentType
::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_menuEnvironmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuEnvironmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentType, false>(this, ___internal__method);
}
// Autogenerated method: MenuEnvironmentManager/MenuEnvironmentObjects.get_wrapper
::UnityEngine::GameObject* GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuEnvironmentManager::MenuEnvironmentObjects::get_wrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuNeonLightsGenerator
#include "GlobalNamespace/MenuNeonLightsGenerator.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _generate
bool& GlobalNamespace::MenuNeonLightsGenerator::dyn__generate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__generate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_generate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
float& GlobalNamespace::MenuNeonLightsGenerator::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _angle
float& GlobalNamespace::MenuNeonLightsGenerator::dyn__angle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__angle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_angle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
int& GlobalNamespace::MenuNeonLightsGenerator::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _intensityCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensityCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensityMultiplier
float& GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__intensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lengthCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lengthMultiplier
float& GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__lengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _widthCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::MenuNeonLightsGenerator::dyn__widthCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__widthCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_widthCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _widthMultiplier
float& GlobalNamespace::MenuNeonLightsGenerator::dyn__widthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__widthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_widthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _neonLightPrefab
::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::MenuNeonLightsGenerator::dyn__neonLightPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__neonLightPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_neonLightPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _afterSpawnRotation
::UnityEngine::Vector3& GlobalNamespace::MenuNeonLightsGenerator::dyn__afterSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuNeonLightsGenerator::dyn__afterSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterSpawnRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OffsetByBeatmapObjectSpawnCenter
#include "GlobalNamespace/OffsetByBeatmapObjectSpawnCenter.hpp"
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnCenter _spawnCenter
::GlobalNamespace::BeatmapObjectSpawnCenter*& GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::dyn__spawnCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::dyn__spawnCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnCenter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.Start
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OffsetByBeatmapObjectSpawnCenter.HandleSpawnCenterDistanceWasFound
void GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetByBeatmapObjectSpawnCenter::HandleSpawnCenterDistanceWasFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnCenterDistanceWasFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager
#include "GlobalNamespace/ResultsEnvironmentManager.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword[] _resultEnvironmentControllersWithKeyword
::ArrayW<::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword*>& GlobalNamespace::ResultsEnvironmentManager::dyn__resultEnvironmentControllersWithKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::dyn__resultEnvironmentControllersWithKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultEnvironmentControllersWithKeyword"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _currentShownKeyword
::StringW& GlobalNamespace::ResultsEnvironmentManager::dyn__currentShownKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::dyn__currentShownKeyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentShownKeyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager.GetResultEnvironmentControllerForKeyword
::GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword(::StringW keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::GetResultEnvironmentControllerForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultEnvironmentControllerForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method, keyword);
}
// Autogenerated method: ResultsEnvironmentManager.ShowResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword(::StringW keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ShowResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowResultForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated method: ResultsEnvironmentManager.HideResultForKeyword
void GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword(::StringW keyword, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::HideResultForKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideResultForKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyword, immediately);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
// Including type: BaseResultsEnvironmentController
#include "GlobalNamespace/BaseResultsEnvironmentController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _keyword
::StringW& GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BaseResultsEnvironmentController _resultsEnvironmentController
::GlobalNamespace::BaseResultsEnvironmentController*& GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__resultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::dyn__resultsEnvironmentController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsEnvironmentController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BaseResultsEnvironmentController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_keyword
::StringW GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_keyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword.get_resultsEnvironmentController
::GlobalNamespace::BaseResultsEnvironmentController* GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword::get_resultsEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseResultsEnvironmentController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsEnvironmentManager/<>c__DisplayClass3_0
#include "GlobalNamespace/ResultsEnvironmentManager_--c__DisplayClass3_0.hpp"
// Including type: ResultsEnvironmentManager/ResultEnvironmentControllerWithKeyword
#include "GlobalNamespace/ResultsEnvironmentManager_ResultEnvironmentControllerWithKeyword.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String keyword
::StringW& GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::dyn_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::dyn_keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsEnvironmentManager/<>c__DisplayClass3_0.<GetResultEnvironmentControllerForKeyword>b__0
bool GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::$GetResultEnvironmentControllerForKeyword$b__0(::GlobalNamespace::ResultsEnvironmentManager::ResultEnvironmentControllerWithKeyword* controllerWithKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsEnvironmentManager::$$c__DisplayClass3_0::<GetResultEnvironmentControllerForKeyword>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetResultEnvironmentControllerForKeyword>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controllerWithKeyword)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, controllerWithKeyword);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _tubeBloomPrePassLight
::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::BeatLine::dyn__tubeBloomPrePassLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__tubeBloomPrePassLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeBloomPrePassLight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _arriveFadeCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::BeatLine::dyn__arriveFadeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__arriveFadeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arriveFadeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _jumpFadeCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::BeatLine::dyn__jumpFadeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__jumpFadeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpFadeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaMul
float& GlobalNamespace::BeatLine::dyn__alphaMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__alphaMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAlpha
float& GlobalNamespace::BeatLine::dyn__maxAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__maxAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatLine/HighlightData> _highlights
::System::Collections::Generic::List_1<::GlobalNamespace::BeatLine::HighlightData>*& GlobalNamespace::BeatLine::dyn__highlights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__highlights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlights"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatLine::HighlightData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::BeatLine::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
float& GlobalNamespace::BeatLine::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatLine.get_isFinished
bool GlobalNamespace::BeatLine::get_isFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::get_isFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.get_rotation
float GlobalNamespace::BeatLine::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLine.Init
void GlobalNamespace::BeatLine::Init(::UnityEngine::Vector3 position, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, rotation);
}
// Autogenerated method: BeatLine.AddHighlight
void GlobalNamespace::BeatLine::AddHighlight(float startTime, float arriveDuration, float jumpDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::AddHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(arriveDuration), ::il2cpp_utils::ExtractType(jumpDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTime, arriveDuration, jumpDuration);
}
// Autogenerated method: BeatLine.ManualUpdate
void GlobalNamespace::BeatLine::ManualUpdate(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: BeatLine.ColorWasSet
void GlobalNamespace::BeatLine::ColorWasSet(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLine::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: BeatLine/Pool
#include "GlobalNamespace/BeatLine_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _linesYPosition
float& GlobalNamespace::BeatLineManager::dyn__linesYPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__linesYPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linesYPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BeatLineManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatLine/Pool _beatLinePool
::GlobalNamespace::BeatLine::Pool*& GlobalNamespace::BeatLineManager::dyn__beatLinePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__beatLinePool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLinePool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatLine::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BeatLineManager::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Vector4,BeatLine> _activeBeatLines
::System::Collections::Generic::Dictionary_2<::UnityEngine::Vector4, ::GlobalNamespace::BeatLine*>*& GlobalNamespace::BeatLineManager::dyn__activeBeatLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__activeBeatLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeBeatLines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Vector4, ::GlobalNamespace::BeatLine*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector4> _removeBeatLineKeyList
::System::Collections::Generic::List_1<::UnityEngine::Vector4>*& GlobalNamespace::BeatLineManager::dyn__removeBeatLineKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__removeBeatLineKeyList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_removeBeatLineKeyList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector4>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isMidRotationValid
bool& GlobalNamespace::BeatLineManager::dyn__isMidRotationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__isMidRotationValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMidRotationValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _midRotation
float& GlobalNamespace::BeatLineManager::dyn__midRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__midRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_midRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationRange
float& GlobalNamespace::BeatLineManager::dyn__rotationRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::dyn__rotationRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatLineManager.get_isMidRotationValid
bool GlobalNamespace::BeatLineManager::get_isMidRotationValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_isMidRotationValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMidRotationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_midRotation
float GlobalNamespace::BeatLineManager::get_midRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_midRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_midRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.get_rotationRange
float GlobalNamespace::BeatLineManager::get_rotationRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::get_rotationRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Start
void GlobalNamespace::BeatLineManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.OnDestroy
void GlobalNamespace::BeatLineManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.Update
void GlobalNamespace::BeatLineManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatLineManager.HandleNoteWasSpawned
void GlobalNamespace::BeatLineManager::HandleNoteWasSpawned(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatLineManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapObjectManager
#include "GlobalNamespace/BasicBeatmapObjectManager.hpp"
// Including type: BasicBeatmapObjectManager/InitData
#include "GlobalNamespace/BasicBeatmapObjectManager_InitData.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: BurstSliderGameNoteController/Pool
#include "GlobalNamespace/BurstSliderGameNoteController_Pool.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: ObstacleController/Pool
#include "GlobalNamespace/ObstacleController_Pool.hpp"
// Including type: SliderController/Pool
#include "GlobalNamespace/SliderController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Single> _firstBasicNoteTime
::System::Nullable_1<float>& GlobalNamespace::BasicBeatmapObjectManager::dyn__firstBasicNoteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__firstBasicNoteTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstBasicNoteTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapObjectManager/InitData _initData
::GlobalNamespace::BasicBeatmapObjectManager::InitData*& GlobalNamespace::BasicBeatmapObjectManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapObjectManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<GameNoteController> _basicGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::GameNoteController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__basicGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__basicGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_basicGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::GameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<GameNoteController> _burstSliderHeadGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::GameNoteController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderHeadGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderHeadGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderHeadGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::GameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<BurstSliderGameNoteController> _burstSliderGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BurstSliderGameNoteController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BurstSliderGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<BurstSliderGameNoteController> _burstSliderFillPoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BurstSliderGameNoteController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderFillPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__burstSliderFillPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderFillPoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BurstSliderGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<BombNoteController> _bombNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BombNoteController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__bombNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__bombNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::BombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<ObstacleController> _obstaclePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__obstaclePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__obstaclePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<SliderController/LengthType,MemoryPoolContainer`1<SliderController>> _sliderNotePoolContainersDictionary
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SliderController::LengthType, ::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::SliderController*>*>*& GlobalNamespace::BasicBeatmapObjectManager::dyn__sliderNotePoolContainersDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::dyn__sliderNotePoolContainersDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderNotePoolContainersDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SliderController::LengthType, ::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::SliderController*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicBeatmapObjectManager.Init
void GlobalNamespace::BasicBeatmapObjectManager::Init(::GlobalNamespace::BasicBeatmapObjectManager::InitData* initData, ::GlobalNamespace::GameNoteController::Pool* basicGameNotePool, ::GlobalNamespace::GameNoteController::Pool* burstSliderHeadGameNotePool, ::GlobalNamespace::BurstSliderGameNoteController::Pool* burstSliderGameNotePool, ::GlobalNamespace::BurstSliderGameNoteController::Pool* burstSliderFillPool, ::GlobalNamespace::BombNoteController::Pool* bombNotePool, ::GlobalNamespace::ObstacleController::Pool* obstaclePool, ::GlobalNamespace::SliderController::Pool* sliderPools) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initData), ::il2cpp_utils::ExtractType(basicGameNotePool), ::il2cpp_utils::ExtractType(burstSliderHeadGameNotePool), ::il2cpp_utils::ExtractType(burstSliderGameNotePool), ::il2cpp_utils::ExtractType(burstSliderFillPool), ::il2cpp_utils::ExtractType(bombNotePool), ::il2cpp_utils::ExtractType(obstaclePool), ::il2cpp_utils::ExtractType(sliderPools)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initData, basicGameNotePool, burstSliderHeadGameNotePool, burstSliderGameNotePool, burstSliderFillPool, bombNotePool, obstaclePool, sliderPools);
}
// Autogenerated method: BasicBeatmapObjectManager.get_activeObstacleControllers
::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>* GlobalNamespace::BasicBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::get_activeObstacleControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapObjectManager.ProcessObstacleData
void GlobalNamespace::BasicBeatmapObjectManager::ProcessObstacleData(::GlobalNamespace::ObstacleData* obstacleData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData> obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::ProcessObstacleData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleData, byref(obstacleSpawnData), rotation);
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BasicBeatmapObjectManager.ProcessNoteData
void GlobalNamespace::BasicBeatmapObjectManager::ProcessNoteData(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNoteBehaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::ProcessNoteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNoteBehaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNoteBehaviour);
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BasicBeatmapObjectManager.ProcessSliderData
void GlobalNamespace::BasicBeatmapObjectManager::ProcessSliderData(::GlobalNamespace::SliderData* sliderData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData> sliderSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::ProcessSliderData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderData, byref(sliderSpawnData), rotation);
}
// Autogenerated method: BasicBeatmapObjectManager.DespawnInternal
void GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapObjectManager/InitData
#include "GlobalNamespace/BasicBeatmapObjectManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean disappearingArrows
bool& GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_disappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_disappearingArrows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disappearingArrows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean ghostNotes
bool& GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_ghostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_ghostNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostNotes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cutAngleTolerance
float& GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_cutAngleTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutAngleTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single notesUniformScale
float& GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_notesUniformScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapObjectManager::InitData::dyn_notesUniformScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notesUniformScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapCallbacksController/InitData
#include "GlobalNamespace/BeatmapCallbacksController_InitData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: CallbacksInTime
#include "GlobalNamespace/CallbacksInTime.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BeatmapDataCallback`1
#include "GlobalNamespace/BeatmapDataCallback_1.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Single,CallbacksInTime> _callbacksInTimes
::System::Collections::Generic::Dictionary_2<float, ::GlobalNamespace::CallbacksInTime*>*& GlobalNamespace::BeatmapCallbacksController::dyn__callbacksInTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__callbacksInTimes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacksInTimes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<float, ::GlobalNamespace::CallbacksInTime*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IReadonlyBeatmapData _beatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapCallbacksController::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single _startFilterTime
float& GlobalNamespace::BeatmapCallbacksController::dyn__startFilterTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__startFilterTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startFilterTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevSongTime
float& GlobalNamespace::BeatmapCallbacksController::dyn__prevSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__prevSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songTime
float& GlobalNamespace::BeatmapCallbacksController::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sendCallbacksOnBeatmapDataChangeChange
bool& GlobalNamespace::BeatmapCallbacksController::dyn__sendCallbacksOnBeatmapDataChangeChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__sendCallbacksOnBeatmapDataChangeChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendCallbacksOnBeatmapDataChangeChange"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _processingCallbacks
bool& GlobalNamespace::BeatmapCallbacksController::dyn__processingCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::dyn__processingCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processingCallbacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCallbacksController.get_sendCallbacksOnBeatmapDataChange
bool GlobalNamespace::BeatmapCallbacksController::get_sendCallbacksOnBeatmapDataChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::get_sendCallbacksOnBeatmapDataChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendCallbacksOnBeatmapDataChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbacksController.set_sendCallbacksOnBeatmapDataChange
void GlobalNamespace::BeatmapCallbacksController::set_sendCallbacksOnBeatmapDataChange(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::set_sendCallbacksOnBeatmapDataChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendCallbacksOnBeatmapDataChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCallbacksController.get_songTime
float GlobalNamespace::BeatmapCallbacksController::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::get_songTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbacksController.Dispose
void GlobalNamespace::BeatmapCallbacksController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbacksController.ManualUpdate
void GlobalNamespace::BeatmapCallbacksController::ManualUpdate(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: BeatmapCallbacksController.RemoveBeatmapCallback
void GlobalNamespace::BeatmapCallbacksController::RemoveBeatmapCallback(::GlobalNamespace::BeatmapDataCallbackWrapper* callbackWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::RemoveBeatmapCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveBeatmapCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackWrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackWrapper);
}
// Autogenerated method: BeatmapCallbacksController.TriggerBeatmapEvent
void GlobalNamespace::BeatmapCallbacksController::TriggerBeatmapEvent(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::TriggerBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapCallbacksController.HandleBeatmapEventDataWasInserted
void GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWasInserted(::GlobalNamespace::BeatmapEventData* beatmapEventData, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWasInserted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEventDataWasInserted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData, node);
}
// Autogenerated method: BeatmapCallbacksController.HandleBeatmapEventDataWillBeRemoved
void GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWillBeRemoved(::GlobalNamespace::BeatmapEventData* beatmapEventDataToRemove, ::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* nodeToRemove) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWillBeRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEventDataWillBeRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataToRemove), ::il2cpp_utils::ExtractType(nodeToRemove)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventDataToRemove, nodeToRemove);
}
// Autogenerated method: BeatmapCallbacksController.HandleBeatmapEventDataWasRemoved
void GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWasRemoved(::GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::HandleBeatmapEventDataWasRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEventDataWasRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCallbacksController/InitData
#include "GlobalNamespace/BeatmapCallbacksController_InitData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IReadonlyBeatmapData beatmapData
::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapCallbacksController::InitData::dyn_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::InitData::dyn_beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single startFilterTime
float& GlobalNamespace::BeatmapCallbacksController::InitData::dyn_startFilterTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksController::InitData::dyn_startFilterTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startFilterTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCallbacksUpdater
#include "GlobalNamespace/BeatmapCallbacksUpdater.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::BeatmapCallbacksUpdater::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksUpdater::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::BeatmapCallbacksUpdater::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksUpdater::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCallbacksUpdater.LateUpdate
void GlobalNamespace::BeatmapCallbacksUpdater::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksUpdater::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbacksUpdater.Pause
void GlobalNamespace::BeatmapCallbacksUpdater::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksUpdater::Pause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCallbacksUpdater.Resume
void GlobalNamespace::BeatmapCallbacksUpdater::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCallbacksUpdater::Resume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Type BasicBeatmapEventType
::System::Type*& GlobalNamespace::BeatmapDataCallbackWrapper::dyn_BasicBeatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCallbackWrapper::dyn_BasicBeatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BasicBeatmapEventType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single aheadTime
float& GlobalNamespace::BeatmapDataCallbackWrapper::dyn_aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCallbackWrapper::dyn_aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32[] subtypeIdentifiers
::ArrayW<int>& GlobalNamespace::BeatmapDataCallbackWrapper::dyn_subtypeIdentifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCallbackWrapper::dyn_subtypeIdentifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subtypeIdentifiers"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataCallbackWrapper.CallCallback
void GlobalNamespace::BeatmapDataCallbackWrapper::CallCallback(::GlobalNamespace::BeatmapDataItem* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCallbackWrapper::CallCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CallbacksInTime
#include "GlobalNamespace/CallbacksInTime.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.LinkedListNode`1<BeatmapDataItem> lastProcessedNode
::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::CallbacksInTime::dyn_lastProcessedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::dyn_lastProcessedNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastProcessedNode"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single aheadTime
float& GlobalNamespace::CallbacksInTime::dyn_aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::dyn_aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapEventData beatmapEventDataForCallbacksAfterNodeRemoval
::GlobalNamespace::BeatmapEventData*& GlobalNamespace::CallbacksInTime::dyn_beatmapEventDataForCallbacksAfterNodeRemoval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::dyn_beatmapEventDataForCallbacksAfterNodeRemoval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapEventDataForCallbacksAfterNodeRemoval"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.ValueTuple`2<System.Type,System.Int32>,System.Collections.Generic.List`1<BeatmapDataCallbackWrapper>> _callbacksWithSubtypeIdentifier
::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataCallbackWrapper*>*>*& GlobalNamespace::CallbacksInTime::dyn__callbacksWithSubtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::dyn__callbacksWithSubtypeIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacksWithSubtypeIdentifier"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::ValueTuple_2<::System::Type*, int>, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataCallbackWrapper*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<BeatmapDataCallbackWrapper>> _callbacks
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataCallbackWrapper*>*>*& GlobalNamespace::CallbacksInTime::dyn__callbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::dyn__callbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapDataCallbackWrapper*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CallbacksInTime.get_isEmpty
bool GlobalNamespace::CallbacksInTime::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CallbacksInTime.AddCallback
void GlobalNamespace::CallbacksInTime::AddCallback(::GlobalNamespace::BeatmapDataCallbackWrapper* callbackWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::AddCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackWrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackWrapper);
}
// Autogenerated method: CallbacksInTime.RemoveCallback
void GlobalNamespace::CallbacksInTime::RemoveCallback(::GlobalNamespace::BeatmapDataCallbackWrapper* callbackWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::RemoveCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callbackWrapper)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callbackWrapper);
}
// Autogenerated method: CallbacksInTime.CallCallbacks
void GlobalNamespace::CallbacksInTime::CallCallbacks(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::CallCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated method: CallbacksInTime.CallCallbacks
void GlobalNamespace::CallbacksInTime::CallCallbacks(::System::Type* beatmapEventDataType, ::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CallbacksInTime::CallCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataType), ::il2cpp_utils::ExtractType(beatmapDataItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventDataType, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRatingsRecorder
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ScoringElement
#include "GlobalNamespace/ScoringElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
::GlobalNamespace::IScoreController*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerHeadAndObstacleInteraction _playerHeadAndObstacleInteraction
::GlobalNamespace::PlayerHeadAndObstacleInteraction*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__playerHeadAndObstacleInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__playerHeadAndObstacleInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeadAndObstacleInteraction"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerHeadAndObstacleInteraction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapObjectExecutionRating> _beatmapObjectExecutionRatings
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectExecutionRating*>*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__beatmapObjectExecutionRatings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__beatmapObjectExecutionRatings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectExecutionRatings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectExecutionRating*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<ObstacleController> _hitObstacles
::System::Collections::Generic::HashSet_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__hitObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::dyn__hitObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitObstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.get_beatmapObjectExecutionRatings
::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectExecutionRating*>* GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::get_beatmapObjectExecutionRatings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::get_beatmapObjectExecutionRatings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectExecutionRatings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectExecutionRating*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.Start
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.OnDestroy
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleScoringForNoteDidFinish
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoringForNoteDidFinish(::GlobalNamespace::ScoringElement* scoringElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleScoringForNoteDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoringForNoteDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoringElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scoringElement);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandlePlayerHeadDidEnterObstacle
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandlePlayerHeadDidEnterObstacle(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandlePlayerHeadDidEnterObstacle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerHeadDidEnterObstacle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectExecutionRatingsRecorder.HandleObstacleDidPassAvoidedMark
void GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleObstacleDidPassAvoidedMark(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRatingsRecorder::HandleObstacleDidPassAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDidPassAvoidedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapObjectManager/NoteWasCutDelegate
#include "GlobalNamespace/BeatmapObjectManager_NoteWasCutDelegate.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: SliderController
#include "GlobalNamespace/SliderController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IBeatmapObjectController
#include "GlobalNamespace/IBeatmapObjectController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`3<NoteData,BeatmapObjectSpawnMovementData/NoteSpawnData,System.Single> noteWasAddedEvent
::System::Action_3<::GlobalNamespace::NoteData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, float>*& GlobalNamespace::BeatmapObjectManager::dyn_noteWasAddedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteWasAddedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasAddedEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::NoteData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteController> noteWasSpawnedEvent
::System::Action_1<::GlobalNamespace::NoteController*>*& GlobalNamespace::BeatmapObjectManager::dyn_noteWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::NoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteController> noteWasDespawnedEvent
::System::Action_1<::GlobalNamespace::NoteController*>*& GlobalNamespace::BeatmapObjectManager::dyn_noteWasDespawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteWasDespawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasDespawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::NoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteController> noteWasMissedEvent
::System::Action_1<::GlobalNamespace::NoteController*>*& GlobalNamespace::BeatmapObjectManager::dyn_noteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteWasMissedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasMissedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::NoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectManager/NoteWasCutDelegate noteWasCutEvent
::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate*& GlobalNamespace::BeatmapObjectManager::dyn_noteWasCutEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteWasCutEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasCutEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<NoteController> noteDidStartJumpEvent
::System::Action_1<::GlobalNamespace::NoteController*>*& GlobalNamespace::BeatmapObjectManager::dyn_noteDidStartJumpEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_noteDidStartJumpEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteDidStartJumpEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::NoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<ObstacleData,BeatmapObjectSpawnMovementData/ObstacleSpawnData,System.Single> obstacleWasAddedEvent
::System::Action_3<::GlobalNamespace::ObstacleData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, float>*& GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasAddedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasAddedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleWasAddedEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::ObstacleData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> obstacleWasSpawnedEvent
::System::Action_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> obstacleWasDespawnedEvent
::System::Action_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasDespawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_obstacleWasDespawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleWasDespawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> obstacleDidPassThreeQuartersOfMove2Event
::System::Action_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BeatmapObjectManager::dyn_obstacleDidPassThreeQuartersOfMove2Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_obstacleDidPassThreeQuartersOfMove2Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleDidPassThreeQuartersOfMove2Event"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ObstacleController> obstacleDidPassAvoidedMarkEvent
::System::Action_1<::GlobalNamespace::ObstacleController*>*& GlobalNamespace::BeatmapObjectManager::dyn_obstacleDidPassAvoidedMarkEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_obstacleDidPassAvoidedMarkEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleDidPassAvoidedMarkEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<SliderData,BeatmapObjectSpawnMovementData/SliderSpawnData,System.Single> sliderWasAddedEvent
::System::Action_3<::GlobalNamespace::SliderData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData, float>*& GlobalNamespace::BeatmapObjectManager::dyn_sliderWasAddedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_sliderWasAddedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderWasAddedEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::SliderData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SliderController> sliderWasSpawnedEvent
::System::Action_1<::GlobalNamespace::SliderController*>*& GlobalNamespace::BeatmapObjectManager::dyn_sliderWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_sliderWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::SliderController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SliderController> sliderWasDespawnedEvent
::System::Action_1<::GlobalNamespace::SliderController*>*& GlobalNamespace::BeatmapObjectManager::dyn_sliderWasDespawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_sliderWasDespawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderWasDespawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::SliderController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didHideAllBeatmapObjectsEvent
::System::Action_1<bool>*& GlobalNamespace::BeatmapObjectManager::dyn_didHideAllBeatmapObjectsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_didHideAllBeatmapObjectsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didHideAllBeatmapObjectsEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IBeatmapObjectController> _allBeatmapObjects
::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapObjectController*>*& GlobalNamespace::BeatmapObjectManager::dyn__allBeatmapObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn__allBeatmapObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allBeatmapObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapObjectController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <spawnHidden>k__BackingField
bool& GlobalNamespace::BeatmapObjectManager::dyn_$spawnHidden$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::dyn_$spawnHidden$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<spawnHidden>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectManager.get_activeObstacleControllers
::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>* GlobalNamespace::BeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::get_activeObstacleControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.get_spawnHidden
bool GlobalNamespace::BeatmapObjectManager::get_spawnHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::get_spawnHidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnHidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.set_spawnHidden
void GlobalNamespace::BeatmapObjectManager::set_spawnHidden(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::set_spawnHidden");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spawnHidden", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasAddedEvent(::System::Action_3<::GlobalNamespace::NoteData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasAddedEvent(::System::Action_3<::GlobalNamespace::NoteData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasSpawnedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasSpawnedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasDespawnedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasDespawnedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasMissedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasMissedEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasMissedEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteWasMissedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::add_noteWasCutEvent(::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteWasCutEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteWasCutEvent(::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteWasCutEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::add_noteDidStartJumpEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_noteDidStartJumpEvent
void GlobalNamespace::BeatmapObjectManager::remove_noteDidStartJumpEvent(::System::Action_1<::GlobalNamespace::NoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_noteDidStartJumpEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteDidStartJumpEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleWasAddedEvent(::System::Action_3<::GlobalNamespace::ObstacleData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_obstacleWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleWasAddedEvent(::System::Action_3<::GlobalNamespace::ObstacleData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_obstacleWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleWasSpawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_obstacleWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleWasSpawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_obstacleWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleWasDespawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_obstacleWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleWasDespawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_obstacleWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassThreeQuartersOfMove2Event(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleDidPassThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassThreeQuartersOfMove2Event
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassThreeQuartersOfMove2Event(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassThreeQuartersOfMove2Event");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleDidPassThreeQuartersOfMove2Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassAvoidedMarkEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_obstacleDidPassAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleDidPassAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_obstacleDidPassAvoidedMarkEvent
void GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassAvoidedMarkEvent(::System::Action_1<::GlobalNamespace::ObstacleController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_obstacleDidPassAvoidedMarkEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleDidPassAvoidedMarkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_sliderWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::add_sliderWasAddedEvent(::System::Action_3<::GlobalNamespace::SliderData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_sliderWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sliderWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_sliderWasAddedEvent
void GlobalNamespace::BeatmapObjectManager::remove_sliderWasAddedEvent(::System::Action_3<::GlobalNamespace::SliderData*, ::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_sliderWasAddedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sliderWasAddedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_sliderWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_sliderWasSpawnedEvent(::System::Action_1<::GlobalNamespace::SliderController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_sliderWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_sliderWasSpawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_sliderWasSpawnedEvent(::System::Action_1<::GlobalNamespace::SliderController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_sliderWasSpawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_sliderWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::add_sliderWasDespawnedEvent(::System::Action_1<::GlobalNamespace::SliderController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_sliderWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sliderWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_sliderWasDespawnedEvent
void GlobalNamespace::BeatmapObjectManager::remove_sliderWasDespawnedEvent(::System::Action_1<::GlobalNamespace::SliderController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_sliderWasDespawnedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sliderWasDespawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.add_didHideAllBeatmapObjectsEvent
void GlobalNamespace::BeatmapObjectManager::add_didHideAllBeatmapObjectsEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::add_didHideAllBeatmapObjectsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didHideAllBeatmapObjectsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.remove_didHideAllBeatmapObjectsEvent
void GlobalNamespace::BeatmapObjectManager::remove_didHideAllBeatmapObjectsEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::remove_didHideAllBeatmapObjectsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didHideAllBeatmapObjectsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectManager.ProcessObstacleData
void GlobalNamespace::BeatmapObjectManager::ProcessObstacleData(::GlobalNamespace::ObstacleData* obstacleData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData> obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::ProcessObstacleData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleData, byref(obstacleSpawnData), rotation);
}
// Autogenerated method: BeatmapObjectManager.ProcessNoteData
void GlobalNamespace::BeatmapObjectManager::ProcessNoteData(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNoteBehaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::ProcessNoteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNoteBehaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNoteBehaviour);
}
// Autogenerated method: BeatmapObjectManager.ProcessSliderData
void GlobalNamespace::BeatmapObjectManager::ProcessSliderData(::GlobalNamespace::SliderData* sliderData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData> sliderSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::ProcessSliderData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderData, byref(sliderSpawnData), rotation);
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.DespawnInternal
void GlobalNamespace::BeatmapObjectManager::DespawnInternal(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated method: BeatmapObjectManager.AddSpawnedObstacleController
void GlobalNamespace::BeatmapObjectManager::AddSpawnedObstacleController(::GlobalNamespace::ObstacleController* obstacleController, ::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::AddSpawnedObstacleController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpawnedObstacleController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController, obstacleSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.AddSpawnedNoteController
void GlobalNamespace::BeatmapObjectManager::AddSpawnedNoteController(::GlobalNamespace::NoteController* noteController, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData noteSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::AddSpawnedNoteController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpawnedNoteController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, noteSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.AddSpawnedSliderController
void GlobalNamespace::BeatmapObjectManager::AddSpawnedSliderController(::GlobalNamespace::SliderController* sliderController, ::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData sliderSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::AddSpawnedSliderController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpawnedSliderController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderController), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderController, sliderSpawnData, rotation);
}
// Autogenerated method: BeatmapObjectManager.SetNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetNoteControllerEventCallbacks(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::SetNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.RemoveNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveNoteControllerEventCallbacks(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::RemoveNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.SetSliderNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetSliderNoteControllerEventCallbacks(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::SetSliderNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSliderNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated method: BeatmapObjectManager.RemoveSliderNoteControllerEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveSliderNoteControllerEventCallbacks(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::RemoveSliderNoteControllerEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSliderNoteControllerEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated method: BeatmapObjectManager.SetObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::SetObstacleEventCallbacks(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::SetObstacleEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObstacleEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.RemoveObstacleEventCallbacks
void GlobalNamespace::BeatmapObjectManager::RemoveObstacleEventCallbacks(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::RemoveObstacleEventCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveObstacleEventCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::Despawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::Despawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.Despawn
void GlobalNamespace::BeatmapObjectManager::Despawn(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::Despawn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Despawn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteControllerNoteDidStartJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidStartJump(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteControllerNoteWasMissed
void GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteWasMissed(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteWasMissed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteControllerNoteDidFinishJump
void GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidFinishJump(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidFinishJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidFinishJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteControllerNoteDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidDissolve(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteDidDissolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidDissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BeatmapObjectManager.HandleNoteControllerNoteWasCut
void GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleNoteControllerNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedThreeQuartersOfMove2
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedThreeQuartersOfMove2(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedThreeQuartersOfMove2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstaclePassedThreeQuartersOfMove2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstaclePassedAvoidedMark
void GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedAvoidedMark(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleObstaclePassedAvoidedMark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstaclePassedAvoidedMark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleFinishedMovement
void GlobalNamespace::BeatmapObjectManager::HandleObstacleFinishedMovement(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleObstacleFinishedMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleFinishedMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleObstacleDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleObstacleDidDissolve(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleObstacleDidDissolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDidDissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: BeatmapObjectManager.HandleSliderDidFinishJump
void GlobalNamespace::BeatmapObjectManager::HandleSliderDidFinishJump(::GlobalNamespace::SliderController* sliderController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleSliderDidFinishJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderDidFinishJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderController);
}
// Autogenerated method: BeatmapObjectManager.HandleSliderDidDissolve
void GlobalNamespace::BeatmapObjectManager::HandleSliderDidDissolve(::GlobalNamespace::SliderController* sliderController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HandleSliderDidDissolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderDidDissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderController);
}
// Autogenerated method: BeatmapObjectManager.DissolveAllObjects
void GlobalNamespace::BeatmapObjectManager::DissolveAllObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::DissolveAllObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DissolveAllObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectManager.HideAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::HideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::HideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: BeatmapObjectManager.PauseAllBeatmapObjects
void GlobalNamespace::BeatmapObjectManager::PauseAllBeatmapObjects(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::PauseAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: BeatmapObjectManager.INoteControllerNoteWasCutEvent.HandleNoteControllerNoteWasCut
void GlobalNamespace::BeatmapObjectManager::INoteControllerNoteWasCutEvent_HandleNoteControllerNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::INoteControllerNoteWasCutEvent.HandleNoteControllerNoteWasCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INoteControllerNoteWasCutEvent.HandleNoteControllerNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapObjectManager/NoteWasCutDelegate
#include "GlobalNamespace/BeatmapObjectManager_NoteWasCutDelegate.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectManager/NoteWasCutDelegate.Invoke
void GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::Invoke(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: BeatmapObjectManager/NoteWasCutDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::BeginInvoke(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, noteController, byref(noteCutInfo), callback, object);
}
// Autogenerated method: BeatmapObjectManager/NoteWasCutDelegate.EndInvoke
void GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::EndInvoke(ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectManager::NoteWasCutDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(noteCutInfo), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnCenter
#include "GlobalNamespace/BeatmapObjectSpawnCenter.hpp"
// Including type: BeatmapObjectSpawnCenter/PlayerCountToDistance
#include "GlobalNamespace/BeatmapObjectSpawnCenter_PlayerCountToDistance.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectSpawnCenter/PlayerCountToDistance[] _distances
::ArrayW<::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance*>& GlobalNamespace::BeatmapObjectSpawnCenter::dyn__distances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::dyn__distances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distances"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultDistnace
float& GlobalNamespace::BeatmapObjectSpawnCenter::dyn__defaultDistnace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::dyn__defaultDistnace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultDistnace"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> spawnCenterDistanceWasFoundEvent
::System::Action_1<float>*& GlobalNamespace::BeatmapObjectSpawnCenter::dyn_spawnCenterDistanceWasFoundEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::dyn_spawnCenterDistanceWasFoundEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnCenterDistanceWasFoundEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _spawnCenterDistanceWasFound
bool& GlobalNamespace::BeatmapObjectSpawnCenter::dyn__spawnCenterDistanceWasFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::dyn__spawnCenterDistanceWasFound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnCenterDistanceWasFound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnCenterDistance
float& GlobalNamespace::BeatmapObjectSpawnCenter::dyn__spawnCenterDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::dyn__spawnCenterDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnCenterDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnCenter.get_spawnCenterDistance
float GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnCenterDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter.get_spawnCenterDistanceWasFound
bool GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistanceWasFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::get_spawnCenterDistanceWasFound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnCenterDistanceWasFound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter.add_spawnCenterDistanceWasFoundEvent
void GlobalNamespace::BeatmapObjectSpawnCenter::add_spawnCenterDistanceWasFoundEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::add_spawnCenterDistanceWasFoundEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_spawnCenterDistanceWasFoundEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnCenter.remove_spawnCenterDistanceWasFoundEvent
void GlobalNamespace::BeatmapObjectSpawnCenter::remove_spawnCenterDistanceWasFoundEvent(::System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::remove_spawnCenterDistanceWasFoundEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_spawnCenterDistanceWasFoundEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnCenter.CalculateSpawnCenterPosition
float GlobalNamespace::BeatmapObjectSpawnCenter::CalculateSpawnCenterPosition(int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::CalculateSpawnCenterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateSpawnCenterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfPlayers)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, numberOfPlayers);
}
// Autogenerated method: BeatmapObjectSpawnCenter.ReportAndSaveSpawnCenterDistance
void GlobalNamespace::BeatmapObjectSpawnCenter::ReportAndSaveSpawnCenterDistance(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::ReportAndSaveSpawnCenterDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportAndSaveSpawnCenterDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnCenter/PlayerCountToDistance
#include "GlobalNamespace/BeatmapObjectSpawnCenter_PlayerCountToDistance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _playerCount
int& GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::dyn__playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::dyn__playerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _distance
float& GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::dyn__distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::dyn__distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnCenter/PlayerCountToDistance.get_playerCount
int GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_playerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnCenter/PlayerCountToDistance.get_distance
float GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnCenter::PlayerCountToDistance::get_distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: BeatmapObjectSpawnController/InitData
#include "GlobalNamespace/BeatmapObjectSpawnController_InitData.hpp"
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IBeatmapObjectSpawner
#include "GlobalNamespace/IBeatmapObjectSpawner.hpp"
// Including type: IJumpOffsetYProvider
#include "GlobalNamespace/IJumpOffsetYProvider.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectSpawnMovementData _beatmapObjectSpawnMovementData
::GlobalNamespace::BeatmapObjectSpawnMovementData*& GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapObjectSpawnMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapObjectSpawnMovementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnMovementData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectSpawner _beatmapObjectSpawner
::GlobalNamespace::IBeatmapObjectSpawner*& GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapObjectSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__beatmapObjectSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapObjectSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IJumpOffsetYProvider _jumpOffsetYProvider
::GlobalNamespace::IJumpOffsetYProvider*& GlobalNamespace::BeatmapObjectSpawnController::dyn__jumpOffsetYProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__jumpOffsetYProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpOffsetYProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IJumpOffsetYProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController/InitData _initData
::GlobalNamespace::BeatmapObjectSpawnController::InitData*& GlobalNamespace::BeatmapObjectSpawnController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didInitEvent
::System::Action*& GlobalNamespace::BeatmapObjectSpawnController::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disableSpawning
bool& GlobalNamespace::BeatmapObjectSpawnController::dyn__disableSpawning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__disableSpawning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disableSpawning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool& GlobalNamespace::BeatmapObjectSpawnController::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _obstacleDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BeatmapObjectSpawnController::dyn__obstacleDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__obstacleDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _noteDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BeatmapObjectSpawnController::dyn__noteDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__noteDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _sliderDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BeatmapObjectSpawnController::dyn__sliderDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__sliderDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _spawnRotationCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BeatmapObjectSpawnController::dyn__spawnRotationCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__spawnRotationCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnRotation
float& GlobalNamespace::BeatmapObjectSpawnController::dyn__spawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::dyn__spawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnController.get_noteLinesCount
int GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_jumpOffsetY
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_jumpOffsetY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpOffsetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_moveDuration
float GlobalNamespace::BeatmapObjectSpawnController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_moveDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_jumpDuration
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_jumpDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_jumpDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_jumpDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_verticalLayerDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_verticalLayerDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_verticalLayerDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalLayerDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapObjectSpawnController::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_noteLinesDistance
float GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_noteLinesDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_beatmapObjectSpawnMovementData
::GlobalNamespace::BeatmapObjectSpawnMovementData* GlobalNamespace::BeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectSpawnMovementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapObjectSpawnMovementData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.get_isInitialized
bool GlobalNamespace::BeatmapObjectSpawnController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::get_isInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.add_didInitEvent
void GlobalNamespace::BeatmapObjectSpawnController::add_didInitEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::add_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnController.remove_didInitEvent
void GlobalNamespace::BeatmapObjectSpawnController::remove_didInitEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::remove_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapObjectSpawnController.Start
void GlobalNamespace::BeatmapObjectSpawnController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.OnDestroy
void GlobalNamespace::BeatmapObjectSpawnController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleObstacleDataCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleObstacleDataCallback(::GlobalNamespace::ObstacleData* obstacleData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::HandleObstacleDataCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDataCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleNoteDataCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleNoteDataCallback(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::HandleNoteDataCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDataCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleSliderDataCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleSliderDataCallback(::GlobalNamespace::SliderData* sliderNoteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::HandleSliderDataCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderDataCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteData);
}
// Autogenerated method: BeatmapObjectSpawnController.HandleSpawnRotationCallback
void GlobalNamespace::BeatmapObjectSpawnController::HandleSpawnRotationCallback(::GlobalNamespace::SpawnRotationBeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::HandleSpawnRotationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnRotationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: BeatmapObjectSpawnController.StopSpawning
void GlobalNamespace::BeatmapObjectSpawnController::StopSpawning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::StopSpawning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSpawning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnController.Get2DNoteOffset
::UnityEngine::Vector2 GlobalNamespace::BeatmapObjectSpawnController::Get2DNoteOffset(int noteLineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::Get2DNoteOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnController.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(::GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(distanceFromPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnController/InitData
#include "GlobalNamespace/BeatmapObjectSpawnController_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single beatsPerMinute
float& GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_beatsPerMinute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatsPerMinute"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 noteLinesCount
int& GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteLinesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLinesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single noteJumpMovementSpeed
float& GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapObjectSpawnMovementData/NoteJumpValueType noteJumpValueType
::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType& GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpValueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpValueType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single noteJumpValue
float& GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnController::InitData::dyn_noteJumpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteJumpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnControllerHelpers
#include "GlobalNamespace/BeatmapObjectSpawnControllerHelpers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteJumpValueType
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteJumpValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectSpawnControllerHelpers.GetNoteJumpValues
void GlobalNamespace::BeatmapObjectSpawnControllerHelpers::GetNoteJumpValues(::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, float defaultNoteJumpStartBeatOffset, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType> noteJumpValueType, ByRef<float> noteJumpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnControllerHelpers::GetNoteJumpValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapObjectSpawnControllerHelpers", "GetNoteJumpValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(defaultNoteJumpStartBeatOffset), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerSpecificSettings, defaultNoteJumpStartBeatOffset, byref(noteJumpValueType), byref(noteJumpValue));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/SliderSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_SliderSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteJumpValueType
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteJumpValueType.hpp"
// Including type: IJumpOffsetYProvider
#include "GlobalNamespace/IJumpOffsetYProvider.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMaxHalfJumpDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::_get_kDefaultMaxHalfJumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::_get_kDefaultMaxHalfJumpDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectSpawnMovementData", "kDefaultMaxHalfJumpDistance"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMaxHalfJumpDistance
void GlobalNamespace::BeatmapObjectSpawnMovementData::_set_kDefaultMaxHalfJumpDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::_set_kDefaultMaxHalfJumpDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData", "kDefaultMaxHalfJumpDistance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultStartHalfJumpDurationInBeats
float GlobalNamespace::BeatmapObjectSpawnMovementData::_get_kDefaultStartHalfJumpDurationInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::_get_kDefaultStartHalfJumpDurationInBeats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectSpawnMovementData", "kDefaultStartHalfJumpDurationInBeats"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultStartHalfJumpDurationInBeats
void GlobalNamespace::BeatmapObjectSpawnMovementData::_set_kDefaultStartHalfJumpDurationInBeats(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::_set_kDefaultStartHalfJumpDurationInBeats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData", "kDefaultStartHalfJumpDurationInBeats", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _centerPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__centerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__centerPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHalfJumpDistance
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__maxHalfJumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__maxHalfJumpDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHalfJumpDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startHalfJumpDurationInBeats
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__startHalfJumpDurationInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__startHalfJumpDurationInBeats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startHalfJumpDurationInBeats"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _baseLinesHighestJumpPosY
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__baseLinesHighestJumpPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__baseLinesHighestJumpPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseLinesHighestJumpPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _upperLinesHighestJumpPosY
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__upperLinesHighestJumpPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__upperLinesHighestJumpPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upperLinesHighestJumpPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _topLinesHighestJumpPosY
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__topLinesHighestJumpPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__topLinesHighestJumpPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topLinesHighestJumpPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeed
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalObstaclePosY
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__verticalObstaclePosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__verticalObstaclePosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalObstaclePosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _obstacleTopPosY
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__obstacleTopPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__obstacleTopPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleTopPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnAheadTime
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__spawnAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__spawnAheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _jumpDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpStartBeatOffset
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteJumpStartBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpStartBeatOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteJumpMovementSpeed
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteJumpMovementSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteJumpMovementSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _jumpDistance
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDistance
float& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _moveStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _moveEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__moveEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _jumpEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _noteLinesCount
int& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__noteLinesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteLinesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IJumpOffsetYProvider _jumpOffsetYProvider
::GlobalNamespace::IJumpOffsetYProvider*& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpOffsetYProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__jumpOffsetYProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpOffsetYProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IJumpOffsetYProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rightVec
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__rightVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__rightVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _forwardVec
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__forwardVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::dyn__forwardVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_spawnAheadTime
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_spawnAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_spawnAheadTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spawnAheadTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_moveDuration
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_moveDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_jumpDuration
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_noteLinesDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_verticalLayersDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_verticalLayersDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_verticalLayersDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalLayersDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_jumpDistance
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_noteLinesCount
int GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_noteLinesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_centerPos
::UnityEngine::Vector3 GlobalNamespace::BeatmapObjectSpawnMovementData::get_centerPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_centerPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.get_jumpOffsetY
float GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::get_jumpOffsetY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpOffsetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.Init
void GlobalNamespace::BeatmapObjectSpawnMovementData::Init(int noteLinesCount, float startNoteJumpMovementSpeed, float startBpm, ::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType noteJumpValueType, float noteJumpValue, ::GlobalNamespace::IJumpOffsetYProvider* jumpOffsetYProvider, ::UnityEngine::Vector3 rightVec, ::UnityEngine::Vector3 forwardVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLinesCount), ::il2cpp_utils::ExtractType(startNoteJumpMovementSpeed), ::il2cpp_utils::ExtractType(startBpm), ::il2cpp_utils::ExtractType(noteJumpValueType), ::il2cpp_utils::ExtractType(noteJumpValue), ::il2cpp_utils::ExtractType(jumpOffsetYProvider), ::il2cpp_utils::ExtractType(rightVec), ::il2cpp_utils::ExtractType(forwardVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteLinesCount, startNoteJumpMovementSpeed, startBpm, noteJumpValueType, noteJumpValue, jumpOffsetYProvider, rightVec, forwardVec);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetObstacleSpawnData
::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleSpawnData(::GlobalNamespace::ObstacleData* obstacleData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleSpawnData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacleSpawnData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData, false>(this, ___internal__method, obstacleData);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetJumpingNoteSpawnData
::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData GlobalNamespace::BeatmapObjectSpawnMovementData::GetJumpingNoteSpawnData(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::GetJumpingNoteSpawnData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetJumpingNoteSpawnData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetSliderSpawnData
::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData GlobalNamespace::BeatmapObjectSpawnMovementData::GetSliderSpawnData(::GlobalNamespace::SliderData* sliderData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::GetSliderSpawnData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSliderSpawnData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData, false>(this, ___internal__method, sliderData);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetNoteOffset
::UnityEngine::Vector3 GlobalNamespace::BeatmapObjectSpawnMovementData::GetNoteOffset(int noteLineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::GetNoteOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.GetObstacleOffset
::UnityEngine::Vector3 GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleOffset(int noteLineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::GetObstacleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.Get2DNoteOffset
::UnityEngine::Vector2 GlobalNamespace::BeatmapObjectSpawnMovementData::Get2DNoteOffset(int noteLineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::Get2DNoteOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(::GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(distanceFromPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.HighestJumpPosYForLineLayer
float GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayer(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestJumpPosYForLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.HighestJumpPosYForLineLayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayerWithoutJumpOffset(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::HighestJumpPosYForLineLayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighestJumpPosYForLineLayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.NoteJumpGravityForLineLayer
float GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayer(::GlobalNamespace::NoteLineLayer lineLayer, ::GlobalNamespace::NoteLineLayer beforeJumpLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteJumpGravityForLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(beforeJumpLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer, beforeJumpLineLayer);
}
// Autogenerated method: BeatmapObjectSpawnMovementData.NoteJumpGravityForLineLayerWithoutJumpOffset
float GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayerWithoutJumpOffset(::GlobalNamespace::NoteLineLayer lineLayer, ::GlobalNamespace::NoteLineLayer beforeJumpLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpGravityForLineLayerWithoutJumpOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteJumpGravityForLineLayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(beforeJumpLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer, beforeJumpLineLayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 moveStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 moveEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 jumpEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_jumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_jumpEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single obstacleHeight
float& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_obstacleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_obstacleHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single moveDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_moveDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single jumpDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_jumpDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single noteLinesDistance
float& GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::dyn_noteLinesDistance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLinesDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnMovementData/ObstacleSpawnData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData::ObstacleSpawnData(::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float obstacleHeight, float moveDuration, float jumpDuration, float noteLinesDistance)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 moveStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 moveEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 jumpEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single jumpGravity
float& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpGravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single moveDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_moveDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single jumpDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::dyn_jumpDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnMovementData/NoteSpawnData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData::NoteSpawnData(::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float jumpGravity, float moveDuration, float jumpDuration)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/SliderSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_SliderSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 headMoveStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headMoveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headMoveStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headMoveStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 headJumpStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 headJumpEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single headJumpGravity
float& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_headJumpGravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 tailMoveStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailMoveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailMoveStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailMoveStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 tailJumpStartPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpStartPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 tailJumpEndPos
::UnityEngine::Vector3& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpEndPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpEndPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single tailJumpGravity
float& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_tailJumpGravity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single moveDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_moveDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single jumpDuration
float& GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::dyn_jumpDuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnMovementData/SliderSpawnData..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData::SliderSpawnData(::UnityEngine::Vector3 headMoveStartPos, ::UnityEngine::Vector3 headJumpStartPos, ::UnityEngine::Vector3 headJumpEndPos, float headJumpGravity, ::UnityEngine::Vector3 tailMoveStartPos, ::UnityEngine::Vector3 tailJumpStartPos, ::UnityEngine::Vector3 tailJumpEndPos, float tailJumpGravity, float moveDuration, float jumpDuration)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnMovementData/NoteJumpValueType
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteJumpValueType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType BeatOffset
::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_BeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_BeatOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType>("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "BeatOffset"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType BeatOffset
void GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_BeatOffset(::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_BeatOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "BeatOffset", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType JumpDuration
::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_JumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_get_JumpDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType>("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "JumpDuration"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapObjectSpawnMovementData/NoteJumpValueType JumpDuration
void GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_JumpDuration(::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::_set_JumpDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectSpawnMovementData/NoteJumpValueType", "JumpDuration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteJumpValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BurstSliderSpawner
#include "GlobalNamespace/BurstSliderSpawner.hpp"
// Including type: BurstSliderSpawner/ProcessNoteDataDelegate
#include "GlobalNamespace/BurstSliderSpawner_ProcessNoteDataDelegate.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapObjectSpawnMovementData/SliderSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_SliderSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BurstSliderSpawner.BezierCurve
void GlobalNamespace::BurstSliderSpawner::BezierCurve(::UnityEngine::Vector2 p0, ::UnityEngine::Vector2 p1, ::UnityEngine::Vector2 p2, float t, ByRef<::UnityEngine::Vector2> pos, ByRef<::UnityEngine::Vector2> tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderSpawner::BezierCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BurstSliderSpawner", "BezierCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, t, byref(pos), byref(tangent));
}
// Autogenerated method: BurstSliderSpawner.ProcessSliderData
void GlobalNamespace::BurstSliderSpawner::ProcessSliderData(::GlobalNamespace::SliderData* sliderData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData> sliderSpawnData, float rotation, bool forceIsFirstNote, ::GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate* processNoteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderSpawner::ProcessSliderData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BurstSliderSpawner", "ProcessSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNote), ::il2cpp_utils::ExtractType(processNoteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sliderData, byref(sliderSpawnData), rotation, forceIsFirstNote, processNoteData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BurstSliderSpawner/ProcessNoteDataDelegate
#include "GlobalNamespace/BurstSliderSpawner_ProcessNoteDataDelegate.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BurstSliderSpawner/ProcessNoteDataDelegate.Invoke
void GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::Invoke(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNote);
}
// Autogenerated method: BurstSliderSpawner/ProcessNoteDataDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::BeginInvoke(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNote, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNote), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNote, callback, object);
}
// Autogenerated method: BurstSliderSpawner/ProcessNoteDataDelegate.EndInvoke
void GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::EndInvoke(ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderSpawner::ProcessNoteDataDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(noteSpawnData), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectController
#include "GlobalNamespace/IBeatmapObjectController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectController.Dissolve
void GlobalNamespace::IBeatmapObjectController::Dissolve(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectController::Dissolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dissolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: IBeatmapObjectController.Pause
void GlobalNamespace::IBeatmapObjectController::Pause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectController::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated method: IBeatmapObjectController.Hide
void GlobalNamespace::IBeatmapObjectController::Hide(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectController::Hide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectSpawnController
#include "GlobalNamespace/IBeatmapObjectSpawnController.hpp"
// Including type: BeatmapObjectSpawnMovementData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectSpawnController.get_noteLinesCount
int GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpOffsetY
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_jumpOffsetY");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpOffsetY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_moveDuration
float GlobalNamespace::IBeatmapObjectSpawnController::get_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_moveDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpDuration
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_jumpDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_jumpDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jumpDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_verticalLayerDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_verticalLayerDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_verticalLayerDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalLayerDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_noteJumpMovementSpeed
float GlobalNamespace::IBeatmapObjectSpawnController::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_noteJumpMovementSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_noteLinesDistance
float GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_noteLinesDistance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLinesDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_beatmapObjectSpawnMovementData
::GlobalNamespace::BeatmapObjectSpawnMovementData* GlobalNamespace::IBeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_beatmapObjectSpawnMovementData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectSpawnMovementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapObjectSpawnMovementData*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.get_isInitialized
bool GlobalNamespace::IBeatmapObjectSpawnController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::get_isInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapObjectSpawnController.add_didInitEvent
void GlobalNamespace::IBeatmapObjectSpawnController::add_didInitEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::add_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectSpawnController.remove_didInitEvent
void GlobalNamespace::IBeatmapObjectSpawnController::remove_didInitEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::remove_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapObjectSpawnController.Get2DNoteOffset
::UnityEngine::Vector2 GlobalNamespace::IBeatmapObjectSpawnController::Get2DNoteOffset(int noteLineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::Get2DNoteOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method, noteLineIndex, noteLineLayer);
}
// Autogenerated method: IBeatmapObjectSpawnController.JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset
float GlobalNamespace::IBeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset(::GlobalNamespace::NoteLineLayer lineLayer, float distanceFromPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawnController::JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JumpPosYForLineLayerAtDistanceFromPlayerWithoutJumpOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(distanceFromPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lineLayer, distanceFromPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapObjectSpawner
#include "GlobalNamespace/IBeatmapObjectSpawner.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: BeatmapObjectSpawnMovementData/ObstacleSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_ObstacleSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/NoteSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_NoteSpawnData.hpp"
// Including type: BeatmapObjectSpawnMovementData/SliderSpawnData
#include "GlobalNamespace/BeatmapObjectSpawnMovementData_SliderSpawnData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapObjectSpawner.ProcessObstacleData
void GlobalNamespace::IBeatmapObjectSpawner::ProcessObstacleData(::GlobalNamespace::ObstacleData* obstacleData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData> obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawner::ProcessObstacleData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleData, byref(obstacleSpawnData), rotation);
}
// Autogenerated method: IBeatmapObjectSpawner.ProcessNoteData
void GlobalNamespace::IBeatmapObjectSpawner::ProcessNoteData(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNoteBehaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawner::ProcessNoteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNoteBehaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNoteBehaviour);
}
// Autogenerated method: IBeatmapObjectSpawner.ProcessSliderData
void GlobalNamespace::IBeatmapObjectSpawner::ProcessSliderData(::GlobalNamespace::SliderData* sliderData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData> sliderSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatmapObjectSpawner::ProcessSliderData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderData, byref(sliderSpawnData), rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirroredBeatmapObjectManager
#include "GlobalNamespace/MirroredBeatmapObjectManager.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: MirroredObstacleController/Pool
#include "GlobalNamespace/MirroredObstacleController_Pool.hpp"
// Including type: MirroredBombNoteController/Pool
#include "GlobalNamespace/MirroredBombNoteController_Pool.hpp"
// Including type: MirroredGameNoteController/Pool
#include "GlobalNamespace/MirroredGameNoteController_Pool.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IGameNoteMirrorable
#include "GlobalNamespace/IGameNoteMirrorable.hpp"
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: SliderController
#include "GlobalNamespace/SliderController.hpp"
// Including type: MirroredSliderController/Pool
#include "GlobalNamespace/MirroredSliderController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredGameNoteController> _mirroredBasicGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBasicGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBasicGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBasicGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredGameNoteController> _mirroredBurstSliderHeadGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderHeadGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderHeadGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderHeadGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredGameNoteController> _mirroredBurstSliderGameNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderGameNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderGameNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderGameNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredGameNoteController> _mirroredBurstSliderFillPoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderFillPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBurstSliderFillPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderFillPoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredBombNoteController> _mirroredBombNotePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredBombNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBombNotePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredBombNotePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBombNotePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredBombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredObstacleController> _mirroredObstaclePoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredObstacleController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredObstaclePoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredObstaclePoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredObstaclePoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<MirroredSliderController> _mirroredSlidersPoolContainer
::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredSliderController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredSlidersPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__mirroredSlidersPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredSlidersPoolContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredSliderController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<IGameNoteMirrorable,System.ValueTuple`2<MirroredGameNoteController,MemoryPoolContainer`1<MirroredGameNoteController>>> _gameNoteControllersToMirroredGameNoteControllers
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::IGameNoteMirrorable*, ::System::ValueTuple_2<::GlobalNamespace::MirroredGameNoteController*, ::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*>>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__gameNoteControllersToMirroredGameNoteControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__gameNoteControllersToMirroredGameNoteControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameNoteControllersToMirroredGameNoteControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::IGameNoteMirrorable*, ::System::ValueTuple_2<::GlobalNamespace::MirroredGameNoteController*, ::GlobalNamespace::MemoryPoolContainer_1<::GlobalNamespace::MirroredGameNoteController*>*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<INoteMirrorable,MirroredBombNoteController> _bombNoteControllersToMirroredBombNoteControllers
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::INoteMirrorable*, ::GlobalNamespace::MirroredBombNoteController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__bombNoteControllersToMirroredBombNoteControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__bombNoteControllersToMirroredBombNoteControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNoteControllersToMirroredBombNoteControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::INoteMirrorable*, ::GlobalNamespace::MirroredBombNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<ObstacleController,MirroredObstacleController> _obstacleControllersToMirroredObstacleControllers
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ObstacleController*, ::GlobalNamespace::MirroredObstacleController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__obstacleControllersToMirroredObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__obstacleControllersToMirroredObstacleControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleControllersToMirroredObstacleControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ObstacleController*, ::GlobalNamespace::MirroredObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<SliderController,MirroredSliderController> _sliderControllersToMirroredSliderControllers
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SliderController*, ::GlobalNamespace::MirroredSliderController*>*& GlobalNamespace::MirroredBeatmapObjectManager::dyn__sliderControllersToMirroredSliderControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::dyn__sliderControllersToMirroredSliderControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderControllersToMirroredSliderControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::SliderController*, ::GlobalNamespace::MirroredSliderController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MirroredBeatmapObjectManager.Init
void GlobalNamespace::MirroredBeatmapObjectManager::Init(::GlobalNamespace::BeatmapObjectManager* beatmapObjectManager, ::GlobalNamespace::MirroredGameNoteController::Pool* mirroredBasicGameNotePool, ::GlobalNamespace::MirroredGameNoteController::Pool* burstSliderHeadGameNotePool, ::GlobalNamespace::MirroredGameNoteController::Pool* burstSliderGameNotePool, ::GlobalNamespace::MirroredGameNoteController::Pool* burstSliderFillPool, ::GlobalNamespace::MirroredBombNoteController::Pool* mirroredBombNotePool, ::GlobalNamespace::MirroredObstacleController::Pool* mirroredObstaclePool, ::GlobalNamespace::MirroredSliderController::Pool* mirroredSlidersPool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectManager), ::il2cpp_utils::ExtractType(mirroredBasicGameNotePool), ::il2cpp_utils::ExtractType(burstSliderHeadGameNotePool), ::il2cpp_utils::ExtractType(burstSliderGameNotePool), ::il2cpp_utils::ExtractType(burstSliderFillPool), ::il2cpp_utils::ExtractType(mirroredBombNotePool), ::il2cpp_utils::ExtractType(mirroredObstaclePool), ::il2cpp_utils::ExtractType(mirroredSlidersPool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectManager, mirroredBasicGameNotePool, burstSliderHeadGameNotePool, burstSliderGameNotePool, burstSliderFillPool, mirroredBombNotePool, mirroredObstaclePool, mirroredSlidersPool);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleNoteWasSpawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasSpawned(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleNoteWasDespawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasDespawned(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleNoteWasDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleObstacleWasSpawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasSpawned(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleObstacleWasDespawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasDespawned(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleObstacleWasDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleWasDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleSliderWasSpawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleSliderWasSpawned(::GlobalNamespace::SliderController* sliderController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleSliderWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleSliderWasDespawned
void GlobalNamespace::MirroredBeatmapObjectManager::HandleSliderWasDespawned(::GlobalNamespace::SliderController* sliderController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleSliderWasDespawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderWasDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderController);
}
// Autogenerated method: MirroredBeatmapObjectManager.HandleDidHideAllBeatmapObjects
void GlobalNamespace::MirroredBeatmapObjectManager::HandleDidHideAllBeatmapObjects(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::HandleDidHideAllBeatmapObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidHideAllBeatmapObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: MirroredBeatmapObjectManager.Finalize
void GlobalNamespace::MirroredBeatmapObjectManager::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MirroredBeatmapObjectManager::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockBeatmapObjectManager
#include "GlobalNamespace/MockBeatmapObjectManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: SliderController
#include "GlobalNamespace/SliderController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockBeatmapObjectManager.get_activeObstacleControllers
::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>* GlobalNamespace::MockBeatmapObjectManager::get_activeObstacleControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::get_activeObstacleControllers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeObstacleControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapObjectManager.ProcessObstacleData
void GlobalNamespace::MockBeatmapObjectManager::ProcessObstacleData(::GlobalNamespace::ObstacleData* obstacleData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::ObstacleSpawnData> obstacleSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::ProcessObstacleData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleData), ::il2cpp_utils::ExtractType(obstacleSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleData, byref(obstacleSpawnData), rotation);
}
// Autogenerated method: MockBeatmapObjectManager.ProcessNoteData
void GlobalNamespace::MockBeatmapObjectManager::ProcessNoteData(::GlobalNamespace::NoteData* noteData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::NoteSpawnData> noteSpawnData, float rotation, bool forceIsFirstNoteBehaviour) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::ProcessNoteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteSpawnData), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(forceIsFirstNoteBehaviour)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, byref(noteSpawnData), rotation, forceIsFirstNoteBehaviour);
}
// Autogenerated method: MockBeatmapObjectManager.ProcessSliderData
void GlobalNamespace::MockBeatmapObjectManager::ProcessSliderData(::GlobalNamespace::SliderData* sliderData, ByRef<::GlobalNamespace::BeatmapObjectSpawnMovementData::SliderSpawnData> sliderSpawnData, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::ProcessSliderData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData), ::il2cpp_utils::ExtractType(sliderSpawnData), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderData, byref(sliderSpawnData), rotation);
}
// Autogenerated method: MockBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MockBeatmapObjectManager::DespawnInternal(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: MockBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MockBeatmapObjectManager::DespawnInternal(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: MockBeatmapObjectManager.DespawnInternal
void GlobalNamespace::MockBeatmapObjectManager::DespawnInternal(::GlobalNamespace::SliderController* sliderNoteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MockBeatmapObjectManager::DespawnInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderNoteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderNoteController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNoteVisuals
#include "GlobalNamespace/BaseNoteVisuals.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteControllerBase _noteController
::GlobalNamespace::NoteControllerBase*& GlobalNamespace::BaseNoteVisuals::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CutoutAnimateEffect _cutoutAnimateEffect
::GlobalNamespace::CutoutAnimateEffect*& GlobalNamespace::BaseNoteVisuals::dyn__cutoutAnimateEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::dyn__cutoutAnimateEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutAnimateEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CutoutAnimateEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseNoteVisuals.Awake
void GlobalNamespace::BaseNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.OnDestroy
void GlobalNamespace::BaseNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit(::GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: BaseNoteVisuals.HandleNoteControllerNoteDidStartDissolving
void GlobalNamespace::BaseNoteVisuals::HandleNoteControllerNoteDidStartDissolving(::GlobalNamespace::NoteControllerBase* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::HandleNoteControllerNoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, duration);
}
// Autogenerated method: BaseNoteVisuals.AnimateCutout
void GlobalNamespace::BaseNoteVisuals::AnimateCutout(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseNoteVisuals::AnimateCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
// Including type: CuttableBySaber
#include "GlobalNamespace/CuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CuttableBySaber _cuttableBySaber
::GlobalNamespace::CuttableBySaber*& GlobalNamespace::BombNoteController::dyn__cuttableBySaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::dyn__cuttableBySaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttableBySaber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
::UnityEngine::GameObject*& GlobalNamespace::BombNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombNoteController.Init
void GlobalNamespace::BombNoteController::Init(::GlobalNamespace::NoteData* noteData, float worldRotation, ::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity);
}
// Autogenerated method: BombNoteController.HandleDidPassHalfJump
void GlobalNamespace::BombNoteController::HandleDidPassHalfJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::HandleDidPassHalfJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPassHalfJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.HandleWasCutBySaber
void GlobalNamespace::BombNoteController::HandleWasCutBySaber(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::HandleWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: BombNoteController.Awake
void GlobalNamespace::BombNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.OnDestroy
void GlobalNamespace::BombNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidPassMissedMarker
void GlobalNamespace::BombNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.NoteDidStartDissolving
void GlobalNamespace::BombNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombNoteController.HiddenStateDidChange
void GlobalNamespace::BombNoteController::HiddenStateDidChange(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::HiddenStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HiddenStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: BombNoteController.Pause
void GlobalNamespace::BombNoteController::Pause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombNoteController::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombNoteController/Pool
#include "GlobalNamespace/BombNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BurstSliderGameNoteController
#include "GlobalNamespace/BurstSliderGameNoteController.hpp"
// Including type: BurstSliderGameNoteController/Pool
#include "GlobalNamespace/BurstSliderGameNoteController_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _bigCuttableBySaberList
::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>& GlobalNamespace::BurstSliderGameNoteController::dyn__bigCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__bigCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bigCuttableBySaberList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _smallCuttableBySaberList
::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>& GlobalNamespace::BurstSliderGameNoteController::dyn__smallCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__smallCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCuttableBySaberList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
::UnityEngine::GameObject*& GlobalNamespace::BurstSliderGameNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::BurstSliderGameNoteController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BurstSliderGameNoteController> cubeNoteControllerDidInitEvent
::System::Action_1<::GlobalNamespace::BurstSliderGameNoteController*>*& GlobalNamespace::BurstSliderGameNoteController::dyn_cubeNoteControllerDidInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn_cubeNoteControllerDidInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubeNoteControllerDidInitEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BurstSliderGameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteVisualModifierType _noteVisualModifierType
::GlobalNamespace::NoteVisualModifierType& GlobalNamespace::BurstSliderGameNoteController::dyn__noteVisualModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__noteVisualModifierType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteVisualModifierType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteVisualModifierType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteData/GameplayType _gameplayType
::GlobalNamespace::NoteData::GameplayType& GlobalNamespace::BurstSliderGameNoteController::dyn__gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__gameplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::GameplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber _bigCuttableBySaber
::GlobalNamespace::BoxCuttableBySaber*& GlobalNamespace::BurstSliderGameNoteController::dyn__bigCuttableBySaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__bigCuttableBySaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bigCuttableBySaber"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoxCuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _originalColliderSize
::UnityEngine::Vector3& GlobalNamespace::BurstSliderGameNoteController::dyn__originalColliderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__originalColliderSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColliderSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _originalColliderCenter
::UnityEngine::Vector3& GlobalNamespace::BurstSliderGameNoteController::dyn__originalColliderCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::dyn__originalColliderCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalColliderCenter"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BurstSliderGameNoteController.get_noteMovement
::GlobalNamespace::NoteMovement* GlobalNamespace::BurstSliderGameNoteController::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMovement*, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.get_noteVisualModifierType
::GlobalNamespace::NoteVisualModifierType GlobalNamespace::BurstSliderGameNoteController::get_noteVisualModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::get_noteVisualModifierType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteVisualModifierType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteVisualModifierType, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.get_gameplayType
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::BurstSliderGameNoteController::get_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::get_gameplayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData::GameplayType, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.add_cubeNoteControllerDidInitEvent
void GlobalNamespace::BurstSliderGameNoteController::add_cubeNoteControllerDidInitEvent(::System::Action_1<::GlobalNamespace::BurstSliderGameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::add_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BurstSliderGameNoteController.remove_cubeNoteControllerDidInitEvent
void GlobalNamespace::BurstSliderGameNoteController::remove_cubeNoteControllerDidInitEvent(::System::Action_1<::GlobalNamespace::BurstSliderGameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::remove_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BurstSliderGameNoteController.Init
void GlobalNamespace::BurstSliderGameNoteController::Init(::GlobalNamespace::NoteData* noteData, float worldRotation, ::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, ::GlobalNamespace::NoteVisualModifierType noteVisualModifierType, float uniformScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(noteVisualModifierType), ::il2cpp_utils::ExtractType(uniformScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, noteVisualModifierType, uniformScale);
}
// Autogenerated method: BurstSliderGameNoteController.HandleBigWasCutBySaber
void GlobalNamespace::BurstSliderGameNoteController::HandleBigWasCutBySaber(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::HandleBigWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBigWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: BurstSliderGameNoteController.HandleSmallWasCutBySaber
void GlobalNamespace::BurstSliderGameNoteController::HandleSmallWasCutBySaber(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::HandleSmallWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSmallWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: BurstSliderGameNoteController.HandleCut
void GlobalNamespace::BurstSliderGameNoteController::HandleCut(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec, bool allowBadCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::HandleCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec), ::il2cpp_utils::ExtractType(allowBadCut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec, allowBadCut);
}
// Autogenerated method: BurstSliderGameNoteController.Awake
void GlobalNamespace::BurstSliderGameNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.OnDestroy
void GlobalNamespace::BurstSliderGameNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.NoteDidPassMissedMarker
void GlobalNamespace::BurstSliderGameNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.NoteDidStartDissolving
void GlobalNamespace::BurstSliderGameNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.NoteDidStartJump
void GlobalNamespace::BurstSliderGameNoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::NoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BurstSliderGameNoteController.HiddenStateDidChange
void GlobalNamespace::BurstSliderGameNoteController::HiddenStateDidChange(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::HiddenStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HiddenStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: BurstSliderGameNoteController.Pause
void GlobalNamespace::BurstSliderGameNoteController::Pause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderGameNoteController::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BurstSliderGameNoteController/Pool
#include "GlobalNamespace/BurstSliderGameNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BurstSliderNoteDisappearingArrowController
#include "GlobalNamespace/BurstSliderNoteDisappearingArrowController.hpp"
// Including type: BurstSliderGameNoteController
#include "GlobalNamespace/BurstSliderGameNoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BurstSliderGameNoteController _burstSliderNoteController
::GlobalNamespace::BurstSliderGameNoteController*& GlobalNamespace::BurstSliderNoteDisappearingArrowController::dyn__burstSliderNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderNoteDisappearingArrowController::dyn__burstSliderNoteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderNoteController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BurstSliderGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BurstSliderNoteDisappearingArrowController.get_gameNoteController
::GlobalNamespace::BurstSliderGameNoteController* GlobalNamespace::BurstSliderNoteDisappearingArrowController::get_gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BurstSliderNoteDisappearingArrowController::get_gameNoteController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BurstSliderGameNoteController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorNoteVisuals
#include "GlobalNamespace/ColorNoteVisuals.hpp"
// Including type: NoteControllerBase
#include "GlobalNamespace/NoteControllerBase.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B4B8C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorId
int GlobalNamespace::ColorNoteVisuals::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ColorNoteVisuals", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorId
void GlobalNamespace::ColorNoteVisuals::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorNoteVisuals", "_colorId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _defaultColorAlpha
float& GlobalNamespace::ColorNoteVisuals::dyn__defaultColorAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__defaultColorAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColorAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteControllerBase _noteController
::GlobalNamespace::NoteControllerBase*& GlobalNamespace::ColorNoteVisuals::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteControllerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController[] _materialPropertyBlockControllers
::ArrayW<::GlobalNamespace::MaterialPropertyBlockController*>& GlobalNamespace::ColorNoteVisuals::dyn__materialPropertyBlockControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__materialPropertyBlockControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MaterialPropertyBlockController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _arrowMeshRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::ColorNoteVisuals::dyn__arrowMeshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__arrowMeshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arrowMeshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _circleMeshRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::ColorNoteVisuals::dyn__circleMeshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__circleMeshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_circleMeshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::ColorNoteVisuals::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<ColorNoteVisuals,NoteControllerBase> didInitEvent
::System::Action_2<::GlobalNamespace::ColorNoteVisuals*, ::GlobalNamespace::NoteControllerBase*>*& GlobalNamespace::ColorNoteVisuals::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::ColorNoteVisuals*, ::GlobalNamespace::NoteControllerBase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _noteColor
::UnityEngine::Color& GlobalNamespace::ColorNoteVisuals::dyn__noteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::dyn__noteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorNoteVisuals.set_showArrow
void GlobalNamespace::ColorNoteVisuals::set_showArrow(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::set_showArrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showArrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.set_showCircle
void GlobalNamespace::ColorNoteVisuals::set_showCircle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::set_showCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.add_didInitEvent
void GlobalNamespace::ColorNoteVisuals::add_didInitEvent(::System::Action_2<::GlobalNamespace::ColorNoteVisuals*, ::GlobalNamespace::NoteControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::add_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.remove_didInitEvent
void GlobalNamespace::ColorNoteVisuals::remove_didInitEvent(::System::Action_2<::GlobalNamespace::ColorNoteVisuals*, ::GlobalNamespace::NoteControllerBase*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::remove_didInitEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorNoteVisuals.Awake
void GlobalNamespace::ColorNoteVisuals::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.OnDestroy
void GlobalNamespace::ColorNoteVisuals::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerDidInit
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit(::GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::HandleNoteControllerDidInit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerNoteDidPassJumpThreeQuarters
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters(::GlobalNamespace::NoteControllerBase* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidPassJumpThreeQuarters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidPassJumpThreeQuarters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: ColorNoteVisuals.HandleNoteControllerNoteDidStartDissolving
void GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidStartDissolving(::GlobalNamespace::NoteControllerBase* noteController, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::HandleNoteControllerNoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteControllerNoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, duration);
}
// Autogenerated method: ColorNoteVisuals..cctor
void GlobalNamespace::ColorNoteVisuals::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoteVisuals::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorNoteVisuals", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisappearingArrowController
#include "GlobalNamespace/DisappearingArrowController.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameNoteController _gameNoteController
::GlobalNamespace::GameNoteController*& GlobalNamespace::DisappearingArrowController::dyn__gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisappearingArrowController::dyn__gameNoteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameNoteController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisappearingArrowController.get_gameNoteController
::GlobalNamespace::GameNoteController* GlobalNamespace::DisappearingArrowController::get_gameNoteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisappearingArrowController::get_gameNoteController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameNoteController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameNoteController*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _bigCuttableBySaberList
::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>& GlobalNamespace::GameNoteController::dyn__bigCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__bigCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bigCuttableBySaberList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoxCuttableBySaber[] _smallCuttableBySaberList
::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>& GlobalNamespace::GameNoteController::dyn__smallCuttableBySaberList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__smallCuttableBySaberList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallCuttableBySaberList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BoxCuttableBySaber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _wrapperGO
::UnityEngine::GameObject*& GlobalNamespace::GameNoteController::dyn__wrapperGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__wrapperGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wrapperGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameNoteController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<GameNoteController> cubeNoteControllerDidInitEvent
::System::Action_1<::GlobalNamespace::GameNoteController*>*& GlobalNamespace::GameNoteController::dyn_cubeNoteControllerDidInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn_cubeNoteControllerDidInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cubeNoteControllerDidInitEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::GameNoteController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteVisualModifierType _noteVisualModifierType
::GlobalNamespace::NoteVisualModifierType& GlobalNamespace::GameNoteController::dyn__noteVisualModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__noteVisualModifierType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteVisualModifierType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteVisualModifierType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteData/GameplayType _gameplayType
::GlobalNamespace::NoteData::GameplayType& GlobalNamespace::GameNoteController::dyn__gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__gameplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::GameplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutAngleTolerance
float& GlobalNamespace::GameNoteController::dyn__cutAngleTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::dyn__cutAngleTolerance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutAngleTolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameNoteController.get_noteMovement
::GlobalNamespace::NoteMovement* GlobalNamespace::GameNoteController::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMovement*, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.get_noteVisualModifierType
::GlobalNamespace::NoteVisualModifierType GlobalNamespace::GameNoteController::get_noteVisualModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::get_noteVisualModifierType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteVisualModifierType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteVisualModifierType, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.get_gameplayType
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::GameNoteController::get_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::get_gameplayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData::GameplayType, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.add_cubeNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::add_cubeNoteControllerDidInitEvent(::System::Action_1<::GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::add_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.remove_cubeNoteControllerDidInitEvent
void GlobalNamespace::GameNoteController::remove_cubeNoteControllerDidInitEvent(::System::Action_1<::GlobalNamespace::GameNoteController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::remove_cubeNoteControllerDidInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cubeNoteControllerDidInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameNoteController.Init
void GlobalNamespace::GameNoteController::Init(::GlobalNamespace::NoteData* noteData, float worldRotation, ::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float moveDuration, float jumpDuration, float jumpGravity, ::GlobalNamespace::NoteVisualModifierType noteVisualModifierType, float cutAngleTolerance, float uniformScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(worldRotation), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(noteVisualModifierType), ::il2cpp_utils::ExtractType(cutAngleTolerance), ::il2cpp_utils::ExtractType(uniformScale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData, worldRotation, moveStartPos, moveEndPos, jumpEndPos, moveDuration, jumpDuration, jumpGravity, noteVisualModifierType, cutAngleTolerance, uniformScale);
}
// Autogenerated method: GameNoteController.HandleBigWasCutBySaber
void GlobalNamespace::GameNoteController::HandleBigWasCutBySaber(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::HandleBigWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBigWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleSmallWasCutBySaber
void GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::HandleSmallWasCutBySaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSmallWasCutBySaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: GameNoteController.HandleCut
void GlobalNamespace::GameNoteController::HandleCut(::GlobalNamespace::Saber* saber, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Quaternion orientation, ::UnityEngine::Vector3 cutDirVec, bool allowBadCut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::HandleCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec), ::il2cpp_utils::ExtractType(allowBadCut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec, allowBadCut);
}
// Autogenerated method: GameNoteController.Awake
void GlobalNamespace::GameNoteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.OnDestroy
void GlobalNamespace::GameNoteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidPassMissedMarker
void GlobalNamespace::GameNoteController::NoteDidPassMissedMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::NoteDidPassMissedMarker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidPassMissedMarker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartDissolving
void GlobalNamespace::GameNoteController::NoteDidStartDissolving() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::NoteDidStartDissolving");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartDissolving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.NoteDidStartJump
void GlobalNamespace::GameNoteController::NoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::NoteDidStartJump");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameNoteController.HiddenStateDidChange
void GlobalNamespace::GameNoteController::HiddenStateDidChange(bool hide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::HiddenStateDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HiddenStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hide)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hide);
}
// Autogenerated method: GameNoteController.Pause
void GlobalNamespace::GameNoteController::Pause(bool pause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameNoteController::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pause);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameNoteController/Pool
#include "GlobalNamespace/GameNoteController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGameNoteMirrorable
#include "GlobalNamespace/IGameNoteMirrorable.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteVisualModifierType
#include "GlobalNamespace/NoteVisualModifierType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGameNoteMirrorable.get_noteMovement
::GlobalNamespace::NoteMovement* GlobalNamespace::IGameNoteMirrorable::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameNoteMirrorable::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMovement*, false>(this, ___internal__method);
}
// Autogenerated method: IGameNoteMirrorable.get_noteVisualModifierType
::GlobalNamespace::NoteVisualModifierType GlobalNamespace::IGameNoteMirrorable::get_noteVisualModifierType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameNoteMirrorable::get_noteVisualModifierType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteVisualModifierType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteVisualModifierType, false>(this, ___internal__method);
}
// Autogenerated method: IGameNoteMirrorable.get_gameplayType
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::IGameNoteMirrorable::get_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameNoteMirrorable::get_gameplayType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData::GameplayType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteMirrorable
#include "GlobalNamespace/INoteMirrorable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: INoteControllerNoteDidStartDissolvingEvent
#include "GlobalNamespace/INoteControllerNoteDidStartDissolvingEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteMirrorable.get_noteTransform
::UnityEngine::Transform* GlobalNamespace::INoteMirrorable::get_noteTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INoteMirrorable::get_noteTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: INoteMirrorable.get_noteData
::GlobalNamespace::NoteData* GlobalNamespace::INoteMirrorable::get_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INoteMirrorable::get_noteData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method);
}
// Autogenerated method: INoteMirrorable.get_noteDidStartDissolvingEvent
::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>* GlobalNamespace::INoteMirrorable::get_noteDidStartDissolvingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INoteMirrorable::get_noteDidStartDissolvingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteDidStartDissolvingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::INoteControllerNoteDidStartDissolvingEvent*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteMovementProvider
#include "GlobalNamespace/INoteMovementProvider.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteMovementProvider.get_noteMovement
::GlobalNamespace::NoteMovement* GlobalNamespace::INoteMovementProvider::get_noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INoteMovementProvider::get_noteMovement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMovement*, false>(this, ___internal__method);
}
