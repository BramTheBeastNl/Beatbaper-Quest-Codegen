// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelData::get_audioClip_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelData::get_audioClip_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelData::get_difficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelData::get_difficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelDataSO
#include "GlobalNamespace/BeatmapLevelDataSO.hpp"
// Including type: BeatmapLevelDataSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataSO_DifficultyBeatmapSet.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelDataSO.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelDataSO::get_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataSO::get_audioClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataSO.get_difficultyBeatmapSets
::Array<GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelDataSO::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataSO::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelDataSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelDataSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelDataSO/DifficultyBeatmapSet.get_beatmapCharacteristicSerializedName
::Il2CppString* GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_beatmapCharacteristicSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_beatmapCharacteristicSerializedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicSerializedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelDataSO/DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>* GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataSO::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel
#include "GlobalNamespace/BeatmapLevelFilterModel.hpp"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
// Including type: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0
#include "GlobalNamespace/BeatmapLevelFilterModel_-FilerBeatmapLevelPackCollectionAsync-d__0.hpp"
// Including type: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2
#include "GlobalNamespace/BeatmapLevelFilterModel_-GetAllBeatmapLevelsAsync-d__2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel.FilerBeatmapLevelPackCollectionAsync
System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelCollection*>* GlobalNamespace::BeatmapLevelFilterModel::FilerBeatmapLevelPackCollectionAsync(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks, GlobalNamespace::LevelFilterParams* levelFilterParams, GlobalNamespace::PlayerDataModel* playerDataModel, GlobalNamespace::AdditionalContentModel* additionalContentModel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::FilerBeatmapLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "FilerBeatmapLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPacks, levelFilterParams, playerDataModel, additionalContentModel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelCollection*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelPacks, levelFilterParams, playerDataModel, additionalContentModel, cancellationToken);
}
// Autogenerated method: BeatmapLevelFilterModel.LevelContainsText
bool GlobalNamespace::BeatmapLevelFilterModel::LevelContainsText(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, ::Array<::Il2CppString*>* searchTexts) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::LevelContainsText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "LevelContainsText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevel, searchTexts)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevel, searchTexts);
}
// Autogenerated method: BeatmapLevelFilterModel.GetAllBeatmapLevelsAsync
System::Threading::Tasks::Task_1<System::Collections::Generic::List_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelFilterModel::GetAllBeatmapLevelsAsync(::Array<GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks, GlobalNamespace::SongPackMask songPackMask, bool onlyOwned, GlobalNamespace::AdditionalContentModel* additionalContentModel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::GetAllBeatmapLevelsAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelFilterModel", "GetAllBeatmapLevelsAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPacks, songPackMask, onlyOwned, additionalContentModel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Collections::Generic::List_1<GlobalNamespace::IPreviewBeatmapLevel*>*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelPacks, songPackMask, onlyOwned, additionalContentModel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel/<>c__DisplayClass0_0.<FilerBeatmapLevelPackCollectionAsync>b__0
bool GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::$FilerBeatmapLevelPackCollectionAsync$b__0(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::$$c__DisplayClass0_0::<FilerBeatmapLevelPackCollectionAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FilerBeatmapLevelPackCollectionAsync>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevel))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0
#include "GlobalNamespace/BeatmapLevelFilterModel_-FilerBeatmapLevelPackCollectionAsync-d__0.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelFilterModel/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapLevelFilterModel_--c__DisplayClass0_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0.MoveNext
void GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelFilterModel/<FilerBeatmapLevelPackCollectionAsync>d__0.SetStateMachine
void GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::$FilerBeatmapLevelPackCollectionAsync$d__0::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2
#include "GlobalNamespace/BeatmapLevelFilterModel_-GetAllBeatmapLevelsAsync-d__2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2.MoveNext
void GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelFilterModel/<GetAllBeatmapLevelsAsync>d__2.SetStateMachine
void GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelFilterModel::$GetAllBeatmapLevelsAsync$d__2::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelPack.get_packID
::Il2CppString* GlobalNamespace::IBeatmapLevelPack::get_packID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelPack::get_packID_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelPack.get_packName
::Il2CppString* GlobalNamespace::IBeatmapLevelPack::get_packName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelPack::get_packName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelPack.get_shortPackName
::Il2CppString* GlobalNamespace::IBeatmapLevelPack::get_shortPackName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelPack::get_shortPackName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelPack
#include "GlobalNamespace/BeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelPack.get_packID
::Il2CppString* GlobalNamespace::BeatmapLevelPack::get_packID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_packID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_packName
::Il2CppString* GlobalNamespace::BeatmapLevelPack::get_packName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_packName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_shortPackName
::Il2CppString* GlobalNamespace::BeatmapLevelPack::get_shortPackName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_shortPackName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_collectionName
::Il2CppString* GlobalNamespace::BeatmapLevelPack::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_collectionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_coverImage
UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPack::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_coverImage_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::BeatmapLevelPack::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::get_beatmapLevelCollection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPack.CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering
GlobalNamespace::BeatmapLevelPack* GlobalNamespace::BeatmapLevelPack::CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering(GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPack::CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelPack", "CreateBeatmapLevelPackByUsingBeatmapCharacteristicFiltering", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPack, beatmapCharacteristic)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPack*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelPack, beatmapCharacteristic);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelPackCollection.get_beatmapLevelPacks
::Array<GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::IBeatmapLevelPackCollection::get_beatmapLevelPacks_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelPackCollection::get_beatmapLevelPacks_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IBeatmapLevelPack*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelPackCollection
#include "GlobalNamespace/BeatmapLevelPackCollection.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelPackCollection.get_beatmapLevelPacks
::Array<GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::BeatmapLevelPackCollection::get_beatmapLevelPacks_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackCollection::get_beatmapLevelPacks_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IBeatmapLevelPack*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelPackCollectionContainerSO
#include "GlobalNamespace/BeatmapLevelPackCollectionContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelPackCollectionContainerSO.get_beatmapLevelPackCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackCollectionContainerSO::get_beatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelPackCollectionSO.get_beatmapLevelPacks
::Array<GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::BeatmapLevelPackCollectionSO::get_beatmapLevelPacks_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackCollectionSO::get_beatmapLevelPacks_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IBeatmapLevelPack*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackCollectionSO.LoadAllBeatmapLevelPacks
void GlobalNamespace::BeatmapLevelPackCollectionSO::LoadAllBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackCollectionSO::LoadAllBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadAllBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelPackSO.get_packID
::Il2CppString* GlobalNamespace::BeatmapLevelPackSO::get_packID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_packID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_packName
::Il2CppString* GlobalNamespace::BeatmapLevelPackSO::get_packName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_packName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_shortPackName
::Il2CppString* GlobalNamespace::BeatmapLevelPackSO::get_shortPackName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_shortPackName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_collectionName
::Il2CppString* GlobalNamespace::BeatmapLevelPackSO::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_collectionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::BeatmapLevelPackSO::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_coverImage_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelPackSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::BeatmapLevelPackSO::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelPackSO::get_beatmapLevelCollection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__64
#include "GlobalNamespace/BeatmapLevelSO_-GetPreviewAudioClipAsync-d__64.hpp"
// Including type: BeatmapLevelSO/<GetCoverImageAsync>d__65
#include "GlobalNamespace/BeatmapLevelSO_-GetCoverImageAsync-d__65.hpp"
// Including type: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68
#include "GlobalNamespace/BeatmapLevelSO_-GetBeatmapLevelDataAsync-d__68.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO.get_levelID
::Il2CppString* GlobalNamespace::BeatmapLevelSO::get_levelID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_levelID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songName
::Il2CppString* GlobalNamespace::BeatmapLevelSO::get_songName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_songName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songSubName
::Il2CppString* GlobalNamespace::BeatmapLevelSO::get_songSubName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_songSubName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songAuthorName
::Il2CppString* GlobalNamespace::BeatmapLevelSO::get_songAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_songAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_levelAuthorName
::Il2CppString* GlobalNamespace::BeatmapLevelSO::get_levelAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_levelAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_beatsPerMinute
float GlobalNamespace::BeatmapLevelSO::get_beatsPerMinute_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_beatsPerMinute_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songTimeOffset
float GlobalNamespace::BeatmapLevelSO::get_songTimeOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_songTimeOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_shuffle
float GlobalNamespace::BeatmapLevelSO::get_shuffle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_shuffle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_shufflePeriod
float GlobalNamespace::BeatmapLevelSO::get_shufflePeriod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_shufflePeriod_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewAudioClip
UnityEngine::AudioClip* GlobalNamespace::BeatmapLevelSO::get_previewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_previewAudioClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewAudioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewStartTime
float GlobalNamespace::BeatmapLevelSO::get_previewStartTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_previewStartTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewDuration
float GlobalNamespace::BeatmapLevelSO::get_previewDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_previewDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::BeatmapLevelSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_coverImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelSO::get_environmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_environmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::BeatmapLevelSO::get_allDirectionsEnvironmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_allDirectionsEnvironmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelSO::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_songDuration
float GlobalNamespace::BeatmapLevelSO::get_songDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_songDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::BeatmapLevelSO::get_previewDifficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_previewDifficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.InitFull
void GlobalNamespace::BeatmapLevelSO::InitFull(::Il2CppString* levelID, ::Il2CppString* songName, ::Il2CppString* songSubName, ::Il2CppString* songAuthorName, ::Il2CppString* levelAuthorName, UnityEngine::AudioClip* audioClip, float beatsPerMinute, float songTimeOffset, float shuffle, float shufflePeriod, float previewStartTime, float previewDuration, UnityEngine::Sprite* coverImage, GlobalNamespace::EnvironmentInfoSO* environmentInfo, GlobalNamespace::EnvironmentInfoSO* allDirectionsEnvironmentInfo, ::Array<GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet*>* difficultyBeatmapSets) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::InitFull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitFull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelID, songName, songSubName, songAuthorName, levelAuthorName, audioClip, beatsPerMinute, songTimeOffset, shuffle, shufflePeriod, previewStartTime, previewDuration, coverImage, environmentInfo, allDirectionsEnvironmentInfo, difficultyBeatmapSets)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelID, songName, songSubName, songAuthorName, levelAuthorName, audioClip, beatsPerMinute, songTimeOffset, shuffle, shufflePeriod, previewStartTime, previewDuration, coverImage, environmentInfo, allDirectionsEnvironmentInfo, difficultyBeatmapSets);
}
// Autogenerated method: BeatmapLevelSO.InitData
void GlobalNamespace::BeatmapLevelSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::InitData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::BeatmapLevelSO::GetPreviewAudioClipAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetPreviewAudioClipAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelSO.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::BeatmapLevelSO::GetCoverImageAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetCoverImageAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelSO.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::BeatmapLevelSO::get_beatmapLevelData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::get_beatmapLevelData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO.GetBeatmapLevelDataAsync
System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>* GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataAsync(System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBeatmapLevelDataAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(token)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult>*, false>(this, ___internal__method, token);
}
// Autogenerated method: BeatmapLevelSO.GetDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelSO::GetDifficultyBeatmap(GlobalNamespace::BeatmapCharacteristicSO* characteristic, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(characteristic, difficulty)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method, characteristic, difficulty);
}
// Autogenerated method: BeatmapLevelSO.OnEnable
void GlobalNamespace::BeatmapLevelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelSO/DifficultyBeatmapSet
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_beatmapCharacteristic_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_beatmapCharacteristic_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_difficultyBeatmaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::get_difficultyBeatmaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmapSet.SetParentLevel
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::SetParentLevel(GlobalNamespace::IBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmapSet::SetParentLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetParentLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/DifficultyBeatmap
#include "GlobalNamespace/BeatmapLevelSO_DifficultyBeatmap.hpp"
// Including type: BeatmapDataSO
#include "GlobalNamespace/BeatmapDataSO.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficulty_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficulty_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficultyRank_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_difficultyRank_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpMovementSpeed_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpMovementSpeed_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpStartBeatOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_noteJumpStartBeatOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_beatmapData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_beatmapData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_level_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_level_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/DifficultyBeatmap.SetParents
void GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::SetParents(GlobalNamespace::IBeatmapLevel* parentLevel, GlobalNamespace::IDifficultyBeatmapSet* parentDifficultyBeatmapSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::DifficultyBeatmap::SetParents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetParents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentLevel, parentDifficultyBeatmapSet)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentLevel, parentDifficultyBeatmapSet);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/GetBeatmapLevelDataResult
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/GetBeatmapLevelDataResult/Result
#include "GlobalNamespace/BeatmapLevelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result OK
GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "OK"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result OK
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_OK(GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result NotOwned
GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_NotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_NotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "NotOwned"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result NotOwned
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_NotOwned(GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_NotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "NotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result Fail
GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result>("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelSO/GetBeatmapLevelDataResult/Result Fail
void GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_Fail(GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::GetBeatmapLevelDataResult::Result::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelSO/GetBeatmapLevelDataResult/Result", "Fail", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__64
#include "GlobalNamespace/BeatmapLevelSO_-GetPreviewAudioClipAsync-d__64.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__64.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__64::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__64::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetPreviewAudioClipAsync>d__64.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__64::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetPreviewAudioClipAsync$d__64::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetCoverImageAsync>d__65
#include "GlobalNamespace/BeatmapLevelSO_-GetCoverImageAsync-d__65.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__65.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetCoverImageAsync>d__65.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetCoverImageAsync$d__65::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68
#include "GlobalNamespace/BeatmapLevelSO_-GetBeatmapLevelDataAsync-d__68.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68.MoveNext
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSO/<GetBeatmapLevelDataAsync>d__68.SetStateMachine
void GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelSO::$GetBeatmapLevelDataAsync$d__68::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__31.hpp"
// Including type: BeatmapLevelsModel/<>c__DisplayClass34_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass34_0.hpp"
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__37.hpp"
// Including type: BeatmapLevelPackCollectionContainerSO
#include "GlobalNamespace/BeatmapLevelPackCollectionContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapLevelDataLoaderSO
#include "GlobalNamespace/BeatmapLevelDataLoaderSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMCache`2
#include "GlobalNamespace/HMCache_2.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapLevelLoader
#include "GlobalNamespace/BeatmapLevelLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelsModel.add_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent(System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::add_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.remove_levelDownloadingUpdateEvent
void GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent(System::Action_1<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::remove_levelDownloadingUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDownloadingUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapLevelsModel.get_ostAndExtrasPackCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_ostAndExtrasPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ostAndExtrasPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_dlcBeatmapLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_dlcBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_dlcBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allLoadedBeatmapLevelWithoutCustomLevelPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.get_customLevelPackCollection
GlobalNamespace::IBeatmapLevelPackCollection* GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::get_customLevelPackCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_customLevelPackCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPackCollection*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.Init
void GlobalNamespace::BeatmapLevelsModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.Start
void GlobalNamespace::BeatmapLevelsModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.OnDestroy
void GlobalNamespace::BeatmapLevelsModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ClearLoadedBeatmapLevelsCaches
void GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::ClearLoadedBeatmapLevelsCaches");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLoadedBeatmapLevelsCaches", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.ReloadCustomLevelPackCollectionAsync
System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelPackCollection*>* GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::ReloadCustomLevelPackCollectionAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReloadCustomLevelPackCollectionAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::IBeatmapLevelPackCollection*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPackForLevelId
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPackForLevelId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLevelPackForLevelId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPack
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::BeatmapLevelsModel::GetLevelPack(::Il2CppString* levePacklId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLevelPack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levePacklId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method, levePacklId);
}
// Autogenerated method: BeatmapLevelsModel.GetLevelPreviewForLevelId
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.IsBeatmapLevelLoaded
bool GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::IsBeatmapLevelLoaded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBeatmapLevelLoaded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelIfLoaded
GlobalNamespace::IBeatmapLevel* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelIfLoaded");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBeatmapLevelIfLoaded", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method, levelId);
}
// Autogenerated method: BeatmapLevelsModel.GetBeatmapLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>* GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync(::Il2CppString* levelID, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelID, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::BeatmapLevelsModel::GetBeatmapLevelResult>*, false>(this, ___internal__method, levelID, cancellationToken);
}
// Autogenerated method: BeatmapLevelsModel.HandleLevelDataAssetDownloadUpdate
void GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate(GlobalNamespace::LevelDataAssetDownloadUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::HandleLevelDataAssetDownloadUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleLevelDataAssetDownloadUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(update)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: BeatmapLevelsModel.UpdateLoadedPreviewLevels
void GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::UpdateLoadedPreviewLevels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateLoadedPreviewLevels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel.UpdateAllLoadedBeatmapLevelPacks
void GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::UpdateAllLoadedBeatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAllLoadedBeatmapLevelPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/GetBeatmapLevelResult
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState PreparingToDownload
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Downloading
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState>("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState Completed
void GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate::DownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/LevelDownloadingUpdate/DownloadingState", "Completed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31
#include "GlobalNamespace/BeatmapLevelsModel_-ReloadCustomLevelPackCollectionAsync-d__31.hpp"
// Including type: IBeatmapLevelPackCollection
#include "GlobalNamespace/IBeatmapLevelPackCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<ReloadCustomLevelPackCollectionAsync>d__31.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$ReloadCustomLevelPackCollectionAsync$d__31::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/<>c__DisplayClass34_0
#include "GlobalNamespace/BeatmapLevelsModel_--c__DisplayClass34_0.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelsModel/<>c__DisplayClass34_0.<GetLevelPreviewForLevelId>b__1
bool GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::$GetLevelPreviewForLevelId$b__1(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c__DisplayClass34_0::<GetLevelPreviewForLevelId>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevel))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsModel/<>c
#include "GlobalNamespace/BeatmapLevelsModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapLevelsModel/<>c <>9
GlobalNamespace::BeatmapLevelsModel::$$c* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel::$$c*>("", "BeatmapLevelsModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapLevelsModel/<>c <>9
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9(GlobalNamespace::BeatmapLevelsModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__34_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_get_$$9__34_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>*>("", "BeatmapLevelsModel/<>c", "<>9__34_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.Collections.Generic.IEnumerable`1<IPreviewBeatmapLevel>> <>9__34_0
void GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__34_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::_set_$$9__34_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsModel/<>c", "<>9__34_0", value)));
}
// Autogenerated method: BeatmapLevelsModel/<>c..cctor
void GlobalNamespace::BeatmapLevelsModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelsModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<>c.<GetLevelPreviewForLevelId>b__34_0
System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::BeatmapLevelsModel::$$c::$GetLevelPreviewForLevelId$b__34_0(GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$$c::<GetLevelPreviewForLevelId>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLevelPreviewForLevelId>b__34_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelPack))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37
#include "GlobalNamespace/BeatmapLevelsModel_-GetBeatmapLevelAsync-d__37.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37.MoveNext
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BeatmapLevelsModel/<GetBeatmapLevelAsync>d__37.SetStateMachine
void GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelsModel::$GetBeatmapLevelAsync$d__37::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomBeatmapLevelPack
#include "GlobalNamespace/CustomBeatmapLevelPack.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomBeatmapLevelPack.get_packID
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_packID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_packID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_packName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_packName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_packName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_shortPackName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_shortPackName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_collectionName
::Il2CppString* GlobalNamespace::CustomBeatmapLevelPack::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_collectionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_coverImage
UnityEngine::Sprite* GlobalNamespace::CustomBeatmapLevelPack::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_coverImage_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_beatmapLevelCollection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevelPack.get_isPackAlwaysOwned
bool GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelPack::get_isPackAlwaysOwned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isPackAlwaysOwned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomBeatmapLevelCollection
#include "GlobalNamespace/CustomBeatmapLevelCollection.hpp"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomBeatmapLevelCollection.get_beatmapLevels
::Array<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevelCollection::get_beatmapLevels_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomDifficultyBeatmapSet
#include "GlobalNamespace/CustomDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::get_beatmapCharacteristic_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::get_difficultyBeatmaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmapSet.SetCustomDifficultyBeatmaps
void GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps(::Array<GlobalNamespace::CustomDifficultyBeatmap*>* difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmapSet::SetCustomDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCustomDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmaps)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomDifficultyBeatmap
#include "GlobalNamespace/CustomDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::CustomDifficultyBeatmap::get_level_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_level_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::CustomDifficultyBeatmap::get_difficulty_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_difficulty_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_difficultyRank_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpMovementSpeed_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::CustomDifficultyBeatmap::get_beatmapData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomDifficultyBeatmap::get_beatmapData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomBeatmapLevel
#include "GlobalNamespace/CustomBeatmapLevel.hpp"
// Including type: BeatmapLevelData
#include "GlobalNamespace/BeatmapLevelData.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::get_beatmapLevelData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomBeatmapLevel.SetBeatmapLevelData
void GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData(GlobalNamespace::BeatmapLevelData* beatmapLevelData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomBeatmapLevel::SetBeatmapLevelData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBeatmapLevelData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevelData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomPreviewBeatmapLevel
#include "GlobalNamespace/CustomPreviewBeatmapLevel.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetPreviewAudioClipAsync-d__60.hpp"
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__61.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: IAudioClipAsyncLoader
#include "GlobalNamespace/IAudioClipAsyncLoader.hpp"
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomPreviewBeatmapLevel.get_audioClipAsyncLoader
GlobalNamespace::IAudioClipAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_audioClipAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_audioClipAsyncLoader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClipAsyncLoader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAudioClipAsyncLoader*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_spriteAsyncLoader
GlobalNamespace::ISpriteAsyncLoader* GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_spriteAsyncLoader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spriteAsyncLoader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ISpriteAsyncLoader*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_standardLevelInfoSaveData
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_standardLevelInfoSaveData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_standardLevelInfoSaveData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_customLevelPath
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_customLevelPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_customLevelPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_levelID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songSubName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_levelAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_beatsPerMinute_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songTimeOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_songDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_shuffle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_shufflePeriod_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewStartTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_defaultCoverImage
UnityEngine::Sprite* GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_defaultCoverImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_defaultCoverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_environmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetPreviewAudioClipAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::GetPreviewAudioClipAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: CustomPreviewBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::GetCoverImageAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: CustomPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::get_previewDifficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetPreviewAudioClipAsync-d__60.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60.MoveNext
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetPreviewAudioClipAsync>d__60.SetStateMachine
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetPreviewAudioClipAsync$d__60::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61
#include "GlobalNamespace/CustomPreviewBeatmapLevel_-GetCoverImageAsync-d__61.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61.MoveNext
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: CustomPreviewBeatmapLevel/<GetCoverImageAsync>d__61.SetStateMachine
void GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomPreviewBeatmapLevel::$GetCoverImageAsync$d__61::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EmptyBeatmapLevel
#include "GlobalNamespace/EmptyBeatmapLevel.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_levelID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_levelID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songSubName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songSubName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_levelAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_beatsPerMinute_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songTimeOffset
float GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songTimeOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shuffle
float GlobalNamespace::EmptyBeatmapLevel::get_shuffle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_shuffle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_shufflePeriod
float GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_shufflePeriod_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewStartTime
float GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewStartTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDuration
float GlobalNamespace::EmptyBeatmapLevel::get_previewDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_songDuration
float GlobalNamespace::EmptyBeatmapLevel::get_songDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_songDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_environmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_previewDifficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::GetPreviewAudioClipAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: EmptyBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::GetCoverImageAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: EmptyBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevel::get_beatmapLevelData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EmptyBeatmapLevelData
#include "GlobalNamespace/EmptyBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyBeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::EmptyBeatmapLevelData::get_audioClip_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::get_audioClip_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyBeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyBeatmapLevelData::get_difficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyDifficultyBeatmap
#include "GlobalNamespace/EmptyDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::EmptyDifficultyBeatmap::get_level_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_level_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_difficulty_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_difficultyRank_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpMovementSpeed_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EmptyDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EmptyDifficultyBeatmap::get_beatmapData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevel.get_beatmapLevelData
GlobalNamespace::IBeatmapLevelData* GlobalNamespace::IBeatmapLevel::get_beatmapLevelData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevel::get_beatmapLevelData_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapLevelData.get_audioClip
UnityEngine::AudioClip* GlobalNamespace::IBeatmapLevelData::get_audioClip_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelData::get_audioClip_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_audioClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: IBeatmapLevelData.get_difficultyBeatmapSets
::Array<GlobalNamespace::IDifficultyBeatmapSet*>* GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapLevelData::get_difficultyBeatmapSets_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelDataExtensions
#include "GlobalNamespace/BeatmapLevelDataExtensions.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevelData
#include "GlobalNamespace/IBeatmapLevelData.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelData, beatmapCharacteristic, difficulty)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic, difficulty);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelData, beatmapCharacteristic)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristic);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::Il2CppString* beatmapCharacteristicName, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelData, beatmapCharacteristicName, difficulty)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristicName, difficulty);
}
// Autogenerated method: BeatmapLevelDataExtensions.GetDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet(GlobalNamespace::IBeatmapLevelData* beatmapLevelData, ::Il2CppString* beatmapCharacteristicName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapLevelDataExtensions::GetDifficultyBeatmapSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "BeatmapLevelDataExtensions", "GetDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelData, beatmapCharacteristicName)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelData, beatmapCharacteristicName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmap.get_level
GlobalNamespace::IBeatmapLevel* GlobalNamespace::IDifficultyBeatmap::get_level_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_level_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_parentDifficultyBeatmapSet
GlobalNamespace::IDifficultyBeatmapSet* GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_parentDifficultyBeatmapSet_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentDifficultyBeatmapSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmapSet*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::IDifficultyBeatmap::get_difficulty_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_difficulty_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_difficultyRank
int GlobalNamespace::IDifficultyBeatmap::get_difficultyRank_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_difficultyRank_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_noteJumpMovementSpeed_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_noteJumpStartBeatOffset_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmap.get_beatmapData
GlobalNamespace::BeatmapData* GlobalNamespace::IDifficultyBeatmap::get_beatmapData_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmap::get_beatmapData_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSerializedMethods
#include "GlobalNamespace/DifficultyBeatmapSerializedMethods.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyBeatmapSerializedMethods.SerializedName
::Il2CppString* GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DifficultyBeatmapSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmap)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, difficultyBeatmap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmapSet::get_beatmapCharacteristic_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: IDifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IDifficultyBeatmapSet::get_difficultyBeatmaps_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSet
#include "GlobalNamespace/DifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::get_beatmapCharacteristic_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyBeatmapSet.set_beatmapCharacteristic
void GlobalNamespace::DifficultyBeatmapSet::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::IDifficultyBeatmap*>* GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::get_difficultyBeatmaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IDifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyBeatmapSet.set_difficultyBeatmaps
void GlobalNamespace::DifficultyBeatmapSet::set_difficultyBeatmaps(::Array<GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyBeatmapSet::set_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyBeatmapSetExtensions
#include "GlobalNamespace/DifficultyBeatmapSetExtensions.hpp"
// Including type: IDifficultyBeatmapSet
#include "GlobalNamespace/IDifficultyBeatmapSet.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPreviewBeatmapLevel.get_levelID
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_levelID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_levelID_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songSubName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songSubName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songSubName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songAuthorName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_songAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songAuthorName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_levelAuthorName
::Il2CppString* GlobalNamespace::IPreviewBeatmapLevel::get_levelAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_levelAuthorName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_beatsPerMinute
float GlobalNamespace::IPreviewBeatmapLevel::get_beatsPerMinute_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_beatsPerMinute_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songTimeOffset
float GlobalNamespace::IPreviewBeatmapLevel::get_songTimeOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songTimeOffset_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_shuffle
float GlobalNamespace::IPreviewBeatmapLevel::get_shuffle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_shuffle_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_shufflePeriod
float GlobalNamespace::IPreviewBeatmapLevel::get_shufflePeriod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_shufflePeriod_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewStartTime
float GlobalNamespace::IPreviewBeatmapLevel::get_previewStartTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewStartTime_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewDuration
float GlobalNamespace::IPreviewBeatmapLevel::get_previewDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewDuration_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_songDuration
float GlobalNamespace::IPreviewBeatmapLevel::get_songDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_songDuration_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::IPreviewBeatmapLevel::get_environmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_environmentInfo_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::IPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_allDirectionsEnvironmentInfo_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::IPreviewBeatmapLevel::get_previewDifficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::get_previewDifficultyBeatmapSets_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: IPreviewBeatmapLevel.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::IPreviewBeatmapLevel::GetPreviewAudioClipAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::GetPreviewAudioClipAsync_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: IPreviewBeatmapLevel.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::IPreviewBeatmapLevel::GetCoverImageAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IPreviewBeatmapLevel::GetCoverImageAsync_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD206DC
// Autogenerated static field getter
// Get static field: static public readonly System.Single[] bpmValues
::Array<float>* GlobalNamespace::LevelFilterParams::_get_bpmValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_get_bpmValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<float>*>("", "LevelFilterParams", "bpmValues"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single[] bpmValues
void GlobalNamespace::LevelFilterParams::_set_bpmValues(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::_set_bpmValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelFilterParams", "bpmValues", value));
}
// Autogenerated method: LevelFilterParams.get_filterByLevelIds
bool GlobalNamespace::LevelFilterParams::get_filterByLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByLevelIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByLevelIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByLevelIds
void GlobalNamespace::LevelFilterParams::set_filterByLevelIds(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByLevelIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByLevelIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_beatmapLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::LevelFilterParams::get_beatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_beatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_beatmapLevelIds
void GlobalNamespace::LevelFilterParams::set_beatmapLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_beatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapLevelIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByOwned
bool GlobalNamespace::LevelFilterParams::get_filterByOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByOwned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByOwned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByOwned
void GlobalNamespace::LevelFilterParams::set_filterByOwned(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByOwned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByOwned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_searchText
::Il2CppString* GlobalNamespace::LevelFilterParams::get_searchText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_searchText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_searchText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_searchText
void GlobalNamespace::LevelFilterParams::set_searchText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_searchText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_searchText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByDifficulty
bool GlobalNamespace::LevelFilterParams::get_filterByDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByDifficulty
void GlobalNamespace::LevelFilterParams::set_filterByDifficulty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredDifficulty
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::LevelFilterParams::get_filteredDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filteredDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredDifficulty
void GlobalNamespace::LevelFilterParams::set_filteredDifficulty(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filteredDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterBySongPacks
bool GlobalNamespace::LevelFilterParams::get_filterBySongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterBySongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterBySongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterBySongPacks
void GlobalNamespace::LevelFilterParams::set_filterBySongPacks(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterBySongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterBySongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredSongPacks
GlobalNamespace::SongPackMask GlobalNamespace::LevelFilterParams::get_filteredSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filteredSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredSongPacks
void GlobalNamespace::LevelFilterParams::set_filteredSongPacks(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filteredSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByCharacteristic
bool GlobalNamespace::LevelFilterParams::get_filterByCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByCharacteristic
void GlobalNamespace::LevelFilterParams::set_filterByCharacteristic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelFilterParams::get_filteredCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filteredCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredCharacteristic
void GlobalNamespace::LevelFilterParams::set_filteredCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filteredCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByNotPlayedYet
bool GlobalNamespace::LevelFilterParams::get_filterByNotPlayedYet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByNotPlayedYet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByNotPlayedYet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByNotPlayedYet
void GlobalNamespace::LevelFilterParams::set_filterByNotPlayedYet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByNotPlayedYet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByNotPlayedYet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByMinBpm
bool GlobalNamespace::LevelFilterParams::get_filterByMinBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByMinBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByMinBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByMinBpm
void GlobalNamespace::LevelFilterParams::set_filterByMinBpm(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByMinBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByMinBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredMinBpm
float GlobalNamespace::LevelFilterParams::get_filteredMinBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredMinBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filteredMinBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredMinBpm
void GlobalNamespace::LevelFilterParams::set_filteredMinBpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredMinBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filteredMinBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filterByMaxBpm
bool GlobalNamespace::LevelFilterParams::get_filterByMaxBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filterByMaxBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filterByMaxBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filterByMaxBpm
void GlobalNamespace::LevelFilterParams::set_filterByMaxBpm(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filterByMaxBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filterByMaxBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.get_filteredMaxBpm
float GlobalNamespace::LevelFilterParams::get_filteredMaxBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::get_filteredMaxBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_filteredMaxBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelFilterParams.set_filteredMaxBpm
void GlobalNamespace::LevelFilterParams::set_filteredMaxBpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::set_filteredMaxBpm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_filteredMaxBpm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelFilterParams.IsWithoutFilter
bool GlobalNamespace::LevelFilterParams::IsWithoutFilter(bool ignoreFilterBySongs) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::IsWithoutFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWithoutFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreFilterBySongs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ignoreFilterBySongs);
}
// Autogenerated method: LevelFilterParams.NoFilter
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::NoFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::NoFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LevelFilterParams", "NoFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LevelFilterParams.ByBeatmapLevelIds
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::ByBeatmapLevelIds(System::Collections::Generic::HashSet_1<::Il2CppString*>* beatmapLevelIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::ByBeatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LevelFilterParams", "ByBeatmapLevelIds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapLevelIds)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapLevelIds);
}
// Autogenerated method: LevelFilterParams.ByBeatmapCharacteristic
GlobalNamespace::LevelFilterParams* GlobalNamespace::LevelFilterParams::ByBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::ByBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LevelFilterParams", "ByBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapCharacteristic)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelFilterParams*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: LevelFilterParams..cctor
void GlobalNamespace::LevelFilterParams::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelFilterParams::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "LevelFilterParams", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelCollectionSO
#include "GlobalNamespace/PreviewBeatmapLevelCollectionSO.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelCollectionSO.get_beatmapLevels
::Array<GlobalNamespace::IPreviewBeatmapLevel*>* GlobalNamespace::PreviewBeatmapLevelCollectionSO::get_beatmapLevels_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelCollectionSO::get_beatmapLevels_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::IPreviewBeatmapLevel*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: PreviewBeatmapLevelCollectionSO
#include "GlobalNamespace/PreviewBeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelPackSO.get_packID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_packID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_packID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_packName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_packName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_packName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_packName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_shortPackName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_shortPackName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_shortPackName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shortPackName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_collectionName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelPackSO::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_collectionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::PreviewBeatmapLevelPackSO::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_coverImage_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelPackSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::PreviewBeatmapLevelPackSO::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelPackSO::get_beatmapLevelCollection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO.get_levelID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelID_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelID_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songSubName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_levelAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_beatsPerMinute
float GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songTimeOffset
float GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shuffle
float GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shufflePeriod
float GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewStartTime
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.InitData
void GlobalNamespace::PreviewBeatmapLevelSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::InitData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync_NEW(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: PreviewBeatmapLevelSO.OnEnable
void GlobalNamespace::PreviewBeatmapLevelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapDifficulties
::Array<GlobalNamespace::BeatmapDifficulty>* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapDifficulty>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper.hpp"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kFirstAlphabet
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstAlphabet
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char kNonAlphabetChar
::Il2CppChar GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char kNonAlphabetChar
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxCharactersCount
int GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxCharactersCount
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount", value));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper.CreateData
::Array<GlobalNamespace::AlphabetScrollInfo::Data*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData(::Array<GlobalNamespace::IPreviewBeatmapLevel*>* previewBeatmapLevels, ::Array<GlobalNamespace::IPreviewBeatmapLevel*>*& sortedPreviewBeatmapLevels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper", "CreateData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevels, sortedPreviewBeatmapLevels)));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::AlphabetScrollInfo::Data*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, previewBeatmapLevels, sortedPreviewBeatmapLevels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9(GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0(System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0", value)));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c..cctor
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c.<CreateData>b__3_0
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::$CreateData$b__3_0(GlobalNamespace::IPreviewBeatmapLevel* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::<CreateData>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateData>b__3_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent_NEW(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent_NEW(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync_NEW(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: IBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync_NEW(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GetAssetBundleFileResult
#include "GlobalNamespace/GetAssetBundleFileResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelDataAssetDownloadUpdate/AssetDownloadingState
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel
#include "GlobalNamespace/TestBeatmapDataAssetFileModel.hpp"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAssetsDir
::Il2CppString* GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "TestBeatmapDataAssetFileModel", "kAssetsDir"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAssetsDir
void GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestBeatmapDataAssetFileModel", "kAssetsDir", value));
}
// Autogenerated method: TestBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent_NEW(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent_NEW(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync_NEW(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync_NEW(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine_NEW(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_collectionName
::Il2CppString* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_coverImage
UnityEngine::Sprite* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlaylistSO
#include "GlobalNamespace/PlaylistSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlaylistSO.get_collectionName
::Il2CppString* GlobalNamespace::PlaylistSO::get_collectionName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_collectionName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::PlaylistSO::get_coverImage_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_coverImage_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::PlaylistSO::get_beatmapLevelCollection_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_beatmapLevelCollection_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultBeatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultBeatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName", value));
}
// Autogenerated method: StandardLevelInfoSaveData.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_allDirectionsEnvironmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_difficultyBeatmapSets
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songFilename)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_beatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100
#include "GlobalNamespace/StandardLevelInfoSaveData_V100.hpp"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData_V100", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData_V100", "kCurrentVersion", value));
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songFilename)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData_V100", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData_V100/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LanguageSettingsPresetsSO
#include "GlobalNamespace/LanguageSettingsPresetsSO.hpp"
// Including type: LanguageSettingsPresetsSO/Preset
#include "GlobalNamespace/LanguageSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LanguageSettingsPresetsSO.get_presets
::Array<GlobalNamespace::LanguageSettingsPresetsSO::Preset*>* GlobalNamespace::LanguageSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::LanguageSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: LanguageSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::LanguageSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSettingsPresetsSO/Preset
#include "GlobalNamespace/LanguageSettingsPresetsSO_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsBestGraphicsValues
#include "GlobalNamespace/MainSettingsBestGraphicsValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSettingsBestGraphicsValues.ApplyValues
void GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainSettingsBestGraphicsValues", "ApplyValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainSettingsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsDefaultValues
#include "GlobalNamespace/MainSettingsDefaultValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionWidth
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionWidth
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionHeight
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionHeight
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultVrResolutionScale
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultVrResolutionScale
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultAudioLatency
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultAudioLatency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultAudioLatency
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAudioLatency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxShockwaveParticles
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxShockwaveParticles"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxShockwaveParticles
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxShockwaveParticles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
void GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel", value));
}
// Autogenerated method: MainSettingsDefaultValues.SetFixedDefaultValues
void GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainSettingsDefaultValues", "SetFixedDefaultValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainSettingsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultPlayerHeight
float GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kDefaultPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultPlayerHeight
void GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kDefaultPlayerHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kHeadPosToPlayerHeightOffset
float GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kHeadPosToPlayerHeightOffset
void GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFileName
void GlobalNamespace::MainSettingsModelSO::_set_kFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::MainSettingsModelSO::_set_kTempFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kBackupFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersPositionOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersPositionOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersPositionOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersPositionOffsetLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersRotationOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersRotationOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersRotationOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersRotationOffsetLimit", value));
}
// Autogenerated method: MainSettingsModelSO.get_createScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_createScreenshotDuringTheGame
void GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.get_playingForTheFirstTime
bool GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_playingForTheFirstTime
void GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.Save
void GlobalNamespace::MainSettingsModelSO::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.Load
void GlobalNamespace::MainSettingsModelSO::Load(bool forced) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forced)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forced);
}
// Autogenerated method: MainSettingsModelSO.__DeleteSettingsFiles
void GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__DeleteSettingsFiles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnDisable
void GlobalNamespace::MainSettingsModelSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnEnable
void GlobalNamespace::MainSettingsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Windowed
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Windowed"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Windowed
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Windowed", value));
}
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Fullscreen
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Fullscreen"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Fullscreen
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Fullscreen", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_presets
::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPreset.get_presetNameLocalizationKey
::Il2CppString* GlobalNamespace::NamedPreset::get_presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPreset::get_presetNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presetNameLocalizationKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::NamedPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPresetsSO::get_namedPresets_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsColor
GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSO*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsIntensity
float GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsIntensity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_lightIdColorPairs
::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>* GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lightIdColorPairs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsPresetSO/LightIdColorPair.get_lightColor
UnityEngine::Color GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionCompletionResults.get_IsMissionComplete
bool GlobalNamespace::MissionCompletionResults::get_IsMissionComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::get_IsMissionComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsMissionComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CampaignProgressModel.get_numberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_numberOfClearedMissions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.Awake
void GlobalNamespace::CampaignProgressModel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.IsMissionRegistered
bool GlobalNamespace::CampaignProgressModel::IsMissionRegistered(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionRegistered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionRegistered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.RegisterMissionId
void GlobalNamespace::CampaignProgressModel::RegisterMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::RegisterMissionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterMissionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionCleared
bool GlobalNamespace::CampaignProgressModel::IsMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionFinal
bool GlobalNamespace::CampaignProgressModel::IsMissionFinal(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionFinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionFinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetFinalMissionId
void GlobalNamespace::CampaignProgressModel::SetFinalMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetFinalMissionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFinalMissionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.WillFinishGameAfterThisMission
bool GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillFinishGameAfterThisMission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetMissionCleared
void GlobalNamespace::CampaignProgressModel::SetMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.__SetMissionCleared
void GlobalNamespace::CampaignProgressModel::__SetMissionCleared(::Il2CppString* missionId, bool cleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::__SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__SetMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId, cleared)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, cleared);
}
// Autogenerated method: CampaignProgressModel.UpdateNumberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateNumberOfClearedMissions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DistanceObjectiveValueFormatterSO
#include "GlobalNamespace/DistanceObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DistanceObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionDataSO.get_missionObjectives
::Array<GlobalNamespace::MissionObjective*>* GlobalNamespace::MissionDataSO::get_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionObjectives");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionObjectives", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionObjective*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_level
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionDataSO::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_level");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionDataSO::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_missionHelp
GlobalNamespace::MissionHelpSO* GlobalNamespace::MissionDataSO::get_missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionHelp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionHelp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionHelpSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.OnValidate
void GlobalNamespace::MissionDataSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionHelpSO.get_missionHelpId
::Il2CppString* GlobalNamespace::MissionHelpSO::get_missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpSO::get_missionHelpId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionHelpId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjective.get_type
GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjectiveTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValueComparisonType
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::get_referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValueComparisonType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_referenceValueComparisonType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjective::ReferenceValueComparisonType, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValue
int GlobalNamespace::MissionObjective::get_referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_referenceValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.Equals
bool GlobalNamespace::MissionObjective::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MissionObjective.GetHashCode
int GlobalNamespace::MissionObjective::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.op_Equality
bool GlobalNamespace::operator ==(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionObjective", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj1, &obj2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated method: MissionObjective.op_Inequality
bool GlobalNamespace::operator !=(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionObjective", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj1, &obj2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjective/ReferenceValueComparisonType
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType None
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType None
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Equal
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Equal
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Max
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Max"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Max
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Min
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Min"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Min
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Min", value));
}
