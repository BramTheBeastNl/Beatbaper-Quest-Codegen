// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO.InitData
void GlobalNamespace::PreviewBeatmapLevelSO::InitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::InitData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_levelID
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songSubName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_levelAuthorName
::Il2CppString* GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_beatsPerMinute
float GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songTimeOffset
float GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_songDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_songDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shuffle
float GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_shufflePeriod
float GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewStartTime
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDuration
float GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_environmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_environmentInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_allDirectionsEnvironmentInfo
GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_allDirectionsEnvironmentInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.get_previewDifficultyBeatmapSets
::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>* GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::get_previewDifficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDifficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::PreviewDifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.OnEnable
void GlobalNamespace::PreviewBeatmapLevelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetPreviewAudioClipAsync
System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>* GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetPreviewAudioClipAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreviewAudioClipAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::AudioClip*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: PreviewBeatmapLevelSO.GetCoverImageAsync
System::Threading::Tasks::Task_1<UnityEngine::Sprite*>* GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::GetCoverImageAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCoverImageAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<UnityEngine::Sprite*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetPreviewAudioClipAsync-d__51.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetPreviewAudioClipAsync>d__51.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetPreviewAudioClipAsync$d__51::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52
#include "GlobalNamespace/PreviewBeatmapLevelSO_-GetCoverImageAsync-d__52.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.MoveNext
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PreviewBeatmapLevelSO/<GetCoverImageAsync>d__52.SetStateMachine
void GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewBeatmapLevelSO::$GetCoverImageAsync$d__52::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviewDifficultyBeatmapSet
#include "GlobalNamespace/PreviewDifficultyBeatmapSet.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: PreviewDifficultyBeatmapSet.get_beatmapDifficulties
::Array<GlobalNamespace::BeatmapDifficulty>* GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviewDifficultyBeatmapSet::get_beatmapDifficulties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BeatmapDifficulty>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper.hpp"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kFirstAlphabet
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kFirstAlphabet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstAlphabet
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kFirstAlphabet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kFirstAlphabet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char kNonAlphabetChar
::Il2CppChar GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kNonAlphabetChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char kNonAlphabetChar
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kNonAlphabetChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kNonAlphabetChar", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxCharactersCount
int GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_get_kMaxCharactersCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxCharactersCount
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::_set_kMaxCharactersCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper", "kMaxCharactersCount", value));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper.CreateData
::Array<GlobalNamespace::AlphabetScrollInfo::Data*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData(::Array<GlobalNamespace::IPreviewBeatmapLevel*>* previewBeatmapLevels, ::Array<GlobalNamespace::IPreviewBeatmapLevel*>*& sortedPreviewBeatmapLevels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::CreateData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper", "CreateData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevels, sortedPreviewBeatmapLevels)));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::AlphabetScrollInfo::Data*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, previewBeatmapLevels, sortedPreviewBeatmapLevels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlphabetScrollbarInfoBeatmapLevelHelper/<>c
#include "GlobalNamespace/AlphabetScrollbarInfoBeatmapLevelHelper_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AlphabetScrollbarInfoBeatmapLevelHelper/<>c <>9
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9(GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>*>("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IPreviewBeatmapLevel,System.String> <>9__3_0
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0(System::Func_2<GlobalNamespace::IPreviewBeatmapLevel*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", "<>9__3_0", value)));
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c..cctor
void GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AlphabetScrollbarInfoBeatmapLevelHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: AlphabetScrollbarInfoBeatmapLevelHelper/<>c.<CreateData>b__3_0
::Il2CppString* GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::$CreateData$b__3_0(GlobalNamespace::IPreviewBeatmapLevel* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlphabetScrollbarInfoBeatmapLevelHelper::$$c::<CreateData>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateData>b__3_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBeatmapDataAssetFileModel
#include "GlobalNamespace/IBeatmapDataAssetFileModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: IBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GetAssetBundleFileResult
#include "GlobalNamespace/GetAssetBundleFileResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelDataAssetDownloadUpdate
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelDataAssetDownloadUpdate/AssetDownloadingState
#include "GlobalNamespace/LevelDataAssetDownloadUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_PreparingToDownload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState PreparingToDownload
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_PreparingToDownload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "PreparingToDownload", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Downloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Downloading
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Downloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Downloading", value));
}
// Autogenerated static field getter
// Get static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState>("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public LevelDataAssetDownloadUpdate/AssetDownloadingState Completed
void GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed(GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelDataAssetDownloadUpdate::AssetDownloadingState::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelDataAssetDownloadUpdate/AssetDownloadingState", "Completed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel
#include "GlobalNamespace/TestBeatmapDataAssetFileModel.hpp"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kAssetsDir
::Il2CppString* GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_get_kAssetsDir");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "TestBeatmapDataAssetFileModel", "kAssetsDir"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAssetsDir
void GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::_set_kAssetsDir");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TestBeatmapDataAssetFileModel", "kAssetsDir", value));
}
// Autogenerated method: TestBeatmapDataAssetFileModel.add_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::add_levelDataAssetDownloadUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.remove_levelDataAssetDownloadUpdateEvent
void GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent(System::Action_1<GlobalNamespace::LevelDataAssetDownloadUpdate>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::remove_levelDataAssetDownloadUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDataAssetDownloadUpdateEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.GetAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>* GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::GetAssetBundleFileForPreviewLevelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::GetAssetBundleFileResult>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated method: TestBeatmapDataAssetFileModel.TryDeleteAssetBundleFileForPreviewLevelAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::TryDeleteAssetBundleFileForPreviewLevelAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryDeleteAssetBundleFileForPreviewLevelAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, previewBeatmapLevel, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-GetAssetBundleFileForPreviewLevelAsync-d__4.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<GetAssetBundleFileForPreviewLevelAsync>d__4.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$GetAssetBundleFileForPreviewLevelAsync$d__4::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5
#include "GlobalNamespace/TestBeatmapDataAssetFileModel_-TryDeleteAssetBundleFileForPreviewLevelAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.MoveNext
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestBeatmapDataAssetFileModel/<TryDeleteAssetBundleFileForPreviewLevelAsync>d__5.SetStateMachine
void GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestBeatmapDataAssetFileModel::$TryDeleteAssetBundleFileForPreviewLevelAsync$d__5::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_collectionName
::Il2CppString* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_collectionName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_coverImage
UnityEngine::Sprite* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_coverImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: IAnnotatedBeatmapLevelCollection.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IAnnotatedBeatmapLevelCollection::get_beatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlaylistSO
#include "GlobalNamespace/PlaylistSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
// Including type: IBeatmapLevelCollection
#include "GlobalNamespace/IBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlaylistSO.get_collectionName
::Il2CppString* GlobalNamespace::PlaylistSO::get_collectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_collectionName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_collectionName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_coverImage
UnityEngine::Sprite* GlobalNamespace::PlaylistSO::get_coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_coverImage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: PlaylistSO.get_beatmapLevelCollection
GlobalNamespace::IBeatmapLevelCollection* GlobalNamespace::PlaylistSO::get_beatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlaylistSO::get_beatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevelCollection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultBeatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_get_kDefaultBeatmapCharacteristicName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultBeatmapCharacteristicName
void GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::_set_kDefaultBeatmapCharacteristicName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData", "kDefaultBeatmapCharacteristicName", value));
}
// Autogenerated method: StandardLevelInfoSaveData.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_allDirectionsEnvironmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_allDirectionsEnvironmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_allDirectionsEnvironmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_difficultyBeatmapSets
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>* GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_difficultyBeatmapSets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmapSets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songFilename)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmapSet
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmapSet.hpp"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_beatmapCharacteristicName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_beatmapCharacteristicName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmapSet.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmapSet::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData/DifficultyBeatmap.get_noteJumpStartBeatOffset
float GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100
#include "GlobalNamespace/StandardLevelInfoSaveData_V100.hpp"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: StandardLevelInfoSaveData
#include "GlobalNamespace/StandardLevelInfoSaveData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kCurrentVersion
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelInfoSaveData_V100", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.String kCurrentVersion
void GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelInfoSaveData_V100", "kCurrentVersion", value));
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songSubName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songSubName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songSubName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_levelAuthorName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_levelAuthorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAuthorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_beatsPerMinute
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_beatsPerMinute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatsPerMinute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songTimeOffset
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shuffle
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shuffle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shuffle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_shufflePeriod
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_shufflePeriod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_shufflePeriod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewStartTime
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_previewDuration
float GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_previewDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_songFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_songFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_coverImageFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_coverImageFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_coverImageFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_environmentName
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_difficultyBeatmaps
::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>* GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_difficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap*>*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.get_hasAllData
bool GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::get_hasAllData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasAllData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SetSongFilename
void GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename(::Il2CppString* songFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SetSongFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSongFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songFilename)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songFilename);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.SerializeToJSONString
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100.DeserializeFromJSONString
GlobalNamespace::StandardLevelInfoSaveData* GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString(::Il2CppString* stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "StandardLevelInfoSaveData_V100", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringData)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::StandardLevelInfoSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/DifficultyBeatmap
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_DifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficulty
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_difficultyRank
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_difficultyRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_beatmapFilename
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_beatmapFilename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapFilename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpMovementSpeed
float GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpMovementSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpMovementSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelInfoSaveData_V100/DifficultyBeatmap.get_noteJumpStartBeatOffset
int GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::DifficultyBeatmap::get_noteJumpStartBeatOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noteJumpStartBeatOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelInfoSaveData_V100/VersionCheck
#include "GlobalNamespace/StandardLevelInfoSaveData_V100_VersionCheck.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelInfoSaveData_V100/VersionCheck.get_version
::Il2CppString* GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelInfoSaveData_V100::VersionCheck::get_version");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LanguageSettingsPresetsSO
#include "GlobalNamespace/LanguageSettingsPresetsSO.hpp"
// Including type: LanguageSettingsPresetsSO/Preset
#include "GlobalNamespace/LanguageSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LanguageSettingsPresetsSO.get_presets
::Array<GlobalNamespace::LanguageSettingsPresetsSO::Preset*>* GlobalNamespace::LanguageSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::LanguageSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: LanguageSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::LanguageSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LanguageSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSettingsPresetsSO/Preset
#include "GlobalNamespace/LanguageSettingsPresetsSO_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_presets
::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MainEffectGraphicsSettingsPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainEffectGraphicsSettingsPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainEffectGraphicsSettingsPresetsSO/Preset
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO_Preset.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsBestGraphicsValues
#include "GlobalNamespace/MainSettingsBestGraphicsValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSettingsBestGraphicsValues.ApplyValues
void GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsBestGraphicsValues::ApplyValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainSettingsBestGraphicsValues", "ApplyValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainSettingsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsDefaultValues
#include "GlobalNamespace/MainSettingsDefaultValues.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultRoomCenterZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultRoomCenterZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultRoomCenterZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultRoomCenterZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultRoomCenterZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerPositionZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerPositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerPositionZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerPositionZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerPositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerPositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationX
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationX
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationY
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationY"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationY
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationY(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDetaultControllerRotationZ
float GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDetaultControllerRotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDetaultControllerRotationZ"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDetaultControllerRotationZ
void GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationZ(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDetaultControllerRotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDetaultControllerRotationZ", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionWidth
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionWidth
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultWindowResolutionHeight
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultWindowResolutionHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultWindowResolutionHeight
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultWindowResolutionHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultWindowResolutionHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultBloomGraphicsSettings
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBloomGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultBloomGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBloomGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBloomGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultSmokeGraphicsSettings
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultSmokeGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultSmokeGraphicsSettings
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultSmokeGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultSmokeGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultVrResolutionScale
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultVrResolutionScale
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultAudioLatency
float GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultAudioLatency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsDefaultValues", "kDefaultAudioLatency"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultAudioLatency
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultAudioLatency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultAudioLatency", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxShockwaveParticles
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxShockwaveParticles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxShockwaveParticles"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxShockwaveParticles
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxShockwaveParticles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxShockwaveParticles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxNumberOfCutSoundEffects
int GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kMaxNumberOfCutSoundEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxNumberOfCutSoundEffects
void GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kMaxNumberOfCutSoundEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kMaxNumberOfCutSoundEffects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean kCreateScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kCreateScreenshotDuringTheGame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean kCreateScreenshotDuringTheGame
void GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kCreateScreenshotDuringTheGame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kCreateScreenshotDuringTheGame", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
int GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_get_kDefaultPauseButtonPressDurationLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kDefaultPauseButtonPressDurationLevel
void GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::_set_kDefaultPauseButtonPressDurationLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsDefaultValues", "kDefaultPauseButtonPressDurationLevel", value));
}
// Autogenerated method: MainSettingsDefaultValues.SetFixedDefaultValues
void GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues(GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsDefaultValues::SetFixedDefaultValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MainSettingsDefaultValues", "SetFixedDefaultValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mainSettingsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mainSettingsModel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefaultPlayerHeight
float GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kDefaultPlayerHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kDefaultPlayerHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefaultPlayerHeight
void GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kDefaultPlayerHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kDefaultPlayerHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kHeadPosToPlayerHeightOffset
float GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kHeadPosToPlayerHeightOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kHeadPosToPlayerHeightOffset
void GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kHeadPosToPlayerHeightOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kHeadPosToPlayerHeightOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFileName
void GlobalNamespace::MainSettingsModelSO::_set_kFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTempFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kTempFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kTempFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kTempFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTempFileName
void GlobalNamespace::MainSettingsModelSO::_set_kTempFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kTempFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kTempFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackupFileName
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kBackupFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kBackupFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackupFileName
void GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kBackupFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kBackupFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::Il2CppString* GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MainSettingsModelSO", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersPositionOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersPositionOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersPositionOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersPositionOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersPositionOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersPositionOffsetLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kControllersRotationOffsetLimit
float GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_get_kControllersRotationOffsetLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MainSettingsModelSO", "kControllersRotationOffsetLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kControllersRotationOffsetLimit
void GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::_set_kControllersRotationOffsetLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO", "kControllersRotationOffsetLimit", value));
}
// Autogenerated method: MainSettingsModelSO.get_createScreenshotDuringTheGame
bool GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_createScreenshotDuringTheGame
void GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_createScreenshotDuringTheGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_createScreenshotDuringTheGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.get_playingForTheFirstTime
bool GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::get_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.set_playingForTheFirstTime
void GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::set_playingForTheFirstTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_playingForTheFirstTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsModelSO.Save
void GlobalNamespace::MainSettingsModelSO::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.Load
void GlobalNamespace::MainSettingsModelSO::Load(bool forced) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(forced)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forced);
}
// Autogenerated method: MainSettingsModelSO.__DeleteSettingsFiles
void GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::__DeleteSettingsFiles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__DeleteSettingsFiles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnDisable
void GlobalNamespace::MainSettingsModelSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsModelSO.OnEnable
void GlobalNamespace::MainSettingsModelSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsModelSO/WindowMode
#include "GlobalNamespace/MainSettingsModelSO_WindowMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Windowed
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Windowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Windowed"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Windowed
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Windowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Windowed", value));
}
// Autogenerated static field getter
// Get static field: static public MainSettingsModelSO/WindowMode Fullscreen
GlobalNamespace::MainSettingsModelSO::WindowMode GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_get_Fullscreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainSettingsModelSO::WindowMode>("", "MainSettingsModelSO/WindowMode", "Fullscreen"));
}
// Autogenerated static field setter
// Set static field: static public MainSettingsModelSO/WindowMode Fullscreen
void GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen(GlobalNamespace::MainSettingsModelSO::WindowMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsModelSO::WindowMode::_set_Fullscreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainSettingsModelSO/WindowMode", "Fullscreen", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsModelSO/Config
#include "GlobalNamespace/MainSettingsModelSO_Config.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_presets
::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_presets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MirrorRendererGraphicsSettingsPresets::Preset*>*, false>(this, ___internal__method);
}
// Autogenerated method: MirrorRendererGraphicsSettingsPresets.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MirrorRendererGraphicsSettingsPresets::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MirrorRendererGraphicsSettingsPresets/Preset
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets_Preset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPreset.get_presetNameLocalizationKey
::Il2CppString* GlobalNamespace::NamedPreset::get_presetNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPreset::get_presetNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_presetNameLocalizationKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedPresetsSO
#include "GlobalNamespace/NamedPresetsSO.hpp"
// Including type: NamedPreset
#include "GlobalNamespace/NamedPreset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedPresetsSO.get_namedPresets
::Array<GlobalNamespace::NamedPreset*>* GlobalNamespace::NamedPresetsSO::get_namedPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedPresetsSO::get_namedPresets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_namedPresets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::NamedPreset*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsColor
GlobalNamespace::ColorSO* GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSO*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_playersPlaceNeonsIntensity
float GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_playersPlaceNeonsIntensity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersPlaceNeonsIntensity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsPresetSO.get_lightIdColorPairs
::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>* GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::get_lightIdColorPairs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lightIdColorPairs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MenuLightsPresetSO::LightIdColorPair*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsPresetSO/LightIdColorPair
#include "GlobalNamespace/MenuLightsPresetSO_LightIdColorPair.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuLightsPresetSO/LightIdColorPair.get_lightColor
UnityEngine::Color GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuLightsPresetSO::LightIdColorPair::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionCompletionResults.get_IsMissionComplete
bool GlobalNamespace::MissionCompletionResults::get_IsMissionComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionCompletionResults::get_IsMissionComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsMissionComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CampaignProgressModel.get_numberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::get_numberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_numberOfClearedMissions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.Awake
void GlobalNamespace::CampaignProgressModel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CampaignProgressModel.IsMissionRegistered
bool GlobalNamespace::CampaignProgressModel::IsMissionRegistered(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionRegistered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionRegistered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.RegisterMissionId
void GlobalNamespace::CampaignProgressModel::RegisterMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::RegisterMissionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterMissionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionCleared
bool GlobalNamespace::CampaignProgressModel::IsMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.IsMissionFinal
bool GlobalNamespace::CampaignProgressModel::IsMissionFinal(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::IsMissionFinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMissionFinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetFinalMissionId
void GlobalNamespace::CampaignProgressModel::SetFinalMissionId(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetFinalMissionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFinalMissionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.WillFinishGameAfterThisMission
bool GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::WillFinishGameAfterThisMission");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WillFinishGameAfterThisMission", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.SetMissionCleared
void GlobalNamespace::CampaignProgressModel::SetMissionCleared(::Il2CppString* missionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId);
}
// Autogenerated method: CampaignProgressModel.__SetMissionCleared
void GlobalNamespace::CampaignProgressModel::__SetMissionCleared(::Il2CppString* missionId, bool cleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::__SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__SetMissionCleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId, cleared)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, cleared);
}
// Autogenerated method: CampaignProgressModel.UpdateNumberOfClearedMissions
int GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CampaignProgressModel::UpdateNumberOfClearedMissions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateNumberOfClearedMissions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DistanceObjectiveValueFormatterSO
#include "GlobalNamespace/DistanceObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DistanceObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DistanceObjectiveValueFormatterSO::FormatValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionDataSO.get_missionObjectives
::Array<GlobalNamespace::MissionObjective*>* GlobalNamespace::MissionDataSO::get_missionObjectives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionObjectives");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionObjectives", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MissionObjective*>*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_level
GlobalNamespace::BeatmapLevelSO* GlobalNamespace::MissionDataSO::get_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_level");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MissionDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MissionDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::MissionDataSO::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.get_missionHelp
GlobalNamespace::MissionHelpSO* GlobalNamespace::MissionDataSO::get_missionHelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::get_missionHelp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionHelp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionHelpSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionDataSO.OnValidate
void GlobalNamespace::MissionDataSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionHelpSO.get_missionHelpId
::Il2CppString* GlobalNamespace::MissionHelpSO::get_missionHelpId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpSO::get_missionHelpId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionHelpId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjective.get_type
GlobalNamespace::MissionObjectiveTypeSO* GlobalNamespace::MissionObjective::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjectiveTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValueComparisonType
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::get_referenceValueComparisonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValueComparisonType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_referenceValueComparisonType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjective::ReferenceValueComparisonType, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.get_referenceValue
int GlobalNamespace::MissionObjective::get_referenceValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::get_referenceValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_referenceValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.Equals
bool GlobalNamespace::MissionObjective::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MissionObjective.GetHashCode
int GlobalNamespace::MissionObjective::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjective.op_Equality
bool GlobalNamespace::operator ==(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionObjective", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj1, &obj2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated method: MissionObjective.op_Inequality
bool GlobalNamespace::operator !=(GlobalNamespace::MissionObjective* obj1, GlobalNamespace::MissionObjective& obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionObjective", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj1, &obj2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, &obj2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjective/ReferenceValueComparisonType
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType None
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType None
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Equal
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Equal
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Max
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Max"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Max
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Max", value));
}
// Autogenerated static field getter
// Get static field: static public MissionObjective/ReferenceValueComparisonType Min
GlobalNamespace::MissionObjective::ReferenceValueComparisonType GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_get_Min");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MissionObjective::ReferenceValueComparisonType>("", "MissionObjective/ReferenceValueComparisonType", "Min"));
}
// Autogenerated static field setter
// Set static field: static public MissionObjective/ReferenceValueComparisonType Min
void GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min(GlobalNamespace::MissionObjective::ReferenceValueComparisonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjective::ReferenceValueComparisonType::_set_Min");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MissionObjective/ReferenceValueComparisonType", "Min", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionDataExtensions
#include "GlobalNamespace/MissionDataExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionDataExtensions.Name
::Il2CppString* GlobalNamespace::MissionDataExtensions::Name(GlobalNamespace::MissionObjective::ReferenceValueComparisonType comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionDataExtensions::Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MissionDataExtensions", "Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, comparisonType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjectiveResult.get_missionObjective
GlobalNamespace::MissionObjective* GlobalNamespace::MissionObjectiveResult::get_missionObjective() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_missionObjective");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionObjective", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionObjective*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_missionObjective
void GlobalNamespace::MissionObjectiveResult::set_missionObjective(GlobalNamespace::MissionObjective* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_missionObjective");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_missionObjective", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_cleared
bool GlobalNamespace::MissionObjectiveResult::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_cleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_cleared
void GlobalNamespace::MissionObjectiveResult::set_cleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_cleared");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_cleared", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionObjectiveResult.get_value
int GlobalNamespace::MissionObjectiveResult::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::get_value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveResult.set_value
void GlobalNamespace::MissionObjectiveResult::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveResult::set_value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionObjectiveTypeSO
#include "GlobalNamespace/MissionObjectiveTypeSO.hpp"
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveName
::Il2CppString* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_objectiveName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveNameLocalized
::Il2CppString* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveNameLocalized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_objectiveNameLocalized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_noConditionValue
bool GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_noConditionValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_noConditionValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionObjectiveTypeSO.get_objectiveValueFormater
GlobalNamespace::ObjectiveValueFormatterSO* GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionObjectiveTypeSO::get_objectiveValueFormater");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_objectiveValueFormater", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObjectiveValueFormatterSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionStage.get_minimumMissionsToUnlock
int GlobalNamespace::MissionStage::get_minimumMissionsToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::get_minimumMissionsToUnlock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_minimumMissionsToUnlock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionStage.get_position
UnityEngine::Vector2 GlobalNamespace::MissionStage::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionStage::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObjectiveValueFormatterSO
#include "GlobalNamespace/ObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::ObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObjectiveValueFormatterSO::FormatValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ScoreObjectiveValueFormatterSO
#include "GlobalNamespace/ScoreObjectiveValueFormatterSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreObjectiveValueFormatterSO.FormatValue
::Il2CppString* GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreObjectiveValueFormatterSO::FormatValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMasterServerAvailabilityModel
#include "GlobalNamespace/IMasterServerAvailabilityModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMasterServerAvailabilityModel.GetAvailabilityAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::IMasterServerAvailabilityModel::GetAvailabilityAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMasterServerAvailabilityModel::GetAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAvailabilityAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: MasterServerAvailabilityData/UserMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerAvailabilityData/AvailabilityStatus
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus Online
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "Online"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus Online
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Online(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus MaintenanceUpcoming
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_MaintenanceUpcoming() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_MaintenanceUpcoming");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "MaintenanceUpcoming"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus MaintenanceUpcoming
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_MaintenanceUpcoming(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_MaintenanceUpcoming");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "MaintenanceUpcoming", value));
}
// Autogenerated static field getter
// Get static field: static public MasterServerAvailabilityData/AvailabilityStatus Offline
GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus>("", "MasterServerAvailabilityData/AvailabilityStatus", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public MasterServerAvailabilityData/AvailabilityStatus Offline
void GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Offline(GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityData::AvailabilityStatus::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityData/AvailabilityStatus", "Offline", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData/UserMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage.hpp"
// Including type: MasterServerAvailabilityData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage_LocalizedMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityData/UserMessage/LocalizedMessage
#include "GlobalNamespace/MasterServerAvailabilityData_UserMessage_LocalizedMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServerAvailabilityModel
#include "GlobalNamespace/MasterServerAvailabilityModel.hpp"
// Including type: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10
#include "GlobalNamespace/MasterServerAvailabilityModel_-GetAvailabilityAsyncInternal-d__10.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kRequestCacheTimeHours
float GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestCacheTimeHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestCacheTimeHours");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestCacheTimeHours
void GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestCacheTimeHours(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestCacheTimeHours");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityModel", "kRequestCacheTimeHours", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRequestTimeoutSeconds
int GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestTimeoutSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_get_kRequestTimeoutSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MasterServerAvailabilityModel", "kRequestTimeoutSeconds"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRequestTimeoutSeconds
void GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestTimeoutSeconds(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::_set_kRequestTimeoutSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MasterServerAvailabilityModel", "kRequestTimeoutSeconds", value));
}
// Autogenerated method: MasterServerAvailabilityModel.Init
void GlobalNamespace::MasterServerAvailabilityModel::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.IsAvailabilityTaskValid
bool GlobalNamespace::MasterServerAvailabilityModel::IsAvailabilityTaskValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::IsAvailabilityTaskValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAvailabilityTaskValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.StartRequest
void GlobalNamespace::MasterServerAvailabilityModel::StartRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::StartRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsyncInternal
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsyncInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAvailabilityAsyncInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel.GetAvailabilityAsync
System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>* GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::GetAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAvailabilityAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MasterServerAvailabilityData*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10
#include "GlobalNamespace/MasterServerAvailabilityModel_-GetAvailabilityAsyncInternal-d__10.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10.MoveNext
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MasterServerAvailabilityModel/<GetAvailabilityAsyncInternal>d__10.SetStateMachine
void GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MasterServerAvailabilityModel::$GetAvailabilityAsyncInternal$d__10::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectionFailedReasonMethods
#include "GlobalNamespace/ConnectionFailedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xD35EB0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedUnknown
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedUnknown
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35EC0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedConnectionCanceled
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedConnectionCanceled
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35ED0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerUnreachable
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35EE0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerDoesNotExist
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerDoesNotExist
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35EF0
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerAtCapacity
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerAtCapacity
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F00
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedVersionMismatch
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedVersionMismatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F10
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedInvalidPassword
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedInvalidPassword
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F20
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerUnreachable
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F30
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F40
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedNetworkNotConnected
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedNetworkNotConnected
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected", value));
}
// Autogenerated method: ConnectionFailedReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionFailedReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: ConnectionFailedReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionFailedReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DisconnectedReasonMethods
#include "GlobalNamespace/DisconnectedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xD35F50
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUnknown
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUnknown
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F60
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUserInitiated
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUserInitiated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F70
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedTimeout
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedTimeout
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F80
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedKicked
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedKicked"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedKicked
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedKicked", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35F90
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerAtCapacity
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerAtCapacity
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35FA0
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerShutDown
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerShutDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerShutDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedServerShutDown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerShutDown
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerShutDown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerShutDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerShutDown", value));
}
// [LocalizationKeyAttribute] Offset: 0xD35FB0
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedMasterServerUnreachable
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedMasterServerUnreachable
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable", value));
}
// Autogenerated method: DisconnectedReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::LocalizedKey(GlobalNamespace::DisconnectedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectionFailedReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: DisconnectedReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::ErrorCode(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerListItem
#include "GlobalNamespace/GameServerListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerPlayerTableItem
#include "GlobalNamespace/GameServerPlayerTableItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelGameplaySetupData.get_beatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapLevel
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::ILevelGameplaySetupData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapCharacteristic
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::ILevelGameplaySetupData::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapDifficulty
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_gameplayModifiers
void GlobalNamespace::ILevelGameplaySetupData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
// Including type: MultiplayerGameType
#include "GlobalNamespace/MultiplayerGameType.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_beforeSceneSwitchCallback
void GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_beforeSceneSwitchCallback
void GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.get_state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::ILobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_state");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_gameType
GlobalNamespace::MultiplayerGameType GlobalNamespace::ILobbyGameStateController::get_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_gameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerGameType, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startedBeatmapId
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startedBeatmapId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownStarted
bool GlobalNamespace::ILobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startTime
float GlobalNamespace::ILobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_startTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.set_startTime
void GlobalNamespace::ILobbyGameStateController::set_startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::set_startTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_startTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.get_isDisconnected
bool GlobalNamespace::ILobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::ILobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.Activate
void GlobalNamespace::ILobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.Deactivate
void GlobalNamespace::ILobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.SetMultiplayerGameType
void GlobalNamespace::ILobbyGameStateController::SetMultiplayerGameType(GlobalNamespace::MultiplayerGameType multiplayerGameType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::SetMultiplayerGameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMultiplayerGameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerGameType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerGameType);
}
// Autogenerated method: ILobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyHostGameStateController
#include "GlobalNamespace/ILobbyHostGameStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyHostGameStateController.StartGame
void GlobalNamespace::ILobbyHostGameStateController::StartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyHostGameStateController::StartGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyHostGameStateController.CancelGame
void GlobalNamespace::ILobbyHostGameStateController::CancelGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyHostGameStateController::CancelGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayerDataModel.get_isActive
bool GlobalNamespace::ILobbyPlayerDataModel::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::get_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerDataModel.set_isActive
void GlobalNamespace::ILobbyPlayerDataModel::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::set_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerDataModel.get_isReady
bool GlobalNamespace::ILobbyPlayerDataModel::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::get_isReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerDataModel.set_isReady
void GlobalNamespace::ILobbyPlayerDataModel::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::set_isReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerDataModel.get_isInLobby
bool GlobalNamespace::ILobbyPlayerDataModel::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::get_isInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerDataModel.set_isInLobby
void GlobalNamespace::ILobbyPlayerDataModel::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerDataModel::set_isInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.get_localUserId
::Il2CppString* GlobalNamespace::ILobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_localUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_hostUserId
::Il2CppString* GlobalNamespace::ILobbyPlayersDataModel::get_hostUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_hostUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hostUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_playersData
System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>* GlobalNamespace::ILobbyPlayersDataModel::get_playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_playersData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.GetLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerDataModel* GlobalNamespace::ILobbyPlayersDataModel::GetLobbyPlayerDataModel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerDataModel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapDifficulty(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapCharacteristic(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsActive
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsActive(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsReady
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsInLobby
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId, beatmapDifficulty, characteristic)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, beatmapDifficulty, characteristic);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(modifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isActive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isInLobby)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearData
void GlobalNamespace::ILobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Activate
void GlobalNamespace::ILobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Deactivate
void GlobalNamespace::ILobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.get_isConnected
bool GlobalNamespace::ILobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_rawConnectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_isHost
bool GlobalNamespace::ILobbyStateDataModel::get_isHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_isHost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isHost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_maxPartySize
int GlobalNamespace::ILobbyStateDataModel::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_maxPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.Activate
void GlobalNamespace::ILobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.Deactivate
void GlobalNamespace::ILobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.GetPlayerById
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::GetPlayerById(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::GetPlayerById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelGameplaySetupData.get_beatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapLevel
void GlobalNamespace::LevelGameplaySetupData::set_beatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelGameplaySetupData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapCharacteristic
void GlobalNamespace::LevelGameplaySetupData::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LevelGameplaySetupData::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapDifficulty
void GlobalNamespace::LevelGameplaySetupData::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_gameplayModifiers
void GlobalNamespace::LevelGameplaySetupData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyDataModelsManager.Activate
void GlobalNamespace::LobbyDataModelsManager::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyDataModelsManager.Deactivate
void GlobalNamespace::LobbyDataModelsManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameState
#include "GlobalNamespace/LobbyGameState.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyGameState.get_gameState
GlobalNamespace::MultiplayerGameState GlobalNamespace::LobbyGameState::get_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameState::get_gameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerGameState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameState.add_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameState::add_gameStateDidChangeEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameState::add_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameState.remove_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameState::remove_gameStateDidChangeEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameState::remove_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameState.SetGameState
void GlobalNamespace::LobbyGameState::SetGameState(GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameState::SetGameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newGameState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameState.SetGameStateWithoutNotification
void GlobalNamespace::LobbyGameState::SetGameStateWithoutNotification(GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameState::SetGameStateWithoutNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetGameStateWithoutNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newGameState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyGameStateController
#include "GlobalNamespace/LobbyGameStateController.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LobbyGameState
#include "GlobalNamespace/LobbyGameState.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyGameStateController.add_multiplayerGameStateChangedEvent
void GlobalNamespace::LobbyGameStateController::add_multiplayerGameStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_multiplayerGameStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_multiplayerGameStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_multiplayerGameStateChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_multiplayerGameStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_multiplayerGameStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_multiplayerGameStateChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_levelStartInitiated
void GlobalNamespace::LobbyGameStateController::set_levelStartInitiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_levelStartInitiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_startedBeatmapId
void GlobalNamespace::LobbyGameStateController::set_startedBeatmapId(GlobalNamespace::BeatmapIdentifierNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_startedBeatmapId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_startedBeatmapId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_countdownStarted
void GlobalNamespace::LobbyGameStateController::set_countdownStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_countdownStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_countdownEndTime
void GlobalNamespace::LobbyGameStateController::set_countdownEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_countdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_state
void GlobalNamespace::LobbyGameStateController::set_state(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_state");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_gameType
void GlobalNamespace::LobbyGameStateController::set_gameType(GlobalNamespace::MultiplayerGameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_gameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_gameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_isDisconnected
void GlobalNamespace::LobbyGameStateController::set_isDisconnected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.set_disconnectedReason
void GlobalNamespace::LobbyGameStateController::set_disconnectedReason(GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_disconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerDisconnected
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.HandleGameStateDidChange
void GlobalNamespace::LobbyGameStateController::HandleGameStateDidChange(GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleGameStateDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGameStateDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newGameState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerGetMultiplayerGameState
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetMultiplayerGameState(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetMultiplayerGameState
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetMultiplayerGameState(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, newGameState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, newGameState);
}
// Autogenerated method: LobbyGameStateController.StopListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StopListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StopListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopListeningToGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerGetStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetStartedLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerGetStartedLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetStartedLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerStartedLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, beatmapId, gameplayModifiers, startTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelledLevelStart
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelledLevelStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetCountdownEndTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime(::Il2CppString* userId, float countdownTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, countdownTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, countdownTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelCountdown
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelCountdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetStartGameTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime(::Il2CppString* userId, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetStartGameTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, startTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleStartTimeChanged
void GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleStartTimeChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderStillDownloadingSong
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderStillDownloadingSong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderCountdownFinished
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderCountdownFinished", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers);
}
// Autogenerated method: LobbyGameStateController.StartMultiplayerLevel
void GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers, beforeSceneSwitchCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers, beforeSceneSwitchCallback);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidFinish
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* myCompletionResults, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* othersCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerLevelScenesTransitionSetupData, myCompletionResults, othersCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, myCompletionResults, othersCompletionResults);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.StopLoading
void GlobalNamespace::LobbyGameStateController::StopLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StopLoading");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StopLoading", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_gameStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_beforeSceneSwitchCallback
void GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_beforeSceneSwitchCallback
void GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallback(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_startTime
float GlobalNamespace::LobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_startTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_startTime
void GlobalNamespace::LobbyGameStateController::set_startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_startTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_startTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::LobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_startedBeatmapId
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::LobbyGameStateController::get_startedBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_startedBeatmapId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_startedBeatmapId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_countdownStarted
bool GlobalNamespace::LobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_countdownEndTime
float GlobalNamespace::LobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_state");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_gameType
GlobalNamespace::MultiplayerGameType GlobalNamespace::LobbyGameStateController::get_gameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_gameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerGameType, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_isDisconnected
bool GlobalNamespace::LobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Activate
void GlobalNamespace::LobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Deactivate
void GlobalNamespace::LobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Dispose
void GlobalNamespace::LobbyGameStateController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::LobbyGameStateController::System_IDisposable_Dispose() {
  GlobalNamespace::LobbyGameStateController::Dispose();
}
// Autogenerated method: LobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StartListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.SetMultiplayerGameType
void GlobalNamespace::LobbyGameStateController::SetMultiplayerGameType(GlobalNamespace::MultiplayerGameType multiplayerGameType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::SetMultiplayerGameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMultiplayerGameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerGameType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerGameType);
}
// Autogenerated method: LobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::LobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::ClearDisconnectedState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.StartGame
void GlobalNamespace::LobbyGameStateController::StartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StartGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.CancelGame
void GlobalNamespace::LobbyGameStateController::CancelGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::CancelGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CancelGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerDataModel
#include "GlobalNamespace/LobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyPlayerDataModel.get_isActive
bool GlobalNamespace::LobbyPlayerDataModel::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::get_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerDataModel.set_isActive
void GlobalNamespace::LobbyPlayerDataModel::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::set_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerDataModel.get_isReady
bool GlobalNamespace::LobbyPlayerDataModel::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::get_isReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerDataModel.set_isReady
void GlobalNamespace::LobbyPlayerDataModel::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::set_isReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerDataModel.get_isInLobby
bool GlobalNamespace::LobbyPlayerDataModel::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::get_isInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerDataModel.set_isInLobby
void GlobalNamespace::LobbyPlayerDataModel::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerDataModel::set_isInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel
#include "GlobalNamespace/LobbyPlayersDataModel.hpp"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__42
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__42.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyPlayersDataModel.GetOrCreateLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerDataModel* GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel(::Il2CppString* userId, bool& alreadyExists) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOrCreateLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, alreadyExists)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerDataModel*, false>(this, ___internal__method, userId, alreadyExists);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel(::Il2CppString* userId, GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, beatmapLevel, beatmapDifficulty, characteristic)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapLevel, beatmapDifficulty, characteristic);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, modifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive(::Il2CppString* userId, bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerIsActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isActive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isActive);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady(::Il2CppString* userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby(::Il2CppString* userId, bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isInLobby)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.SetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetSelectedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSelectedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSelectedBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, beatmapId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, gameplayModifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearSelectedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearSelectedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady(::Il2CppString* userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby(::Il2CppString* userId, bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, isInLobby)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerStateChanged
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerStateChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectedPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectedPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(connectedPlayer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.NotifyModelChange
void GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotifyModelChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.get_localUserId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_localUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_hostUserId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_hostUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_hostUserId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hostUserId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.get_playersData
System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>* GlobalNamespace::LobbyPlayersDataModel::get_playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_playersData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playersData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerDataModel*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.GetLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerDataModel* GlobalNamespace::LobbyPlayersDataModel::GetLobbyPlayerDataModel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerDataModel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LobbyPlayersDataModel::GetPlayerGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapDifficulty(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapCharacteristic(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsActive
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsActive(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsReady
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsInLobby
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelId, beatmapDifficulty, characteristic)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, beatmapDifficulty, characteristic);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(modifiers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isActive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isReady)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isInLobby)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.ClearData
void GlobalNamespace::LobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Activate
void GlobalNamespace::LobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Deactivate
void GlobalNamespace::LobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Dispose
void GlobalNamespace::LobbyPlayersDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::LobbyPlayersDataModel::System_IDisposable_Dispose() {
  GlobalNamespace::LobbyPlayersDataModel::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyPlayersDataModel/<>c <>9
GlobalNamespace::LobbyPlayersDataModel::$$c* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayersDataModel::$$c*>("", "LobbyPlayersDataModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyPlayersDataModel/<>c <>9
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9(GlobalNamespace::LobbyPlayersDataModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__42_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__42_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "LobbyPlayersDataModel/<>c", "<>9__42_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__42_0
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__42_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__42_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9__42_0", value)));
}
// Autogenerated method: LobbyPlayersDataModel/<>c..cctor
void GlobalNamespace::LobbyPlayersDataModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyPlayersDataModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<>c.<SetOwnedSongPacks>b__42_0
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::$$c::$SetOwnedSongPacks$b__42_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::<SetOwnedSongPacks>b__42_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetOwnedSongPacks>b__42_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pack))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__42
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__42.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__42.MoveNext
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__42::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__42.SetStateMachine
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__42::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__42::SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyStateDataModel
#include "GlobalNamespace/LobbyStateDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.get_isConnected
bool GlobalNamespace::LobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_connectedPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_rawConnectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_isHost
bool GlobalNamespace::LobbyStateDataModel::get_isHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_isHost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isHost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_maxPartySize
int GlobalNamespace::LobbyStateDataModel::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_maxPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Activate
void GlobalNamespace::LobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Activate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Deactivate
void GlobalNamespace::LobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Dispose
void GlobalNamespace::LobbyStateDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void GlobalNamespace::LobbyStateDataModel::System_IDisposable_Dispose() {
  GlobalNamespace::LobbyStateDataModel::Dispose();
}
// Autogenerated method: LobbyStateDataModel.GetPlayerById
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::GetPlayerById(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::GetPlayerById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyConnectionController
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: UnifiedNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_CreatePartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionState
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionState
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_connectionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionType
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionType
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_connectionType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionFailedReason
GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectionFailedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionFailedReason
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason(GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_connectionFailedReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty(GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig* createPartyConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(createPartyConfig)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, createPartyConfig);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToParty
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty(::Il2CppString* serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateOrConnectToParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToParty(GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig* createPartyConfig) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateOrConnectToParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(createPartyConfig)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, createPartyConfig);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToServer
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer(GlobalNamespace::INetworkPlayer* server, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(server, password)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, server, password);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToMatchmaking
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapDifficultyMask, songPackMask)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask);
}
// Autogenerated method: MultiplayerLobbyConnectionController.DestroyParty
void GlobalNamespace::MultiplayerLobbyConnectionController::DestroyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::DestroyParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.LeaveLobby
void GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LeaveLobby", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ClearCurrentConnection
void GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCurrentConnection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnected
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailedWithRetries
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetries(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailedWithRetries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionState
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason NetworkUnreachable
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason NetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason UpdateRequired
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason UpdateRequired
void GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "UpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason ServerOffline
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "ServerOffline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason ServerOffline
void GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "ServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason MaintenanceMode
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "MaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason MaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "MaintenanceMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xD36330
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableNetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableNetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableNetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableNetworkUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableNetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableNetworkUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xD36340
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// [LocalizationKeyAttribute] Offset: 0xD36350
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// [LocalizationKeyAttribute] Offset: 0xD36360
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// [LocalizationKeyAttribute] Offset: 0xD36370
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUnknown
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUnknown
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUnknown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUnknown", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerUnavailableReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerUnavailableReason)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(GlobalNamespace::MasterServerAvailabilityData* data, GlobalNamespace::MultiplayerUnavailableReason& reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, reason)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, reason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(GlobalNamespace::MasterServerAvailabilityData* data, Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, language)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::Il2CppString* currentVersion, ::Il2CppString* minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentVersion, minVersion)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentVersion, minVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: SongPackMasksModel/<>c
#include "GlobalNamespace/SongPackMasksModel_--c.hpp"
// Including type: SongPackMasksModel/<>c__DisplayClass5_0
#include "GlobalNamespace/SongPackMasksModel_--c__DisplayClass5_0.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongPackMasksModel.get_songPackMaskData
System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*>* GlobalNamespace::SongPackMasksModel::get_songPackMaskData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::get_songPackMaskData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_songPackMaskData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetAllSongsMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::GetAllSongsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::GetAllSongsMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllSongsMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::Il2CppString* GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songPackMask)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songPackMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMasksModel/<>c
#include "GlobalNamespace/SongPackMasksModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPackMasksModel/<>c <>9
GlobalNamespace::SongPackMasksModel::$$c* GlobalNamespace::SongPackMasksModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMasksModel::$$c*>("", "SongPackMasksModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPackMasksModel/<>c <>9
void GlobalNamespace::SongPackMasksModel::$$c::_set_$$9(GlobalNamespace::SongPackMasksModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMasksModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__3_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::SongPackMasksModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "SongPackMasksModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__3_0
void GlobalNamespace::SongPackMasksModel::$$c::_set_$$9__3_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMasksModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: SongPackMasksModel/<>c..cctor
void GlobalNamespace::SongPackMasksModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMasksModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMasksModel/<>c.<.ctor>b__3_0
::Il2CppString* GlobalNamespace::SongPackMasksModel::$$c::$_ctor$b__3_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c::<.ctor>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__3_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pack))));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMasksModel/<>c__DisplayClass5_0
#include "GlobalNamespace/SongPackMasksModel_--c__DisplayClass5_0.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongPackMasksModel/<>c__DisplayClass5_0.<GetSongPackMaskText>b__0
bool GlobalNamespace::SongPackMasksModel::$$c__DisplayClass5_0::$GetSongPackMaskText$b__0(System::Tuple_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* songPackTuple) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::$$c__DisplayClass5_0::<GetSongPackMaskText>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSongPackMaskText>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(songPackTuple))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, songPackTuple);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationTokenPlatformExtensions
#include "GlobalNamespace/AuthenticationTokenPlatformExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToAuthenticationTokenPlatform
GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform(GlobalNamespace::UserInfo::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToAuthenticationTokenPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(platform)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AuthenticationToken::Platform, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToUserInfoPlatform
GlobalNamespace::UserInfo::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform(GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToUserInfoPlatform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(platform)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserInfo::Platform, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel
#include "GlobalNamespace/BaseNetworkPlayerModel.hpp"
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseNetworkPlayerModel.get_partyManager
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_partyManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_partyManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectedOrConnecting
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectionOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayer
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isServer
bool GlobalNamespace::BaseNetworkPlayerModel::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isClient
bool GlobalNamespace::BaseNetworkPlayerModel::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerConnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(player)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(currentPartySize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnected
void GlobalNamespace::BaseNetworkPlayerModel::Disconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Disconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyConnectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyConnectedPlayerManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Log
void GlobalNamespace::BaseNetworkPlayerModel::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BaseNetworkPlayerModel.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_maxPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_maxPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_configuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.INetworkPlayerModel.get_otherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GlobalNamespace_INetworkPlayerModel_get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel.get_otherPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "INetworkPlayerModel.get_otherPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.OnDestroy
void GlobalNamespace::BaseNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Update
void GlobalNamespace::BaseNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnect
void GlobalNamespace::BaseNetworkPlayerModel::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Disconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyParty
void GlobalNamespace::BaseNetworkPlayerModel::DestroyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::DestroyParty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DestroyParty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__55
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__55.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::MoveNext();
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__55.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__55::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__56
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__56.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::MoveNext();
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__56.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__56::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnifiedNetworkPlayerModel.get_discoveryPolicy
GlobalNamespace::DiscoveryPolicy GlobalNamespace::IUnifiedNetworkPlayerModel::get_discoveryPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_discoveryPolicy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_discoveryPolicy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DiscoveryPolicy, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_localPlayer
GlobalNamespace::INetworkPlayer* GlobalNamespace::IUnifiedNetworkPlayerModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_publicServers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_localNetworkPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_serverFilter
GlobalNamespace::GameplayServerFilter GlobalNamespace::IUnifiedNetworkPlayerModel::get_serverFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_serverFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_serverFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerFilter, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter(GlobalNamespace::GameplayServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filter)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.JoinMatchmaking
void GlobalNamespace::IUnifiedNetworkPlayerModel::JoinMatchmaking(GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::JoinMatchmaking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "JoinMatchmaking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(configuration, secret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, configuration, secret);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ConnectToServerWithCode
void GlobalNamespace::IUnifiedNetworkPlayerModel::ConnectToServerWithCode(::Il2CppString* serverCode, ::Il2CppString* serverPassword) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::ConnectToServerWithCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToServerWithCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverCode, serverPassword)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCode, serverPassword);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ConnectToServerWithSecret
void GlobalNamespace::IUnifiedNetworkPlayerModel::ConnectToServerWithSecret(::Il2CppString* serverSecret) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::ConnectToServerWithSecret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConnectToServerWithSecret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverSecret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverSecret);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_userId
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_userName
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_secret
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_code
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_code");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBroadcastInterval
float GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkDiscoveryManager", "kBroadcastInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBroadcastInterval
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kBroadcastInterval", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kSignature
uint GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "LocalNetworkDiscoveryManager", "kSignature"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kSignature
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kSignature", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kVersion
uint8_t GlobalNamespace::LocalNetworkDiscoveryManager::_get_kVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_kVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "LocalNetworkDiscoveryManager", "kVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kVersion
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kVersion(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_kVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kVersion", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_userId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userName
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_userName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_flags
uint8_t GlobalNamespace::LocalNetworkDiscoveryManager::get_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_flags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_flags
void GlobalNamespace::LocalNetworkDiscoveryManager::set_flags(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_flags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_currentPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_currentPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_currentPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_maxPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_maxPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_maxPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::set_maxPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_maxPartySize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maxPartySize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_enableBroadcasting
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableBroadcasting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_enableBroadcasting
void GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableBroadcasting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Init
void GlobalNamespace::LocalNetworkDiscoveryManager::Init(int discoveryPort, ::Il2CppString* initUserId, ::Il2CppString* initUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(discoveryPort, initUserId, initUserName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, discoveryPort, initUserId, initUserName);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnEnable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnDisable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Update
void GlobalNamespace::LocalNetworkDiscoveryManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest(System::Net::IPAddress* ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse(System::Net::IPAddress* ip, ::Il2CppString* secret, int multiplayerPort, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ip, secret, multiplayerPort, blocked)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest(System::Net::IPAddress* ip, ::Il2CppString* secret, int multiplayerPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ip, secret, multiplayerPort)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse(System::Net::IPAddress* ip, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ip, accepted, blocked)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__56_0
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__56_0(GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__56_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, endPoint))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__56_1
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__56_1(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__56_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__56_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, endPoint))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__56_2
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__56_2(GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__56_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__56_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, endPoint))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__56_3
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__56_3(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__56_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__56_3", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, endPoint))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__56_4
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__56_4(GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__56_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__56_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, endPoint))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, reader, messageType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(request)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, socketErrorCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, latency)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, latency);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerConnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, disconnectInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(peer, reader, deliveryMethod)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/PacketType
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse", value));
}
