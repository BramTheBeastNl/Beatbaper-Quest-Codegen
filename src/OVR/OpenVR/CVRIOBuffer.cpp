// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRIOBuffer
#include "OVR/OpenVR/CVRIOBuffer.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVR.OpenVR.EIOBufferError
#include "OVR/OpenVR/EIOBufferError.hpp"
// Including type: OVR.OpenVR.EIOBufferMode
#include "OVR/OpenVR/EIOBufferMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRIOBuffer..ctor
OVR::OpenVR::CVRIOBuffer* OVR::OpenVR::CVRIOBuffer::New_ctor(System::IntPtr pInterface) {
  return (CVRIOBuffer*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "CVRIOBuffer", pInterface));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Open
OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Open(::CsString* pchPath, OVR::OpenVR::EIOBufferMode mode, uint unElementSize, uint unElements, uint64_t& pulBuffer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EIOBufferError>(this, "Open", pchPath, mode, unElementSize, unElements, pulBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Close
OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Close(uint64_t ulBuffer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EIOBufferError>(this, "Close", ulBuffer));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Read
OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Read(uint64_t ulBuffer, System::IntPtr pDst, uint unBytes, uint& punRead) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EIOBufferError>(this, "Read", ulBuffer, pDst, unBytes, punRead));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.Write
OVR::OpenVR::EIOBufferError OVR::OpenVR::CVRIOBuffer::Write(uint64_t ulBuffer, System::IntPtr pSrc, uint unBytes) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EIOBufferError>(this, "Write", ulBuffer, pSrc, unBytes));
}
// Autogenerated method: OVR.OpenVR.CVRIOBuffer.PropertyContainer
uint64_t OVR::OpenVR::CVRIOBuffer::PropertyContainer(uint64_t ulBuffer) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint64_t>(this, "PropertyContainer", ulBuffer));
}
