// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRSpatialAnchorError
#include "OVR/OpenVR/EVRSpatialAnchorError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Success() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Success
void OVR::OpenVR::EVRSpatialAnchorError::_set_Success(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Internal() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Internal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Internal
void OVR::OpenVR::EVRSpatialAnchorError::_set_Internal(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Internal", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownHandle() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownHandle
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownHandle(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_ArrayTooSmall() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError ArrayTooSmall
void OVR::OpenVR::EVRSpatialAnchorError::_set_ArrayTooSmall(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidDescriptorChar() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidDescriptorChar
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidDescriptorChar(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidDescriptorChar", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotYetAvailable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotYetAvailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotYetAvailable(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NotAvailableInThisUniverse() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NotAvailableInThisUniverse
void OVR::OpenVR::EVRSpatialAnchorError::_set_NotAvailableInThisUniverse(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NotAvailableInThisUniverse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_PermanentlyUnavailable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError PermanentlyUnavailable
void OVR::OpenVR::EVRSpatialAnchorError::_set_PermanentlyUnavailable(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "PermanentlyUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_WrongDriver() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError WrongDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_WrongDriver(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "WrongDriver", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_DescriptorTooLong() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError DescriptorTooLong
void OVR::OpenVR::EVRSpatialAnchorError::_set_DescriptorTooLong(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "DescriptorTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_Unknown() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError Unknown
void OVR::OpenVR::EVRSpatialAnchorError::_set_Unknown(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_NoRoomCalibration() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError NoRoomCalibration
void OVR::OpenVR::EVRSpatialAnchorError::_set_NoRoomCalibration(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "NoRoomCalibration", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_InvalidArgument() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError InvalidArgument
void OVR::OpenVR::EVRSpatialAnchorError::_set_InvalidArgument(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
OVR::OpenVR::EVRSpatialAnchorError OVR::OpenVR::EVRSpatialAnchorError::_get_UnknownDriver() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRSpatialAnchorError>("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRSpatialAnchorError UnknownDriver
void OVR::OpenVR::EVRSpatialAnchorError::_set_UnknownDriver(OVR::OpenVR::EVRSpatialAnchorError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRSpatialAnchorError", "UnknownDriver", value));
}
