// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRInput/_GetActionHandle
#include "OVR/OpenVR/IVRInput__GetActionHandle.hpp"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRInput/_GetActionHandle..ctor
OVR::OpenVR::IVRInput::_GetActionHandle* OVR::OpenVR::IVRInput::_GetActionHandle::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return (IVRInput::_GetActionHandle*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "IVRInput/_GetActionHandle", object, method));
}
// Autogenerated method: OVR.OpenVR.IVRInput/_GetActionHandle.Invoke
OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionHandle::Invoke(::Il2CppString* pchActionName, uint64_t& pHandle) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EVRInputError>(this, "Invoke", pchActionName, pHandle));
}
// Autogenerated method: OVR.OpenVR.IVRInput/_GetActionHandle.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVRInput::_GetActionHandle::BeginInvoke(::Il2CppString* pchActionName, uint64_t& pHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", pchActionName, pHandle, callback, object));
}
// Autogenerated method: OVR.OpenVR.IVRInput/_GetActionHandle.EndInvoke
OVR::OpenVR::EVRInputError OVR::OpenVR::IVRInput::_GetActionHandle::EndInvoke(uint64_t& pHandle, System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<OVR::OpenVR::EVRInputError>(this, "EndInvoke", pHandle, result));
}
