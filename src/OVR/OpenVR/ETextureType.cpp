// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETextureType
#include "OVR/OpenVR/ETextureType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Invalid
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Invalid() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Invalid
void OVR::OpenVR::ETextureType::_set_Invalid(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_DirectX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX
void OVR::OpenVR::ETextureType::_set_DirectX(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_DirectX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType OpenGL
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_OpenGL() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_OpenGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "OpenGL"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType OpenGL
void OVR::OpenVR::ETextureType::_set_OpenGL(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_OpenGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "OpenGL", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Vulkan
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Vulkan() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_Vulkan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Vulkan"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Vulkan
void OVR::OpenVR::ETextureType::_set_Vulkan(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_Vulkan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Vulkan", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType IOSurface
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_IOSurface() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_IOSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "IOSurface"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType IOSurface
void OVR::OpenVR::ETextureType::_set_IOSurface(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_IOSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "IOSurface", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DirectX12
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DirectX12() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_DirectX12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DirectX12"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DirectX12
void OVR::OpenVR::ETextureType::_set_DirectX12(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_DirectX12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DirectX12", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_DXGISharedHandle() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_DXGISharedHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "DXGISharedHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType DXGISharedHandle
void OVR::OpenVR::ETextureType::_set_DXGISharedHandle(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_DXGISharedHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "DXGISharedHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETextureType Metal
OVR::OpenVR::ETextureType OVR::OpenVR::ETextureType::_get_Metal() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_get_Metal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETextureType>("OVR.OpenVR", "ETextureType", "Metal"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETextureType Metal
void OVR::OpenVR::ETextureType::_set_Metal(OVR::OpenVR::ETextureType value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("ETextureType").WithContext("_set_Metal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETextureType", "Metal", value));
}
