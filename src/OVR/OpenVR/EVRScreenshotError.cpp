// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRScreenshotError
#include "OVR/OpenVR/EVRScreenshotError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError None
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError None
void OVR::OpenVR::EVRScreenshotError::_set_None(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError RequestFailed
void OVR::OpenVR::EVRScreenshotError::_set_RequestFailed(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError IncompatibleVersion
void OVR::OpenVR::EVRScreenshotError::_set_IncompatibleVersion(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError NotFound
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError NotFound
void OVR::OpenVR::EVRScreenshotError::_set_NotFound(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError BufferTooSmall
void OVR::OpenVR::EVRScreenshotError::_set_BufferTooSmall(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
OVR::OpenVR::EVRScreenshotError OVR::OpenVR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRScreenshotError>("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRScreenshotError ScreenshotAlreadyInProgress
void OVR::OpenVR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(OVR::OpenVR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRScreenshotError").WithContext("_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
