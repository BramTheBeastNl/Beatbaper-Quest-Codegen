// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.EVRInputError
#include "OVR/OpenVR/EVRInputError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError None
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_None() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError None
void OVR::OpenVR::EVRInputError::_set_None(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NameNotFound
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NameNotFound() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NameNotFound
void OVR::OpenVR::EVRInputError::_set_NameNotFound(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError WrongType
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_WrongType() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "WrongType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError WrongType
void OVR::OpenVR::EVRInputError::_set_WrongType(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "WrongType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidHandle
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidHandle() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidHandle
void OVR::OpenVR::EVRInputError::_set_InvalidHandle(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidParam
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidParam() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidParam
void OVR::OpenVR::EVRInputError::_set_InvalidParam(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoSteam
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoSteam() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoSteam"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoSteam
void OVR::OpenVR::EVRInputError::_set_NoSteam(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoSteam", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MaxCapacityReached() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MaxCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MaxCapacityReached
void OVR::OpenVR::EVRInputError::_set_MaxCapacityReached(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MaxCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError IPCError
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_IPCError() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "IPCError"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError IPCError
void OVR::OpenVR::EVRInputError::_set_IPCError(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "IPCError", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoActiveActionSet() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoActiveActionSet"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoActiveActionSet
void OVR::OpenVR::EVRInputError::_set_NoActiveActionSet(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoActiveActionSet", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidDevice
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidDevice() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidDevice
void OVR::OpenVR::EVRInputError::_set_InvalidDevice(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidSkeleton() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidSkeleton"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidSkeleton
void OVR::OpenVR::EVRInputError::_set_InvalidSkeleton(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidSkeleton", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidBoneCount() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidBoneCount"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidBoneCount
void OVR::OpenVR::EVRInputError::_set_InvalidBoneCount(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidBoneCount", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_InvalidCompressedData() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "InvalidCompressedData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError InvalidCompressedData
void OVR::OpenVR::EVRInputError::_set_InvalidCompressedData(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "InvalidCompressedData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError NoData
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_NoData() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError NoData
void OVR::OpenVR::EVRInputError::_set_NoData(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_BufferTooSmall() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError BufferTooSmall
void OVR::OpenVR::EVRInputError::_set_BufferTooSmall(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MismatchedActionManifest() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MismatchedActionManifest
void OVR::OpenVR::EVRInputError::_set_MismatchedActionManifest(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MismatchedActionManifest", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
OVR::OpenVR::EVRInputError OVR::OpenVR::EVRInputError::_get_MissingSkeletonData() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRInputError>("OVR.OpenVR", "EVRInputError", "MissingSkeletonData"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRInputError MissingSkeletonData
void OVR::OpenVR::EVRInputError::_set_MissingSkeletonData(OVR::OpenVR::EVRInputError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRInputError", "MissingSkeletonData", value));
}
