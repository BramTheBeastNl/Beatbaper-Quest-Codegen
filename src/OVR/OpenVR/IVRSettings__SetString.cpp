// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/_SetString
#include "OVR/OpenVR/IVRSettings__SetString.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/_SetString..ctor
OVR::OpenVR::IVRSettings::_SetString* OVR::OpenVR::IVRSettings::_SetString::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return (IVRSettings::_SetString*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "IVRSettings/_SetString", object, method));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_SetString.Invoke
void OVR::OpenVR::IVRSettings::_SetString::Invoke(::Il2CppString* pchSection, ::Il2CppString* pchSettingsKey, ::Il2CppString* pchValue, OVR::OpenVR::EVRSettingsError& peError) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Invoke", pchSection, pchSettingsKey, pchValue, peError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_SetString.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVRSettings::_SetString::BeginInvoke(::Il2CppString* pchSection, ::Il2CppString* pchSettingsKey, ::Il2CppString* pchValue, OVR::OpenVR::EVRSettingsError& peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", pchSection, pchSettingsKey, pchValue, peError, callback, object));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_SetString.EndInvoke
void OVR::OpenVR::IVRSettings::_SetString::EndInvoke(OVR::OpenVR::EVRSettingsError& peError, System::IAsyncResult* result) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "EndInvoke", peError, result));
}
