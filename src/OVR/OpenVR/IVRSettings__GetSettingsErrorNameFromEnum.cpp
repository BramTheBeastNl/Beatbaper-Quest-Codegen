// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum
#include "OVR/OpenVR/IVRSettings__GetSettingsErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRSettingsError
#include "OVR/OpenVR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum..ctor
OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum* OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::New_ctor(::CsObject* object, System::IntPtr method) {
  return (IVRSettings::_GetSettingsErrorNameFromEnum*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "IVRSettings/_GetSettingsErrorNameFromEnum", object, method));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum.Invoke
System::IntPtr OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::Invoke(OVR::OpenVR::EVRSettingsError eError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "Invoke", eError));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::BeginInvoke(OVR::OpenVR::EVRSettingsError eError, System::AsyncCallback* callback, ::CsObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", eError, callback, object));
}
// Autogenerated method: OVR.OpenVR.IVRSettings/_GetSettingsErrorNameFromEnum.EndInvoke
System::IntPtr OVR::OpenVR::IVRSettings::_GetSettingsErrorNameFromEnum::EndInvoke(System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "EndInvoke", result));
}
