// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVR.OpenVR.ChaperoneCalibrationState
#include "OVR/OpenVR/ChaperoneCalibrationState.hpp"
// Including type: OVR.OpenVR.HmdQuad_t
#include "OVR/OpenVR/HmdQuad_t.hpp"
// Including type: OVR.OpenVR.HmdColor_t
#include "OVR/OpenVR/HmdColor_t.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRChaperone..ctor
OVR::OpenVR::CVRChaperone* OVR::OpenVR::CVRChaperone::New_ctor(System::IntPtr pInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CVRChaperone*>(pInterface));
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetCalibrationState
OVR::OpenVR::ChaperoneCalibrationState OVR::OpenVR::CVRChaperone::GetCalibrationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("GetCalibrationState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::ChaperoneCalibrationState>(), "GetCalibrationState", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::ChaperoneCalibrationState, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetPlayAreaSize
bool OVR::OpenVR::CVRChaperone::GetPlayAreaSize(float& pSizeX, float& pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("GetPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetPlayAreaSize", {}, ::il2cpp_utils::ExtractTypes(pSizeX, pSizeZ)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pSizeX, pSizeZ);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetPlayAreaRect
bool OVR::OpenVR::CVRChaperone::GetPlayAreaRect(OVR::OpenVR::HmdQuad_t& rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("GetPlayAreaRect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "GetPlayAreaRect", {}, ::il2cpp_utils::ExtractTypes(rect)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rect);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.ReloadInfo
void OVR::OpenVR::CVRChaperone::ReloadInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("ReloadInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReloadInfo", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.SetSceneColor
void OVR::OpenVR::CVRChaperone::SetSceneColor(OVR::OpenVR::HmdColor_t color) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("SetSceneColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetSceneColor", {}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.GetBoundsColor
void OVR::OpenVR::CVRChaperone::GetBoundsColor(OVR::OpenVR::HmdColor_t& pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, OVR::OpenVR::HmdColor_t& pOutputCameraColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("GetBoundsColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetBoundsColor", {}, ::il2cpp_utils::ExtractTypes(pOutputColorArray, nNumOutputColors, flCollisionBoundsFadeDistance, pOutputCameraColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pOutputColorArray, nNumOutputColors, flCollisionBoundsFadeDistance, pOutputCameraColor);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.AreBoundsVisible
bool OVR::OpenVR::CVRChaperone::AreBoundsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("AreBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "AreBoundsVisible", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRChaperone.ForceBoundsVisible
void OVR::OpenVR::CVRChaperone::ForceBoundsVisible(bool bForce) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRChaperone").WithContext("ForceBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ForceBoundsVisible", {}, ::il2cpp_utils::ExtractTypes(bForce)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bForce);
}
