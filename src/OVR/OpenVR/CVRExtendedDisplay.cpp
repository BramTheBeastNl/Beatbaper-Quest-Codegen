// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: OVR.OpenVR.EVREye
#include "OVR/OpenVR/EVREye.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay..ctor
OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::CVRExtendedDisplay::New_ctor(System::IntPtr pInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRExtendedDisplay").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<CVRExtendedDisplay*>(pInterface));
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetWindowBounds
void OVR::OpenVR::CVRExtendedDisplay::GetWindowBounds(int& pnX, int& pnY, uint& pnWidth, uint& pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRExtendedDisplay").WithContext("GetWindowBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetWindowBounds", {}, ::il2cpp_utils::ExtractTypes(pnX, pnY, pnWidth, pnHeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pnX, pnY, pnWidth, pnHeight);
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetEyeOutputViewport
void OVR::OpenVR::CVRExtendedDisplay::GetEyeOutputViewport(OVR::OpenVR::EVREye eEye, uint& pnX, uint& pnY, uint& pnWidth, uint& pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRExtendedDisplay").WithContext("GetEyeOutputViewport");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetEyeOutputViewport", {}, ::il2cpp_utils::ExtractTypes(eEye, pnX, pnY, pnWidth, pnHeight)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eEye, pnX, pnY, pnWidth, pnHeight);
}
// Autogenerated method: OVR.OpenVR.CVRExtendedDisplay.GetDXGIOutputInfo
void OVR::OpenVR::CVRExtendedDisplay::GetDXGIOutputInfo(int& pnAdapterIndex, int& pnAdapterOutputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRExtendedDisplay").WithContext("GetDXGIOutputInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetDXGIOutputInfo", {}, ::il2cpp_utils::ExtractTypes(pnAdapterIndex, pnAdapterOutputIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pnAdapterIndex, pnAdapterOutputIndex);
}
