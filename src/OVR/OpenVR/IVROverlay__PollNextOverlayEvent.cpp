// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent
#include "OVR/OpenVR/IVROverlay__PollNextOverlayEvent.hpp"
// Including type: OVR.OpenVR.VREvent_t
#include "OVR/OpenVR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent..ctor
OVR::OpenVR::IVROverlay::_PollNextOverlayEvent* OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::New_ctor(::CsObject* object, System::IntPtr method) {
  return (IVROverlay::_PollNextOverlayEvent*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "IVROverlay/_PollNextOverlayEvent", object, method));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.Invoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::Invoke(uint64_t ulOverlayHandle, OVR::OpenVR::VREvent_t& pEvent, uint uncbVREvent) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "Invoke", ulOverlayHandle, pEvent, uncbVREvent));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::BeginInvoke(uint64_t ulOverlayHandle, OVR::OpenVR::VREvent_t& pEvent, uint uncbVREvent, System::AsyncCallback* callback, ::CsObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", ulOverlayHandle, pEvent, uncbVREvent, callback, object));
}
// Autogenerated method: OVR.OpenVR.IVROverlay/_PollNextOverlayEvent.EndInvoke
bool OVR::OpenVR::IVROverlay::_PollNextOverlayEvent::EndInvoke(OVR::OpenVR::VREvent_t& pEvent, System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "EndInvoke", pEvent, result));
}
