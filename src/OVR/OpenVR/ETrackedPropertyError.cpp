// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.ETrackedPropertyError
#include "OVR/OpenVR/ETrackedPropertyError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_Success() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_Success
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_Success(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_Success", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDataType() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDataType
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDataType(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDataType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_WrongDeviceClass
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_BufferTooSmall
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_UnknownProperty
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CouldNotContactServer
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_NotYetAvailable
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_PermissionDenied
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_InvalidOperation
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
OVR::OpenVR::ETrackedPropertyError OVR::OpenVR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::ETrackedPropertyError>("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
void OVR::OpenVR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards(OVR::OpenVR::ETrackedPropertyError value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards", value));
}
