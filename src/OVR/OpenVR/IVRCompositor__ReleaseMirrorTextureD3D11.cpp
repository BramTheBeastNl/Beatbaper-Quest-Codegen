// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11
#include "OVR/OpenVR/IVRCompositor__ReleaseMirrorTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.Invoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::Invoke(System::IntPtr pD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("_ReleaseMirrorTextureD3D11").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pD3D11ShaderResourceView)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pD3D11ShaderResourceView);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::BeginInvoke(System::IntPtr pD3D11ShaderResourceView, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("_ReleaseMirrorTextureD3D11").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pD3D11ShaderResourceView, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, pD3D11ShaderResourceView, callback, object);
}
// Autogenerated method: OVR.OpenVR.IVRCompositor/_ReleaseMirrorTextureD3D11.EndInvoke
void OVR::OpenVR::IVRCompositor::_ReleaseMirrorTextureD3D11::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("_ReleaseMirrorTextureD3D11").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
