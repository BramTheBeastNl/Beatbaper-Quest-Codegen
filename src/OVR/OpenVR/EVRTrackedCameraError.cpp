// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR/OpenVR/EVRTrackedCameraError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError None
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError None
void OVR::OpenVR::EVRTrackedCameraError::_set_None(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OperationFailed
void OVR::OpenVR::EVRTrackedCameraError::_set_OperationFailed(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidHandle(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameHeaderVersion
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError OutOfHandles
void OVR::OpenVR::EVRTrackedCameraError::_set_OutOfHandles(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError IPCFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_IPCFailure(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NotSupportedForThisDevice
void OVR::OpenVR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedMemoryFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedMemoryFailure(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FrameBufferingFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_FrameBufferingFailure(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError StreamSetupFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_StreamSetupFailure(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidGLTextureId(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidSharedTextureHandle
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError FailedToGetGLTextureId
void OVR::OpenVR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError SharedTextureFailure
void OVR::OpenVR::EVRTrackedCameraError::_set_SharedTextureFailure(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError NoFrameAvailable
void OVR::OpenVR::EVRTrackedCameraError::_set_NoFrameAvailable(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidArgument
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidArgument(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
OVR::OpenVR::EVRTrackedCameraError OVR::OpenVR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVRTrackedCameraError>("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVRTrackedCameraError InvalidFrameBufferSize
void OVR::OpenVR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(OVR::OpenVR::EVRTrackedCameraError value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVRTrackedCameraError").WithContext("_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
