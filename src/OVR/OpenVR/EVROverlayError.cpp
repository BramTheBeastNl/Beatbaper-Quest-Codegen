// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.EVROverlayError
#include "OVR/OpenVR/EVROverlayError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError None
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "None"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError None
void OVR::OpenVR::EVROverlayError::_set_None(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnknownOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_UnknownOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnknownOverlay"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnknownOverlay
void OVR::OpenVR::EVROverlayError::_set_UnknownOverlay(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_UnknownOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnknownOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidHandle
void OVR::OpenVR::EVROverlayError::_set_InvalidHandle(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError PermissionDenied
void OVR::OpenVR::EVROverlayError::_set_PermissionDenied(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_OverlayLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_OverlayLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError OverlayLimitExceeded
void OVR::OpenVR::EVROverlayError::_set_OverlayLimitExceeded(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_OverlayLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "OverlayLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongVisibilityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_WrongVisibilityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongVisibilityType
void OVR::OpenVR::EVROverlayError::_set_WrongVisibilityType(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_WrongVisibilityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongVisibilityType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_KeyTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyTooLong
void OVR::OpenVR::EVROverlayError::_set_KeyTooLong(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_KeyTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NameTooLong
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_NameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NameTooLong
void OVR::OpenVR::EVROverlayError::_set_NameTooLong(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_NameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyInUse
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_KeyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyInUse(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_KeyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_WrongTransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_WrongTransformType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "WrongTransformType"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError WrongTransformType
void OVR::OpenVR::EVROverlayError::_set_WrongTransformType(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_WrongTransformType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "WrongTransformType", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_InvalidTrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTrackedDevice
void OVR::OpenVR::EVROverlayError::_set_InvalidTrackedDevice(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_InvalidTrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidParameter
void OVR::OpenVR::EVROverlayError::_set_InvalidParameter(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ThumbnailCantBeDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_ThumbnailCantBeDestroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ThumbnailCantBeDestroyed
void OVR::OpenVR::EVROverlayError::_set_ThumbnailCantBeDestroyed(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_ThumbnailCantBeDestroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ThumbnailCantBeDestroyed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError ArrayTooSmall
void OVR::OpenVR::EVROverlayError::_set_ArrayTooSmall(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError RequestFailed
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError RequestFailed
void OVR::OpenVR::EVROverlayError::_set_RequestFailed(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError InvalidTexture
void OVR::OpenVR::EVROverlayError::_set_InvalidTexture(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_UnableToLoadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_UnableToLoadFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError UnableToLoadFile
void OVR::OpenVR::EVROverlayError::_set_UnableToLoadFile(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_UnableToLoadFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "UnableToLoadFile", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_KeyboardAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_KeyboardAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError KeyboardAlreadyInUse
void OVR::OpenVR::EVROverlayError::_set_KeyboardAlreadyInUse(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_KeyboardAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "KeyboardAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_NoNeighbor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_NoNeighbor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "NoNeighbor"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError NoNeighbor
void OVR::OpenVR::EVROverlayError::_set_NoNeighbor(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_NoNeighbor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "NoNeighbor", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TooManyMaskPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_TooManyMaskPrimitives");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TooManyMaskPrimitives
void OVR::OpenVR::EVROverlayError::_set_TooManyMaskPrimitives(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_TooManyMaskPrimitives");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TooManyMaskPrimitives", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_BadMaskPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_BadMaskPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError BadMaskPrimitive
void OVR::OpenVR::EVROverlayError::_set_BadMaskPrimitive(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_BadMaskPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "BadMaskPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureAlreadyLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_TextureAlreadyLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureAlreadyLocked
void OVR::OpenVR::EVROverlayError::_set_TextureAlreadyLocked(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_TextureAlreadyLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureAlreadyLocked", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureLockCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_TextureLockCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureLockCapacityReached
void OVR::OpenVR::EVROverlayError::_set_TextureLockCapacityReached(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_TextureLockCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureLockCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
OVR::OpenVR::EVROverlayError OVR::OpenVR::EVROverlayError::_get_TextureNotLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_get_TextureNotLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<OVR::OpenVR::EVROverlayError>("OVR.OpenVR", "EVROverlayError", "TextureNotLocked"));
}
// Autogenerated static field setter
// Set static field: static public OVR.OpenVR.EVROverlayError TextureNotLocked
void OVR::OpenVR::EVROverlayError::_set_TextureNotLocked(OVR::OpenVR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("EVROverlayError").WithContext("_set_TextureNotLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("OVR.OpenVR", "EVROverlayError", "TextureNotLocked", value));
}
