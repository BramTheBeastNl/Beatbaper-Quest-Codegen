// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.CVRDriverManager
#include "OVR/OpenVR/CVRDriverManager.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverCount
uint OVR::OpenVR::CVRDriverManager::GetDriverCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRDriverManager").WithContext("GetDriverCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDriverCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverName
uint OVR::OpenVR::CVRDriverManager::GetDriverName(uint nDriver, System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRDriverManager").WithContext("GetDriverName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDriverName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nDriver, pchValue, unBufferSize)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated method: OVR.OpenVR.CVRDriverManager.GetDriverHandle
uint64_t OVR::OpenVR::CVRDriverManager::GetDriverHandle(::Il2CppString* pchDriverName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("CVRDriverManager").WithContext("GetDriverHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDriverHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pchDriverName)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, pchDriverName);
}
