// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OVR.OpenVR.OpenVR/COpenVRContext
#include "OVR/OpenVR/OpenVR_COpenVRContext.hpp"
// Including type: OVR.OpenVR.CVRSystem
#include "OVR/OpenVR/CVRSystem.hpp"
// Including type: OVR.OpenVR.CVRChaperone
#include "OVR/OpenVR/CVRChaperone.hpp"
// Including type: OVR.OpenVR.CVRChaperoneSetup
#include "OVR/OpenVR/CVRChaperoneSetup.hpp"
// Including type: OVR.OpenVR.CVRCompositor
#include "OVR/OpenVR/CVRCompositor.hpp"
// Including type: OVR.OpenVR.CVROverlay
#include "OVR/OpenVR/CVROverlay.hpp"
// Including type: OVR.OpenVR.CVRRenderModels
#include "OVR/OpenVR/CVRRenderModels.hpp"
// Including type: OVR.OpenVR.CVRExtendedDisplay
#include "OVR/OpenVR/CVRExtendedDisplay.hpp"
// Including type: OVR.OpenVR.CVRSettings
#include "OVR/OpenVR/CVRSettings.hpp"
// Including type: OVR.OpenVR.CVRApplications
#include "OVR/OpenVR/CVRApplications.hpp"
// Including type: OVR.OpenVR.CVRScreenshots
#include "OVR/OpenVR/CVRScreenshots.hpp"
// Including type: OVR.OpenVR.CVRTrackedCamera
#include "OVR/OpenVR/CVRTrackedCamera.hpp"
// Including type: OVR.OpenVR.CVRInput
#include "OVR/OpenVR/CVRInput.hpp"
// Including type: OVR.OpenVR.CVRSpatialAnchors
#include "OVR/OpenVR/CVRSpatialAnchors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.Clear
void OVR::OpenVR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Clear", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.CheckClear
void OVR::OpenVR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("CheckClear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "CheckClear", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSystem
OVR::OpenVR::CVRSystem* OVR::OpenVR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRSystem*>(), "VRSystem", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRChaperone
OVR::OpenVR::CVRChaperone* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRChaperone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRChaperone*>(), "VRChaperone", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRChaperoneSetup
OVR::OpenVR::CVRChaperoneSetup* OVR::OpenVR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRChaperoneSetup*>(), "VRChaperoneSetup", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRCompositor
OVR::OpenVR::CVRCompositor* OVR::OpenVR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRCompositor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRCompositor*>(), "VRCompositor", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VROverlay
OVR::OpenVR::CVROverlay* OVR::OpenVR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VROverlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVROverlay*>(), "VROverlay", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRRenderModels
OVR::OpenVR::CVRRenderModels* OVR::OpenVR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRRenderModels*>(), "VRRenderModels", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRExtendedDisplay
OVR::OpenVR::CVRExtendedDisplay* OVR::OpenVR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRExtendedDisplay*>(), "VRExtendedDisplay", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSettings
OVR::OpenVR::CVRSettings* OVR::OpenVR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRSettings*>(), "VRSettings", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRApplications
OVR::OpenVR::CVRApplications* OVR::OpenVR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRApplications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRApplications*>(), "VRApplications", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRScreenshots
OVR::OpenVR::CVRScreenshots* OVR::OpenVR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRScreenshots*>(), "VRScreenshots", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRTrackedCamera
OVR::OpenVR::CVRTrackedCamera* OVR::OpenVR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRTrackedCamera*>(), "VRTrackedCamera", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRInput
OVR::OpenVR::CVRInput* OVR::OpenVR::OpenVR::COpenVRContext::VRInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRInput*>(), "VRInput", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRInput*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext.VRSpatialAnchors
OVR::OpenVR::CVRSpatialAnchors* OVR::OpenVR::OpenVR::COpenVRContext::VRSpatialAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext("VRSpatialAnchors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<OVR::OpenVR::CVRSpatialAnchors*>(), "VRSpatialAnchors", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OVR::OpenVR::CVRSpatialAnchors*, false>(this, ___internal__method);
}
// Autogenerated method: OVR.OpenVR.OpenVR/COpenVRContext..ctor
OVR::OpenVR::OpenVR::COpenVRContext* OVR::OpenVR::OpenVR::COpenVRContext::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("OVR::OpenVR").WithContext("COpenVRContext").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<OpenVR::COpenVRContext*>());
}
