// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OVR.OpenVR.IVRTrackedCamera/_GetCameraErrorNameFromEnum
#include "OVR\OpenVR\IVRTrackedCamera__GetCameraErrorNameFromEnum.hpp"
// Including type: OVR.OpenVR.EVRTrackedCameraError
#include "OVR\OpenVR\EVRTrackedCameraError.hpp"
// Including type: System.IAsyncResult
#include "System\IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System\AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OVR.OpenVR.IVRTrackedCamera/_GetCameraErrorNameFromEnum..ctor
OVR::OpenVR::IVRTrackedCamera::_GetCameraErrorNameFromEnum* OVR::OpenVR::IVRTrackedCamera::_GetCameraErrorNameFromEnum::New_ctor(::Il2CppObject* object, System::IntPtr method) {
  return (IVRTrackedCamera::_GetCameraErrorNameFromEnum*)THROW_UNLESS(il2cpp_utils::New("OVR.OpenVR", "IVRTrackedCamera/_GetCameraErrorNameFromEnum", object, method));
}
// Autogenerated method: OVR.OpenVR.IVRTrackedCamera/_GetCameraErrorNameFromEnum.Invoke
System::IntPtr OVR::OpenVR::IVRTrackedCamera::_GetCameraErrorNameFromEnum::Invoke(OVR::OpenVR::EVRTrackedCameraError eCameraError) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "Invoke", eCameraError));
}
// Autogenerated method: OVR.OpenVR.IVRTrackedCamera/_GetCameraErrorNameFromEnum.BeginInvoke
System::IAsyncResult* OVR::OpenVR::IVRTrackedCamera::_GetCameraErrorNameFromEnum::BeginInvoke(OVR::OpenVR::EVRTrackedCameraError eCameraError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IAsyncResult*>(this, "BeginInvoke", eCameraError, callback, object));
}
// Autogenerated method: OVR.OpenVR.IVRTrackedCamera/_GetCameraErrorNameFromEnum.EndInvoke
System::IntPtr OVR::OpenVR::IVRTrackedCamera::_GetCameraErrorNameFromEnum::EndInvoke(System::IAsyncResult* result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::IntPtr>(this, "EndInvoke", result));
}
