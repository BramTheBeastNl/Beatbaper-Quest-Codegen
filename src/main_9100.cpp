// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Exceptions.ResourceManagerException
#include "UnityEngine/ResourceManagement/Exceptions/ResourceManagerException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Exceptions.UnknownResourceProviderException
#include "UnityEngine/ResourceManagement/Exceptions/UnknownResourceProviderException.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation <Location>k__BackingField
UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*& UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::dyn_$Location$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::dyn_$Location$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Location>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Exceptions.UnknownResourceProviderException.get_Location
UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::get_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Exceptions.UnknownResourceProviderException.set_Location
void UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::set_Location(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::set_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.Exceptions.UnknownResourceProviderException.get_Message
::Il2CppString* UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Exceptions.UnknownResourceProviderException.ToString
::Il2CppString* UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Exceptions::UnknownResourceProviderException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.DelayedActionManager
#include "UnityEngine/ResourceManagement/Util/DelayedActionManager.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo>[] m_Actions
::ArrayW<System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*>& UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_Actions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_Actions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Actions"))->offset;
  return *reinterpret_cast<::ArrayW<System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.LinkedList`1<UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo> m_DelayedActions
System::Collections::Generic::LinkedList_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*& UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_DelayedActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_DelayedActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelayedActions"))->offset;
  return *reinterpret_cast<System::Collections::Generic::LinkedList_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Collections.Generic.LinkedListNode`1<UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo>> m_NodeCache
System::Collections::Generic::Stack_1<System::Collections::Generic::LinkedListNode_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*>*& UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_NodeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_NodeCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NodeCache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Stack_1<System::Collections::Generic::LinkedListNode_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CollectionIndex
int& UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_CollectionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_CollectionIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CollectionIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DestroyOnCompletion
bool& UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_DestroyOnCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::dyn_m_DestroyOnCompletion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DestroyOnCompletion"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.get_IsActive
bool UnityEngine::ResourceManagement::Util::DelayedActionManager::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "DelayedActionManager", "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.GetNode
System::Collections::Generic::LinkedListNode_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>* UnityEngine::ResourceManagement::Util::DelayedActionManager::GetNode(ByRef<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo> del) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::GetNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(del)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::LinkedListNode_1<UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo>*, false>(___instance_arg, ___internal__method, byref(del));
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.Clear
void UnityEngine::ResourceManagement::Util::DelayedActionManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "DelayedActionManager", "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.DestroyWhenComplete
void UnityEngine::ResourceManagement::Util::DelayedActionManager::DestroyWhenComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DestroyWhenComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyWhenComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.AddAction
void UnityEngine::ResourceManagement::Util::DelayedActionManager::AddAction(System::Delegate* action, float delay, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::AddAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "DelayedActionManager", "AddAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, action, delay, parameters);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.AddActionInternal
void UnityEngine::ResourceManagement::Util::DelayedActionManager::AddActionInternal(System::Delegate* action, float delay, ::ArrayW<::Il2CppObject*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::AddActionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddActionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(delay), ::il2cpp_utils::ExtractType(parameters)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, action, delay, parameters);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.Wait
bool UnityEngine::ResourceManagement::Util::DelayedActionManager::Wait(float timeout, float timeAdvanceAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::Wait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "DelayedActionManager", "Wait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(timeAdvanceAmount)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeout, timeAdvanceAmount);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.LateUpdate
void UnityEngine::ResourceManagement::Util::DelayedActionManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.InternalLateUpdate
void UnityEngine::ResourceManagement::Util::DelayedActionManager::InternalLateUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::InternalLateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager.OnApplicationQuit
void UnityEngine::ResourceManagement::Util::DelayedActionManager::OnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::OnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo
#include "UnityEngine/ResourceManagement/Util/DelayedActionManager.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 s_Id
int UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::_get_s_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::_get_s_Id");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ResourceManagement.Util", "DelayedActionManager/DelegateInfo", "s_Id"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_Id
void UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::_set_s_Id(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::_set_s_Id");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Util", "DelayedActionManager/DelegateInfo", "s_Id", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Id
int& UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Delegate m_Delegate
System::Delegate*& UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Delegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Delegate");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Delegate"))->offset;
  return *reinterpret_cast<System::Delegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] m_Target
::ArrayW<::Il2CppObject*>& UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <InvocationTime>k__BackingField
float& UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_$InvocationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::dyn_$InvocationTime$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InvocationTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo.get_InvocationTime
float UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::get_InvocationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::get_InvocationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InvocationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo.set_InvocationTime
void UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::set_InvocationTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::set_InvocationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_InvocationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo..ctor
UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::DelegateInfo(System::Delegate* d, float invocationTime, ::ArrayW<::Il2CppObject*> p) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(invocationTime), ::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, d, invocationTime, p);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo.Invoke
void UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DelayedActionManager/UnityEngine.ResourceManagement.Util.DelegateInfo.ToString
::Il2CppString* UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DelayedActionManager::DelegateInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.IInitializableObject
#include "UnityEngine/ResourceManagement/Util/IInitializableObject.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.Util.IInitializableObject.Initialize
bool UnityEngine::ResourceManagement::Util::IInitializableObject::Initialize(::Il2CppString* id, ::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IInitializableObject::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, id, data);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.IInitializableObject.InitializeAsync
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::ResourceManagement::Util::IInitializableObject::InitializeAsync(UnityEngine::ResourceManagement::ResourceManager* rm, ::Il2CppString* id, ::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IInitializableObject::InitializeAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(___instance_arg, ___internal__method, rm, id, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.IObjectInitializationDataProvider
#include "UnityEngine/ResourceManagement/Util/IObjectInitializationDataProvider.hpp"
// Including type: UnityEngine.ResourceManagement.Util.ObjectInitializationData
#include "UnityEngine/ResourceManagement/Util/ObjectInitializationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.Util.IObjectInitializationDataProvider.get_Name
::Il2CppString* UnityEngine::ResourceManagement::Util::IObjectInitializationDataProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IObjectInitializationDataProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.IObjectInitializationDataProvider.CreateObjectInitializationData
UnityEngine::ResourceManagement::Util::ObjectInitializationData UnityEngine::ResourceManagement::Util::IObjectInitializationDataProvider::CreateObjectInitializationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IObjectInitializationDataProvider::CreateObjectInitializationData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectInitializationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::Util::ObjectInitializationData, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.IAllocationStrategy
#include "UnityEngine/ResourceManagement/Util/IAllocationStrategy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.Util.IAllocationStrategy.New
::Il2CppObject* UnityEngine::ResourceManagement::Util::IAllocationStrategy::New(System::Type* type, int typeHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IAllocationStrategy::New");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeHash)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, type, typeHash);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.IAllocationStrategy.Release
void UnityEngine::ResourceManagement::Util::IAllocationStrategy::Release(int typeHash, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::IAllocationStrategy::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeHash), ::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, typeHash, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.DefaultAllocationStrategy
#include "UnityEngine/ResourceManagement/Util/DefaultAllocationStrategy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.Util.DefaultAllocationStrategy.New
::Il2CppObject* UnityEngine::ResourceManagement::Util::DefaultAllocationStrategy::New(System::Type* type, int typeHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DefaultAllocationStrategy::New");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeHash)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, type, typeHash);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.DefaultAllocationStrategy.Release
void UnityEngine::ResourceManagement::Util::DefaultAllocationStrategy::Release(int typeHash, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::DefaultAllocationStrategy::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeHash), ::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, typeHash, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.LRUCacheAllocationStrategy
#include "UnityEngine/ResourceManagement/Util/LRUCacheAllocationStrategy.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_poolMaxSize
int& UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poolMaxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_poolInitialCapacity
int& UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolInitialCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolInitialCapacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poolInitialCapacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_poolCacheMaxSize
int& UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolCacheMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolCacheMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poolCacheMaxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Collections.Generic.List`1<System.Object>> m_poolCache
System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppObject*>*>*& UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_poolCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_poolCache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<System::Collections::Generic::List_1<::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Collections.Generic.List`1<System.Object>> m_cache
System::Collections::Generic::Dictionary_2<int, System::Collections::Generic::List_1<::Il2CppObject*>*>*& UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::dyn_m_cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cache"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, System::Collections::Generic::List_1<::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.LRUCacheAllocationStrategy.GetPool
System::Collections::Generic::List_1<::Il2CppObject*>* UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::GetPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::GetPool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.LRUCacheAllocationStrategy.ReleasePool
void UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::ReleasePool(System::Collections::Generic::List_1<::Il2CppObject*>* pool) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::ReleasePool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pool)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pool);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.LRUCacheAllocationStrategy.New
::Il2CppObject* UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::New(System::Type* type, int typeHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::New");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "New", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeHash)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, type, typeHash);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.LRUCacheAllocationStrategy.Release
void UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::Release(int typeHash, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::LRUCacheAllocationStrategy::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeHash), ::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, typeHash, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.Util.SerializedTypeRestrictionAttribute
#include "UnityEngine/ResourceManagement/Util/SerializedTypeRestrictionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
System::Type*& UnityEngine::ResourceManagement::Util::SerializedTypeRestrictionAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedTypeRestrictionAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.SerializedType
#include "UnityEngine/ResourceManagement/Util/SerializedType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_AssemblyName
::Il2CppString*& UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_AssemblyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssemblyName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ClassName
::Il2CppString*& UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_ClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_ClassName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClassName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_CachedType
System::Type*& UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_CachedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::dyn_m_CachedType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ValueChanged>k__BackingField
bool& UnityEngine::ResourceManagement::Util::SerializedType::dyn_$ValueChanged$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::dyn_$ValueChanged$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ValueChanged>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.get_AssemblyName
::Il2CppString* UnityEngine::ResourceManagement::Util::SerializedType::get_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::get_AssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_AssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.get_ClassName
::Il2CppString* UnityEngine::ResourceManagement::Util::SerializedType::get_ClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::get_ClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.get_Value
System::Type* UnityEngine::ResourceManagement::Util::SerializedType::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.set_Value
void UnityEngine::ResourceManagement::Util::SerializedType::set_Value(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.get_ValueChanged
bool UnityEngine::ResourceManagement::Util::SerializedType::get_ValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::get_ValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.set_ValueChanged
void UnityEngine::ResourceManagement::Util::SerializedType::set_ValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::set_ValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.SerializedType.ToString
::Il2CppString* UnityEngine::ResourceManagement::Util::SerializedType::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::SerializedType::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.ObjectInitializationData
#include "UnityEngine/ResourceManagement/Util/ObjectInitializationData.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Id
::Il2CppString*& UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_Id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.Util.SerializedType m_ObjectType
UnityEngine::ResourceManagement::Util::SerializedType& UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_ObjectType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectType"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::Util::SerializedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Data
::Il2CppString*& UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::dyn_m_Data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ObjectInitializationData.get_Id
::Il2CppString* UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ObjectInitializationData.get_ObjectType
UnityEngine::ResourceManagement::Util::SerializedType UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::Util::SerializedType, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ObjectInitializationData.get_Data
::Il2CppString* UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::get_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ObjectInitializationData.GetAsyncInitHandle
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::ResourceManagement::Util::ObjectInitializationData::GetAsyncInitHandle(UnityEngine::ResourceManagement::ResourceManager* rm, ::Il2CppString* idOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::GetAsyncInitHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAsyncInitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(idOverride)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(*this, ___internal__method, rm, idOverride);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ObjectInitializationData.ToString
::Il2CppString* UnityEngine::ResourceManagement::Util::ObjectInitializationData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ObjectInitializationData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Util.ResourceManagerConfig
#include "UnityEngine/ResourceManagement/Util/ResourceManagerConfig.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.Util.ResourceManagerConfig.ExtractKeyAndSubKey
bool UnityEngine::ResourceManagement::Util::ResourceManagerConfig::ExtractKeyAndSubKey(::Il2CppObject* keyObj, ByRef<::Il2CppString*> mainKey, ByRef<::Il2CppString*> subKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ResourceManagerConfig::ExtractKeyAndSubKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "ResourceManagerConfig", "ExtractKeyAndSubKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyObj), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyObj, byref(mainKey), byref(subKey));
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ResourceManagerConfig.IsPathRemote
bool UnityEngine::ResourceManagement::Util::ResourceManagerConfig::IsPathRemote(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ResourceManagerConfig::IsPathRemote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "ResourceManagerConfig", "IsPathRemote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ResourceManagerConfig.ShouldPathUseWebRequest
bool UnityEngine::ResourceManagement::Util::ResourceManagerConfig::ShouldPathUseWebRequest(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ResourceManagerConfig::ShouldPathUseWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "ResourceManagerConfig", "ShouldPathUseWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ResourceManagerConfig.CreateArrayResult
System::Array* UnityEngine::ResourceManagement::Util::ResourceManagerConfig::CreateArrayResult(System::Type* type, ::ArrayW<UnityEngine::Object*> allAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ResourceManagerConfig::CreateArrayResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "ResourceManagerConfig", "CreateArrayResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(allAssets)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, allAssets);
}
// Autogenerated method: UnityEngine.ResourceManagement.Util.ResourceManagerConfig.CreateListResult
System::Collections::IList* UnityEngine::ResourceManagement::Util::ResourceManagerConfig::CreateListResult(System::Type* type, ::ArrayW<UnityEngine::Object*> allAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Util::ResourceManagerConfig::CreateListResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Util", "ResourceManagerConfig", "CreateListResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(allAssets)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, allAssets);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource.GetAssetBundle
UnityEngine::AssetBundle* UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource::GetAssetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource::GetAssetBundle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions
#include "UnityEngine/ResourceManagement/ResourceProviders/AssetBundleRequestOptions.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Hash
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hash"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_Crc
uint& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Crc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Crc"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Timeout
int& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_Timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ChunkedTransfer
bool& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_ChunkedTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_ChunkedTransfer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChunkedTransfer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_RedirectLimit
int& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_RedirectLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_RedirectLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RedirectLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_RetryCount
int& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_RetryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_RetryCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RetryCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_BundleName
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_BundleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_BundleName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BundleName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_BundleSize
int64_t& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_BundleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_BundleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BundleSize"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UseCrcForCachedBundles
bool& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_UseCrcForCachedBundles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_UseCrcForCachedBundles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UseCrcForCachedBundles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ClearOtherCachedVersionsWhenLoaded
bool& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_ClearOtherCachedVersionsWhenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::dyn_m_ClearOtherCachedVersionsWhenLoaded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClearOtherCachedVersionsWhenLoaded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_Hash
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_Hash
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Hash(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_Crc
uint UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Crc() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Crc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_Crc
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Crc(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Crc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Crc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_Timeout
int UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_Timeout
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Timeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_ChunkedTransfer
bool UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_ChunkedTransfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_ChunkedTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChunkedTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_ChunkedTransfer
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_ChunkedTransfer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_ChunkedTransfer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChunkedTransfer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_RedirectLimit
int UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_RedirectLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_RedirectLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_RedirectLimit
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_RedirectLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_RedirectLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RedirectLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_RetryCount
int UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_RetryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_RetryCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RetryCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_RetryCount
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_RetryCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_RetryCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RetryCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_BundleName
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_BundleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_BundleName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BundleName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_BundleName
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_BundleName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_BundleName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BundleName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_BundleSize
int64_t UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_BundleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_BundleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BundleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_BundleSize
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_BundleSize(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_BundleSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BundleSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_UseCrcForCachedBundle
bool UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_UseCrcForCachedBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_UseCrcForCachedBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseCrcForCachedBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_UseCrcForCachedBundle
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_UseCrcForCachedBundle(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_UseCrcForCachedBundle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseCrcForCachedBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.get_ClearOtherCachedVersionsWhenLoaded
bool UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_ClearOtherCachedVersionsWhenLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::get_ClearOtherCachedVersionsWhenLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClearOtherCachedVersionsWhenLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.set_ClearOtherCachedVersionsWhenLoaded
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_ClearOtherCachedVersionsWhenLoaded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::set_ClearOtherCachedVersionsWhenLoaded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClearOtherCachedVersionsWhenLoaded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions.ComputeSize
int64_t UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::ComputeSize(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::ResourceManagement::ResourceManager* resourceManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions::ComputeSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(resourceManager)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, location, resourceManager);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/AssetBundleResource.hpp"
// Including type: UnityEngine.AssetBundle
#include "UnityEngine/AssetBundle.hpp"
// Including type: UnityEngine.Networking.DownloadHandlerAssetBundle
#include "UnityEngine/Networking/DownloadHandlerAssetBundle.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: UnityEngine.ResourceManagement.WebRequestQueueOperation
#include "UnityEngine/ResourceManagement/WebRequestQueueOperation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions
#include "UnityEngine/ResourceManagement/ResourceProviders/AssetBundleRequestOptions.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AssetBundle m_AssetBundle
UnityEngine::AssetBundle*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_AssetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_AssetBundle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AssetBundle"))->offset;
  return *reinterpret_cast<UnityEngine::AssetBundle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.DownloadHandlerAssetBundle m_downloadHandler
UnityEngine::Networking::DownloadHandlerAssetBundle*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_downloadHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_downloadHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_downloadHandler"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::DownloadHandlerAssetBundle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation m_RequestOperation
UnityEngine::AsyncOperation*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_RequestOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_RequestOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestOperation"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.WebRequestQueueOperation m_WebRequestQueueOperation
UnityEngine::ResourceManagement::WebRequestQueueOperation*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_WebRequestQueueOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_WebRequestQueueOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WebRequestQueueOperation"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::WebRequestQueueOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_ProvideHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_ProvideHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProvideHandle"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleRequestOptions m_Options
UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions*& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Options"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::AssetBundleRequestOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Retries
int& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Retries() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Retries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Retries"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_BytesToDownload
int64_t& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_BytesToDownload() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_BytesToDownload");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BytesToDownload"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 m_DownloadedBytes
int64_t& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_DownloadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_DownloadedBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DownloadedBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Completed
bool& UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::dyn_m_Completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.CreateWebRequest
UnityEngine::Networking::UnityWebRequest* UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::CreateWebRequest(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::CreateWebRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loc)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Networking::UnityWebRequest*, false>(___instance_arg, ___internal__method, loc);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.PercentComplete
float UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::PercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::PercentComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.GetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::GetDownloadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.GetAssetBundle
UnityEngine::AssetBundle* UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::GetAssetBundle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::GetAssetBundle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssetBundle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AssetBundle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.Start
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::Start(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.WaitForCompletionHandler
bool UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::WaitForCompletionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::WaitForCompletionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.BeginOperation
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::BeginOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::BeginOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.LocalRequestOperationCompleted
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::LocalRequestOperationCompleted(UnityEngine::AsyncOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::LocalRequestOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalRequestOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.WebRequestOperationCompleted
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::WebRequestOperationCompleted(UnityEngine::AsyncOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::WebRequestOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WebRequestOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.Unload
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::Unload() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleResource.<BeginOperation>b__16_0
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::$BeginOperation$b__16_0(UnityEngine::Networking::UnityWebRequestAsyncOperation* asyncOp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleResource::<BeginOperation>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginOperation>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncOp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncOp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/AssetBundleProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle providerInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerInterface)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, providerInterface);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider.GetDefaultType
System::Type* UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::GetDefaultType(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::GetDefaultType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, location);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AssetBundleProvider.Release
void UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::Release(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::Il2CppObject* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AssetBundleProvider::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(asset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, location, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.AtlasSpriteProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/AtlasSpriteProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.AtlasSpriteProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::AtlasSpriteProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle providerInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::AtlasSpriteProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(providerInterface)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, providerInterface);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/BundledAssetProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/BundledAssetProvider_InternalOp.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/BundledAssetProvider_InternalOp.hpp"
// Including type: UnityEngine.AssetBundleRequest
#include "UnityEngine/AssetBundleRequest.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IAssetBundleResource
#include "UnityEngine/ResourceManagement/ResourceProviders/IAssetBundleResource.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AssetBundleRequest m_RequestOperation
UnityEngine::AssetBundleRequest*& UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_m_RequestOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_m_RequestOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestOperation"))->offset;
  return *reinterpret_cast<UnityEngine::AssetBundleRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_m_ProvideHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_m_ProvideHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProvideHandle"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String subObjectName
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_subObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::dyn_subObjectName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subObjectName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.LoadBundleFromDependecies
UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource* UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::LoadBundleFromDependecies(System::Collections::Generic::IList_1<::Il2CppObject*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::LoadBundleFromDependecies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.ResourceProviders", "BundledAssetProvider/InternalOp", "LoadBundleFromDependecies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceProviders::IAssetBundleResource*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, results);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.Start
void UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::Start(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.WaitForCompletionHandler
bool UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::WaitForCompletionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::WaitForCompletionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.ActionComplete
void UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ActionComplete(UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ActionComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.BundledAssetProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.ProgressCallback
float UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ProgressCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::BundledAssetProvider::InternalOp::ProgressCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters
#include "UnityEngine/ResourceManagement/ResourceProviders/InstantiationParameters.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Position
UnityEngine::Vector3& UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion m_Rotation
UnityEngine::Quaternion& UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Rotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Parent
UnityEngine::Transform*& UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_Parent");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Parent"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_InstantiateInWorldPosition
bool& UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_InstantiateInWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_InstantiateInWorldPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InstantiateInWorldPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SetPositionRotation
bool& UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_SetPositionRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::dyn_m_SetPositionRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SetPositionRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters.get_Position
UnityEngine::Vector3 UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters.get_Rotation
UnityEngine::Quaternion UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters.get_Parent
UnityEngine::Transform* UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters.get_InstantiateInWorldPosition
bool UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_InstantiateInWorldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_InstantiateInWorldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InstantiateInWorldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters.get_SetPositionRotation
bool UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_SetPositionRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::get_SetPositionRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SetPositionRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters..ctor
UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::InstantiationParameters(UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, parent, instantiateInWorldSpace);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters..ctor
UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::InstantiationParameters(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation, UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, position, rotation, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/IInstanceProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters
#include "UnityEngine/ResourceManagement/ResourceProviders/InstantiationParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider.ProvideInstance
UnityEngine::GameObject* UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider::ProvideInstance(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::GameObject*> prefabHandle, UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider::ProvideInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(prefabHandle), ::il2cpp_utils::ExtractType(instantiateParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, resourceManager, prefabHandle, instantiateParameters);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IInstanceProvider.ReleaseInstance
void UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider::ReleaseInstance(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::GameObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IInstanceProvider::ReleaseInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(instance)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resourceManager, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags
#include "UnityEngine/ResourceManagement/ResourceProviders/ProviderBehaviourFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags None
UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags>("UnityEngine.ResourceManagement.ResourceProviders", "ProviderBehaviourFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags None
void UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_set_None(UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.ResourceProviders", "ProviderBehaviourFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags CanProvideWithFailedDependencies
UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_get_CanProvideWithFailedDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_get_CanProvideWithFailedDependencies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags>("UnityEngine.ResourceManagement.ResourceProviders", "ProviderBehaviourFlags", "CanProvideWithFailedDependencies"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags CanProvideWithFailedDependencies
void UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_set_CanProvideWithFailedDependencies(UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::_set_CanProvideWithFailedDependencies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.ResourceProviders", "ProviderBehaviourFlags", "CanProvideWithFailedDependencies", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IGenericProviderOperation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
int& UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation m_InternalOp
UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation*& UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_InternalOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_InternalOp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalOp"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceManager m_ResourceManager
UnityEngine::ResourceManagement::ResourceManager*& UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::dyn_m_ResourceManager");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceManager"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.get_InternalOp
UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation* UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_InternalOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_InternalOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.get_ResourceManager
UnityEngine::ResourceManagement::ResourceManager* UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_ResourceManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ResourceManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceManager*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.get_Type
System::Type* UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.get_Location
UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_Location");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.get_DependencyCount
int UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_DependencyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::get_DependencyCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DependencyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle..ctor
UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::ProvideHandle(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, rm, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.GetDependencies
void UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::GetDependencies(System::Collections::Generic::IList_1<::Il2CppObject*>* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::GetDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, list);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.SetProgressCallback
void UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetProgressCallback(System::Func_1<float>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetProgressCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.SetDownloadProgressCallbacks
void UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetDownloadProgressCallbacks(System::Func_1<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetDownloadProgressCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetDownloadProgressCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle.SetWaitForCompletionCallback
void UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetWaitForCompletionCallback(System::Func_1<bool>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle::SetWaitForCompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetWaitForCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/IResourceProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags
#include "UnityEngine/ResourceManagement/ResourceProviders/ProviderBehaviourFlags.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.get_ProviderId
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::get_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::get_ProviderId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.get_BehaviourFlags
UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::get_BehaviourFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::get_BehaviourFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BehaviourFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.GetDefaultType
System::Type* UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::GetDefaultType(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::GetDefaultType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, location);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.CanProvide
bool UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::CanProvide(System::Type* type, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::CanProvide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanProvide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(location)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, type, location);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.Release
void UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::Release(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::Il2CppObject* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(asset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, location, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneInstance.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.Scene m_Scene
UnityEngine::SceneManagement::Scene& UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::dyn_m_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::dyn_m_Scene");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scene"))->offset;
  return *reinterpret_cast<UnityEngine::SceneManagement::Scene*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.AsyncOperation m_Operation
UnityEngine::AsyncOperation*& UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::dyn_m_Operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::dyn_m_Operation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Operation"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.get_Scene
UnityEngine::SceneManagement::Scene UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::get_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::get_Scene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Scene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::SceneManagement::Scene, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.set_Scene
void UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::set_Scene(UnityEngine::SceneManagement::Scene value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::set_Scene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Scene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.Activate
void UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.ActivateAsync
UnityEngine::AsyncOperation* UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::ActivateAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::ActivateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ActivateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.GetHashCode
int UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneInstance.Equals
bool UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneInstance::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/ISceneProvider.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider.ProvideScene
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider::ProvideScene(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider::ProvideScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(___instance_arg, ___internal__method, resourceManager, location, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ISceneProvider.ReleaseScene
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider::ReleaseScene(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> sceneLoadHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ISceneProvider::ReleaseScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(sceneLoadHandle)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(___instance_arg, ___internal__method, resourceManager, sceneLoadHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstanceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/InstanceProvider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.InstantiationParameters
#include "UnityEngine/ResourceManagement/ResourceProviders/InstantiationParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.GameObject,UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.GameObject>> m_InstanceObjectToPrefabHandle
System::Collections::Generic::Dictionary_2<UnityEngine::GameObject*, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::GameObject*>>*& UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::dyn_m_InstanceObjectToPrefabHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::dyn_m_InstanceObjectToPrefabHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InstanceObjectToPrefabHandle"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<UnityEngine::GameObject*, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::GameObject*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstanceProvider.ProvideInstance
UnityEngine::GameObject* UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::ProvideInstance(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::GameObject*> prefabHandle, UnityEngine::ResourceManagement::ResourceProviders::InstantiationParameters instantiateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::ProvideInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(prefabHandle), ::il2cpp_utils::ExtractType(instantiateParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, resourceManager, prefabHandle, instantiateParameters);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.InstanceProvider.ReleaseInstance
void UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::ReleaseInstance(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::GameObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::InstanceProvider::ReleaseInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(instance)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, resourceManager, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.JsonAssetProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/JsonAssetProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.JsonAssetProvider.Convert
::Il2CppObject* UnityEngine::ResourceManagement::ResourceProviders::JsonAssetProvider::Convert(System::Type* type, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::JsonAssetProvider::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, type, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/LegacyResourcesProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/LegacyResourcesProvider_InternalOp.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle pi) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pi);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider.Release
void UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::Release(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::Il2CppObject* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(asset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, location, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/LegacyResourcesProvider_InternalOp.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation m_RequestOperation
UnityEngine::AsyncOperation*& UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::dyn_m_RequestOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::dyn_m_RequestOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestOperation"))->offset;
  return *reinterpret_cast<UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_ProvideHandle
UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::dyn_m_ProvideHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::dyn_m_ProvideHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProvideHandle"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.Start
void UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::Start(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.AsyncOperationCompleted
void UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::AsyncOperationCompleted(UnityEngine::AsyncOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::AsyncOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.LegacyResourcesProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.PercentComplete
float UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::PercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::LegacyResourcesProvider::InternalOp::PercentComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase
#include "UnityEngine/ResourceManagement/ResourceProviders/ResourceProviderBase.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.BaseInitAsyncOp
#include "UnityEngine/ResourceManagement/ResourceProviders/ResourceProviderBase_BaseInitAsyncOp.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.<>c__DisplayClass10_0
#include "UnityEngine/ResourceManagement/ResourceProviders/ResourceProviderBase_--c__DisplayClass10_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.String m_ProviderId
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::dyn_m_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::dyn_m_ProviderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.ResourceManagement.ResourceProviders.ProviderBehaviourFlags m_BehaviourFlags
UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::dyn_m_BehaviourFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::dyn_m_BehaviourFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BehaviourFlags"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.get_ProviderId
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::get_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::get_ProviderId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.get_BehaviourFlags
UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::UnityEngine_ResourceManagement_ResourceProviders_IResourceProvider_get_BehaviourFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.get_BehaviourFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider.get_BehaviourFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceProviders::ProviderBehaviourFlags, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.Initialize
bool UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Initialize(::Il2CppString* id, ::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, id, data);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.CanProvide
bool UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::CanProvide(System::Type* t, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::CanProvide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanProvide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(location)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, t, location);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.Release
void UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Release(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, ::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, location, obj);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.GetDefaultType
System::Type* UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::GetDefaultType(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::GetDefaultType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, location);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.Provide
void UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.InitializeAsync
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool> UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::InitializeAsync(UnityEngine::ResourceManagement::ResourceManager* rm, ::Il2CppString* id, ::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::InitializeAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(data)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<bool>, false>(___instance_arg, ___internal__method, rm, id, data);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase.ToString
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.BaseInitAsyncOp
#include "UnityEngine/ResourceManagement/ResourceProviders/ResourceProviderBase_BaseInitAsyncOp.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Boolean> m_CallBack
System::Func_1<bool>*& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::dyn_m_CallBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::dyn_m_CallBack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CallBack"))->offset;
  return *reinterpret_cast<System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.BaseInitAsyncOp.Init
void UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::Init(System::Func_1<bool>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.BaseInitAsyncOp.InvokeWaitForCompletion
bool UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.BaseInitAsyncOp.Execute
void UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::BaseInitAsyncOp::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.<>c__DisplayClass10_0
#include "UnityEngine/ResourceManagement/ResourceProviders/ResourceProviderBase_--c__DisplayClass10_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase <>4__this
UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase*& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String data
::Il2CppString*& UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ResourceProviderBase/UnityEngine.ResourceManagement.ResourceProviders.<>c__DisplayClass10_0.<InitializeAsync>b__0
bool UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::$InitializeAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ResourceProviderBase::$$c__DisplayClass10_0::<InitializeAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProviderLoadRequestOptions
#include "UnityEngine/ResourceManagement/ResourceProviders/ProviderLoadRequestOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreFailures
bool& UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::dyn_m_IgnoreFailures() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::dyn_m_IgnoreFailures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreFailures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProviderLoadRequestOptions.get_IgnoreFailures
bool UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::get_IgnoreFailures() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::get_IgnoreFailures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreFailures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.ProviderLoadRequestOptions.set_IgnoreFailures
void UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::set_IgnoreFailures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::ProviderLoadRequestOptions::set_IgnoreFailures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreFailures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneProvider_SceneOp.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneProvider_UnloadSceneOp.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.SceneManagement.LoadSceneMode
#include "UnityEngine/SceneManagement/LoadSceneMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider.ProvideScene
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::ProvideScene(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::ProvideScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProvideScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(___instance_arg, ___internal__method, resourceManager, location, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider.ReleaseScene
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::ReleaseScene(UnityEngine::ResourceManagement::ResourceManager* resourceManager, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> sceneLoadHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::ReleaseScene");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceManager), ::il2cpp_utils::ExtractType(sceneLoadHandle)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>, false>(___instance_arg, ___internal__method, resourceManager, sceneLoadHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneProvider_SceneOp.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ActivateOnLoad
bool& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_ActivateOnLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_ActivateOnLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActivateOnLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.SceneInstance m_Inst
UnityEngine::ResourceManagement::ResourceProviders::SceneInstance& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Inst() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Inst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Inst"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation m_Location
UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Location"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SceneManagement.LoadSceneMode m_LoadMode
UnityEngine::SceneManagement::LoadSceneMode& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_LoadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_LoadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoadMode"))->offset;
  return *reinterpret_cast<UnityEngine::SceneManagement::LoadSceneMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Priority
int& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_Priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<System.Collections.Generic.IList`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle>> m_DepOp
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_DepOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_DepOp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DepOp"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceManager m_ResourceManager
UnityEngine::ResourceManagement::ResourceManager*& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_ResourceManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::dyn_m_ResourceManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResourceManager"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.Init
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Init(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> depOp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority), ::il2cpp_utils::ExtractType(depOp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, location, loadMode, activateOnLoad, priority, depOp);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.InternalLoadScene
UnityEngine::ResourceManagement::ResourceProviders::SceneInstance UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InternalLoadScene(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, bool loadingFromBundle, UnityEngine::SceneManagement::LoadSceneMode loadMode, bool activateOnLoad, int priority) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InternalLoadScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLoadScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(loadingFromBundle), ::il2cpp_utils::ExtractType(loadMode), ::il2cpp_utils::ExtractType(activateOnLoad), ::il2cpp_utils::ExtractType(priority)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance, false>(___instance_arg, ___internal__method, location, loadingFromBundle, loadMode, activateOnLoad, priority);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.InternalLoad
UnityEngine::AsyncOperation* UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InternalLoad(::Il2CppString* path, bool loadingFromBundle, UnityEngine::SceneManagement::LoadSceneMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InternalLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(loadingFromBundle), ::il2cpp_utils::ExtractType(mode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AsyncOperation*, false>(___instance_arg, ___internal__method, path, loadingFromBundle, mode);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.UnityEngine.ResourceManagement.IUpdateReceiver.Update
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::UnityEngine_ResourceManagement_IUpdateReceiver_Update(float unscaledDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::UnityEngine.ResourceManagement.IUpdateReceiver.Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.IUpdateReceiver.Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unscaledDeltaTime)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, unscaledDeltaTime);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.get_DebugName
::Il2CppString* UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.get_Progress
float UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::get_Progress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.GetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::GetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::GetDownloadStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(___instance_arg, ___internal__method, visited);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.InvokeWaitForCompletion
bool UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.GetDependencies
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::GetDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.Execute
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.SceneOp.Destroy
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::SceneOp::Destroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp
#include "UnityEngine/ResourceManagement/ResourceProviders/SceneProvider_UnloadSceneOp.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.SceneInstance m_Instance
UnityEngine::ResourceManagement::ResourceProviders::SceneInstance& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::dyn_m_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::dyn_m_Instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Instance"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1<UnityEngine.ResourceManagement.ResourceProviders.SceneInstance> m_sceneLoadHandle
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>& UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::dyn_m_sceneLoadHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::dyn_m_sceneLoadHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sceneLoadHandle"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.Init
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::Init(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<UnityEngine::ResourceManagement::ResourceProviders::SceneInstance> sceneLoadHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneLoadHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sceneLoadHandle);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.UnloadSceneCompleted
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::UnloadSceneCompleted(UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::UnloadSceneCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSceneCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.UnloadSceneCompletedNoRelease
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::UnloadSceneCompletedNoRelease(UnityEngine::AsyncOperation* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::UnloadSceneCompletedNoRelease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSceneCompletedNoRelease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.get_Progress
float UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::get_Progress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.Execute
void UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.SceneProvider/UnityEngine.ResourceManagement.ResourceProviders.UnloadSceneOp.InvokeWaitForCompletion
bool UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::SceneProvider::UnloadSceneOp::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/TextDataProvider.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/TextDataProvider_InternalOp.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle
#include "UnityEngine/ResourceManagement/ResourceProviders/ProvideHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IgnoreFailures>k__BackingField
bool& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::dyn_$IgnoreFailures$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::dyn_$IgnoreFailures$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IgnoreFailures>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider.get_IgnoreFailures
bool UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::get_IgnoreFailures() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::get_IgnoreFailures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreFailures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider.set_IgnoreFailures
void UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::set_IgnoreFailures(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::set_IgnoreFailures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreFailures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider.Convert
::Il2CppObject* UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::Convert(System::Type* type, ::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, type, text);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider.Provide
void UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::Provide(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::Provide");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Provide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp
#include "UnityEngine/ResourceManagement/ResourceProviders/TextDataProvider_InternalOp.hpp"
// Including type: UnityEngine.Networking.UnityWebRequestAsyncOperation
#include "UnityEngine/Networking/UnityWebRequestAsyncOperation.hpp"
// Including type: UnityEngine.ResourceManagement.WebRequestQueueOperation
#include "UnityEngine/ResourceManagement/WebRequestQueueOperation.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider m_Provider
UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider*& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_Provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Provider"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequestAsyncOperation m_RequestOperation
UnityEngine::Networking::UnityWebRequestAsyncOperation*& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_RequestOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_RequestOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestOperation"))->offset;
  return *reinterpret_cast<UnityEngine::Networking::UnityWebRequestAsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.WebRequestQueueOperation m_RequestQueueOperation
UnityEngine::ResourceManagement::WebRequestQueueOperation*& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_RequestQueueOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_RequestQueueOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RequestQueueOperation"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::WebRequestQueueOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.ResourceProviders.ProvideHandle m_PI
UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_PI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PI"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreFailures
bool& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_IgnoreFailures() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_IgnoreFailures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreFailures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Complete
bool& UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::dyn_m_Complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.GetPercentComplete
float UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::GetPercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::GetPercentComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.Start
void UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::Start(UnityEngine::ResourceManagement::ResourceProviders::ProvideHandle provideHandle, UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider* rawProvider, bool ignoreFailures) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provideHandle), ::il2cpp_utils::ExtractType(rawProvider), ::il2cpp_utils::ExtractType(ignoreFailures)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, provideHandle, rawProvider, ignoreFailures);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.WaitForCompletionHandler
bool UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::WaitForCompletionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::WaitForCompletionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.RequestOperation_completed
void UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::RequestOperation_completed(UnityEngine::AsyncOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::RequestOperation_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestOperation_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.ConvertText
::Il2CppObject* UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::ConvertText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::ConvertText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceProviders.TextDataProvider/UnityEngine.ResourceManagement.ResourceProviders.InternalOp.<Start>b__7_0
void UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::$Start$b__7_0(UnityEngine::Networking::UnityWebRequestAsyncOperation* asyncOperation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceProviders::TextDataProvider::InternalOp::<Start>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncOperation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncOperation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.ResourceLocations.ILocationSizeData
#include "UnityEngine/ResourceManagement/ResourceLocations/ILocationSizeData.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ILocationSizeData.ComputeSize
int64_t UnityEngine::ResourceManagement::ResourceLocations::ILocationSizeData::ComputeSize(UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::ResourceManagement::ResourceManager* resourceManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ILocationSizeData::ComputeSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(resourceManager)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, location, resourceManager);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_InternalId
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_InternalId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_InternalId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_ProviderId
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_ProviderId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_Dependencies
System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_Dependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_Dependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_DependencyHashCode
int UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_DependencyHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_DependencyHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DependencyHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_HasDependencies
bool UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_HasDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_HasDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_Data
::Il2CppObject* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_Data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_PrimaryKey
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_PrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_PrimaryKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.get_ResourceType
System::Type* UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::get_ResourceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation.Hash
int UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::Hash(System::Type* resultType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation::Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, resultType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase
#include "UnityEngine/ResourceManagement/ResourceLocations/ResourceLocationBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
::Il2CppString*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Id
::Il2CppString*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ProviderId
::Il2CppString*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_ProviderId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProviderId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_Data
::Il2CppObject*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_DependencyHashCode
int& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_DependencyHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_DependencyHashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DependencyHashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HashCode
int& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type m_Type
System::Type*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation> m_Dependencies
System::Collections::Generic::List_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Dependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_Dependencies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dependencies"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_PrimaryKey
::Il2CppString*& UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_PrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::dyn_m_PrimaryKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PrimaryKey"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_InternalId
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_InternalId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_InternalId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_ProviderId
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_ProviderId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_ProviderId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_Dependencies
System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_Dependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_Dependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Dependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_HasDependencies
bool UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_HasDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_HasDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_Data
::Il2CppObject* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_Data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.set_Data
void UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::set_Data(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_PrimaryKey
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_PrimaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_PrimaryKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.set_PrimaryKey
void UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::set_PrimaryKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::set_PrimaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_DependencyHashCode
int UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_DependencyHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_DependencyHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DependencyHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.get_ResourceType
System::Type* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_ResourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::get_ResourceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.Hash
int UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::Hash(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, t);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.ComputeDependencyHash
void UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::ComputeDependencyHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::ComputeDependencyHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDependencyHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.ResourceLocations.ResourceLocationBase.ToString
::Il2CppString* UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::ResourceLocations::ResourceLocationBase::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent
#include "UnityEngine/ResourceManagement/Diagnostics/DiagnosticEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Graph
::Il2CppString*& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Graph");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Graph"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_Dependencies
::ArrayW<int>& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Dependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Dependencies");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dependencies"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_ObjectId
int& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_ObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_ObjectId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ObjectId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_DisplayName
::Il2CppString*& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_DisplayName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DisplayName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Stream
int& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Stream"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Frame
int& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Frame");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Frame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Value
int& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::dyn_m_Value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_Graph
::Il2CppString* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_ObjectId
int UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_ObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_ObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_DisplayName
::Il2CppString* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_Dependencies
::ArrayW<int> UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Dependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Dependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Dependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_Stream
int UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Stream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Stream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_Frame
int UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Frame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Frame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.get_Value
int UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent..ctor
UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::DiagnosticEvent(::Il2CppString* graph, ::Il2CppString* name, int id, int stream, int frame, int value, ::ArrayW<int> deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, graph, name, id, stream, frame, value, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.Serialize
::ArrayW<uint8_t> UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent.Deserialize
UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::Deserialize(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEvent", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton
#include "UnityEngine/ResourceManagement/Diagnostics/DiagnosticEventCollectorSingleton.hpp"
// Including type: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c
#include "UnityEngine/ResourceManagement/Diagnostics/DiagnosticEventCollectorSingleton_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DelegateList`1
#include "GlobalNamespace/DelegateList_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Guid s_editorConnectionGuid
System::Guid UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::_get_s_editorConnectionGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::_get_s_editorConnectionGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton", "s_editorConnectionGuid"));
}
// Autogenerated static field setter
// Set static field: static private System.Guid s_editorConnectionGuid
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::_set_s_editorConnectionGuid(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::_set_s_editorConnectionGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton", "s_editorConnectionGuid", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent> m_CreatedEvents
System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_CreatedEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_CreatedEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CreatedEvents"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent> m_UnhandledEvents
System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_UnhandledEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_UnhandledEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnhandledEvents"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: DelegateList`1<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent> s_EventHandlers
GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_s_EventHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_s_EventHandlers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s_EventHandlers"))->offset;
  return *reinterpret_cast<GlobalNamespace::DelegateList_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_lastTickSent
float& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_lastTickSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_lastTickSent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastTickSent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_lastFrame
int& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_lastFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_m_lastFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single fpsAvg
float& UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_fpsAvg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::dyn_fpsAvg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fpsAvg"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.get_PlayerConnectionGuid
System::Guid UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::get_PlayerConnectionGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::get_PlayerConnectionGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton", "get_PlayerConnectionGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.RegisterEventHandler
bool UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::RegisterEventHandler(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* handler, bool _register, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::RegisterEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton", "RegisterEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(_register), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, _register, create);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.RegisterEventHandler
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::RegisterEventHandler(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::RegisterEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, handler);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.UnregisterEventHandler
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::UnregisterEventHandler(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::UnregisterEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, handler);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.PostEvent
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::PostEvent(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent diagnosticEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::PostEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diagnosticEvent)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, diagnosticEvent);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.Update
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.GetGameObjectName
::Il2CppString* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::GetGameObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::GetGameObjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton.Awake
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c
#include "UnityEngine/ResourceManagement/Diagnostics/DiagnosticEventCollectorSingleton_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c <>9
UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c*>("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c <>9
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent,System.Int32> <>9__8_0
System::Func_2<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent, int>* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent, int>*>("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent,System.Int32> <>9__8_0
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9__8_0(System::Func_2<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent> <>9__11_0
System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>*>("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngine.ResourceManagement.Diagnostics.DiagnosticEvent> <>9__11_0
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9__11_0(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", "<>9__11_0", value)));
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c..cctor
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollectorSingleton/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c.<RegisterEventHandler>b__8_0
int UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::$RegisterEventHandler$b__8_0(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::<RegisterEventHandler>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterEventHandler>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, evt);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollectorSingleton/UnityEngine.ResourceManagement.Diagnostics.<>c.<Awake>b__11_0
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::$Awake$b__11_0(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent diagnosticEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollectorSingleton::$$c::<Awake>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diagnosticEvent)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, diagnosticEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector
#include "UnityEngine/ResourceManagement/Diagnostics/DiagnosticEventCollector.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector s_Collector
UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::_get_s_Collector() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::_get_s_Collector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector*>("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollector", "s_Collector"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector s_Collector
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::_set_s_Collector(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::_set_s_Collector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollector", "s_Collector", value));
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector.get_PlayerConnectionGuid
System::Guid UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::get_PlayerConnectionGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::get_PlayerConnectionGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollector", "get_PlayerConnectionGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector.FindOrCreateGlobalInstance
UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector* UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::FindOrCreateGlobalInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::FindOrCreateGlobalInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollector", "FindOrCreateGlobalInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector.RegisterEventHandler
bool UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::RegisterEventHandler(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* handler, bool _register, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::RegisterEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.ResourceManagement.Diagnostics", "DiagnosticEventCollector", "RegisterEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(_register), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, _register, create);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector.UnregisterEventHandler
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::UnregisterEventHandler(System::Action_1<UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent>* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::UnregisterEventHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterEventHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, handler);
}
// Autogenerated method: UnityEngine.ResourceManagement.Diagnostics.DiagnosticEventCollector.PostEvent
void UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::PostEvent(UnityEngine::ResourceManagement::Diagnostics::DiagnosticEvent diagnosticEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::Diagnostics::DiagnosticEventCollector::PostEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diagnosticEvent)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, diagnosticEvent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.AsyncOperations.ICachable
#include "UnityEngine/ResourceManagement/AsyncOperations/ICachable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.ICachable.get_Hash
int UnityEngine::ResourceManagement::AsyncOperations::ICachable::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::ICachable::get_Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.ICachable.set_Hash
void UnityEngine::ResourceManagement::AsyncOperations::ICachable::set_Hash(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::ICachable::set_Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IAsyncOperation.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationStatus.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/DownloadStatus.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: DelegateList`1
#include "GlobalNamespace/DelegateList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ResultType
System::Type* UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_ResultType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_ResultType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Version
int UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_DebugName
::Il2CppString* UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_ReferenceCount
int UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_ReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_ReferenceCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_PercentComplete
float UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_PercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_PercentComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Status
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Status");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_OperationException
System::Exception* UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_OperationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_OperationException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsDone
bool UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_IsDone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.set_OnDestroy
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::set_OnDestroy(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::set_OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_IsRunning
bool UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_IsRunning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Task
System::Threading::Tasks::Task_1<::Il2CppObject*>* UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Task");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.get_Handle
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::get_Handle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_CompletedTypeless
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::add_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::add_CompletedTypeless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_CompletedTypeless
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::remove_CompletedTypeless(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::remove_CompletedTypeless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_CompletedTypeless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.add_Destroyed
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::add_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::add_Destroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.remove_Destroyed
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::remove_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::remove_Destroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetResultAsObject
::Il2CppObject* UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetResultAsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetResultAsObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultAsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.DecrementReferenceCount
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::DecrementReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::DecrementReferenceCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.IncrementReferenceCount
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::IncrementReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::IncrementReferenceCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetDownloadStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(___instance_arg, ___internal__method, visited);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.GetDependencies
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::GetDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.InvokeCompletionEvent
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::InvokeCompletionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::InvokeCompletionEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.Start
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::Start(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle dependency, GlobalNamespace::DelegateList_1<float>* updateCallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(dependency), ::il2cpp_utils::ExtractType(updateCallbacks)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rm, dependency, updateCallbacks);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation.WaitForCompletion
void UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::WaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation::WaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IAsyncOperation.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationStatus.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/DownloadStatus.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: UnityEngine.ResourceManagement.AsyncOperations.IAsyncOperation m_InternalOp
UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*& UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_InternalOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_InternalOp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalOp"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Version
int& UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_Version");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_LocationName
::Il2CppString*& UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_LocationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::dyn_m_LocationName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LocationName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_LocationName
::Il2CppString* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_LocationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_LocationName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LocationName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.set_LocationName
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::set_LocationName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::set_LocationName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_LocationName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_DebugName
::Il2CppString* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_DebugName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_InternalOp
UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_InternalOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_InternalOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_InternalOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_IsDone
bool UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_OperationException
System::Exception* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_OperationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_OperationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_OperationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_PercentComplete
float UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_PercentComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_PercentComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_PercentComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_ReferenceCount
int UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_ReferenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_ReferenceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ReferenceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_Result
::Il2CppObject* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Result() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Result");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Result", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_Status
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.get_Task
System::Threading::Tasks::Task_1<::Il2CppObject*>* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::get_Task");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Task", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppObject*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.add_Completed
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::add_Completed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::add_Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "add_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.remove_Completed
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::remove_Completed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::remove_Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "remove_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.add_Destroyed
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::add_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::add_Destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "add_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.remove_Destroyed
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::remove_Destroyed(System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::remove_Destroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "remove_Destroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle..ctor
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::AsyncOperationHandle(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle..ctor
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::AsyncOperationHandle(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* op, int version) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, op, version);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle..ctor
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::AsyncOperationHandle(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* op, ::Il2CppString* locationName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(locationName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, op, locationName);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle..ctor
// ABORTED elsewhere.  UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::AsyncOperationHandle(UnityEngine::ResourceManagement::AsyncOperations::IAsyncOperation* op, int version, ::Il2CppString* locationName)
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.Acquire
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Acquire() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Acquire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Acquire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.Equals
bool UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Equals(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.GetDependencies
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.IsValid
bool UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.GetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetDownloadStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.InternalGetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::InternalGetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::InternalGetDownloadStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InternalGetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(*this, ___internal__method, visited);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.Release
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.System.Collections.IEnumerator.MoveNext
bool UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.System.Collections.IEnumerator.Reset
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.WaitForCompletion
::Il2CppObject* UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::WaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::WaitForCompletion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle.GetHashCode
int UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus None
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus>("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus None
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_None(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus Succeeded
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_Succeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_Succeeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus>("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "Succeeded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus Succeeded
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_Succeeded(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_Succeeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "Succeeded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus Failed
UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus>("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationStatus Failed
void UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_Failed(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "AsyncOperationStatus", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/DownloadStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 TotalBytes
int64_t& UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_TotalBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_TotalBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 DownloadedBytes
int64_t& UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_DownloadedBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_DownloadedBytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DownloadedBytes"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsDone
bool& UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::dyn_IsDone");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsDone"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus.get_Percent
float UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus::get_Percent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Percent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/GroupOperation.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.DownloadStatus
#include "UnityEngine/ResourceManagement/AsyncOperations/DownloadStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxDisplayedLocationLength
int UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::_get_k_MaxDisplayedLocationLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::_get_k_MaxDisplayedLocationLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation", "k_MaxDisplayedLocationLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxDisplayedLocationLength
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::_set_k_MaxDisplayedLocationLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::_set_k_MaxDisplayedLocationLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation", "k_MaxDisplayedLocationLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle> m_InternalOnComplete
System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_InternalOnComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_InternalOnComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalOnComplete"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_LoadedCount
int& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_LoadedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_LoadedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoadedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings m_Settings
UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_Settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Settings"))->offset;
  return *reinterpret_cast<UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String debugName
::Il2CppString*& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_debugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_debugName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <UnityEngine.ResourceManagement.AsyncOperations.ICachable.Hash>k__BackingField
int& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_$UnityEngine_ResourceManagement_AsyncOperations_ICachable_Hash$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_$UnityEngine_ResourceManagement_AsyncOperations_ICachable_Hash$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UnityEngine.ResourceManagement.AsyncOperations.ICachable.Hash>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> m_CachedDependencyLocations
System::Collections::Generic::HashSet_1<::Il2CppString*>*& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_CachedDependencyLocations() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::dyn_m_CachedDependencyLocations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedDependencyLocations"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.UnityEngine.ResourceManagement.AsyncOperations.ICachable.get_Hash
int UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::UnityEngine_ResourceManagement_AsyncOperations_ICachable_get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::UnityEngine.ResourceManagement.AsyncOperations.ICachable.get_Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.ICachable.get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.UnityEngine.ResourceManagement.AsyncOperations.ICachable.set_Hash
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::UnityEngine_ResourceManagement_AsyncOperations_ICachable_set_Hash(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::UnityEngine.ResourceManagement.AsyncOperations.ICachable.set_Hash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ResourceManagement.AsyncOperations.ICachable.set_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.GetDependentOps
System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDependentOps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDependentOps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependentOps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.DependenciesAreUnchanged
bool UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::DependenciesAreUnchanged(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::DependenciesAreUnchanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DependenciesAreUnchanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.CompleteIfDependenciesComplete
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::CompleteIfDependenciesComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::CompleteIfDependenciesComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteIfDependenciesComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.Init
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Init(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* operations, bool releaseDependenciesOnFailure, bool allowFailedDependencies) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operations), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure), ::il2cpp_utils::ExtractType(allowFailedDependencies)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, operations, releaseDependenciesOnFailure, allowFailedDependencies);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.Init
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Init(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* operations, UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operations), ::il2cpp_utils::ExtractType(settings)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, operations, settings);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.OnOperationCompleted
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::OnOperationCompleted(UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle op) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::OnOperationCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnOperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, op);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.get_DebugName
::Il2CppString* UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::get_DebugName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::get_DebugName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.get_Progress
float UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::get_Progress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.InvokeWaitForCompletion
bool UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::InvokeWaitForCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::InvokeWaitForCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeWaitForCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.GetDependencies
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDependencies(System::Collections::Generic::List_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>* deps) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deps)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, deps);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.ReleaseDependencies
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::ReleaseDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::ReleaseDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.GetDownloadStatus
UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDownloadStatus(System::Collections::Generic::HashSet_1<::Il2CppObject*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GetDownloadStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDownloadStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visited)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus, false>(___instance_arg, ___internal__method, visited);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.Execute
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Execute() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation.Destroy
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::Destroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings
#include "UnityEngine/ResourceManagement/AsyncOperations/GroupOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings None
UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings>("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings None
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_None(UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings ReleaseDependenciesOnFailure
UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_ReleaseDependenciesOnFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_ReleaseDependenciesOnFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings>("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "ReleaseDependenciesOnFailure"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings ReleaseDependenciesOnFailure
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_ReleaseDependenciesOnFailure(UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_ReleaseDependenciesOnFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "ReleaseDependenciesOnFailure", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings AllowFailedDependencies
UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_AllowFailedDependencies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_get_AllowFailedDependencies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings>("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "AllowFailedDependencies"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ResourceManagement.AsyncOperations.GroupOperation/UnityEngine.ResourceManagement.AsyncOperations.GroupOperationSettings AllowFailedDependencies
void UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_AllowFailedDependencies(UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::_set_AllowFailedDependencies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.ResourceManagement.AsyncOperations", "GroupOperation/GroupOperationSettings", "AllowFailedDependencies", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::GroupOperation::GroupOperationSettings::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation
#include "UnityEngine/ResourceManagement/AsyncOperations/IGenericProviderOperation.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceLocations.IResourceLocation
#include "UnityEngine/ResourceManagement/ResourceLocations/IResourceLocation.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceManager
#include "UnityEngine/ResourceManagement/ResourceManager.hpp"
// Including type: UnityEngine.ResourceManagement.ResourceProviders.IResourceProvider
#include "UnityEngine/ResourceManagement/ResourceProviders/IResourceProvider.hpp"
// Including type: UnityEngine.ResourceManagement.AsyncOperations.AsyncOperationHandle`1
#include "UnityEngine/ResourceManagement/AsyncOperations/AsyncOperationHandle_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.get_ProvideHandleVersion
int UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_ProvideHandleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_ProvideHandleVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProvideHandleVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.get_Location
UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_Location() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_Location");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Location", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.get_DependencyCount
int UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_DependencyCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_DependencyCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DependencyCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.get_RequestedType
System::Type* UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_RequestedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::get_RequestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.Init
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::Init(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider* provider, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> depOp) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(depOp)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rm, provider, location, depOp);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.Init
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::Init(UnityEngine::ResourceManagement::ResourceManager* rm, UnityEngine::ResourceManagement::ResourceProviders::IResourceProvider* provider, UnityEngine::ResourceManagement::ResourceLocations::IResourceLocation* location, UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle_1<System::Collections::Generic::IList_1<UnityEngine::ResourceManagement::AsyncOperations::AsyncOperationHandle>*> depOp, bool releaseDependenciesOnFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rm), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(location), ::il2cpp_utils::ExtractType(depOp), ::il2cpp_utils::ExtractType(releaseDependenciesOnFailure)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rm, provider, location, depOp, releaseDependenciesOnFailure);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.GetDependencies
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::GetDependencies(System::Collections::Generic::IList_1<::Il2CppObject*>* dstList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::GetDependencies");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dstList)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dstList);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.SetProgressCallback
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetProgressCallback(System::Func_1<float>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetProgressCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.SetDownloadProgressCallback
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetDownloadProgressCallback(System::Func_1<UnityEngine::ResourceManagement::AsyncOperations::DownloadStatus>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetDownloadProgressCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDownloadProgressCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.ResourceManagement.AsyncOperations.IGenericProviderOperation.SetWaitForCompletionCallback
void UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetWaitForCompletionCallback(System::Func_1<bool>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ResourceManagement::AsyncOperations::IGenericProviderOperation::SetWaitForCompletionCallback");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWaitForCompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.LinkedList`1<System.Action> delegates
System::Collections::Generic::LinkedList_1<System::Action*>*& TMPro::FastAction::dyn_delegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FastAction::dyn_delegates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delegates"))->offset;
  return *reinterpret_cast<System::Collections::Generic::LinkedList_1<System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Action,System.Collections.Generic.LinkedListNode`1<System.Action>> lookup
System::Collections::Generic::Dictionary_2<System::Action*, System::Collections::Generic::LinkedListNode_1<System::Action*>*>*& TMPro::FastAction::dyn_lookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FastAction::dyn_lookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<System::Action*, System::Collections::Generic::LinkedListNode_1<System::Action*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FastAction.Add
void TMPro::FastAction::Add(System::Action* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FastAction::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rhs);
}
// Autogenerated method: TMPro.FastAction.Remove
void TMPro::FastAction::Remove(System::Action* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FastAction::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, rhs);
}
// Autogenerated method: TMPro.FastAction.Call
void TMPro::FastAction::Call() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FastAction::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaterialReferenceManager
#include "TMPro/MaterialReferenceManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.MaterialReferenceManager s_Instance
TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaterialReferenceManager*>("TMPro", "MaterialReferenceManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.MaterialReferenceManager s_Instance
void TMPro::MaterialReferenceManager::_set_s_Instance(TMPro::MaterialReferenceManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaterialReferenceManager", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,UnityEngine.Material> m_FontMaterialReferenceLookup
System::Collections::Generic::Dictionary_2<int, UnityEngine::Material*>*& TMPro::MaterialReferenceManager::dyn_m_FontMaterialReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::dyn_m_FontMaterialReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontMaterialReferenceLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_FontAsset> m_FontAssetReferenceLookup
System::Collections::Generic::Dictionary_2<int, TMPro::TMP_FontAsset*>*& TMPro::MaterialReferenceManager::dyn_m_FontAssetReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::dyn_m_FontAssetReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontAssetReferenceLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_SpriteAsset> m_SpriteAssetReferenceLookup
System::Collections::Generic::Dictionary_2<int, TMPro::TMP_SpriteAsset*>*& TMPro::MaterialReferenceManager::dyn_m_SpriteAssetReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::dyn_m_SpriteAssetReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteAssetReferenceLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, TMPro::TMP_SpriteAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_ColorGradient> m_ColorGradientReferenceLookup
System::Collections::Generic::Dictionary_2<int, TMPro::TMP_ColorGradient*>*& TMPro::MaterialReferenceManager::dyn_m_ColorGradientReferenceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::dyn_m_ColorGradientReferenceLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ColorGradientReferenceLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, TMPro::TMP_ColorGradient*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.get_instance
TMPro::MaterialReferenceManager* TMPro::MaterialReferenceManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::MaterialReferenceManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAsset
void TMPro::MaterialReferenceManager::AddFontAsset(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontAssetInternal
void TMPro::MaterialReferenceManager::AddFontAssetInternal(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFontAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAsset
void TMPro::MaterialReferenceManager::AddSpriteAsset(int hashCode, TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddSpriteAssetInternal
void TMPro::MaterialReferenceManager::AddSpriteAssetInternal(int hashCode, TMPro::TMP_SpriteAsset* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterial
void TMPro::MaterialReferenceManager::AddFontMaterial(int hashCode, UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddFontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddFontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(material)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddFontMaterialInternal
void TMPro::MaterialReferenceManager::AddFontMaterialInternal(int hashCode, UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddFontMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFontMaterialInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(material)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hashCode, material);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset
void TMPro::MaterialReferenceManager::AddColorGradientPreset(int hashCode, TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "AddColorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.AddColorGradientPreset_Internal
void TMPro::MaterialReferenceManager::AddColorGradientPreset_Internal(int hashCode, TMPro::TMP_ColorGradient* spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::AddColorGradientPreset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColorGradientPreset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(spriteAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hashCode, spriteAsset);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, font);
}
// Autogenerated method: TMPro.MaterialReferenceManager.Contains
bool TMPro::MaterialReferenceManager::Contains(TMPro::TMP_SpriteAsset* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, sprite);
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAsset
bool TMPro::MaterialReferenceManager::TryGetFontAsset(int hashCode, ByRef<TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, byref(fontAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetFontAssetInternal
bool TMPro::MaterialReferenceManager::TryGetFontAssetInternal(int hashCode, ByRef<TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetFontAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFontAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_FontAsset*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, hashCode, byref(fontAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAsset
bool TMPro::MaterialReferenceManager::TryGetSpriteAsset(int hashCode, ByRef<TMPro::TMP_SpriteAsset*> spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_SpriteAsset*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, byref(spriteAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetSpriteAssetInternal
bool TMPro::MaterialReferenceManager::TryGetSpriteAssetInternal(int hashCode, ByRef<TMPro::TMP_SpriteAsset*> spriteAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetSpriteAssetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetSpriteAssetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_SpriteAsset*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, hashCode, byref(spriteAsset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPreset
bool TMPro::MaterialReferenceManager::TryGetColorGradientPreset(int hashCode, ByRef<TMPro::TMP_ColorGradient*> gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetColorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetColorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_ColorGradient*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, byref(gradientPreset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetColorGradientPresetInternal
bool TMPro::MaterialReferenceManager::TryGetColorGradientPresetInternal(int hashCode, ByRef<TMPro::TMP_ColorGradient*> gradientPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetColorGradientPresetInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetColorGradientPresetInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_ColorGradient*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, hashCode, byref(gradientPreset));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterial
bool TMPro::MaterialReferenceManager::TryGetMaterial(int hashCode, ByRef<UnityEngine::Material*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReferenceManager", "TryGetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode, byref(material));
}
// Autogenerated method: TMPro.MaterialReferenceManager.TryGetMaterialInternal
bool TMPro::MaterialReferenceManager::TryGetMaterialInternal(int hashCode, ByRef<UnityEngine::Material*> material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReferenceManager::TryGetMaterialInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetMaterialInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, hashCode, byref(material));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
int& TMPro::MaterialReference::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_FontAsset fontAsset
TMPro::TMP_FontAsset*& TMPro::MaterialReference::dyn_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_fontAsset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_SpriteAsset spriteAsset
TMPro::TMP_SpriteAsset*& TMPro::MaterialReference::dyn_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_spriteAsset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
UnityEngine::Material*& TMPro::MaterialReference::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_material");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isDefaultMaterial
bool& TMPro::MaterialReference::dyn_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_isDefaultMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isFallbackMaterial
bool& TMPro::MaterialReference::dyn_isFallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_isFallbackMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFallbackMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material fallbackMaterial
UnityEngine::Material*& TMPro::MaterialReference::dyn_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_fallbackMaterial");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single padding
float& TMPro::MaterialReference::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_padding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 referenceCount
int& TMPro::MaterialReference::dyn_referenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::dyn_referenceCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.MaterialReference..ctor
TMPro::MaterialReference::MaterialReference(int index, TMPro::TMP_FontAsset* fontAsset, TMPro::TMP_SpriteAsset* spriteAsset, UnityEngine::Material* material, float padding) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(padding)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, index, fontAsset, spriteAsset, material, padding);
}
// Autogenerated method: TMPro.MaterialReference.Contains
bool TMPro::MaterialReference::Contains(::ArrayW<TMPro::MaterialReference> materialReferences, TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, materialReferences, fontAsset);
}
// Autogenerated method: TMPro.MaterialReference.AddMaterialReference
int TMPro::MaterialReference::AddMaterialReference(UnityEngine::Material* material, TMPro::TMP_FontAsset* fontAsset, ::ArrayW<TMPro::MaterialReference> materialReferences, System::Collections::Generic::Dictionary_2<int, int>* materialReferenceIndexLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::AddMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "AddMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(materialReferenceIndexLookup)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material, fontAsset, materialReferences, materialReferenceIndexLookup);
}
// Autogenerated method: TMPro.MaterialReference.AddMaterialReference
int TMPro::MaterialReference::AddMaterialReference(UnityEngine::Material* material, TMPro::TMP_SpriteAsset* spriteAsset, ::ArrayW<TMPro::MaterialReference> materialReferences, System::Collections::Generic::Dictionary_2<int, int>* materialReferenceIndexLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaterialReference::AddMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "MaterialReference", "AddMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(materialReferences), ::il2cpp_utils::ExtractType(materialReferenceIndexLookup)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material, spriteAsset, materialReferences, materialReferenceIndexLookup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Asset
#include "TMPro/TMP_Asset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
int& TMPro::TMP_Asset::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Asset::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material material
UnityEngine::Material*& TMPro::TMP_Asset::dyn_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Asset::dyn_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialHashCode
int& TMPro::TMP_Asset::dyn_materialHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Asset::dyn_materialHashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialHashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorMode
#include "TMPro/ColorMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode Single
TMPro::ColorMode TMPro::ColorMode::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorMode>("TMPro", "ColorMode", "Single"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode Single
void TMPro::ColorMode::_set_Single(TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode HorizontalGradient
TMPro::ColorMode TMPro::ColorMode::_get_HorizontalGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_get_HorizontalGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorMode>("TMPro", "ColorMode", "HorizontalGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode HorizontalGradient
void TMPro::ColorMode::_set_HorizontalGradient(TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_set_HorizontalGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "HorizontalGradient", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode VerticalGradient
TMPro::ColorMode TMPro::ColorMode::_get_VerticalGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_get_VerticalGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorMode>("TMPro", "ColorMode", "VerticalGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode VerticalGradient
void TMPro::ColorMode::_set_VerticalGradient(TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_set_VerticalGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "VerticalGradient", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorMode FourCornersGradient
TMPro::ColorMode TMPro::ColorMode::_get_FourCornersGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_get_FourCornersGradient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorMode>("TMPro", "ColorMode", "FourCornersGradient"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorMode FourCornersGradient
void TMPro::ColorMode::_set_FourCornersGradient(TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::_set_FourCornersGradient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorMode", "FourCornersGradient", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::ColorMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.ColorMode k_DefaultColorMode
TMPro::ColorMode TMPro::TMP_ColorGradient::_get_k_DefaultColorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::_get_k_DefaultColorMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorMode>("TMPro", "TMP_ColorGradient", "k_DefaultColorMode"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.ColorMode k_DefaultColorMode
void TMPro::TMP_ColorGradient::_set_k_DefaultColorMode(TMPro::ColorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::_set_k_DefaultColorMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_ColorGradient", "k_DefaultColorMode", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color k_DefaultColor
UnityEngine::Color TMPro::TMP_ColorGradient::_get_k_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::_get_k_DefaultColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("TMPro", "TMP_ColorGradient", "k_DefaultColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color k_DefaultColor
void TMPro::TMP_ColorGradient::_set_k_DefaultColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::_set_k_DefaultColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_ColorGradient", "k_DefaultColor", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.ColorMode colorMode
TMPro::ColorMode& TMPro::TMP_ColorGradient::dyn_colorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::dyn_colorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorMode"))->offset;
  return *reinterpret_cast<TMPro::ColorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topLeft
UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_topLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::dyn_topLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topLeft"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color topRight
UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_topRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::dyn_topRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topRight"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomLeft
UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_bottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::dyn_bottomLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomLeft"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color bottomRight
UnityEngine::Color& TMPro::TMP_ColorGradient::dyn_bottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::dyn_bottomRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomRight"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_ColorGradient..cctor
void TMPro::TMP_ColorGradient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ColorGradient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_ColorGradient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITweenValue
#include "TMPro/ITweenValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITweenValue.get_ignoreTimeScale
bool TMPro::ITweenValue::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITweenValue::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.ITweenValue.get_duration
float TMPro::ITweenValue::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITweenValue::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.ITweenValue.TweenValue
void TMPro::ITweenValue::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITweenValue::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.ITweenValue.ValidTarget
bool TMPro::ITweenValue::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITweenValue::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween
#include "TMPro/ColorTween.hpp"
// Including type: TMPro.ColorTween/TMPro.ColorTweenCallback
#include "TMPro/ColorTween_ColorTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.ColorTween/TMPro.ColorTweenCallback m_Target
TMPro::ColorTween::ColorTweenCallback*& TMPro::ColorTween::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<TMPro::ColorTween::ColorTweenCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_StartColor
UnityEngine::Color& TMPro::ColorTween::dyn_m_StartColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_StartColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_TargetColor
UnityEngine::Color& TMPro::ColorTween::dyn_m_TargetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_TargetColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.ColorTween/TMPro.ColorTweenMode m_TweenMode
TMPro::ColorTween::ColorTweenMode& TMPro::ColorTween::dyn_m_TweenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_TweenMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TweenMode"))->offset;
  return *reinterpret_cast<TMPro::ColorTween::ColorTweenMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Duration
float& TMPro::ColorTween::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_Duration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreTimeScale
bool& TMPro::ColorTween::dyn_m_IgnoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::dyn_m_IgnoreTimeScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreTimeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.ColorTween.get_startColor
UnityEngine::Color TMPro::ColorTween::get_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::get_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_startColor
void TMPro::ColorTween::set_startColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_targetColor
UnityEngine::Color TMPro::ColorTween::get_targetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::get_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_targetColor
void TMPro::ColorTween::set_targetColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::set_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_tweenMode
TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::get_tweenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::get_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::ColorTween::ColorTweenMode, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_tweenMode
void TMPro::ColorTween::set_tweenMode(TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::set_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_duration
float TMPro::ColorTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_duration
void TMPro::ColorTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.get_ignoreTimeScale
bool TMPro::ColorTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.set_ignoreTimeScale
void TMPro::ColorTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.ColorTween.TweenValue
void TMPro::ColorTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.ColorTween.AddOnChangedCallback
void TMPro::ColorTween::AddOnChangedCallback(UnityEngine::Events::UnityAction_1<UnityEngine::Color>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: TMPro.ColorTween.GetIgnoreTimescale
bool TMPro::ColorTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.GetDuration
float TMPro::ColorTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.ColorTween.ValidTarget
bool TMPro::ColorTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween/TMPro.ColorTweenMode
#include "TMPro/ColorTween.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode All
TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "All"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode All
void TMPro::ColorTween::ColorTweenMode::_set_All(TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "All", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode RGB
TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_get_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "RGB"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode RGB
void TMPro::ColorTween::ColorTweenMode::_set_RGB(TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_set_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "RGB", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.ColorTween/TMPro.ColorTweenMode Alpha
TMPro::ColorTween::ColorTweenMode TMPro::ColorTween::ColorTweenMode::_get_Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_get_Alpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::ColorTween::ColorTweenMode>("TMPro", "ColorTween/ColorTweenMode", "Alpha"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.ColorTween/TMPro.ColorTweenMode Alpha
void TMPro::ColorTween::ColorTweenMode::_set_Alpha(TMPro::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::_set_Alpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ColorTween/ColorTweenMode", "Alpha", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::ColorTween::ColorTweenMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ColorTween::ColorTweenMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ColorTween/TMPro.ColorTweenCallback
#include "TMPro/ColorTween_ColorTweenCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FloatTween
#include "TMPro/FloatTween.hpp"
// Including type: TMPro.FloatTween/TMPro.FloatTweenCallback
#include "TMPro/FloatTween_FloatTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.FloatTween/TMPro.FloatTweenCallback m_Target
TMPro::FloatTween::FloatTweenCallback*& TMPro::FloatTween::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<TMPro::FloatTween::FloatTweenCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_StartValue
float& TMPro::FloatTween::dyn_m_StartValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::dyn_m_StartValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StartValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetValue
float& TMPro::FloatTween::dyn_m_TargetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::dyn_m_TargetValue");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Duration
float& TMPro::FloatTween::dyn_m_Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::dyn_m_Duration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreTimeScale
bool& TMPro::FloatTween::dyn_m_IgnoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::dyn_m_IgnoreTimeScale");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreTimeScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FloatTween.get_startValue
float TMPro::FloatTween::get_startValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::get_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_startValue
void TMPro::FloatTween::set_startValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::set_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_targetValue
float TMPro::FloatTween::get_targetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::get_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_targetValue
void TMPro::FloatTween::set_targetValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::set_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_duration
float TMPro::FloatTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_duration
void TMPro::FloatTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.get_ignoreTimeScale
bool TMPro::FloatTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.set_ignoreTimeScale
void TMPro::FloatTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.FloatTween.TweenValue
void TMPro::FloatTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, floatPercentage);
}
// Autogenerated method: TMPro.FloatTween.AddOnChangedCallback
void TMPro::FloatTween::AddOnChangedCallback(UnityEngine::Events::UnityAction_1<float>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: TMPro.FloatTween.GetIgnoreTimescale
bool TMPro::FloatTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.GetDuration
float TMPro::FloatTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.FloatTween.ValidTarget
bool TMPro::FloatTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FloatTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FloatTween/TMPro.FloatTweenCallback
#include "TMPro/FloatTween_FloatTweenCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_DefaultControls
#include "TMPro/TMP_DefaultControls.hpp"
// Including type: TMPro.TMP_DefaultControls/TMPro.Resources
#include "TMPro/TMP_DefaultControls_Resources.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kWidth
float TMPro::TMP_DefaultControls::_get_kWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_kWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWidth
void TMPro::TMP_DefaultControls::_set_kWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_kWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThickHeight
float TMPro::TMP_DefaultControls::_get_kThickHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_kThickHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kThickHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThickHeight
void TMPro::TMP_DefaultControls::_set_kThickHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_kThickHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kThickHeight", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kThinHeight
float TMPro::TMP_DefaultControls::_get_kThinHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_kThinHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_DefaultControls", "kThinHeight"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kThinHeight
void TMPro::TMP_DefaultControls::_set_kThinHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_kThinHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "kThinHeight", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThickElementSize
UnityEngine::Vector2 TMPro::TMP_DefaultControls::_get_s_ThickElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_s_ThickElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_DefaultControls", "s_ThickElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThickElementSize
void TMPro::TMP_DefaultControls::_set_s_ThickElementSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_s_ThickElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_ThickElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 s_ThinElementSize
UnityEngine::Vector2 TMPro::TMP_DefaultControls::_get_s_ThinElementSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_s_ThinElementSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_DefaultControls", "s_ThinElementSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 s_ThinElementSize
void TMPro::TMP_DefaultControls::_set_s_ThinElementSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_s_ThinElementSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_ThinElementSize", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_DefaultSelectableColor
UnityEngine::Color TMPro::TMP_DefaultControls::_get_s_DefaultSelectableColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_s_DefaultSelectableColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("TMPro", "TMP_DefaultControls", "s_DefaultSelectableColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_DefaultSelectableColor
void TMPro::TMP_DefaultControls::_set_s_DefaultSelectableColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_s_DefaultSelectableColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_DefaultSelectableColor", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Color s_TextColor
UnityEngine::Color TMPro::TMP_DefaultControls::_get_s_TextColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_get_s_TextColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color>("TMPro", "TMP_DefaultControls", "s_TextColor"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Color s_TextColor
void TMPro::TMP_DefaultControls::_set_s_TextColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::_set_s_TextColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_DefaultControls", "s_TextColor", value));
}
// Autogenerated method: TMPro.TMP_DefaultControls..cctor
void TMPro::TMP_DefaultControls::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateUIElementRoot
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateUIElementRoot(::Il2CppString* name, UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateUIElementRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateUIElementRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, size);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateUIObject
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateUIObject(::Il2CppString* name, UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateUIObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateUIObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, parent);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetDefaultTextValues
void TMPro::TMP_DefaultControls::SetDefaultTextValues(TMPro::TMP_Text* lbl) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::SetDefaultTextValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetDefaultTextValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lbl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lbl);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetDefaultColorTransitionValues
void TMPro::TMP_DefaultControls::SetDefaultColorTransitionValues(UnityEngine::UI::Selectable* slider) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::SetDefaultColorTransitionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetDefaultColorTransitionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, slider);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetParentAndAlign
void TMPro::TMP_DefaultControls::SetParentAndAlign(UnityEngine::GameObject* child, UnityEngine::GameObject* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::SetParentAndAlign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetParentAndAlign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(parent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, child, parent);
}
// Autogenerated method: TMPro.TMP_DefaultControls.SetLayerRecursively
void TMPro::TMP_DefaultControls::SetLayerRecursively(UnityEngine::GameObject* go, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::SetLayerRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "SetLayerRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(layer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, layer);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateScrollbar
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateScrollbar(TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateButton
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateButton(TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateText
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateText(TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateInputField
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateInputField(TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated method: TMPro.TMP_DefaultControls.CreateDropdown
UnityEngine::GameObject* TMPro::TMP_DefaultControls::CreateDropdown(TMPro::TMP_DefaultControls::Resources resources) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_DefaultControls::CreateDropdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_DefaultControls", "CreateDropdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resources)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resources);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Dropdown
#include "TMPro/TMP_Dropdown.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionDataList
#include "TMPro/TMP_Dropdown_OptionDataList.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownEvent
#include "TMPro/TMP_Dropdown_DropdownEvent.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass60_0
#include "TMPro/TMP_Dropdown_--c__DisplayClass60_0.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72
#include "TMPro/TMP_Dropdown_-DelayedDestroyDropdownList-d__72.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TweenRunner`1
#include "TMPro/TweenRunner_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_Dropdown/TMPro.OptionData s_NoOptionData
TMPro::TMP_Dropdown::OptionData* TMPro::TMP_Dropdown::_get_s_NoOptionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::_get_s_NoOptionData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Dropdown::OptionData*>("TMPro", "TMP_Dropdown", "s_NoOptionData"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_Dropdown/TMPro.OptionData s_NoOptionData
void TMPro::TMP_Dropdown::_set_s_NoOptionData(TMPro::TMP_Dropdown::OptionData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::_set_s_NoOptionData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Dropdown", "s_NoOptionData", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_Template
UnityEngine::RectTransform*& TMPro::TMP_Dropdown::dyn_m_Template() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Template"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_CaptionText
TMPro::TMP_Text*& TMPro::TMP_Dropdown::dyn_m_CaptionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_CaptionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaptionText"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_CaptionImage
UnityEngine::UI::Image*& TMPro::TMP_Dropdown::dyn_m_CaptionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_CaptionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaptionImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_ItemText
TMPro::TMP_Text*& TMPro::TMP_Dropdown::dyn_m_ItemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_ItemText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemText"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_ItemImage
UnityEngine::UI::Image*& TMPro::TMP_Dropdown::dyn_m_ItemImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_ItemImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ItemImage"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Value
int& TMPro::TMP_Dropdown::dyn_m_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Dropdown/TMPro.OptionDataList m_Options
TMPro::TMP_Dropdown::OptionDataList*& TMPro::TMP_Dropdown::dyn_m_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Options"))->offset;
  return *reinterpret_cast<TMPro::TMP_Dropdown::OptionDataList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Dropdown/TMPro.DropdownEvent m_OnValueChanged
TMPro::TMP_Dropdown::DropdownEvent*& TMPro::TMP_Dropdown::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<TMPro::TMP_Dropdown::DropdownEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Dropdown
UnityEngine::GameObject*& TMPro::TMP_Dropdown::dyn_m_Dropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Dropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Dropdown"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_Blocker
UnityEngine::GameObject*& TMPro::TMP_Dropdown::dyn_m_Blocker() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Blocker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Blocker"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Dropdown/TMPro.DropdownItem> m_Items
System::Collections::Generic::List_1<TMPro::TMP_Dropdown::DropdownItem*>*& TMPro::TMP_Dropdown::dyn_m_Items() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_Items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Items"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Dropdown::DropdownItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TweenRunner`1<TMPro.FloatTween> m_AlphaTweenRunner
TMPro::TweenRunner_1<TMPro::FloatTween>*& TMPro::TMP_Dropdown::dyn_m_AlphaTweenRunner() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_m_AlphaTweenRunner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AlphaTweenRunner"))->offset;
  return *reinterpret_cast<TMPro::TweenRunner_1<TMPro::FloatTween>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validTemplate
bool& TMPro::TMP_Dropdown::dyn_validTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::dyn_validTemplate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validTemplate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_template
UnityEngine::RectTransform* TMPro::TMP_Dropdown::get_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_template
void TMPro::TMP_Dropdown::set_template(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_template");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_template", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_captionText
TMPro::TMP_Text* TMPro::TMP_Dropdown::get_captionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_captionText
void TMPro::TMP_Dropdown::set_captionText(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_captionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_captionImage
UnityEngine::UI::Image* TMPro::TMP_Dropdown::get_captionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_captionImage
void TMPro::TMP_Dropdown::set_captionImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_captionImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_captionImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_itemText
TMPro::TMP_Text* TMPro::TMP_Dropdown::get_itemText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_itemText
void TMPro::TMP_Dropdown::set_itemText(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_itemText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_itemImage
UnityEngine::UI::Image* TMPro::TMP_Dropdown::get_itemImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_itemImage
void TMPro::TMP_Dropdown::set_itemImage(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_itemImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_itemImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_options
System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>* TMPro::TMP_Dropdown::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_options
void TMPro::TMP_Dropdown::set_options(System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_onValueChanged
TMPro::TMP_Dropdown::DropdownEvent* TMPro::TMP_Dropdown::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Dropdown::DropdownEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_onValueChanged
void TMPro::TMP_Dropdown::set_onValueChanged(TMPro::TMP_Dropdown::DropdownEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_value
int TMPro::TMP_Dropdown::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.set_value
void TMPro::TMP_Dropdown::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown.get_IsExpanded
bool TMPro::TMP_Dropdown::get_IsExpanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::get_IsExpanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsExpanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetValueWithoutNotify
void TMPro::TMP_Dropdown::SetValueWithoutNotify(int input) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::SetValueWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetValue
void TMPro::TMP_Dropdown::SetValue(int value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, sendCallback);
}
// Autogenerated method: TMPro.TMP_Dropdown.RefreshShownValue
void TMPro::TMP_Dropdown::RefreshShownValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::RefreshShownValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshShownValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(System::Collections::Generic::List_1<::Il2CppString*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddOptions
void TMPro::TMP_Dropdown::AddOptions(System::Collections::Generic::List_1<UnityEngine::Sprite*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AddOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, options);
}
// Autogenerated method: TMPro.TMP_Dropdown.ClearOptions
void TMPro::TMP_Dropdown::ClearOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::ClearOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetupTemplate
void TMPro::TMP_Dropdown::SetupTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::SetupTemplate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTemplate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnPointerClick
void TMPro::TMP_Dropdown::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnSubmit
void TMPro::TMP_Dropdown::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnCancel
void TMPro::TMP_Dropdown::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown.Show
void TMPro::TMP_Dropdown::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateBlocker
UnityEngine::GameObject* TMPro::TMP_Dropdown::CreateBlocker(UnityEngine::Canvas* rootCanvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::CreateBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rootCanvas)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, rootCanvas);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyBlocker
void TMPro::TMP_Dropdown::DestroyBlocker(UnityEngine::GameObject* blocker) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DestroyBlocker");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyBlocker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blocker)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, blocker);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateDropdownList
UnityEngine::GameObject* TMPro::TMP_Dropdown::CreateDropdownList(UnityEngine::GameObject* _template) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::CreateDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_template)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(___instance_arg, ___internal__method, _template);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyDropdownList
void TMPro::TMP_Dropdown::DestroyDropdownList(UnityEngine::GameObject* dropdownList) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DestroyDropdownList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownList)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, dropdownList);
}
// Autogenerated method: TMPro.TMP_Dropdown.CreateItem
TMPro::TMP_Dropdown::DropdownItem* TMPro::TMP_Dropdown::CreateItem(TMPro::TMP_Dropdown::DropdownItem* itemTemplate) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::CreateItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemTemplate)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Dropdown::DropdownItem*, false>(___instance_arg, ___internal__method, itemTemplate);
}
// Autogenerated method: TMPro.TMP_Dropdown.DestroyItem
void TMPro::TMP_Dropdown::DestroyItem(TMPro::TMP_Dropdown::DropdownItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DestroyItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated method: TMPro.TMP_Dropdown.AddItem
TMPro::TMP_Dropdown::DropdownItem* TMPro::TMP_Dropdown::AddItem(TMPro::TMP_Dropdown::OptionData* data, bool selected, TMPro::TMP_Dropdown::DropdownItem* itemTemplate, System::Collections::Generic::List_1<TMPro::TMP_Dropdown::DropdownItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(selected), ::il2cpp_utils::ExtractType(itemTemplate), ::il2cpp_utils::ExtractType(items)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Dropdown::DropdownItem*, false>(___instance_arg, ___internal__method, data, selected, itemTemplate, items);
}
// Autogenerated method: TMPro.TMP_Dropdown.AlphaFadeList
void TMPro::TMP_Dropdown::AlphaFadeList(float duration, float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(alpha)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration, alpha);
}
// Autogenerated method: TMPro.TMP_Dropdown.AlphaFadeList
void TMPro::TMP_Dropdown::AlphaFadeList(float duration, float start, float end) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::AlphaFadeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaFadeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration, start, end);
}
// Autogenerated method: TMPro.TMP_Dropdown.SetAlpha
void TMPro::TMP_Dropdown::SetAlpha(float alpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::SetAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, alpha);
}
// Autogenerated method: TMPro.TMP_Dropdown.Hide
void TMPro::TMP_Dropdown::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.DelayedDestroyDropdownList
System::Collections::IEnumerator* TMPro::TMP_Dropdown::DelayedDestroyDropdownList(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DelayedDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, delay);
}
// Autogenerated method: TMPro.TMP_Dropdown.ImmediateDestroyDropdownList
void TMPro::TMP_Dropdown::ImmediateDestroyDropdownList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::ImmediateDestroyDropdownList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImmediateDestroyDropdownList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnSelectItem
void TMPro::TMP_Dropdown::OnSelectItem(UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OnSelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, toggle);
}
// Autogenerated method: TMPro.TMP_Dropdown..cctor
void TMPro::TMP_Dropdown::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Dropdown", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.Awake
void TMPro::TMP_Dropdown::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.Start
void TMPro::TMP_Dropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown.OnDisable
void TMPro::TMP_Dropdown::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_Text
TMPro::TMP_Text*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image m_Image
UnityEngine::UI::Image*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::dyn_m_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Image"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform m_RectTransform
UnityEngine::RectTransform*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_RectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::dyn_m_RectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle m_Toggle
UnityEngine::UI::Toggle*& TMPro::TMP_Dropdown::DropdownItem::dyn_m_Toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::dyn_m_Toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Toggle"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_text
TMPro::TMP_Text* TMPro::TMP_Dropdown::DropdownItem::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_text
void TMPro::TMP_Dropdown::DropdownItem::set_text(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_image
UnityEngine::UI::Image* TMPro::TMP_Dropdown::DropdownItem::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_image
void TMPro::TMP_Dropdown::DropdownItem::set_image(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_rectTransform
UnityEngine::RectTransform* TMPro::TMP_Dropdown::DropdownItem::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_rectTransform
void TMPro::TMP_Dropdown::DropdownItem::set_rectTransform(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::set_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.get_toggle
UnityEngine::UI::Toggle* TMPro::TMP_Dropdown::DropdownItem::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Toggle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.set_toggle
void TMPro::TMP_Dropdown::DropdownItem::set_toggle(UnityEngine::UI::Toggle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::set_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.OnPointerEnter
void TMPro::TMP_Dropdown::DropdownItem::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.DropdownItem.OnCancel
void TMPro::TMP_Dropdown::DropdownItem::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::DropdownItem::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Text
::Il2CppString*& TMPro::TMP_Dropdown::OptionData::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite m_Image
UnityEngine::Sprite*& TMPro::TMP_Dropdown::OptionData::dyn_m_Image() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::dyn_m_Image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Image"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.get_text
::Il2CppString* TMPro::TMP_Dropdown::OptionData::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.set_text
void TMPro::TMP_Dropdown::OptionData::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.get_image
UnityEngine::Sprite* TMPro::TMP_Dropdown::OptionData::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionData.set_image
void TMPro::TMP_Dropdown::OptionData::set_image(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionData::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.OptionDataList
#include "TMPro/TMP_Dropdown_OptionDataList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.OptionData
#include "TMPro/TMP_Dropdown_OptionData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Dropdown/TMPro.OptionData> m_Options
System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>*& TMPro::TMP_Dropdown::OptionDataList::dyn_m_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionDataList::dyn_m_Options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Options"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionDataList.get_options
System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>* TMPro::TMP_Dropdown::OptionDataList::get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionDataList::get_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.OptionDataList.set_options
void TMPro::TMP_Dropdown::OptionDataList::set_options(System::Collections::Generic::List_1<TMPro::TMP_Dropdown::OptionData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::OptionDataList::set_options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownEvent
#include "TMPro/TMP_Dropdown_DropdownEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass60_0
#include "TMPro/TMP_Dropdown_--c__DisplayClass60_0.hpp"
// Including type: TMPro.TMP_Dropdown/TMPro.DropdownItem
#include "TMPro/TMP_Dropdown_DropdownItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown/TMPro.DropdownItem item
TMPro::TMP_Dropdown::DropdownItem*& TMPro::TMP_Dropdown::$$c__DisplayClass60_0::dyn_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$$c__DisplayClass60_0::dyn_item");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "item"))->offset;
  return *reinterpret_cast<TMPro::TMP_Dropdown::DropdownItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown <>4__this
TMPro::TMP_Dropdown*& TMPro::TMP_Dropdown::$$c__DisplayClass60_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$$c__DisplayClass60_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<TMPro::TMP_Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<>c__DisplayClass60_0.<Show>b__0
void TMPro::TMP_Dropdown::$$c__DisplayClass60_0::$Show$b__0(bool x) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$$c__DisplayClass60_0::<Show>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Show>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72
#include "TMPro/TMP_Dropdown_-DelayedDestroyDropdownList-d__72.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
float& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Dropdown <>4__this
TMPro::TMP_Dropdown*& TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<TMPro::TMP_Dropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72.System.IDisposable.Dispose
void TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72.MoveNext
bool TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Dropdown/TMPro.<DelayedDestroyDropdownList>d__72.System.Collections.IEnumerator.Reset
void TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Dropdown::$DelayedDestroyDropdownList$d__72::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.AtlasPopulationMode
#include "TMPro/AtlasPopulationMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.AtlasPopulationMode Static
TMPro::AtlasPopulationMode TMPro::AtlasPopulationMode::_get_Static() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::AtlasPopulationMode::_get_Static");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::AtlasPopulationMode>("TMPro", "AtlasPopulationMode", "Static"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.AtlasPopulationMode Static
void TMPro::AtlasPopulationMode::_set_Static(TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::AtlasPopulationMode::_set_Static");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "AtlasPopulationMode", "Static", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.AtlasPopulationMode Dynamic
TMPro::AtlasPopulationMode TMPro::AtlasPopulationMode::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::AtlasPopulationMode::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::AtlasPopulationMode>("TMPro", "AtlasPopulationMode", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.AtlasPopulationMode Dynamic
void TMPro::AtlasPopulationMode::_set_Dynamic(TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::AtlasPopulationMode::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "AtlasPopulationMode", "Dynamic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::AtlasPopulationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::AtlasPopulationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_FontAsset/TMPro.<>c
#include "TMPro/TMP_FontAsset_--c.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: TMPro.FaceInfo_Legacy
#include "TMPro/FaceInfo_Legacy.hpp"
// Including type: TMPro.TMP_Glyph
#include "TMPro/TMP_Glyph.hpp"
// Including type: TMPro.KerningTable
#include "TMPro/KerningTable.hpp"
// Including type: TMPro.TMP_FontFeatureTable
#include "TMPro/TMP_FontFeatureTable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.UInt32[] s_GlyphIndexArray
::ArrayW<uint> TMPro::TMP_FontAsset::_get_s_GlyphIndexArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::_get_s_GlyphIndexArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("TMPro", "TMP_FontAsset", "s_GlyphIndexArray"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32[] s_GlyphIndexArray
void TMPro::TMP_FontAsset::_set_s_GlyphIndexArray(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::_set_s_GlyphIndexArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "s_GlyphIndexArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
System::Collections::Generic::List_1<uint>* TMPro::TMP_FontAsset::_get_s_MissingCharacterList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::_get_s_MissingCharacterList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<uint>*>("TMPro", "TMP_FontAsset", "s_MissingCharacterList"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.List`1<System.UInt32> s_MissingCharacterList
void TMPro::TMP_FontAsset::_set_s_MissingCharacterList(System::Collections::Generic::List_1<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::_set_s_MissingCharacterList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset", "s_MissingCharacterList", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Version
::Il2CppString*& TMPro::TMP_FontAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_SourceFontFileGUID
::Il2CppString*& TMPro::TMP_FontAsset::dyn_m_SourceFontFileGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_SourceFontFileGUID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceFontFileGUID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Font m_SourceFontFile
UnityEngine::Font*& TMPro::TMP_FontAsset::dyn_m_SourceFontFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_SourceFontFile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceFontFile"))->offset;
  return *reinterpret_cast<UnityEngine::Font**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.AtlasPopulationMode m_AtlasPopulationMode
TMPro::AtlasPopulationMode& TMPro::TMP_FontAsset::dyn_m_AtlasPopulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasPopulationMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasPopulationMode"))->offset;
  return *reinterpret_cast<TMPro::AtlasPopulationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.FaceInfo m_FaceInfo
UnityEngine::TextCore::FaceInfo& TMPro::TMP_FontAsset::dyn_m_FaceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_FaceInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FaceInfo"))->offset;
  return *reinterpret_cast<UnityEngine::TextCore::FaceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphTable
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphTable"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> m_GlyphLookupDictionary
System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphLookupDictionary"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Character> m_CharacterTable
System::Collections::Generic::List_1<TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_CharacterTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterTable"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.UInt32,TMPro.TMP_Character> m_CharacterLookupDictionary
System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharacterLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_CharacterLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterLookupDictionary"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D m_AtlasTexture
UnityEngine::Texture2D*& TMPro::TMP_FontAsset::dyn_m_AtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTexture"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D[] m_AtlasTextures
::ArrayW<UnityEngine::Texture2D*>& TMPro::TMP_FontAsset::dyn_m_AtlasTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTextures"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_AtlasTextureIndex
int& TMPro::TMP_FontAsset::dyn_m_AtlasTextureIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasTextureIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasTextureIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_UsedGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*& TMPro::TMP_FontAsset::dyn_m_UsedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_UsedGlyphRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UsedGlyphRects"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> m_FreeGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*& TMPro::TMP_FontAsset::dyn_m_FreeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_FreeGlyphRects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FreeGlyphRects"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.FaceInfo_Legacy m_fontInfo
TMPro::FaceInfo_Legacy*& TMPro::TMP_FontAsset::dyn_m_fontInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_fontInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontInfo"))->offset;
  return *reinterpret_cast<TMPro::FaceInfo_Legacy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture2D atlas
UnityEngine::Texture2D*& TMPro::TMP_FontAsset::dyn_atlas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_atlas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlas"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AtlasWidth
int& TMPro::TMP_FontAsset::dyn_m_AtlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AtlasHeight
int& TMPro::TMP_FontAsset::dyn_m_AtlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_AtlasPadding
int& TMPro::TMP_FontAsset::dyn_m_AtlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasPadding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.LowLevel.GlyphRenderMode m_AtlasRenderMode
UnityEngine::TextCore::LowLevel::GlyphRenderMode& TMPro::TMP_FontAsset::dyn_m_AtlasRenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_AtlasRenderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AtlasRenderMode"))->offset;
  return *reinterpret_cast<UnityEngine::TextCore::LowLevel::GlyphRenderMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_Glyph> m_glyphInfoList
System::Collections::Generic::List_1<TMPro::TMP_Glyph*>*& TMPro::TMP_FontAsset::dyn_m_glyphInfoList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_glyphInfoList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_glyphInfoList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.KerningTable m_KerningTable
TMPro::KerningTable*& TMPro::TMP_FontAsset::dyn_m_KerningTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_KerningTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KerningTable"))->offset;
  return *reinterpret_cast<TMPro::KerningTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontFeatureTable m_FontFeatureTable
TMPro::TMP_FontFeatureTable*& TMPro::TMP_FontAsset::dyn_m_FontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_FontFeatureTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontFeatureTable"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontFeatureTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> fallbackFontAssets
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*& TMPro::TMP_FontAsset::dyn_fallbackFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_fallbackFontAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackFontAssets"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.TMP_FontAsset> m_FallbackFontAssetTable
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*& TMPro::TMP_FontAsset::dyn_m_FallbackFontAssetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_FallbackFontAssetTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FallbackFontAssetTable"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.FontAssetCreationSettings m_CreationSettings
TMPro::FontAssetCreationSettings& TMPro::TMP_FontAsset::dyn_m_CreationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_CreationSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CreationSettings"))->offset;
  return *reinterpret_cast<TMPro::FontAssetCreationSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontWeightPair[] m_FontWeightTable
::ArrayW<TMPro::TMP_FontWeightPair>& TMPro::TMP_FontAsset::dyn_m_FontWeightTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_FontWeightTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightTable"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_FontWeightPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontWeightPair[] fontWeights
::ArrayW<TMPro::TMP_FontWeightPair>& TMPro::TMP_FontAsset::dyn_fontWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_fontWeights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontWeights"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_FontWeightPair>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalStyle
float& TMPro::TMP_FontAsset::dyn_normalStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_normalStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalStyle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single normalSpacingOffset
float& TMPro::TMP_FontAsset::dyn_normalSpacingOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_normalSpacingOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalSpacingOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boldStyle
float& TMPro::TMP_FontAsset::dyn_boldStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_boldStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boldStyle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single boldSpacing
float& TMPro::TMP_FontAsset::dyn_boldSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_boldSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boldSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte italicStyle
uint8_t& TMPro::TMP_FontAsset::dyn_italicStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_italicStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "italicStyle"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte tabSize
uint8_t& TMPro::TMP_FontAsset::dyn_tabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_tabSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tabSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_oldTabSize
uint8_t& TMPro::TMP_FontAsset::dyn_m_oldTabSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_oldTabSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_oldTabSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_IsFontAssetLookupTablesDirty
bool& TMPro::TMP_FontAsset::dyn_m_IsFontAssetLookupTablesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_IsFontAssetLookupTablesDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsFontAssetLookupTablesDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsToPack
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphsToPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphsToPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsToPack"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsPacked
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphsPacked() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphsPacked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsPacked"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> m_GlyphsToRender
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*& TMPro::TMP_FontAsset::dyn_m_GlyphsToRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphsToRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphsToRender"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.UInt32> m_GlyphIndexList
System::Collections::Generic::List_1<uint>*& TMPro::TMP_FontAsset::dyn_m_GlyphIndexList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_GlyphIndexList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndexList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Character> m_CharactersToAdd
System::Collections::Generic::List_1<TMPro::TMP_Character*>*& TMPro::TMP_FontAsset::dyn_m_CharactersToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::dyn_m_CharactersToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharactersToAdd"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Character*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_version
::Il2CppString* TMPro::TMP_FontAsset::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_version
void TMPro::TMP_FontAsset::set_version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_sourceFontFile
UnityEngine::Font* TMPro::TMP_FontAsset::get_sourceFontFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_sourceFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Font*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_sourceFontFile
void TMPro::TMP_FontAsset::set_sourceFontFile(UnityEngine::Font* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_sourceFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPopulationMode
TMPro::AtlasPopulationMode TMPro::TMP_FontAsset::get_atlasPopulationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasPopulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasPopulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::AtlasPopulationMode, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPopulationMode
void TMPro::TMP_FontAsset::set_atlasPopulationMode(TMPro::AtlasPopulationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasPopulationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasPopulationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_faceInfo
UnityEngine::TextCore::FaceInfo TMPro::TMP_FontAsset::get_faceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_faceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_faceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::FaceInfo, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_faceInfo
void TMPro::TMP_FontAsset::set_faceInfo(UnityEngine::TextCore::FaceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_faceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_faceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphTable
System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_glyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_glyphTable
void TMPro::TMP_FontAsset::set_glyphTable(System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_glyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_glyphLookupTable
System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>* TMPro::TMP_FontAsset::get_glyphLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_glyphLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterTable
System::Collections::Generic::List_1<TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_characterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_Character*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_characterTable
void TMPro::TMP_FontAsset::set_characterTable(System::Collections::Generic::List_1<TMPro::TMP_Character*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_characterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_characterLookupTable
System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>* TMPro::TMP_FontAsset::get_characterLookupTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_characterLookupTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterLookupTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<uint, TMPro::TMP_Character*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTexture
UnityEngine::Texture2D* TMPro::TMP_FontAsset::get_atlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasTextures
::ArrayW<UnityEngine::Texture2D*> TMPro::TMP_FontAsset::get_atlasTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Texture2D*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasTextures
void TMPro::TMP_FontAsset::set_atlasTextures(::ArrayW<UnityEngine::Texture2D*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_usedGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_usedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_usedGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usedGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_usedGlyphRects
void TMPro::TMP_FontAsset::set_usedGlyphRects(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_usedGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_usedGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_freeGlyphRects
System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* TMPro::TMP_FontAsset::get_freeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_freeGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_freeGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_freeGlyphRects
void TMPro::TMP_FontAsset::set_freeGlyphRects(System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_freeGlyphRects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_freeGlyphRects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontInfo
TMPro::FaceInfo_Legacy* TMPro::TMP_FontAsset::get_fontInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_fontInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::FaceInfo_Legacy*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasWidth
int TMPro::TMP_FontAsset::get_atlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasWidth
void TMPro::TMP_FontAsset::set_atlasWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasHeight
int TMPro::TMP_FontAsset::get_atlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasHeight
void TMPro::TMP_FontAsset::set_atlasHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasPadding
int TMPro::TMP_FontAsset::get_atlasPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasPadding
void TMPro::TMP_FontAsset::set_atlasPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_atlasRenderMode
UnityEngine::TextCore::LowLevel::GlyphRenderMode TMPro::TMP_FontAsset::get_atlasRenderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_atlasRenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasRenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::GlyphRenderMode, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_atlasRenderMode
void TMPro::TMP_FontAsset::set_atlasRenderMode(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_atlasRenderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasRenderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontFeatureTable
TMPro::TMP_FontFeatureTable* TMPro::TMP_FontAsset::get_fontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_fontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontFeatureTable*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontFeatureTable
void TMPro::TMP_FontAsset::set_fontFeatureTable(TMPro::TMP_FontFeatureTable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_fontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fallbackFontAssetTable
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* TMPro::TMP_FontAsset::get_fallbackFontAssetTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_fallbackFontAssetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackFontAssetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fallbackFontAssetTable
void TMPro::TMP_FontAsset::set_fallbackFontAssetTable(System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_fallbackFontAssetTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackFontAssetTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_creationSettings
TMPro::FontAssetCreationSettings TMPro::TMP_FontAsset::get_creationSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_creationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_creationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontAssetCreationSettings, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_creationSettings
void TMPro::TMP_FontAsset::set_creationSettings(TMPro::FontAssetCreationSettings value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_creationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_creationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.get_fontWeightTable
::ArrayW<TMPro::TMP_FontWeightPair> TMPro::TMP_FontAsset::get_fontWeightTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::get_fontWeightTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeightTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<TMPro::TMP_FontWeightPair>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.set_fontWeightTable
void TMPro::TMP_FontAsset::set_fontWeightTable(::ArrayW<TMPro::TMP_FontWeightPair> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::set_fontWeightTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeightTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(UnityEngine::Font* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::CreateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "CreateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font);
}
// Autogenerated method: TMPro.TMP_FontAsset.CreateFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_FontAsset::CreateFontAsset(UnityEngine::Font* font, int samplingPointSize, int atlasPadding, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int atlasWidth, int atlasHeight, TMPro::AtlasPopulationMode atlasPopulationMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::CreateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "CreateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(samplingPointSize), ::il2cpp_utils::ExtractType(atlasPadding), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(atlasWidth), ::il2cpp_utils::ExtractType(atlasHeight), ::il2cpp_utils::ExtractType(atlasPopulationMode)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font, samplingPointSize, atlasPadding, renderMode, atlasWidth, atlasHeight, atlasPopulationMode);
}
// Autogenerated method: TMPro.TMP_FontAsset.Awake
void TMPro::TMP_FontAsset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.InitializeDictionaryLookupTables
void TMPro::TMP_FontAsset::InitializeDictionaryLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::InitializeDictionaryLookupTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeDictionaryLookupTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.ReadFontAssetDefinition
void TMPro::TMP_FontAsset::ReadFontAssetDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::ReadFontAssetDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadFontAssetDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortCharacterTable
void TMPro::TMP_FontAsset::SortCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::SortCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortGlyphTable
void TMPro::TMP_FontAsset::SortGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::SortGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.SortGlyphAndCharacterTables
void TMPro::TMP_FontAsset::SortGlyphAndCharacterTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::SortGlyphAndCharacterTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphAndCharacterTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(int character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, character);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, character);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter
bool TMPro::TMP_FontAsset::HasCharacter(::Il2CppChar character, bool searchFallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(searchFallbacks)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, character, searchFallbacks);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacter_Internal
bool TMPro::TMP_FontAsset::HasCharacter_Internal(::Il2CppChar character, bool searchFallbacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacter_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(searchFallbacks)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, character, searchFallbacks);
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::Il2CppString* text, ByRef<System::Collections::Generic::List_1<::Il2CppChar>*> missingCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppChar>*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, text, byref(missingCharacters));
}
// Autogenerated method: TMPro.TMP_FontAsset.HasCharacters
bool TMPro::TMP_FontAsset::HasCharacters(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::HasCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharacters
::Il2CppString* TMPro::TMP_FontAsset::GetCharacters(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::GetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "GetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.GetCharactersArray
::ArrayW<int> TMPro::TMP_FontAsset::GetCharactersArray(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::GetCharactersArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", "GetCharactersArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::ArrayW<uint> unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::ArrayW<uint> unicodes, ByRef<::ArrayW<uint>> missingUnicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint>&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, unicodes, byref(missingUnicodes));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::Il2CppString* characters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, characters);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacters
bool TMPro::TMP_FontAsset::TryAddCharacters(::Il2CppString* characters, ByRef<::Il2CppString*> missingCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, characters, byref(missingCharacters));
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacter_Internal
bool TMPro::TMP_FontAsset::TryAddCharacter_Internal(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacter_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacter_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_FontAsset.AddCharacter_Internal
TMPro::TMP_Character* TMPro::TMP_FontAsset::AddCharacter_Internal(uint unicode, UnityEngine::TextCore::Glyph* glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::AddCharacter_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharacter_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(glyph)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Character*, false>(___instance_arg, ___internal__method, unicode, glyph);
}
// Autogenerated method: TMPro.TMP_FontAsset.TryAddCharacterInternal
bool TMPro::TMP_FontAsset::TryAddCharacterInternal(uint unicode, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::TryAddCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontAsset.GetGlyphIndex
uint TMPro::TMP_FontAsset::GetGlyphIndex(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::GetGlyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGlyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateAtlasTexture
void TMPro::TMP_FontAsset::UpdateAtlasTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::UpdateAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpdateGlyphAdjustmentRecords
void TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords(uint unicode, uint glyphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::UpdateGlyphAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGlyphAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(glyphIndex)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, unicode, glyphIndex);
}
// Autogenerated method: TMPro.TMP_FontAsset.ClearFontAssetData
void TMPro::TMP_FontAsset::ClearFontAssetData(bool setAtlasSizeToZero) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::ClearFontAssetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearFontAssetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setAtlasSizeToZero)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, setAtlasSizeToZero);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeFontAsset
void TMPro::TMP_FontAsset::UpgradeFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::UpgradeFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset.UpgradeGlyphAdjustmentTableToFontFeatureTable
void TMPro::TMP_FontAsset::UpgradeGlyphAdjustmentTableToFontFeatureTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::UpgradeGlyphAdjustmentTableToFontFeatureTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeGlyphAdjustmentTableToFontFeatureTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset..cctor
void TMPro::TMP_FontAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontAsset/TMPro.<>c
#include "TMPro/TMP_FontAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_FontAsset/TMPro.<>c <>9
TMPro::TMP_FontAsset::$$c* TMPro::TMP_FontAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::TMP_FontAsset::$$c*>("TMPro", "TMP_FontAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_FontAsset/TMPro.<>c <>9
void TMPro::TMP_FontAsset::$$c::_set_$$9(TMPro::TMP_FontAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_Character,System.UInt32> <>9__100_0
System::Func_2<TMPro::TMP_Character*, uint>* TMPro::TMP_FontAsset::$$c::_get_$$9__100_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_get_$$9__100_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_Character*, uint>*>("TMPro", "TMP_FontAsset/<>c", "<>9__100_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_Character,System.UInt32> <>9__100_0
void TMPro::TMP_FontAsset::$$c::_set_$$9__100_0(System::Func_2<TMPro::TMP_Character*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_set_$$9__100_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9__100_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TextCore.Glyph,System.UInt32> <>9__101_0
System::Func_2<UnityEngine::TextCore::Glyph*, uint>* TMPro::TMP_FontAsset::$$c::_get_$$9__101_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_get_$$9__101_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::TextCore::Glyph*, uint>*>("TMPro", "TMP_FontAsset/<>c", "<>9__101_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TextCore.Glyph,System.UInt32> <>9__101_0
void TMPro::TMP_FontAsset::$$c::_set_$$9__101_0(System::Func_2<UnityEngine::TextCore::Glyph*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::_set_$$9__101_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAsset/<>c", "<>9__101_0", value)));
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c..cctor
void TMPro::TMP_FontAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c.<SortCharacterTable>b__100_0
uint TMPro::TMP_FontAsset::$$c::$SortCharacterTable$b__100_0(TMPro::TMP_Character* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::<SortCharacterTable>b__100_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortCharacterTable>b__100_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_FontAsset/TMPro.<>c.<SortGlyphTable>b__101_0
uint TMPro::TMP_FontAsset::$$c::$SortGlyphTable$b__101_0(UnityEngine::TextCore::Glyph* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAsset::$$c::<SortGlyphTable>b__101_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphTable>b__101_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.FaceInfo_Legacy
#include "TMPro/FaceInfo_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
::Il2CppString*& TMPro::FaceInfo_Legacy::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single PointSize
float& TMPro::FaceInfo_Legacy::dyn_PointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_PointSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PointSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Scale
float& TMPro::FaceInfo_Legacy::dyn_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 CharacterCount
int& TMPro::FaceInfo_Legacy::dyn_CharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_CharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single LineHeight
float& TMPro::FaceInfo_Legacy::dyn_LineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_LineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Baseline
float& TMPro::FaceInfo_Legacy::dyn_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Baseline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Baseline"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Ascender
float& TMPro::FaceInfo_Legacy::dyn_Ascender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Ascender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ascender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CapHeight
float& TMPro::FaceInfo_Legacy::dyn_CapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_CapHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CapHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Descender
float& TMPro::FaceInfo_Legacy::dyn_Descender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Descender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Descender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single CenterLine
float& TMPro::FaceInfo_Legacy::dyn_CenterLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_CenterLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CenterLine"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SuperscriptOffset
float& TMPro::FaceInfo_Legacy::dyn_SuperscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_SuperscriptOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SuperscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SubscriptOffset
float& TMPro::FaceInfo_Legacy::dyn_SubscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_SubscriptOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubscriptOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single SubSize
float& TMPro::FaceInfo_Legacy::dyn_SubSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_SubSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SubSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Underline
float& TMPro::FaceInfo_Legacy::dyn_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Underline");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Underline"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single UnderlineThickness
float& TMPro::FaceInfo_Legacy::dyn_UnderlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_UnderlineThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "UnderlineThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethrough
float& TMPro::FaceInfo_Legacy::dyn_strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_strikethrough");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethrough"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strikethroughThickness
float& TMPro::FaceInfo_Legacy::dyn_strikethroughThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_strikethroughThickness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethroughThickness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single TabWidth
float& TMPro::FaceInfo_Legacy::dyn_TabWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_TabWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TabWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single Padding
float& TMPro::FaceInfo_Legacy::dyn_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_Padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AtlasWidth
float& TMPro::FaceInfo_Legacy::dyn_AtlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_AtlasWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtlasWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single AtlasHeight
float& TMPro::FaceInfo_Legacy::dyn_AtlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FaceInfo_Legacy::dyn_AtlasHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AtlasHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Glyph
#include "TMPro/TMP_Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_Glyph.Clone
TMPro::TMP_Glyph* TMPro::TMP_Glyph::Clone(TMPro::TMP_Glyph* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Glyph::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Glyph", "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Glyph*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.FontAssetCreationSettings
#include "TMPro/FontAssetCreationSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String sourceFontFileName
::Il2CppString*& TMPro::FontAssetCreationSettings::dyn_sourceFontFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_sourceFontFileName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceFontFileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sourceFontFileGUID
::Il2CppString*& TMPro::FontAssetCreationSettings::dyn_sourceFontFileGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_sourceFontFileGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceFontFileGUID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pointSizeSamplingMode
int& TMPro::FontAssetCreationSettings::dyn_pointSizeSamplingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_pointSizeSamplingMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointSizeSamplingMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pointSize
int& TMPro::FontAssetCreationSettings::dyn_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_pointSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pointSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 padding
int& TMPro::FontAssetCreationSettings::dyn_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_padding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "padding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 packingMode
int& TMPro::FontAssetCreationSettings::dyn_packingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_packingMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packingMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 atlasWidth
int& TMPro::FontAssetCreationSettings::dyn_atlasWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_atlasWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 atlasHeight
int& TMPro::FontAssetCreationSettings::dyn_atlasHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_atlasHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atlasHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 characterSetSelectionMode
int& TMPro::FontAssetCreationSettings::dyn_characterSetSelectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_characterSetSelectionMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSetSelectionMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characterSequence
::Il2CppString*& TMPro::FontAssetCreationSettings::dyn_characterSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_characterSequence");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterSequence"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencedFontAssetGUID
::Il2CppString*& TMPro::FontAssetCreationSettings::dyn_referencedFontAssetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_referencedFontAssetGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedFontAssetGUID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String referencedTextAssetGUID
::Il2CppString*& TMPro::FontAssetCreationSettings::dyn_referencedTextAssetGUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_referencedTextAssetGUID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referencedTextAssetGUID"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 fontStyle
int& TMPro::FontAssetCreationSettings::dyn_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_fontStyle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontStyle"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fontStyleModifier
float& TMPro::FontAssetCreationSettings::dyn_fontStyleModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_fontStyleModifier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fontStyleModifier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 renderMode
int& TMPro::FontAssetCreationSettings::dyn_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_renderMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "renderMode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeFontFeatures
bool& TMPro::FontAssetCreationSettings::dyn_includeFontFeatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::dyn_includeFontFeatures");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeFontFeatures"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.FontAssetCreationSettings..ctor
TMPro::FontAssetCreationSettings::FontAssetCreationSettings(::Il2CppString* sourceFontFileGUID, int pointSize, int pointSizeSamplingMode, int padding, int packingMode, int atlasWidth, int atlasHeight, int characterSelectionMode, ::Il2CppString* characterSet, int renderMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontAssetCreationSettings::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFontFileGUID), ::il2cpp_utils::ExtractType(pointSize), ::il2cpp_utils::ExtractType(pointSizeSamplingMode), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(atlasWidth), ::il2cpp_utils::ExtractType(atlasHeight), ::il2cpp_utils::ExtractType(characterSelectionMode), ::il2cpp_utils::ExtractType(characterSet), ::il2cpp_utils::ExtractType(renderMode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sourceFontFileGUID, pointSize, pointSizeSamplingMode, padding, packingMode, atlasWidth, atlasHeight, characterSelectionMode, characterSet, renderMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningPairKey
#include "TMPro/KerningPairKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ascii_Left
uint& TMPro::KerningPairKey::dyn_ascii_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPairKey::dyn_ascii_Left");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ascii_Left"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 ascii_Right
uint& TMPro::KerningPairKey::dyn_ascii_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPairKey::dyn_ascii_Right");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ascii_Right"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 key
uint& TMPro::KerningPairKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPairKey::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningPairKey..ctor
TMPro::KerningPairKey::KerningPairKey(uint ascii_left, uint ascii_right) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ascii_left), ::il2cpp_utils::ExtractType(ascii_right)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, ascii_left, ascii_right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single xPlacement
float& TMPro::GlyphValueRecord_Legacy::dyn_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::dyn_xPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yPlacement
float& TMPro::GlyphValueRecord_Legacy::dyn_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::dyn_yPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xAdvance
float& TMPro::GlyphValueRecord_Legacy::dyn_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::dyn_xAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yAdvance
float& TMPro::GlyphValueRecord_Legacy::dyn_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::dyn_yAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.GlyphValueRecord_Legacy..ctor
TMPro::GlyphValueRecord_Legacy::GlyphValueRecord_Legacy(UnityEngine::TextCore::LowLevel::GlyphValueRecord valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.GlyphValueRecord_Legacy.op_Addition
TMPro::GlyphValueRecord_Legacy TMPro::operator+(const TMPro::GlyphValueRecord_Legacy& a, const TMPro::GlyphValueRecord_Legacy& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphValueRecord_Legacy::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "GlyphValueRecord_Legacy", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::GlyphValueRecord_Legacy, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static TMPro.KerningPair empty
TMPro::KerningPair* TMPro::KerningPair::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::KerningPair*>("TMPro", "KerningPair", "empty"));
}
// Autogenerated static field setter
// Set static field: static TMPro.KerningPair empty
void TMPro::KerningPair::_set_empty(TMPro::KerningPair* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "KerningPair", "empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_FirstGlyph
uint& TMPro::KerningPair::dyn_m_FirstGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_m_FirstGlyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstGlyph"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.GlyphValueRecord_Legacy m_FirstGlyphAdjustments
TMPro::GlyphValueRecord_Legacy& TMPro::KerningPair::dyn_m_FirstGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_m_FirstGlyphAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstGlyphAdjustments"))->offset;
  return *reinterpret_cast<TMPro::GlyphValueRecord_Legacy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_SecondGlyph
uint& TMPro::KerningPair::dyn_m_SecondGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_m_SecondGlyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondGlyph"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.GlyphValueRecord_Legacy m_SecondGlyphAdjustments
TMPro::GlyphValueRecord_Legacy& TMPro::KerningPair::dyn_m_SecondGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_m_SecondGlyphAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondGlyphAdjustments"))->offset;
  return *reinterpret_cast<TMPro::GlyphValueRecord_Legacy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xOffset
float& TMPro::KerningPair::dyn_xOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_xOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IgnoreSpacingAdjustments
bool& TMPro::KerningPair::dyn_m_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::dyn_m_IgnoreSpacingAdjustments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IgnoreSpacingAdjustments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningPair.get_firstGlyph
uint TMPro::KerningPair::get_firstGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::get_firstGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.set_firstGlyph
void TMPro::KerningPair::set_firstGlyph(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::set_firstGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.KerningPair.get_firstGlyphAdjustments
TMPro::GlyphValueRecord_Legacy TMPro::KerningPair::get_firstGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::get_firstGlyphAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstGlyphAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::GlyphValueRecord_Legacy, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.get_secondGlyph
uint TMPro::KerningPair::get_secondGlyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::get_secondGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.set_secondGlyph
void TMPro::KerningPair::set_secondGlyph(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::set_secondGlyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondGlyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.KerningPair.get_secondGlyphAdjustments
TMPro::GlyphValueRecord_Legacy TMPro::KerningPair::get_secondGlyphAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::get_secondGlyphAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondGlyphAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::GlyphValueRecord_Legacy, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.get_ignoreSpacingAdjustments
bool TMPro::KerningPair::get_ignoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::get_ignoreSpacingAdjustments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreSpacingAdjustments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningPair..cctor
void TMPro::KerningPair::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "KerningPair", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.KerningPair.ConvertLegacyKerningData
void TMPro::KerningPair::ConvertLegacyKerningData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningPair::ConvertLegacyKerningData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertLegacyKerningData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable
#include "TMPro/KerningTable.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0
#include "TMPro/KerningTable_--c__DisplayClass3_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0
#include "TMPro/KerningTable_--c__DisplayClass4_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0
#include "TMPro/KerningTable_--c__DisplayClass5_0.hpp"
// Including type: TMPro.KerningTable/TMPro.<>c
#include "TMPro/KerningTable_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.KerningPair> kerningPairs
System::Collections::Generic::List_1<TMPro::KerningPair*>*& TMPro::KerningTable::dyn_kerningPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::dyn_kerningPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kerningPairs"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::KerningPair*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable.AddKerningPair
void TMPro::KerningTable::AddKerningPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::AddKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.KerningTable.AddKerningPair
int TMPro::KerningTable::AddKerningPair(uint first, uint second, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::AddKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(offset)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, first, second, offset);
}
// Autogenerated method: TMPro.KerningTable.AddGlyphPairAdjustmentRecord
int TMPro::KerningTable::AddGlyphPairAdjustmentRecord(uint first, TMPro::GlyphValueRecord_Legacy firstAdjustments, uint second, TMPro::GlyphValueRecord_Legacy secondAdjustments) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::AddGlyphPairAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGlyphPairAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(firstAdjustments), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(secondAdjustments)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, first, firstAdjustments, second, secondAdjustments);
}
// Autogenerated method: TMPro.KerningTable.RemoveKerningPair
void TMPro::KerningTable::RemoveKerningPair(int left, int right) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::RemoveKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, left, right);
}
// Autogenerated method: TMPro.KerningTable.RemoveKerningPair
void TMPro::KerningTable::RemoveKerningPair(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::RemoveKerningPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKerningPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, index);
}
// Autogenerated method: TMPro.KerningTable.SortKerningPairs
void TMPro::KerningTable::SortKerningPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::SortKerningPairs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortKerningPairs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0
#include "TMPro/KerningTable_--c__DisplayClass3_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 first
uint& TMPro::KerningTable::$$c__DisplayClass3_0::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass3_0::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 second
uint& TMPro::KerningTable::$$c__DisplayClass3_0::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass3_0::dyn_second");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass3_0.<AddKerningPair>b__0
bool TMPro::KerningTable::$$c__DisplayClass3_0::$AddKerningPair$b__0(TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass3_0::<AddKerningPair>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddKerningPair>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0
#include "TMPro/KerningTable_--c__DisplayClass4_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 first
uint& TMPro::KerningTable::$$c__DisplayClass4_0::dyn_first() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass4_0::dyn_first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "first"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 second
uint& TMPro::KerningTable::$$c__DisplayClass4_0::dyn_second() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass4_0::dyn_second");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "second"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass4_0.<AddGlyphPairAdjustmentRecord>b__0
bool TMPro::KerningTable::$$c__DisplayClass4_0::$AddGlyphPairAdjustmentRecord$b__0(TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass4_0::<AddGlyphPairAdjustmentRecord>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddGlyphPairAdjustmentRecord>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0
#include "TMPro/KerningTable_--c__DisplayClass5_0.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 left
int& TMPro::KerningTable::$$c__DisplayClass5_0::dyn_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass5_0::dyn_left");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "left"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 right
int& TMPro::KerningTable::$$c__DisplayClass5_0::dyn_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass5_0::dyn_right");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "right"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c__DisplayClass5_0.<RemoveKerningPair>b__0
bool TMPro::KerningTable::$$c__DisplayClass5_0::$RemoveKerningPair$b__0(TMPro::KerningPair* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c__DisplayClass5_0::<RemoveKerningPair>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveKerningPair>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.KerningTable/TMPro.<>c
#include "TMPro/KerningTable_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.KerningPair
#include "TMPro/KerningPair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.KerningTable/TMPro.<>c <>9
TMPro::KerningTable::$$c* TMPro::KerningTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::KerningTable::$$c*>("TMPro", "KerningTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.KerningTable/TMPro.<>c <>9
void TMPro::KerningTable::$$c::_set_$$9(TMPro::KerningTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_0
System::Func_2<TMPro::KerningPair*, uint>* TMPro::KerningTable::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::KerningPair*, uint>*>("TMPro", "KerningTable/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_0
void TMPro::KerningTable::$$c::_set_$$9__7_0(System::Func_2<TMPro::KerningPair*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_1
System::Func_2<TMPro::KerningPair*, uint>* TMPro::KerningTable::$$c::_get_$$9__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_get_$$9__7_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::KerningPair*, uint>*>("TMPro", "KerningTable/<>c", "<>9__7_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.KerningPair,System.UInt32> <>9__7_1
void TMPro::KerningTable::$$c::_set_$$9__7_1(System::Func_2<TMPro::KerningPair*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::_set_$$9__7_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "KerningTable/<>c", "<>9__7_1", value)));
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c..cctor
void TMPro::KerningTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "KerningTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c.<SortKerningPairs>b__7_0
uint TMPro::KerningTable::$$c::$SortKerningPairs$b__7_0(TMPro::KerningPair* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::<SortKerningPairs>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortKerningPairs>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated method: TMPro.KerningTable/TMPro.<>c.<SortKerningPairs>b__7_1
uint TMPro::KerningTable::$$c::$SortKerningPairs$b__7_1(TMPro::KerningPair* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::KerningTable::$$c::<SortKerningPairs>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortKerningPairs>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontUtilities
#include "TMPro/TMP_FontUtilities.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedFontAssets
System::Collections::Generic::List_1<int>* TMPro::TMP_FontUtilities::_get_k_searchedFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::_get_k_searchedFontAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<int>*>("TMPro", "TMP_FontUtilities", "k_searchedFontAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedFontAssets
void TMPro::TMP_FontUtilities::_set_k_searchedFontAssets(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::_set_k_searchedFontAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontUtilities", "k_searchedFontAssets", value));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacter
TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacter(TMPro::TMP_FontAsset* font, uint unicode, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::SearchForCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacter
TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacter(System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* fonts, uint unicode, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::SearchForCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fonts), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fonts, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacterInternal
TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacterInternal(TMPro::TMP_FontAsset* font, uint unicode, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::SearchForCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font, unicode, byref(character));
}
// Autogenerated method: TMPro.TMP_FontUtilities.SearchForCharacterInternal
TMPro::TMP_FontAsset* TMPro::TMP_FontUtilities::SearchForCharacterInternal(System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* fonts, uint unicode, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontUtilities::SearchForCharacterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontUtilities", "SearchForCharacterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fonts), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fonts, unicode, byref(character));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontAssetUtilities
#include "TMPro/TMP_FontAssetUtilities.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_FontAssetUtilities s_Instance
TMPro::TMP_FontAssetUtilities* TMPro::TMP_FontAssetUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_FontAssetUtilities*>("TMPro", "TMP_FontAssetUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_FontAssetUtilities s_Instance
void TMPro::TMP_FontAssetUtilities::_set_s_Instance(TMPro::TMP_FontAssetUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_SearchedFontAssets
System::Collections::Generic::List_1<int>* TMPro::TMP_FontAssetUtilities::_get_k_SearchedFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_get_k_SearchedFontAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<int>*>("TMPro", "TMP_FontAssetUtilities", "k_SearchedFontAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_SearchedFontAssets
void TMPro::TMP_FontAssetUtilities::_set_k_SearchedFontAssets(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_set_k_SearchedFontAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "k_SearchedFontAssets", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean k_IsFontEngineInitialized
bool TMPro::TMP_FontAssetUtilities::_get_k_IsFontEngineInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_get_k_IsFontEngineInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("TMPro", "TMP_FontAssetUtilities", "k_IsFontEngineInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean k_IsFontEngineInitialized
void TMPro::TMP_FontAssetUtilities::_set_k_IsFontEngineInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::_set_k_IsFontEngineInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_FontAssetUtilities", "k_IsFontEngineInitialized", value));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.get_instance
TMPro::TMP_FontAssetUtilities* TMPro::TMP_FontAssetUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAssetUtilities*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities..cctor
void TMPro::TMP_FontAssetUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset
TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset(uint unicode, TMPro::TMP_FontAsset* sourceFontAsset, bool includeFallbacks, TMPro::FontStyles fontStyle, TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface, ByRef<TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(sourceFontAsset), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Character*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, sourceFontAsset, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface), byref(fontAsset));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAsset_Internal
TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset_Internal(uint unicode, TMPro::TMP_FontAsset* sourceFontAsset, bool includeFallbacks, TMPro::FontStyles fontStyle, TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface, ByRef<TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAsset_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAsset_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(sourceFontAsset), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Character*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, sourceFontAsset, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface), byref(fontAsset));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.GetCharacterFromFontAssets
TMPro::TMP_Character* TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAssets(uint unicode, System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* fontAssets, bool includeFallbacks, TMPro::FontStyles fontStyle, TMPro::FontWeight fontWeight, ByRef<bool> isAlternativeTypeface, ByRef<TMPro::TMP_FontAsset*> fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::GetCharacterFromFontAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "GetCharacterFromFontAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(fontAssets), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractType(fontStyle), ::il2cpp_utils::ExtractType(fontWeight), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_FontAsset*&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Character*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, fontAssets, includeFallbacks, fontStyle, fontWeight, byref(isAlternativeTypeface), byref(fontAsset));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.TryGetCharacterFromFontFile
bool TMPro::TMP_FontAssetUtilities::TryGetCharacterFromFontFile(uint unicode, TMPro::TMP_FontAsset* fontAsset, ByRef<TMPro::TMP_Character*> character) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::TryGetCharacterFromFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "TryGetCharacterFromFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractIndependentType<TMPro::TMP_Character*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, fontAsset, byref(character));
}
// Autogenerated method: TMPro.TMP_FontAssetUtilities.TryGetGlyphFromFontFile
bool TMPro::TMP_FontAssetUtilities::TryGetGlyphFromFontFile(uint glyphIndex, TMPro::TMP_FontAsset* fontAsset, ByRef<UnityEngine::TextCore::Glyph*> glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontAssetUtilities::TryGetGlyphFromFontFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontAssetUtilities", "TryGetGlyphFromFontFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(fontAsset), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, fontAsset, byref(glyph));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontFeatureTable
#include "TMPro/TMP_FontFeatureTable.hpp"
// Including type: TMPro.TMP_FontFeatureTable/TMPro.<>c
#include "TMPro/TMP_FontFeatureTable_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<TMPro.TMP_GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecords
System::Collections::Generic::List_1<TMPro::TMP_GlyphPairAdjustmentRecord*>*& TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphPairAdjustmentRecords"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_GlyphPairAdjustmentRecord*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.Int64,TMPro.TMP_GlyphPairAdjustmentRecord> m_GlyphPairAdjustmentRecordLookupDictionary
System::Collections::Generic::Dictionary_2<int64_t, TMPro::TMP_GlyphPairAdjustmentRecord*>*& TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecordLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::dyn_m_GlyphPairAdjustmentRecordLookupDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphPairAdjustmentRecordLookupDictionary"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int64_t, TMPro::TMP_GlyphPairAdjustmentRecord*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.get_glyphPairAdjustmentRecords
System::Collections::Generic::List_1<TMPro::TMP_GlyphPairAdjustmentRecord*>* TMPro::TMP_FontFeatureTable::get_glyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::get_glyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_GlyphPairAdjustmentRecord*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.set_glyphPairAdjustmentRecords
void TMPro::TMP_FontFeatureTable::set_glyphPairAdjustmentRecords(System::Collections::Generic::List_1<TMPro::TMP_GlyphPairAdjustmentRecord*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::set_glyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable.SortGlyphPairAdjustmentRecords
void TMPro::TMP_FontFeatureTable::SortGlyphPairAdjustmentRecords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::SortGlyphPairAdjustmentRecords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphPairAdjustmentRecords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontFeatureTable/TMPro.<>c
#include "TMPro/TMP_FontFeatureTable_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_FontFeatureTable/TMPro.<>c <>9
TMPro::TMP_FontFeatureTable::$$c* TMPro::TMP_FontFeatureTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::TMP_FontFeatureTable::$$c*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_FontFeatureTable/TMPro.<>c <>9
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9(TMPro::TMP_FontFeatureTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_0
System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_0
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_0(System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_1
System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>*>("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_GlyphPairAdjustmentRecord,System.UInt32> <>9__6_1
void TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_1(System::Func_2<TMPro::TMP_GlyphPairAdjustmentRecord*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_FontFeatureTable/<>c", "<>9__6_1", value)));
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c..cctor
void TMPro::TMP_FontFeatureTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_FontFeatureTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c.<SortGlyphPairAdjustmentRecords>b__6_0
uint TMPro::TMP_FontFeatureTable::$$c::$SortGlyphPairAdjustmentRecords$b__6_0(TMPro::TMP_GlyphPairAdjustmentRecord* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::<SortGlyphPairAdjustmentRecords>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphPairAdjustmentRecords>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_FontFeatureTable/TMPro.<>c.<SortGlyphPairAdjustmentRecords>b__6_1
uint TMPro::TMP_FontFeatureTable::$$c::$SortGlyphPairAdjustmentRecords$b__6_1(TMPro::TMP_GlyphPairAdjustmentRecord* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontFeatureTable::$$c::<SortGlyphPairAdjustmentRecords>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphPairAdjustmentRecords>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontFeatureLookupFlags
#include "TMPro/FontFeatureLookupFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontFeatureLookupFlags IgnoreLigatures
TMPro::FontFeatureLookupFlags TMPro::FontFeatureLookupFlags::_get_IgnoreLigatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontFeatureLookupFlags::_get_IgnoreLigatures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontFeatureLookupFlags>("TMPro", "FontFeatureLookupFlags", "IgnoreLigatures"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontFeatureLookupFlags IgnoreLigatures
void TMPro::FontFeatureLookupFlags::_set_IgnoreLigatures(TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontFeatureLookupFlags::_set_IgnoreLigatures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontFeatureLookupFlags", "IgnoreLigatures", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontFeatureLookupFlags IgnoreSpacingAdjustments
TMPro::FontFeatureLookupFlags TMPro::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontFeatureLookupFlags>("TMPro", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontFeatureLookupFlags IgnoreSpacingAdjustments
void TMPro::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments(TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontFeatureLookupFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontFeatureLookupFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphValueRecord
#include "TMPro/TMP_GlyphValueRecord.hpp"
// Including type: TMPro.GlyphValueRecord_Legacy
#include "TMPro/GlyphValueRecord_Legacy.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single m_XPlacement
float& TMPro::TMP_GlyphValueRecord::dyn_m_XPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::dyn_m_XPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_YPlacement
float& TMPro::TMP_GlyphValueRecord::dyn_m_YPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::dyn_m_YPlacement");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YPlacement"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_XAdvance
float& TMPro::TMP_GlyphValueRecord::dyn_m_XAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::dyn_m_XAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_XAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_YAdvance
float& TMPro::TMP_GlyphValueRecord::dyn_m_YAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::dyn_m_YAdvance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_YAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_xPlacement
float TMPro::TMP_GlyphValueRecord::get_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::get_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_xPlacement
void TMPro::TMP_GlyphValueRecord::set_xPlacement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::set_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_yPlacement
float TMPro::TMP_GlyphValueRecord::get_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::get_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_yPlacement
void TMPro::TMP_GlyphValueRecord::set_yPlacement(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::set_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_xAdvance
float TMPro::TMP_GlyphValueRecord::get_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::get_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_xAdvance
void TMPro::TMP_GlyphValueRecord::set_xAdvance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::set_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.get_yAdvance
float TMPro::TMP_GlyphValueRecord::get_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::get_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.set_yAdvance
void TMPro::TMP_GlyphValueRecord::set_yAdvance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::set_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
// ABORTED elsewhere.  TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(float xPlacement, float yPlacement, float xAdvance, float yAdvance)
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(TMPro::GlyphValueRecord_Legacy valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord..ctor
TMPro::TMP_GlyphValueRecord::TMP_GlyphValueRecord(UnityEngine::TextCore::LowLevel::GlyphValueRecord valueRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueRecord)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, valueRecord);
}
// Autogenerated method: TMPro.TMP_GlyphValueRecord.op_Addition
TMPro::TMP_GlyphValueRecord TMPro::operator+(const TMPro::TMP_GlyphValueRecord& a, const TMPro::TMP_GlyphValueRecord& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphValueRecord::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_GlyphValueRecord", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_GlyphValueRecord, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphAdjustmentRecord
#include "TMPro/TMP_GlyphAdjustmentRecord.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_GlyphIndex
uint& TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_GlyphValueRecord m_GlyphValueRecord
TMPro::TMP_GlyphValueRecord& TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::dyn_m_GlyphValueRecord");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphValueRecord"))->offset;
  return *reinterpret_cast<TMPro::TMP_GlyphValueRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.get_glyphIndex
uint TMPro::TMP_GlyphAdjustmentRecord::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.set_glyphIndex
void TMPro::TMP_GlyphAdjustmentRecord::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.get_glyphValueRecord
TMPro::TMP_GlyphValueRecord TMPro::TMP_GlyphAdjustmentRecord::get_glyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::get_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_GlyphValueRecord, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord.set_glyphValueRecord
void TMPro::TMP_GlyphAdjustmentRecord::set_glyphValueRecord(TMPro::TMP_GlyphValueRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::set_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord..ctor
// ABORTED elsewhere.  TMPro::TMP_GlyphAdjustmentRecord::TMP_GlyphAdjustmentRecord(uint glyphIndex, TMPro::TMP_GlyphValueRecord glyphValueRecord)
// Autogenerated method: TMPro.TMP_GlyphAdjustmentRecord..ctor
TMPro::TMP_GlyphAdjustmentRecord::TMP_GlyphAdjustmentRecord(UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord adjustmentRecord) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphAdjustmentRecord::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adjustmentRecord)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, adjustmentRecord);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_GlyphAdjustmentRecord m_FirstAdjustmentRecord
TMPro::TMP_GlyphAdjustmentRecord& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FirstAdjustmentRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FirstAdjustmentRecord"))->offset;
  return *reinterpret_cast<TMPro::TMP_GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_GlyphAdjustmentRecord m_SecondAdjustmentRecord
TMPro::TMP_GlyphAdjustmentRecord& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_SecondAdjustmentRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SecondAdjustmentRecord"))->offset;
  return *reinterpret_cast<TMPro::TMP_GlyphAdjustmentRecord*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.FontFeatureLookupFlags m_FeatureLookupFlags
TMPro::FontFeatureLookupFlags& TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::dyn_m_FeatureLookupFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FeatureLookupFlags"))->offset;
  return *reinterpret_cast<TMPro::FontFeatureLookupFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_firstAdjustmentRecord
TMPro::TMP_GlyphAdjustmentRecord TMPro::TMP_GlyphPairAdjustmentRecord::get_firstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::get_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_GlyphAdjustmentRecord, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_firstAdjustmentRecord
void TMPro::TMP_GlyphPairAdjustmentRecord::set_firstAdjustmentRecord(TMPro::TMP_GlyphAdjustmentRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::set_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_secondAdjustmentRecord
TMPro::TMP_GlyphAdjustmentRecord TMPro::TMP_GlyphPairAdjustmentRecord::get_secondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::get_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_GlyphAdjustmentRecord, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_secondAdjustmentRecord
void TMPro::TMP_GlyphPairAdjustmentRecord::set_secondAdjustmentRecord(TMPro::TMP_GlyphAdjustmentRecord value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::set_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.get_featureLookupFlags
TMPro::FontFeatureLookupFlags TMPro::TMP_GlyphPairAdjustmentRecord::get_featureLookupFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::get_featureLookupFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_featureLookupFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontFeatureLookupFlags, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_GlyphPairAdjustmentRecord.set_featureLookupFlags
void TMPro::TMP_GlyphPairAdjustmentRecord::set_featureLookupFlags(TMPro::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_GlyphPairAdjustmentRecord::set_featureLookupFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_featureLookupFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.GlyphPairKey
#include "TMPro/GlyphPairKey.hpp"
// Including type: TMPro.TMP_GlyphPairAdjustmentRecord
#include "TMPro/TMP_GlyphPairAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 firstGlyphIndex
uint& TMPro::GlyphPairKey::dyn_firstGlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphPairKey::dyn_firstGlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstGlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 secondGlyphIndex
uint& TMPro::GlyphPairKey::dyn_secondGlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphPairKey::dyn_secondGlyphIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondGlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 key
int64_t& TMPro::GlyphPairKey::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphPairKey::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.GlyphPairKey..ctor
TMPro::GlyphPairKey::GlyphPairKey(uint firstGlyphIndex, uint secondGlyphIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstGlyphIndex), ::il2cpp_utils::ExtractType(secondGlyphIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, firstGlyphIndex, secondGlyphIndex);
}
// Autogenerated method: TMPro.GlyphPairKey..ctor
TMPro::GlyphPairKey::GlyphPairKey(TMPro::TMP_GlyphPairAdjustmentRecord* record) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::GlyphPairKey::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(record)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, record);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField
#include "TMPro/TMP_InputField.hpp"
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TMP_InputField/TMPro.OnValidateInput
#include "TMPro/TMP_InputField_OnValidateInput.hpp"
// Including type: TMPro.TMP_InputField/TMPro.SubmitEvent
#include "TMPro/TMP_InputField_SubmitEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.OnChangeEvent
#include "TMPro/TMP_InputField_OnChangeEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.SelectionEvent
#include "TMPro/TMP_InputField_SelectionEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.TextSelectionEvent
#include "TMPro/TMP_InputField_TextSelectionEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.TouchScreenKeyboardEvent
#include "TMPro/TMP_InputField_TouchScreenKeyboardEvent.hpp"
// Including type: TMPro.TMP_InputField/TMPro.EditState
#include "TMPro/TMP_InputField_EditState.hpp"
// Including type: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267
#include "TMPro/TMP_InputField_-CaretBlink-d__267.hpp"
// Including type: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285
#include "TMPro/TMP_InputField_-MouseDragOutsideRect-d__285.hpp"
// Including type: UnityEngine.TouchScreenKeyboard
#include "UnityEngine/TouchScreenKeyboard.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Scrollbar
#include "UnityEngine/UI/Scrollbar.hpp"
// Including type: TMPro.TMP_ScrollbarEventHandler
#include "TMPro/TMP_ScrollbarEventHandler.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TMP_InputValidator
#include "TMPro/TMP_InputValidator.hpp"
// Including type: UnityEngine.Event
#include "UnityEngine/Event.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: UnityEngine.UI.Selectable/UnityEngine.UI.SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] kSeparators
::ArrayW<::Il2CppChar> TMPro::TMP_InputField::_get_kSeparators() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_get_kSeparators");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("TMPro", "TMP_InputField", "kSeparators"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] kSeparators
void TMPro::TMP_InputField::_set_kSeparators(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_set_kSeparators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kSeparators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHScrollSpeed
float TMPro::TMP_InputField::_get_kHScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_get_kHScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_InputField", "kHScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHScrollSpeed
void TMPro::TMP_InputField::_set_kHScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_set_kHScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kHScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVScrollSpeed
float TMPro::TMP_InputField::_get_kVScrollSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_get_kVScrollSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_InputField", "kVScrollSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVScrollSpeed
void TMPro::TMP_InputField::_set_kVScrollSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_set_kVScrollSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kVScrollSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEmailSpecialCharacters
::Il2CppString* TMPro::TMP_InputField::_get_kEmailSpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_get_kEmailSpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_InputField", "kEmailSpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEmailSpecialCharacters
void TMPro::TMP_InputField::_set_kEmailSpecialCharacters(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::_set_kEmailSpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField", "kEmailSpecialCharacters", value));
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.TouchScreenKeyboard m_SoftKeyboard
UnityEngine::TouchScreenKeyboard*& TMPro::TMP_InputField::dyn_m_SoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_SoftKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SoftKeyboard"))->offset;
  return *reinterpret_cast<UnityEngine::TouchScreenKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_TextViewport
UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_m_TextViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_TextViewport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextViewport"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text m_TextComponent
TMPro::TMP_Text*& TMPro::TMP_InputField::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_TextComponentRectTransform
UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_m_TextComponentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_TextComponentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponentRectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Graphic m_Placeholder
UnityEngine::UI::Graphic*& TMPro::TMP_InputField::dyn_m_Placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_Placeholder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Placeholder"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Graphic**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.Scrollbar m_VerticalScrollbar
UnityEngine::UI::Scrollbar*& TMPro::TMP_InputField::dyn_m_VerticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_VerticalScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbar"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Scrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ScrollbarEventHandler m_VerticalScrollbarEventHandler
TMPro::TMP_ScrollbarEventHandler*& TMPro::TMP_InputField::dyn_m_VerticalScrollbarEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_VerticalScrollbarEventHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VerticalScrollbarEventHandler"))->offset;
  return *reinterpret_cast<TMPro::TMP_ScrollbarEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsDrivenByLayoutComponents
bool& TMPro::TMP_InputField::dyn_m_IsDrivenByLayoutComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsDrivenByLayoutComponents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsDrivenByLayoutComponents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ScrollPosition
float& TMPro::TMP_InputField::dyn_m_ScrollPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ScrollPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_ScrollSensitivity
float& TMPro::TMP_InputField::dyn_m_ScrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ScrollSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ScrollSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.ContentType m_ContentType
TMPro::TMP_InputField::ContentType& TMPro::TMP_InputField::dyn_m_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ContentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ContentType"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::ContentType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.InputType m_InputType
TMPro::TMP_InputField::InputType& TMPro::TMP_InputField::dyn_m_InputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_InputType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputType"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::InputType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char m_AsteriskChar
::Il2CppChar& TMPro::TMP_InputField::dyn_m_AsteriskChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_AsteriskChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsteriskChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TouchScreenKeyboardType m_KeyboardType
UnityEngine::TouchScreenKeyboardType& TMPro::TMP_InputField::dyn_m_KeyboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_KeyboardType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyboardType"))->offset;
  return *reinterpret_cast<UnityEngine::TouchScreenKeyboardType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.LineType m_LineType
TMPro::TMP_InputField::LineType& TMPro::TMP_InputField::dyn_m_LineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_LineType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineType"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::LineType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideMobileInput
bool& TMPro::TMP_InputField::dyn_m_HideMobileInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_HideMobileInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideMobileInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HideSoftKeyboard
bool& TMPro::TMP_InputField::dyn_m_HideSoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_HideSoftKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HideSoftKeyboard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.CharacterValidation m_CharacterValidation
TMPro::TMP_InputField::CharacterValidation& TMPro::TMP_InputField::dyn_m_CharacterValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CharacterValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterValidation"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::CharacterValidation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_RegexValue
::Il2CppString*& TMPro::TMP_InputField::dyn_m_RegexValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_RegexValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RegexValue"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_GlobalPointSize
float& TMPro::TMP_InputField::dyn_m_GlobalPointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_GlobalPointSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlobalPointSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CharacterLimit
int& TMPro::TMP_InputField::dyn_m_CharacterLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CharacterLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CharacterLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SubmitEvent m_OnEndEdit
TMPro::TMP_InputField::SubmitEvent*& TMPro::TMP_InputField::dyn_m_OnEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnEndEdit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnEndEdit"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::SubmitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SubmitEvent m_OnSubmit
TMPro::TMP_InputField::SubmitEvent*& TMPro::TMP_InputField::dyn_m_OnSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnSubmit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSubmit"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::SubmitEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SelectionEvent m_OnSelect
TMPro::TMP_InputField::SelectionEvent*& TMPro::TMP_InputField::dyn_m_OnSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnSelect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnSelect"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::SelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.SelectionEvent m_OnDeselect
TMPro::TMP_InputField::SelectionEvent*& TMPro::TMP_InputField::dyn_m_OnDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnDeselect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnDeselect"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::SelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TextSelectionEvent m_OnTextSelection
TMPro::TMP_InputField::TextSelectionEvent*& TMPro::TMP_InputField::dyn_m_OnTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnTextSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnTextSelection"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::TextSelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TextSelectionEvent m_OnEndTextSelection
TMPro::TMP_InputField::TextSelectionEvent*& TMPro::TMP_InputField::dyn_m_OnEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnEndTextSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnEndTextSelection"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::TextSelectionEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.OnChangeEvent m_OnValueChanged
TMPro::TMP_InputField::OnChangeEvent*& TMPro::TMP_InputField::dyn_m_OnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnValueChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValueChanged"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::OnChangeEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.TouchScreenKeyboardEvent m_OnTouchScreenKeyboardStatusChanged
TMPro::TMP_InputField::TouchScreenKeyboardEvent*& TMPro::TMP_InputField::dyn_m_OnTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnTouchScreenKeyboardStatusChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnTouchScreenKeyboardStatusChanged"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::TouchScreenKeyboardEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_InputField/TMPro.OnValidateInput m_OnValidateInput
TMPro::TMP_InputField::OnValidateInput*& TMPro::TMP_InputField::dyn_m_OnValidateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnValidateInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnValidateInput"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField::OnValidateInput**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_CaretColor
UnityEngine::Color& TMPro::TMP_InputField::dyn_m_CaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_CustomCaretColor
bool& TMPro::TMP_InputField::dyn_m_CustomCaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CustomCaretColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CustomCaretColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color m_SelectionColor
UnityEngine::Color& TMPro::TMP_InputField::dyn_m_SelectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_SelectionColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectionColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String m_Text
::Il2CppString*& TMPro::TMP_InputField::dyn_m_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_Text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CaretBlinkRate
float& TMPro::TMP_InputField::dyn_m_CaretBlinkRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretBlinkRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretBlinkRate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_CaretWidth
int& TMPro::TMP_InputField::dyn_m_CaretWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReadOnly
bool& TMPro::TMP_InputField::dyn_m_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RichText
bool& TMPro::TMP_InputField::dyn_m_RichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_RichText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RichText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_StringPosition
int& TMPro::TMP_InputField::dyn_m_StringPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_StringPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_StringSelectPosition
int& TMPro::TMP_InputField::dyn_m_StringSelectPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_StringSelectPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StringSelectPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_CaretPosition
int& TMPro::TMP_InputField::dyn_m_CaretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_CaretSelectPosition
int& TMPro::TMP_InputField::dyn_m_CaretSelectPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretSelectPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretSelectPosition"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform caretRectTrans
UnityEngine::RectTransform*& TMPro::TMP_InputField::dyn_caretRectTrans() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_caretRectTrans");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caretRectTrans"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UIVertex[] m_CursorVerts
::ArrayW<UnityEngine::UIVertex>& TMPro::TMP_InputField::dyn_m_CursorVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CursorVerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CursorVerts"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::UIVertex>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_CachedInputRenderer
UnityEngine::CanvasRenderer*& TMPro::TMP_InputField::dyn_m_CachedInputRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CachedInputRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedInputRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_LastPosition
UnityEngine::Vector2& TMPro::TMP_InputField::dyn_m_LastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_LastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LastPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Mesh m_Mesh
UnityEngine::Mesh*& TMPro::TMP_InputField::dyn_m_Mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_Mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AllowInput
bool& TMPro::TMP_InputField::dyn_m_AllowInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_AllowInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AllowInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ShouldActivateNextUpdate
bool& TMPro::TMP_InputField::dyn_m_ShouldActivateNextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ShouldActivateNextUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ShouldActivateNextUpdate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdateDrag
bool& TMPro::TMP_InputField::dyn_m_UpdateDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_UpdateDrag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdateDrag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_DragPositionOutOfBounds
bool& TMPro::TMP_InputField::dyn_m_DragPositionOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_DragPositionOutOfBounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DragPositionOutOfBounds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_CaretVisible
bool& TMPro::TMP_InputField::dyn_m_CaretVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_CaretVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CaretVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_BlinkCoroutine
UnityEngine::Coroutine*& TMPro::TMP_InputField::dyn_m_BlinkCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_BlinkCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlinkCoroutine"))->offset;
  return *reinterpret_cast<UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_BlinkStartTime
float& TMPro::TMP_InputField::dyn_m_BlinkStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_BlinkStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlinkStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine m_DragCoroutine
UnityEngine::Coroutine*& TMPro::TMP_InputField::dyn_m_DragCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_DragCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DragCoroutine"))->offset;
  return *reinterpret_cast<UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_OriginalText
::Il2CppString*& TMPro::TMP_InputField::dyn_m_OriginalText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OriginalText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OriginalText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_WasCanceled
bool& TMPro::TMP_InputField::dyn_m_WasCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_WasCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WasCanceled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_HasDoneFocusTransition
bool& TMPro::TMP_InputField::dyn_m_HasDoneFocusTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_HasDoneFocusTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HasDoneFocusTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSecondsRealtime m_WaitForSecondsRealtime
UnityEngine::WaitForSecondsRealtime*& TMPro::TMP_InputField::dyn_m_WaitForSecondsRealtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_WaitForSecondsRealtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitForSecondsRealtime"))->offset;
  return *reinterpret_cast<UnityEngine::WaitForSecondsRealtime**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_PreventCallback
bool& TMPro::TMP_InputField::dyn_m_PreventCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_PreventCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreventCallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_TouchKeyboardAllowsInPlaceEditing
bool& TMPro::TMP_InputField::dyn_m_TouchKeyboardAllowsInPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_TouchKeyboardAllowsInPlaceEditing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TouchKeyboardAllowsInPlaceEditing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsTextComponentUpdateRequired
bool& TMPro::TMP_InputField::dyn_m_IsTextComponentUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsTextComponentUpdateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsTextComponentUpdateRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsScrollbarUpdateRequired
bool& TMPro::TMP_InputField::dyn_m_IsScrollbarUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsScrollbarUpdateRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsScrollbarUpdateRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsUpdatingScrollbarValues
bool& TMPro::TMP_InputField::dyn_m_IsUpdatingScrollbarValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsUpdatingScrollbarValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsUpdatingScrollbarValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isLastKeyBackspace
bool& TMPro::TMP_InputField::dyn_m_isLastKeyBackspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_isLastKeyBackspace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLastKeyBackspace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PointerDownClickStartTime
float& TMPro::TMP_InputField::dyn_m_PointerDownClickStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_PointerDownClickStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PointerDownClickStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_KeyDownStartTime
float& TMPro::TMP_InputField::dyn_m_KeyDownStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_KeyDownStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_KeyDownStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DoubleClickDelay
float& TMPro::TMP_InputField::dyn_m_DoubleClickDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_DoubleClickDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DoubleClickDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_GlobalFontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_InputField::dyn_m_GlobalFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_GlobalFontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlobalFontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_OnFocusSelectAll
bool& TMPro::TMP_InputField::dyn_m_OnFocusSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_OnFocusSelectAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnFocusSelectAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isSelectAll
bool& TMPro::TMP_InputField::dyn_m_isSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_isSelectAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSelectAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ResetOnDeActivation
bool& TMPro::TMP_InputField::dyn_m_ResetOnDeActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ResetOnDeActivation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ResetOnDeActivation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_SelectionStillActive
bool& TMPro::TMP_InputField::dyn_m_SelectionStillActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_SelectionStillActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectionStillActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_ReleaseSelection
bool& TMPro::TMP_InputField::dyn_m_ReleaseSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ReleaseSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ReleaseSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject m_SelectedObject
UnityEngine::GameObject*& TMPro::TMP_InputField::dyn_m_SelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_SelectedObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SelectedObject"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_RestoreOriginalTextOnEscape
bool& TMPro::TMP_InputField::dyn_m_RestoreOriginalTextOnEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_RestoreOriginalTextOnEscape");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RestoreOriginalTextOnEscape"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRichTextEditingAllowed
bool& TMPro::TMP_InputField::dyn_m_isRichTextEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_isRichTextEditingAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRichTextEditingAllowed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_LineLimit
int& TMPro::TMP_InputField::dyn_m_LineLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_LineLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LineLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_InputValidator m_InputValidator
TMPro::TMP_InputValidator*& TMPro::TMP_InputField::dyn_m_InputValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_InputValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InputValidator"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isSelected
bool& TMPro::TMP_InputField::dyn_m_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_isSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsStringPositionDirty
bool& TMPro::TMP_InputField::dyn_m_IsStringPositionDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsStringPositionDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsStringPositionDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_IsCaretPositionDirty
bool& TMPro::TMP_InputField::dyn_m_IsCaretPositionDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_IsCaretPositionDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsCaretPositionDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_forceRectTransformAdjustment
bool& TMPro::TMP_InputField::dyn_m_forceRectTransformAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_forceRectTransformAdjustment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_forceRectTransformAdjustment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Event m_ProcessingEvent
UnityEngine::Event*& TMPro::TMP_InputField::dyn_m_ProcessingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::dyn_m_ProcessingEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ProcessingEvent"))->offset;
  return *reinterpret_cast<UnityEngine::Event**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputSystem
UnityEngine::EventSystems::BaseInput* TMPro::TMP_InputField::get_inputSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_inputSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInput*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_compositionString
::Il2CppString* TMPro::TMP_InputField::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_compositionString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_mesh
UnityEngine::Mesh* TMPro::TMP_InputField::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_shouldHideMobileInput
bool TMPro::TMP_InputField::get_shouldHideMobileInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_shouldHideMobileInput
void TMPro::TMP_InputField::set_shouldHideMobileInput(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_shouldHideMobileInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldHideMobileInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_shouldHideSoftKeyboard
bool TMPro::TMP_InputField::get_shouldHideSoftKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_shouldHideSoftKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_shouldHideSoftKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_shouldHideSoftKeyboard
void TMPro::TMP_InputField::set_shouldHideSoftKeyboard(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_shouldHideSoftKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_shouldHideSoftKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_text
::Il2CppString* TMPro::TMP_InputField::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_text
void TMPro::TMP_InputField::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_isFocused
bool TMPro::TMP_InputField::get_isFocused() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_isFocused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFocused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretBlinkRate
float TMPro::TMP_InputField::get_caretBlinkRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretBlinkRate
void TMPro::TMP_InputField::set_caretBlinkRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretBlinkRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretBlinkRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretWidth
int TMPro::TMP_InputField::get_caretWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretWidth
void TMPro::TMP_InputField::set_caretWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_textViewport
UnityEngine::RectTransform* TMPro::TMP_InputField::get_textViewport() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_textViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_textViewport
void TMPro::TMP_InputField::set_textViewport(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_textViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_textComponent
TMPro::TMP_Text* TMPro::TMP_InputField::get_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_textComponent
void TMPro::TMP_InputField::set_textComponent(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_textComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_textComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_placeholder
UnityEngine::UI::Graphic* TMPro::TMP_InputField::get_placeholder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Graphic*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_placeholder
void TMPro::TMP_InputField::set_placeholder(UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_placeholder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_placeholder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_verticalScrollbar
UnityEngine::UI::Scrollbar* TMPro::TMP_InputField::get_verticalScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Scrollbar*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_verticalScrollbar
void TMPro::TMP_InputField::set_verticalScrollbar(UnityEngine::UI::Scrollbar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_verticalScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_scrollSensitivity
float TMPro::TMP_InputField::get_scrollSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_scrollSensitivity
void TMPro::TMP_InputField::set_scrollSensitivity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_scrollSensitivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollSensitivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretColor
UnityEngine::Color TMPro::TMP_InputField::get_caretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretColor
void TMPro::TMP_InputField::set_caretColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_customCaretColor
bool TMPro::TMP_InputField::get_customCaretColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_customCaretColor
void TMPro::TMP_InputField::set_customCaretColor(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_customCaretColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_customCaretColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionColor
UnityEngine::Color TMPro::TMP_InputField::get_selectionColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionColor
void TMPro::TMP_InputField::set_selectionColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_selectionColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onEndEdit
TMPro::TMP_InputField::SubmitEvent* TMPro::TMP_InputField::get_onEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::SubmitEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onEndEdit
void TMPro::TMP_InputField::set_onEndEdit(TMPro::TMP_InputField::SubmitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onSubmit
TMPro::TMP_InputField::SubmitEvent* TMPro::TMP_InputField::get_onSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::SubmitEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onSubmit
void TMPro::TMP_InputField::set_onSubmit(TMPro::TMP_InputField::SubmitEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onSelect
TMPro::TMP_InputField::SelectionEvent* TMPro::TMP_InputField::get_onSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::SelectionEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onSelect
void TMPro::TMP_InputField::set_onSelect(TMPro::TMP_InputField::SelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onDeselect
TMPro::TMP_InputField::SelectionEvent* TMPro::TMP_InputField::get_onDeselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::SelectionEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onDeselect
void TMPro::TMP_InputField::set_onDeselect(TMPro::TMP_InputField::SelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onDeselect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onTextSelection
TMPro::TMP_InputField::TextSelectionEvent* TMPro::TMP_InputField::get_onTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::TextSelectionEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onTextSelection
void TMPro::TMP_InputField::set_onTextSelection(TMPro::TMP_InputField::TextSelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onEndTextSelection
TMPro::TMP_InputField::TextSelectionEvent* TMPro::TMP_InputField::get_onEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::TextSelectionEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onEndTextSelection
void TMPro::TMP_InputField::set_onEndTextSelection(TMPro::TMP_InputField::TextSelectionEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onValueChanged
TMPro::TMP_InputField::OnChangeEvent* TMPro::TMP_InputField::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::OnChangeEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onValueChanged
void TMPro::TMP_InputField::set_onValueChanged(TMPro::TMP_InputField::OnChangeEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onTouchScreenKeyboardStatusChanged
TMPro::TMP_InputField::TouchScreenKeyboardEvent* TMPro::TMP_InputField::get_onTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::TouchScreenKeyboardEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onTouchScreenKeyboardStatusChanged
void TMPro::TMP_InputField::set_onTouchScreenKeyboardStatusChanged(TMPro::TMP_InputField::TouchScreenKeyboardEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onValidateInput
TMPro::TMP_InputField::OnValidateInput* TMPro::TMP_InputField::get_onValidateInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::OnValidateInput*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onValidateInput
void TMPro::TMP_InputField::set_onValidateInput(TMPro::TMP_InputField::OnValidateInput* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onValidateInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValidateInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_characterLimit
int TMPro::TMP_InputField::get_characterLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_characterLimit
void TMPro::TMP_InputField::set_characterLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_characterLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_pointSize
float TMPro::TMP_InputField::get_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_pointSize
void TMPro::TMP_InputField::set_pointSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_InputField::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_fontAsset
void TMPro::TMP_InputField::set_fontAsset(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_onFocusSelectAll
bool TMPro::TMP_InputField::get_onFocusSelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_onFocusSelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onFocusSelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_onFocusSelectAll
void TMPro::TMP_InputField::set_onFocusSelectAll(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_onFocusSelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onFocusSelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_resetOnDeActivation
bool TMPro::TMP_InputField::get_resetOnDeActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_resetOnDeActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resetOnDeActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_resetOnDeActivation
void TMPro::TMP_InputField::set_resetOnDeActivation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_resetOnDeActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resetOnDeActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_restoreOriginalTextOnEscape
bool TMPro::TMP_InputField::get_restoreOriginalTextOnEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_restoreOriginalTextOnEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_restoreOriginalTextOnEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_restoreOriginalTextOnEscape
void TMPro::TMP_InputField::set_restoreOriginalTextOnEscape(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_restoreOriginalTextOnEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_restoreOriginalTextOnEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_isRichTextEditingAllowed
bool TMPro::TMP_InputField::get_isRichTextEditingAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_isRichTextEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRichTextEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_isRichTextEditingAllowed
void TMPro::TMP_InputField::set_isRichTextEditingAllowed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_isRichTextEditingAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRichTextEditingAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_contentType
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::get_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::ContentType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_contentType
void TMPro::TMP_InputField::set_contentType(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_contentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_contentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_lineType
TMPro::TMP_InputField::LineType TMPro::TMP_InputField::get_lineType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::LineType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_lineType
void TMPro::TMP_InputField::set_lineType(TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_lineType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_lineLimit
int TMPro::TMP_InputField::get_lineLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_lineLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_lineLimit
void TMPro::TMP_InputField::set_lineLimit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_lineLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputType
TMPro::TMP_InputField::InputType TMPro::TMP_InputField::get_inputType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::InputType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_inputType
void TMPro::TMP_InputField::set_inputType(TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_inputType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_keyboardType
UnityEngine::TouchScreenKeyboardType TMPro::TMP_InputField::get_keyboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TouchScreenKeyboardType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_keyboardType
void TMPro::TMP_InputField::set_keyboardType(UnityEngine::TouchScreenKeyboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_keyboardType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_keyboardType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_characterValidation
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::get_characterValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::CharacterValidation, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_characterValidation
void TMPro::TMP_InputField::set_characterValidation(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_characterValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_inputValidator
TMPro::TMP_InputValidator* TMPro::TMP_InputField::get_inputValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_inputValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputValidator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_inputValidator
void TMPro::TMP_InputField::set_inputValidator(TMPro::TMP_InputValidator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_inputValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_readOnly
bool TMPro::TMP_InputField::get_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_readOnly
void TMPro::TMP_InputField::set_readOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_readOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_readOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_richText
bool TMPro::TMP_InputField::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_richText
void TMPro::TMP_InputField::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_multiLine
bool TMPro::TMP_InputField::get_multiLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_multiLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_asteriskChar
::Il2CppChar TMPro::TMP_InputField::get_asteriskChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_asteriskChar
void TMPro::TMP_InputField::set_asteriskChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_asteriskChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asteriskChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_wasCanceled
bool TMPro::TMP_InputField::get_wasCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_wasCanceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasCanceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretPositionInternal
int TMPro::TMP_InputField::get_caretPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretPositionInternal
void TMPro::TMP_InputField::set_caretPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringPositionInternal
int TMPro::TMP_InputField::get_stringPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_stringPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringPositionInternal
void TMPro::TMP_InputField::set_stringPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_stringPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretSelectPositionInternal
int TMPro::TMP_InputField::get_caretSelectPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretSelectPositionInternal
void TMPro::TMP_InputField::set_caretSelectPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringSelectPositionInternal
int TMPro::TMP_InputField::get_stringSelectPositionInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_stringSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringSelectPositionInternal
void TMPro::TMP_InputField::set_stringSelectPositionInternal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_stringSelectPositionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringSelectPositionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_caretPosition
int TMPro::TMP_InputField::get_caretPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_caretPosition
void TMPro::TMP_InputField::set_caretPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_caretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_caretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionAnchorPosition
int TMPro::TMP_InputField::get_selectionAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionAnchorPosition
void TMPro::TMP_InputField::set_selectionAnchorPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_selectionAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionFocusPosition
int TMPro::TMP_InputField::get_selectionFocusPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionFocusPosition
void TMPro::TMP_InputField::set_selectionFocusPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_selectionFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_stringPosition
int TMPro::TMP_InputField::get_stringPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_stringPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stringPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_stringPosition
void TMPro::TMP_InputField::set_stringPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_stringPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_stringPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionStringAnchorPosition
int TMPro::TMP_InputField::get_selectionStringAnchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_selectionStringAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionStringAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionStringAnchorPosition
void TMPro::TMP_InputField::set_selectionStringAnchorPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_selectionStringAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionStringAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_selectionStringFocusPosition
int TMPro::TMP_InputField::get_selectionStringFocusPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_selectionStringFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionStringFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_selectionStringFocusPosition
void TMPro::TMP_InputField::set_selectionStringFocusPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_selectionStringFocusPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionStringFocusPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_clipboard
::Il2CppString* TMPro::TMP_InputField::get_clipboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", "get_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.set_clipboard
void TMPro::TMP_InputField::set_clipboard(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::set_clipboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", "set_clipboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.get_minWidth
float TMPro::TMP_InputField::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_preferredWidth
float TMPro::TMP_InputField::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_flexibleWidth
float TMPro::TMP_InputField::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_minHeight
float TMPro::TMP_InputField::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_preferredHeight
float TMPro::TMP_InputField::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_flexibleHeight
float TMPro::TMP_InputField::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.get_layoutPriority
int TMPro::TMP_InputField::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* TMPro::TMP_InputField::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.isKeyboardUsingEvents
bool TMPro::TMP_InputField::isKeyboardUsingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::isKeyboardUsingEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "isKeyboardUsingEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextWithoutNotify
void TMPro::TMP_InputField::SetTextWithoutNotify(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetTextWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.SetText
void TMPro::TMP_InputField::SetText(::Il2CppString* value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value, sendCallback);
}
// Autogenerated method: TMPro.TMP_InputField.ClampStringPos
void TMPro::TMP_InputField::ClampStringPos(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ClampStringPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampStringPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(pos));
}
// Autogenerated method: TMPro.TMP_InputField.ClampCaretPos
void TMPro::TMP_InputField::ClampCaretPos(ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ClampCaretPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampCaretPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(pos));
}
// Autogenerated method: TMPro.TMP_InputField.ON_TEXT_CHANGED
void TMPro::TMP_InputField::ON_TEXT_CHANGED(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: TMPro.TMP_InputField.CaretBlink
System::Collections::IEnumerator* TMPro::TMP_InputField::CaretBlink() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CaretBlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaretBlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetCaretVisible
void TMPro::TMP_InputField::SetCaretVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetCaretVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetCaretActive
void TMPro::TMP_InputField::SetCaretActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetCaretActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCaretActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnFocus
void TMPro::TMP_InputField::OnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SelectAll
void TMPro::TMP_InputField::SelectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SelectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveTextEnd
void TMPro::TMP_InputField::MoveTextEnd(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveTextEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveTextStart
void TMPro::TMP_InputField::MoveTextStart(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveTextStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTextStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveToEndOfLine
void TMPro::TMP_InputField::MoveToEndOfLine(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveToEndOfLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToEndOfLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.MoveToStartOfLine
void TMPro::TMP_InputField::MoveToStartOfLine(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveToStartOfLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveToStartOfLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.InPlaceEditing
bool TMPro::TMP_InputField::InPlaceEditing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InPlaceEditing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InPlaceEditing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateStringPositionFromKeyboard
void TMPro::TMP_InputField::UpdateStringPositionFromKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UpdateStringPositionFromKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStringPositionFromKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.LateUpdate
void TMPro::TMP_InputField::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LateUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MayDrag
bool TMPro::TMP_InputField::MayDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnBeginDrag
void TMPro::TMP_InputField::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnDrag
void TMPro::TMP_InputField::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.MouseDragOutsideRect
System::Collections::IEnumerator* TMPro::TMP_InputField::MouseDragOutsideRect(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MouseDragOutsideRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MouseDragOutsideRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnEndDrag
void TMPro::TMP_InputField::OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.KeyPressed
TMPro::TMP_InputField::EditState TMPro::TMP_InputField::KeyPressed(UnityEngine::Event* evt) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::KeyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evt)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_InputField::EditState, false>(___instance_arg, ___internal__method, evt);
}
// Autogenerated method: TMPro.TMP_InputField.IsValidChar
bool TMPro::TMP_InputField::IsValidChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::IsValidChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_InputField.ProcessEvent
void TMPro::TMP_InputField::ProcessEvent(UnityEngine::Event* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ProcessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, e);
}
// Autogenerated method: TMPro.TMP_InputField.OnUpdateSelected
void TMPro::TMP_InputField::OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnUpdateSelected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnScroll
void TMPro::TMP_InputField::OnScroll(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnScroll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.GetSelectedString
::Il2CppString* TMPro::TMP_InputField::GetSelectedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GetSelectedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.FindNextWordBegin
int TMPro::TMP_InputField::FindNextWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::FindNextWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNextWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveRight
void TMPro::TMP_InputField::MoveRight(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.FindPrevWordBegin
int TMPro::TMP_InputField::FindPrevWordBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::FindPrevWordBegin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindPrevWordBegin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MoveLeft
void TMPro::TMP_InputField::MoveLeft(bool shift, bool ctrl) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(ctrl)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, ctrl);
}
// Autogenerated method: TMPro.TMP_InputField.LineUpCharacterPosition
int TMPro::TMP_InputField::LineUpCharacterPosition(int originalPos, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineUpCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineUpCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, originalPos, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.LineDownCharacterPosition
int TMPro::TMP_InputField::LineDownCharacterPosition(int originalPos, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineDownCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LineDownCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToLastChar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, originalPos, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.PageUpCharacterPosition
int TMPro::TMP_InputField::PageUpCharacterPosition(int originalPos, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::PageUpCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageUpCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, originalPos, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.PageDownCharacterPosition
int TMPro::TMP_InputField::PageDownCharacterPosition(int originalPos, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::PageDownCharacterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PageDownCharacterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPos), ::il2cpp_utils::ExtractType(goToLastChar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, originalPos, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.MoveDown
void TMPro::TMP_InputField::MoveDown(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveDown
void TMPro::TMP_InputField::MoveDown(bool shift, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToLastChar)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.MoveUp
void TMPro::TMP_InputField::MoveUp(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MoveUp
void TMPro::TMP_InputField::MoveUp(bool shift, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MoveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageUp
void TMPro::TMP_InputField::MovePageUp(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MovePageUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageUp
void TMPro::TMP_InputField::MovePageUp(bool shift, bool goToFirstChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MovePageUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToFirstChar)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, goToFirstChar);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageDown
void TMPro::TMP_InputField::MovePageDown(bool shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MovePageDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift);
}
// Autogenerated method: TMPro.TMP_InputField.MovePageDown
void TMPro::TMP_InputField::MovePageDown(bool shift, bool goToLastChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MovePageDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePageDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shift), ::il2cpp_utils::ExtractType(goToLastChar)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, shift, goToLastChar);
}
// Autogenerated method: TMPro.TMP_InputField.Delete
void TMPro::TMP_InputField::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.DeleteKey
void TMPro::TMP_InputField::DeleteKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::DeleteKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Backspace
void TMPro::TMP_InputField::Backspace() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Backspace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backspace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Append
void TMPro::TMP_InputField::Append(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.Append
void TMPro::TMP_InputField::Append(::Il2CppChar input) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Append");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, input);
}
// Autogenerated method: TMPro.TMP_InputField.Insert
void TMPro::TMP_InputField::Insert(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateTouchKeyboardFromEditChanges
void TMPro::TMP_InputField::UpdateTouchKeyboardFromEditChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UpdateTouchKeyboardFromEditChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTouchKeyboardFromEditChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnValueChangedAndUpdateLabel
void TMPro::TMP_InputField::SendOnValueChangedAndUpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnValueChangedAndUpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChangedAndUpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnValueChanged
void TMPro::TMP_InputField::SendOnValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnEndEdit
void TMPro::TMP_InputField::SendOnEndEdit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnEndEdit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnEndEdit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnSubmit
void TMPro::TMP_InputField::SendOnSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnSubmit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnFocus
void TMPro::TMP_InputField::SendOnFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnFocusLost
void TMPro::TMP_InputField::SendOnFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnFocusLost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnFocusLost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnTextSelection
void TMPro::TMP_InputField::SendOnTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendOnEndTextSelection
void TMPro::TMP_InputField::SendOnEndTextSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendOnEndTextSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendOnEndTextSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SendTouchScreenKeyboardStatusChanged
void TMPro::TMP_InputField::SendTouchScreenKeyboardStatusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SendTouchScreenKeyboardStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTouchScreenKeyboardStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateLabel
void TMPro::TMP_InputField::UpdateLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UpdateLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateScrollbar
void TMPro::TMP_InputField::UpdateScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UpdateScrollbar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScrollbar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnScrollbarValueChange
void TMPro::TMP_InputField::OnScrollbarValueChange(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnScrollbarValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScrollbarValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_InputField.AdjustTextPositionRelativeToViewport
void TMPro::TMP_InputField::AdjustTextPositionRelativeToViewport(float relativePosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::AdjustTextPositionRelativeToViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustTextPositionRelativeToViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(relativePosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, relativePosition);
}
// Autogenerated method: TMPro.TMP_InputField.GetCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GetCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetMinCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetMinCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GetMinCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMinCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetMaxCaretPositionFromStringIndex
int TMPro::TMP_InputField::GetMaxCaretPositionFromStringIndex(int stringIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GetMaxCaretPositionFromStringIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCaretPositionFromStringIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, stringIndex);
}
// Autogenerated method: TMPro.TMP_InputField.GetStringIndexFromCaretPosition
int TMPro::TMP_InputField::GetStringIndexFromCaretPosition(int caretPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GetStringIndexFromCaretPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringIndexFromCaretPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caretPosition)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, caretPosition);
}
// Autogenerated method: TMPro.TMP_InputField.ForceLabelUpdate
void TMPro::TMP_InputField::ForceLabelUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ForceLabelUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceLabelUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.MarkGeometryAsDirty
void TMPro::TMP_InputField::MarkGeometryAsDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::MarkGeometryAsDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkGeometryAsDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.Rebuild
void TMPro::TMP_InputField::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, update);
}
// Autogenerated method: TMPro.TMP_InputField.LayoutComplete
void TMPro::TMP_InputField::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.GraphicUpdateComplete
void TMPro::TMP_InputField::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.UpdateGeometry
void TMPro::TMP_InputField::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::UpdateGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.AssignPositioningIfNeeded
void TMPro::TMP_InputField::AssignPositioningIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::AssignPositioningIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignPositioningIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnFillVBO
void TMPro::TMP_InputField::OnFillVBO(UnityEngine::Mesh* vbo) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnFillVBO");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFillVBO", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vbo);
}
// Autogenerated method: TMPro.TMP_InputField.GenerateCaret
void TMPro::TMP_InputField::GenerateCaret(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GenerateCaret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateCaret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: TMPro.TMP_InputField.CreateCursorVerts
void TMPro::TMP_InputField::CreateCursorVerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CreateCursorVerts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCursorVerts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.GenerateHightlight
void TMPro::TMP_InputField::GenerateHightlight(UnityEngine::UI::VertexHelper* vbo, UnityEngine::Vector2 roundingOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::GenerateHightlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateHightlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vbo), ::il2cpp_utils::ExtractType(roundingOffset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vbo, roundingOffset);
}
// Autogenerated method: TMPro.TMP_InputField.AdjustRectTransformRelativeToViewport
void TMPro::TMP_InputField::AdjustRectTransformRelativeToViewport(UnityEngine::Vector2 startPosition, float height, bool isCharVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::AdjustRectTransformRelativeToViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustRectTransformRelativeToViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(isCharVisible)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startPosition, height, isCharVisible);
}
// Autogenerated method: TMPro.TMP_InputField.Validate
::Il2CppChar TMPro::TMP_InputField::Validate(::Il2CppString* text, int pos, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(ch)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method, text, pos, ch);
}
// Autogenerated method: TMPro.TMP_InputField.ActivateInputField
void TMPro::TMP_InputField::ActivateInputField() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ActivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.ActivateInputFieldInternal
void TMPro::TMP_InputField::ActivateInputFieldInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ActivateInputFieldInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateInputFieldInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnPointerClick
void TMPro::TMP_InputField::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnControlClick
void TMPro::TMP_InputField::OnControlClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnControlClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnControlClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.ReleaseSelection
void TMPro::TMP_InputField::ReleaseSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ReleaseSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.DeactivateInputField
void TMPro::TMP_InputField::DeactivateInputField(bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::DeactivateInputField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateInputField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearSelection)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, clearSelection);
}
// Autogenerated method: TMPro.TMP_InputField.OnSubmit
void TMPro::TMP_InputField::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.EnforceContentType
void TMPro::TMP_InputField::EnforceContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EnforceContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnforceContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextComponentWrapMode
void TMPro::TMP_InputField::SetTextComponentWrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetTextComponentWrapMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextComponentWrapMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetTextComponentRichTextMode
void TMPro::TMP_InputField::SetTextComponentRichTextMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetTextComponentRichTextMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextComponentRichTextMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustomIfContentTypeIsNot
void TMPro::TMP_InputField::SetToCustomIfContentTypeIsNot(::ArrayW<TMPro::TMP_InputField::ContentType> allowedContentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetToCustomIfContentTypeIsNot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustomIfContentTypeIsNot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowedContentTypes)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, allowedContentTypes);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustom
void TMPro::TMP_InputField::SetToCustom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetToCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetToCustom
void TMPro::TMP_InputField::SetToCustom(TMPro::TMP_InputField::CharacterValidation characterValidation) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetToCustom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToCustom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characterValidation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, characterValidation);
}
// Autogenerated method: TMPro.TMP_InputField.CalculateLayoutInputHorizontal
void TMPro::TMP_InputField::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.CalculateLayoutInputVertical
void TMPro::TMP_InputField::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.SetGlobalPointSize
void TMPro::TMP_InputField::SetGlobalPointSize(float pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetGlobalPointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalPointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointSize)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pointSize);
}
// Autogenerated method: TMPro.TMP_InputField.SetGlobalFontAsset
void TMPro::TMP_InputField::SetGlobalFontAsset(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::SetGlobalFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_InputField.get_hasSelection
bool TMPro::TMP_InputField::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::get_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField..cctor
void TMPro::TMP_InputField::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_InputField", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnEnable
void TMPro::TMP_InputField::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnDisable
void TMPro::TMP_InputField::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField.OnPointerDown
void TMPro::TMP_InputField::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnSelect
void TMPro::TMP_InputField::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.OnDeselect
void TMPro::TMP_InputField::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_InputField.DoStateTransition
void TMPro::TMP_InputField::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state, instant);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.ContentType
#include "TMPro/TMP_InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Standard
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Standard
void TMPro::TMP_InputField::ContentType::_set_Standard(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Autocorrected
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Autocorrected() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Autocorrected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Autocorrected"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Autocorrected
void TMPro::TMP_InputField::ContentType::_set_Autocorrected(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Autocorrected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Autocorrected", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType IntegerNumber
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_IntegerNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_IntegerNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "IntegerNumber"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType IntegerNumber
void TMPro::TMP_InputField::ContentType::_set_IntegerNumber(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_IntegerNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "IntegerNumber", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType DecimalNumber
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_DecimalNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_DecimalNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "DecimalNumber"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType DecimalNumber
void TMPro::TMP_InputField::ContentType::_set_DecimalNumber(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_DecimalNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "DecimalNumber", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Alphanumeric
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Alphanumeric
void TMPro::TMP_InputField::ContentType::_set_Alphanumeric(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Name
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Name"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Name
void TMPro::TMP_InputField::ContentType::_set_Name(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType EmailAddress
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType EmailAddress
void TMPro::TMP_InputField::ContentType::_set_EmailAddress(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Password
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Password
void TMPro::TMP_InputField::ContentType::_set_Password(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Password", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Pin
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Pin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Pin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Pin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Pin
void TMPro::TMP_InputField::ContentType::_set_Pin(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Pin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Pin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.ContentType Custom
TMPro::TMP_InputField::ContentType TMPro::TMP_InputField::ContentType::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::ContentType>("TMPro", "TMP_InputField/ContentType", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.ContentType Custom
void TMPro::TMP_InputField::ContentType::_set_Custom(TMPro::TMP_InputField::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/ContentType", "Custom", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::ContentType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::ContentType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.InputType
#include "TMPro/TMP_InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType Standard
TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_get_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "Standard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType Standard
void TMPro::TMP_InputField::InputType::_set_Standard(TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_set_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "Standard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType AutoCorrect
TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_AutoCorrect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_get_AutoCorrect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "AutoCorrect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType AutoCorrect
void TMPro::TMP_InputField::InputType::_set_AutoCorrect(TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_set_AutoCorrect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "AutoCorrect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.InputType Password
TMPro::TMP_InputField::InputType TMPro::TMP_InputField::InputType::_get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_get_Password");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::InputType>("TMPro", "TMP_InputField/InputType", "Password"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.InputType Password
void TMPro::TMP_InputField::InputType::_set_Password(TMPro::TMP_InputField::InputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::_set_Password");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/InputType", "Password", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::InputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::InputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.CharacterValidation
#include "TMPro/TMP_InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation None
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation None
void TMPro::TMP_InputField::CharacterValidation::_set_None(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Digit
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Digit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Digit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Digit"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Digit
void TMPro::TMP_InputField::CharacterValidation::_set_Digit(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Digit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Digit", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Integer
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Integer
void TMPro::TMP_InputField::CharacterValidation::_set_Integer(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Decimal
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Decimal
void TMPro::TMP_InputField::CharacterValidation::_set_Decimal(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Decimal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Alphanumeric
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Alphanumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Alphanumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Alphanumeric"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Alphanumeric
void TMPro::TMP_InputField::CharacterValidation::_set_Alphanumeric(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Alphanumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Alphanumeric", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Name
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Name"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Name
void TMPro::TMP_InputField::CharacterValidation::_set_Name(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Regex
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation Regex
void TMPro::TMP_InputField::CharacterValidation::_set_Regex(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation EmailAddress
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_EmailAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_EmailAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "EmailAddress"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation EmailAddress
void TMPro::TMP_InputField::CharacterValidation::_set_EmailAddress(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_EmailAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "EmailAddress", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation CustomValidator
TMPro::TMP_InputField::CharacterValidation TMPro::TMP_InputField::CharacterValidation::_get_CustomValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_get_CustomValidator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::CharacterValidation>("TMPro", "TMP_InputField/CharacterValidation", "CustomValidator"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.CharacterValidation CustomValidator
void TMPro::TMP_InputField::CharacterValidation::_set_CustomValidator(TMPro::TMP_InputField::CharacterValidation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::_set_CustomValidator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/CharacterValidation", "CustomValidator", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::CharacterValidation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::CharacterValidation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.LineType
#include "TMPro/TMP_InputField.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType SingleLine
TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_SingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_get_SingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "SingleLine"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType SingleLine
void TMPro::TMP_InputField::LineType::_set_SingleLine(TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_set_SingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "SingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineSubmit
TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_MultiLineSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_get_MultiLineSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "MultiLineSubmit"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineSubmit
void TMPro::TMP_InputField::LineType::_set_MultiLineSubmit(TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_set_MultiLineSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "MultiLineSubmit", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineNewline
TMPro::TMP_InputField::LineType TMPro::TMP_InputField::LineType::_get_MultiLineNewline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_get_MultiLineNewline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::LineType>("TMPro", "TMP_InputField/LineType", "MultiLineNewline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.LineType MultiLineNewline
void TMPro::TMP_InputField::LineType::_set_MultiLineNewline(TMPro::TMP_InputField::LineType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::_set_MultiLineNewline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/LineType", "MultiLineNewline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::LineType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::LineType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.OnValidateInput
#include "TMPro/TMP_InputField_OnValidateInput.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.Invoke
::Il2CppChar TMPro::TMP_InputField::OnValidateInput::Invoke(::Il2CppString* text, int charIndex, ::Il2CppChar addedChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnValidateInput::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method, text, charIndex, addedChar);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.BeginInvoke
System::IAsyncResult* TMPro::TMP_InputField::OnValidateInput::BeginInvoke(::Il2CppString* text, int charIndex, ::Il2CppChar addedChar, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnValidateInput::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(addedChar), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, text, charIndex, addedChar, callback, object);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.OnValidateInput.EndInvoke
::Il2CppChar TMPro::TMP_InputField::OnValidateInput::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::OnValidateInput::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.SubmitEvent
#include "TMPro/TMP_InputField_SubmitEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.OnChangeEvent
#include "TMPro/TMP_InputField_OnChangeEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.SelectionEvent
#include "TMPro/TMP_InputField_SelectionEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.TextSelectionEvent
#include "TMPro/TMP_InputField_TextSelectionEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.TouchScreenKeyboardEvent
#include "TMPro/TMP_InputField_TouchScreenKeyboardEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_InputField/TMPro.EditState
#include "TMPro/TMP_InputField_EditState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.EditState Continue
TMPro::TMP_InputField::EditState TMPro::TMP_InputField::EditState::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EditState::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::EditState>("TMPro", "TMP_InputField/EditState", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.EditState Continue
void TMPro::TMP_InputField::EditState::_set_Continue(TMPro::TMP_InputField::EditState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EditState::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/EditState", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_InputField/TMPro.EditState Finish
TMPro::TMP_InputField::EditState TMPro::TMP_InputField::EditState::_get_Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EditState::_get_Finish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_InputField::EditState>("TMPro", "TMP_InputField/EditState", "Finish"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_InputField/TMPro.EditState Finish
void TMPro::TMP_InputField::EditState::_set_Finish(TMPro::TMP_InputField::EditState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EditState::_set_Finish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_InputField/EditState", "Finish", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_InputField::EditState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::EditState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267
#include "TMPro/TMP_InputField_-CaretBlink-d__267.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_InputField <>4__this
TMPro::TMP_InputField*& TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_InputField::$CaretBlink$d__267::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_InputField::$CaretBlink$d__267::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267.System.IDisposable.Dispose
void TMPro::TMP_InputField::$CaretBlink$d__267::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267.MoveNext
bool TMPro::TMP_InputField::$CaretBlink$d__267::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<CaretBlink>d__267.System.Collections.IEnumerator.Reset
void TMPro::TMP_InputField::$CaretBlink$d__267::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$CaretBlink$d__267::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285
#include "TMPro/TMP_InputField_-MouseDragOutsideRect-d__285.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_InputField <>4__this
TMPro::TMP_InputField*& TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<TMPro::TMP_InputField**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.PointerEventData eventData
UnityEngine::EventSystems::PointerEventData*& TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::dyn_eventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventData"))->offset;
  return *reinterpret_cast<UnityEngine::EventSystems::PointerEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285.System.IDisposable.Dispose
void TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285.MoveNext
bool TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_InputField/TMPro.<MouseDragOutsideRect>d__285.System.Collections.IEnumerator.Reset
void TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputField::$MouseDragOutsideRect$d__285::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SetPropertyUtility
#include "TMPro/SetPropertyUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.IEquatable`1
#include "System/IEquatable_1.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.SetPropertyUtility.SetColor
bool TMPro::SetPropertyUtility::SetColor(ByRef<UnityEngine::Color> currentValue, UnityEngine::Color newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SetPropertyUtility::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "SetPropertyUtility", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(currentValue), newValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_InputValidator
#include "TMPro/TMP_InputValidator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_InputValidator.Validate
::Il2CppChar TMPro::TMP_InputValidator::Validate(ByRef<::Il2CppString*> text, ByRef<int> pos, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_InputValidator::Validate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(ch)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method, byref(text), byref(pos), ch);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager
#include "TMPro/TMP_MaterialManager.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.FallbackMaterial
#include "TMPro/TMP_MaterialManager_FallbackMaterial.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass10_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass10_0.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass12_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass12_0.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass13_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass13_0.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass14_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass14_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.MaskableGraphic
#include "UnityEngine/UI/MaskableGraphic.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<TMPro.TMP_MaterialManager/TMPro.MaskingMaterial> m_materialList
System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::MaskingMaterial*>* TMPro::TMP_MaterialManager::_get_m_materialList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_get_m_materialList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::MaskingMaterial*>*>("TMPro", "TMP_MaterialManager", "m_materialList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<TMPro.TMP_MaterialManager/TMPro.MaskingMaterial> m_materialList
void TMPro::TMP_MaterialManager::_set_m_materialList(System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::MaskingMaterial*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_set_m_materialList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MaterialManager", "m_materialList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int64,TMPro.TMP_MaterialManager/TMPro.FallbackMaterial> m_fallbackMaterials
System::Collections::Generic::Dictionary_2<int64_t, TMPro::TMP_MaterialManager::FallbackMaterial*>* TMPro::TMP_MaterialManager::_get_m_fallbackMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_get_m_fallbackMaterials");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<int64_t, TMPro::TMP_MaterialManager::FallbackMaterial*>*>("TMPro", "TMP_MaterialManager", "m_fallbackMaterials")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int64,TMPro.TMP_MaterialManager/TMPro.FallbackMaterial> m_fallbackMaterials
void TMPro::TMP_MaterialManager::_set_m_fallbackMaterials(System::Collections::Generic::Dictionary_2<int64_t, TMPro::TMP_MaterialManager::FallbackMaterial*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_set_m_fallbackMaterials");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MaterialManager", "m_fallbackMaterials", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Int64> m_fallbackMaterialLookup
System::Collections::Generic::Dictionary_2<int, int64_t>* TMPro::TMP_MaterialManager::_get_m_fallbackMaterialLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_get_m_fallbackMaterialLookup");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<int, int64_t>*>("TMPro", "TMP_MaterialManager", "m_fallbackMaterialLookup")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.Int64> m_fallbackMaterialLookup
void TMPro::TMP_MaterialManager::_set_m_fallbackMaterialLookup(System::Collections::Generic::Dictionary_2<int, int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_set_m_fallbackMaterialLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MaterialManager", "m_fallbackMaterialLookup", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<TMPro.TMP_MaterialManager/TMPro.FallbackMaterial> m_fallbackCleanupList
System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::FallbackMaterial*>* TMPro::TMP_MaterialManager::_get_m_fallbackCleanupList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_get_m_fallbackCleanupList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::FallbackMaterial*>*>("TMPro", "TMP_MaterialManager", "m_fallbackCleanupList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<TMPro.TMP_MaterialManager/TMPro.FallbackMaterial> m_fallbackCleanupList
void TMPro::TMP_MaterialManager::_set_m_fallbackCleanupList(System::Collections::Generic::List_1<TMPro::TMP_MaterialManager::FallbackMaterial*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_set_m_fallbackCleanupList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MaterialManager", "m_fallbackCleanupList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isFallbackListDirty
bool TMPro::TMP_MaterialManager::_get_isFallbackListDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_get_isFallbackListDirty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("TMPro", "TMP_MaterialManager", "isFallbackListDirty"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isFallbackListDirty
void TMPro::TMP_MaterialManager::_set_isFallbackListDirty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::_set_isFallbackListDirty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MaterialManager", "isFallbackListDirty", value));
}
// Autogenerated method: TMPro.TMP_MaterialManager..cctor
void TMPro::TMP_MaterialManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_MaterialManager.OnPreRender
void TMPro::TMP_MaterialManager::OnPreRender(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam);
}
// Autogenerated method: TMPro.TMP_MaterialManager.OnPreRenderCanvas
void TMPro::TMP_MaterialManager::OnPreRenderCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::OnPreRenderCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "OnPreRenderCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_MaterialManager.GetStencilMaterial
UnityEngine::Material* TMPro::TMP_MaterialManager::GetStencilMaterial(UnityEngine::Material* baseMaterial, int stencilID) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::GetStencilMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "GetStencilMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial), ::il2cpp_utils::ExtractType(stencilID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMaterial, stencilID);
}
// Autogenerated method: TMPro.TMP_MaterialManager.ReleaseStencilMaterial
void TMPro::TMP_MaterialManager::ReleaseStencilMaterial(UnityEngine::Material* stencilMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::ReleaseStencilMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "ReleaseStencilMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stencilMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stencilMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.GetBaseMaterial
UnityEngine::Material* TMPro::TMP_MaterialManager::GetBaseMaterial(UnityEngine::Material* stencilMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::GetBaseMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "GetBaseMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stencilMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stencilMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.SetStencil
UnityEngine::Material* TMPro::TMP_MaterialManager::SetStencil(UnityEngine::Material* material, int stencilID) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::SetStencil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "SetStencil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(stencilID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material, stencilID);
}
// Autogenerated method: TMPro.TMP_MaterialManager.AddMaskingMaterial
void TMPro::TMP_MaterialManager::AddMaskingMaterial(UnityEngine::Material* baseMaterial, UnityEngine::Material* stencilMaterial, int stencilID) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::AddMaskingMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "AddMaskingMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial), ::il2cpp_utils::ExtractType(stencilMaterial), ::il2cpp_utils::ExtractType(stencilID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMaterial, stencilMaterial, stencilID);
}
// Autogenerated method: TMPro.TMP_MaterialManager.RemoveStencilMaterial
void TMPro::TMP_MaterialManager::RemoveStencilMaterial(UnityEngine::Material* stencilMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::RemoveStencilMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "RemoveStencilMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stencilMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stencilMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.ReleaseBaseMaterial
void TMPro::TMP_MaterialManager::ReleaseBaseMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::ReleaseBaseMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "ReleaseBaseMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.ClearMaterials
void TMPro::TMP_MaterialManager::ClearMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::ClearMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "ClearMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_MaterialManager.GetStencilID
int TMPro::TMP_MaterialManager::GetStencilID(UnityEngine::GameObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::GetStencilID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "GetStencilID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMP_MaterialManager.GetMaterialForRendering
UnityEngine::Material* TMPro::TMP_MaterialManager::GetMaterialForRendering(UnityEngine::UI::MaskableGraphic* graphic, UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::GetMaterialForRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "GetMaterialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graphic), ::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graphic, baseMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.FindRootSortOverrideCanvas
UnityEngine::Transform* TMPro::TMP_MaterialManager::FindRootSortOverrideCanvas(UnityEngine::Transform* start) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FindRootSortOverrideCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "FindRootSortOverrideCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start);
}
// Autogenerated method: TMPro.TMP_MaterialManager.GetFallbackMaterial
UnityEngine::Material* TMPro::TMP_MaterialManager::GetFallbackMaterial(UnityEngine::Material* sourceMaterial, UnityEngine::Material* targetMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::GetFallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "GetFallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceMaterial), ::il2cpp_utils::ExtractType(targetMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceMaterial, targetMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.AddFallbackMaterialReference
void TMPro::TMP_MaterialManager::AddFallbackMaterialReference(UnityEngine::Material* targetMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::AddFallbackMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "AddFallbackMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.RemoveFallbackMaterialReference
void TMPro::TMP_MaterialManager::RemoveFallbackMaterialReference(UnityEngine::Material* targetMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::RemoveFallbackMaterialReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "RemoveFallbackMaterialReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.CleanupFallbackMaterials
void TMPro::TMP_MaterialManager::CleanupFallbackMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::CleanupFallbackMaterials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "CleanupFallbackMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_MaterialManager.ReleaseFallbackMaterial
void TMPro::TMP_MaterialManager::ReleaseFallbackMaterial(UnityEngine::Material* fallackMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::ReleaseFallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "ReleaseFallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fallackMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fallackMaterial);
}
// Autogenerated method: TMPro.TMP_MaterialManager.CopyMaterialPresetProperties
void TMPro::TMP_MaterialManager::CopyMaterialPresetProperties(UnityEngine::Material* source, UnityEngine::Material* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::CopyMaterialPresetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MaterialManager", "CopyMaterialPresetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, destination);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.FallbackMaterial
#include "TMPro/TMP_MaterialManager_FallbackMaterial.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 baseID
int& TMPro::TMP_MaterialManager::FallbackMaterial::dyn_baseID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FallbackMaterial::dyn_baseID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material baseMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::FallbackMaterial::dyn_baseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FallbackMaterial::dyn_baseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int64 fallbackID
int64_t& TMPro::TMP_MaterialManager::FallbackMaterial::dyn_fallbackID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FallbackMaterial::dyn_fallbackID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material fallbackMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::FallbackMaterial::dyn_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FallbackMaterial::dyn_fallbackMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
int& TMPro::TMP_MaterialManager::FallbackMaterial::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::FallbackMaterial::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material baseMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::MaskingMaterial::dyn_baseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::MaskingMaterial::dyn_baseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material stencilMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::MaskingMaterial::dyn_stencilMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::MaskingMaterial::dyn_stencilMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
int& TMPro::TMP_MaterialManager::MaskingMaterial::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::MaskingMaterial::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 stencilID
int& TMPro::TMP_MaterialManager::MaskingMaterial::dyn_stencilID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::MaskingMaterial::dyn_stencilID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass10_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass10_0.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material stencilMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::$$c__DisplayClass10_0::dyn_stencilMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass10_0::dyn_stencilMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass10_0.<GetBaseMaterial>b__0
bool TMPro::TMP_MaterialManager::$$c__DisplayClass10_0::$GetBaseMaterial$b__0(TMPro::TMP_MaterialManager::MaskingMaterial* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass10_0::<GetBaseMaterial>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetBaseMaterial>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass12_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass12_0.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material stencilMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::$$c__DisplayClass12_0::dyn_stencilMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass12_0::dyn_stencilMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass12_0.<AddMaskingMaterial>b__0
bool TMPro::TMP_MaterialManager::$$c__DisplayClass12_0::$AddMaskingMaterial$b__0(TMPro::TMP_MaterialManager::MaskingMaterial* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass12_0::<AddMaskingMaterial>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddMaskingMaterial>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass13_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material stencilMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::$$c__DisplayClass13_0::dyn_stencilMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass13_0::dyn_stencilMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stencilMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass13_0.<RemoveStencilMaterial>b__0
bool TMPro::TMP_MaterialManager::$$c__DisplayClass13_0::$RemoveStencilMaterial$b__0(TMPro::TMP_MaterialManager::MaskingMaterial* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass13_0::<RemoveStencilMaterial>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RemoveStencilMaterial>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass14_0
#include "TMPro/TMP_MaterialManager_--c__DisplayClass14_0.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_MaterialManager/TMPro.MaskingMaterial
#include "TMPro/TMP_MaterialManager_MaskingMaterial.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material baseMaterial
UnityEngine::Material*& TMPro::TMP_MaterialManager::$$c__DisplayClass14_0::dyn_baseMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass14_0::dyn_baseMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_MaterialManager/TMPro.<>c__DisplayClass14_0.<ReleaseBaseMaterial>b__0
bool TMPro::TMP_MaterialManager::$$c__DisplayClass14_0::$ReleaseBaseMaterial$b__0(TMPro::TMP_MaterialManager::MaskingMaterial* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MaterialManager::$$c__DisplayClass14_0::<ReleaseBaseMaterial>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ReleaseBaseMaterial>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.VertexSortingOrder
#include "TMPro/VertexSortingOrder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.VertexSortingOrder Normal
TMPro::VertexSortingOrder TMPro::VertexSortingOrder::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::VertexSortingOrder::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::VertexSortingOrder>("TMPro", "VertexSortingOrder", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VertexSortingOrder Normal
void TMPro::VertexSortingOrder::_set_Normal(TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::VertexSortingOrder::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VertexSortingOrder", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.VertexSortingOrder Reverse
TMPro::VertexSortingOrder TMPro::VertexSortingOrder::_get_Reverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::VertexSortingOrder::_get_Reverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::VertexSortingOrder>("TMPro", "VertexSortingOrder", "Reverse"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.VertexSortingOrder Reverse
void TMPro::VertexSortingOrder::_set_Reverse(TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::VertexSortingOrder::_set_Reverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "VertexSortingOrder", "Reverse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::VertexSortingOrder::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::VertexSortingOrder::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_MeshInfo
#include "TMPro/TMP_MeshInfo.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.VertexSortingOrder
#include "TMPro/VertexSortingOrder.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color32 s_DefaultColor
UnityEngine::Color32 TMPro::TMP_MeshInfo::_get_s_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("TMPro", "TMP_MeshInfo", "s_DefaultColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color32 s_DefaultColor
void TMPro::TMP_MeshInfo::_set_s_DefaultColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultColor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
UnityEngine::Vector3 TMPro::TMP_MeshInfo::_get_s_DefaultNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("TMPro", "TMP_MeshInfo", "s_DefaultNormal"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
void TMPro::TMP_MeshInfo::_set_s_DefaultNormal(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultNormal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
UnityEngine::Vector4 TMPro::TMP_MeshInfo::_get_s_DefaultTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("TMPro", "TMP_MeshInfo", "s_DefaultTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
void TMPro::TMP_MeshInfo::_set_s_DefaultTangent(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultTangent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds s_DefaultBounds
UnityEngine::Bounds TMPro::TMP_MeshInfo::_get_s_DefaultBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bounds>("TMPro", "TMP_MeshInfo", "s_DefaultBounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds s_DefaultBounds
void TMPro::TMP_MeshInfo::_set_s_DefaultBounds(UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
UnityEngine::Mesh*& TMPro::TMP_MeshInfo::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_mesh");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 vertexCount
int& TMPro::TMP_MeshInfo::dyn_vertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_vertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertexCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] vertices
::ArrayW<UnityEngine::Vector3>& TMPro::TMP_MeshInfo::dyn_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_vertices");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertices"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] normals
::ArrayW<UnityEngine::Vector3>& TMPro::TMP_MeshInfo::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_normals");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4[] tangents
::ArrayW<UnityEngine::Vector4>& TMPro::TMP_MeshInfo::dyn_tangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_tangents");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tangents"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] uvs0
::ArrayW<UnityEngine::Vector2>& TMPro::TMP_MeshInfo::dyn_uvs0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_uvs0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uvs0"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2[] uvs2
::ArrayW<UnityEngine::Vector2>& TMPro::TMP_MeshInfo::dyn_uvs2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_uvs2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uvs2"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color32[] colors32
::ArrayW<UnityEngine::Color32>& TMPro::TMP_MeshInfo::dyn_colors32() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_colors32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colors32"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] triangles
::ArrayW<int>& TMPro::TMP_MeshInfo::dyn_triangles() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::dyn_triangles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triangles"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_MeshInfo..ctor
TMPro::TMP_MeshInfo::TMP_MeshInfo(UnityEngine::Mesh* mesh, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, mesh, size);
}
// Autogenerated method: TMPro.TMP_MeshInfo..ctor
TMPro::TMP_MeshInfo::TMP_MeshInfo(UnityEngine::Mesh* mesh, int size, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, mesh, size, isVolumetric);
}
// Autogenerated method: TMPro.TMP_MeshInfo..cctor
void TMPro::TMP_MeshInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MeshInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ResizeMeshInfo
void TMPro::TMP_MeshInfo::ResizeMeshInfo(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ResizeMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResizeMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ResizeMeshInfo
void TMPro::TMP_MeshInfo::ResizeMeshInfo(int size, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ResizeMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResizeMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, size, isVolumetric);
}
// Autogenerated method: TMPro.TMP_MeshInfo.Clear
void TMPro::TMP_MeshInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_MeshInfo.Clear
void TMPro::TMP_MeshInfo::Clear(bool uploadChanges) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadChanges)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, uploadChanges);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, startIndex);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices(int startIndex, bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, startIndex, updateMesh);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SortGeometry
void TMPro::TMP_MeshInfo::SortGeometry(TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SortGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SortGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SortGeometry
void TMPro::TMP_MeshInfo::SortGeometry(System::Collections::Generic::IList_1<int>* sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SortGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SortGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sortingOrder);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SwapVertexData
void TMPro::TMP_MeshInfo::SwapVertexData(int src, int dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SwapVertexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, src, dst);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontStyleStack
#include "TMPro/TMP_FontStyleStack.hpp"
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte bold
uint8_t& TMPro::TMP_FontStyleStack::dyn_bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_bold");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bold"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte italic
uint8_t& TMPro::TMP_FontStyleStack::dyn_italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_italic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "italic"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte underline
uint8_t& TMPro::TMP_FontStyleStack::dyn_underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_underline");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "underline"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte strikethrough
uint8_t& TMPro::TMP_FontStyleStack::dyn_strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_strikethrough");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strikethrough"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte highlight
uint8_t& TMPro::TMP_FontStyleStack::dyn_highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_highlight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highlight"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte superscript
uint8_t& TMPro::TMP_FontStyleStack::dyn_superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_superscript");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "superscript"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte subscript
uint8_t& TMPro::TMP_FontStyleStack::dyn_subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_subscript");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscript"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte uppercase
uint8_t& TMPro::TMP_FontStyleStack::dyn_uppercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_uppercase");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uppercase"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte lowercase
uint8_t& TMPro::TMP_FontStyleStack::dyn_lowercase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_lowercase");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lowercase"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte smallcaps
uint8_t& TMPro::TMP_FontStyleStack::dyn_smallcaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::dyn_smallcaps");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "smallcaps"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Clear
void TMPro::TMP_FontStyleStack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Add
uint8_t TMPro::TMP_FontStyleStack::Add(TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, style);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Remove
uint8_t TMPro::TMP_FontStyleStack::Remove(TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.RichTextTag
#include "TMPro/RichTextTag.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BOLD
TMPro::RichTextTag TMPro::RichTextTag::_get_BOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BOLD"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BOLD
void TMPro::RichTextTag::_set_BOLD(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BOLD", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_BOLD
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_BOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_BOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_BOLD"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_BOLD
void TMPro::RichTextTag::_set_SLASH_BOLD(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_BOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_BOLD", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ITALIC
TMPro::RichTextTag TMPro::RichTextTag::_get_ITALIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ITALIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ITALIC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ITALIC
void TMPro::RichTextTag::_set_ITALIC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ITALIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ITALIC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_ITALIC
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_ITALIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_ITALIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_ITALIC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_ITALIC
void TMPro::RichTextTag::_set_SLASH_ITALIC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_ITALIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_ITALIC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag UNDERLINE
TMPro::RichTextTag TMPro::RichTextTag::_get_UNDERLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_UNDERLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "UNDERLINE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag UNDERLINE
void TMPro::RichTextTag::_set_UNDERLINE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_UNDERLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "UNDERLINE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_UNDERLINE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_UNDERLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_UNDERLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_UNDERLINE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_UNDERLINE
void TMPro::RichTextTag::_set_SLASH_UNDERLINE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_UNDERLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_UNDERLINE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag STRIKETHROUGH
TMPro::RichTextTag TMPro::RichTextTag::_get_STRIKETHROUGH() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_STRIKETHROUGH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "STRIKETHROUGH"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag STRIKETHROUGH
void TMPro::RichTextTag::_set_STRIKETHROUGH(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_STRIKETHROUGH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "STRIKETHROUGH", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_STRIKETHROUGH
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_STRIKETHROUGH() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_STRIKETHROUGH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_STRIKETHROUGH"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_STRIKETHROUGH
void TMPro::RichTextTag::_set_SLASH_STRIKETHROUGH(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_STRIKETHROUGH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_STRIKETHROUGH", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag COLOR
TMPro::RichTextTag TMPro::RichTextTag::_get_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "COLOR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag COLOR
void TMPro::RichTextTag::_set_COLOR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_COLOR
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_COLOR
void TMPro::RichTextTag::_set_SLASH_COLOR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SIZE
TMPro::RichTextTag TMPro::RichTextTag::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SIZE
void TMPro::RichTextTag::_set_SIZE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_SIZE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_SIZE
void TMPro::RichTextTag::_set_SLASH_SIZE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SPRITE
TMPro::RichTextTag TMPro::RichTextTag::_get_SPRITE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SPRITE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SPRITE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SPRITE
void TMPro::RichTextTag::_set_SPRITE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SPRITE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SPRITE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BR
TMPro::RichTextTag TMPro::RichTextTag::_get_BR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BR
void TMPro::RichTextTag::_set_BR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag STYLE
TMPro::RichTextTag TMPro::RichTextTag::_get_STYLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_STYLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "STYLE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag STYLE
void TMPro::RichTextTag::_set_STYLE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_STYLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "STYLE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_STYLE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_STYLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_STYLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_STYLE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_STYLE
void TMPro::RichTextTag::_set_SLASH_STYLE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_STYLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_STYLE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FONT
TMPro::RichTextTag TMPro::RichTextTag::_get_FONT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FONT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FONT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FONT
void TMPro::RichTextTag::_set_FONT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FONT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FONT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FONT
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FONT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FONT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FONT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FONT
void TMPro::RichTextTag::_set_SLASH_FONT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FONT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FONT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag LINK
TMPro::RichTextTag TMPro::RichTextTag::_get_LINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_LINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "LINK"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag LINK
void TMPro::RichTextTag::_set_LINK(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_LINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "LINK", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_LINK
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_LINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_LINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_LINK"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_LINK
void TMPro::RichTextTag::_set_SLASH_LINK(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_LINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_LINK", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FONT_WEIGHT
TMPro::RichTextTag TMPro::RichTextTag::_get_FONT_WEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FONT_WEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FONT_WEIGHT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FONT_WEIGHT
void TMPro::RichTextTag::_set_FONT_WEIGHT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FONT_WEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FONT_WEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FONT_WEIGHT
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FONT_WEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FONT_WEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FONT_WEIGHT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FONT_WEIGHT
void TMPro::RichTextTag::_set_SLASH_FONT_WEIGHT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FONT_WEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FONT_WEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag LIGA
TMPro::RichTextTag TMPro::RichTextTag::_get_LIGA() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_LIGA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "LIGA"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag LIGA
void TMPro::RichTextTag::_set_LIGA(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_LIGA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "LIGA", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_LIGA
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_LIGA() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_LIGA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_LIGA"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_LIGA
void TMPro::RichTextTag::_set_SLASH_LIGA(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_LIGA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_LIGA", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FRAC
TMPro::RichTextTag TMPro::RichTextTag::_get_FRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FRAC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FRAC
void TMPro::RichTextTag::_set_FRAC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FRAC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FRAC
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FRAC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FRAC
void TMPro::RichTextTag::_set_SLASH_FRAC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FRAC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag NAME
TMPro::RichTextTag TMPro::RichTextTag::_get_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "NAME"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag NAME
void TMPro::RichTextTag::_set_NAME(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "NAME", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag INDEX
TMPro::RichTextTag TMPro::RichTextTag::_get_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "INDEX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag INDEX
void TMPro::RichTextTag::_set_INDEX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "INDEX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag TINT
TMPro::RichTextTag TMPro::RichTextTag::_get_TINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_TINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "TINT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag TINT
void TMPro::RichTextTag::_set_TINT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_TINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "TINT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ANIM
TMPro::RichTextTag TMPro::RichTextTag::_get_ANIM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ANIM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ANIM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ANIM
void TMPro::RichTextTag::_set_ANIM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ANIM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ANIM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MATERIAL
TMPro::RichTextTag TMPro::RichTextTag::_get_MATERIAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MATERIAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MATERIAL"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MATERIAL
void TMPro::RichTextTag::_set_MATERIAL(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MATERIAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MATERIAL", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag RED
TMPro::RichTextTag TMPro::RichTextTag::_get_RED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_RED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "RED"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag RED
void TMPro::RichTextTag::_set_RED(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_RED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "RED", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag GREEN
TMPro::RichTextTag TMPro::RichTextTag::_get_GREEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_GREEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "GREEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag GREEN
void TMPro::RichTextTag::_set_GREEN(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_GREEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "GREEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BLUE
TMPro::RichTextTag TMPro::RichTextTag::_get_BLUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BLUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BLUE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BLUE
void TMPro::RichTextTag::_set_BLUE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BLUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BLUE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag YELLOW
TMPro::RichTextTag TMPro::RichTextTag::_get_YELLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_YELLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "YELLOW"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag YELLOW
void TMPro::RichTextTag::_set_YELLOW(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_YELLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "YELLOW", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ORANGE
TMPro::RichTextTag TMPro::RichTextTag::_get_ORANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ORANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ORANGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ORANGE
void TMPro::RichTextTag::_set_ORANGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ORANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ORANGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS
void TMPro::RichTextTag::_set_PLUS(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS
void TMPro::RichTextTag::_set_MINUS(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PX
TMPro::RichTextTag TMPro::RichTextTag::_get_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PX
void TMPro::RichTextTag::_set_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PX
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PX
void TMPro::RichTextTag::_set_PLUS_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PX
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PX
void TMPro::RichTextTag::_set_MINUS_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag EM
TMPro::RichTextTag TMPro::RichTextTag::_get_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag EM
void TMPro::RichTextTag::_set_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_EM
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_EM
void TMPro::RichTextTag::_set_PLUS_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_EM
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_EM
void TMPro::RichTextTag::_set_MINUS_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PCT
void TMPro::RichTextTag::_set_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PCT
void TMPro::RichTextTag::_set_PLUS_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PCT
void TMPro::RichTextTag::_set_MINUS_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PERCENTAGE
void TMPro::RichTextTag::_set_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PERCENTAGE
void TMPro::RichTextTag::_set_PLUS_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PERCENTAGE
void TMPro::RichTextTag::_set_MINUS_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag TRUE
TMPro::RichTextTag TMPro::RichTextTag::_get_TRUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_TRUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "TRUE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag TRUE
void TMPro::RichTextTag::_set_TRUE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_TRUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "TRUE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FALSE
TMPro::RichTextTag TMPro::RichTextTag::_get_FALSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FALSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FALSE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FALSE
void TMPro::RichTextTag::_set_FALSE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FALSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FALSE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag DEFAULT
TMPro::RichTextTag TMPro::RichTextTag::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag DEFAULT
void TMPro::RichTextTag::_set_DEFAULT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "DEFAULT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& TMPro::RichTextTag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TagValueType
#include "TMPro/TagValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType None
TMPro::TagValueType TMPro::TagValueType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType None
void TMPro::TagValueType::_set_None(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType NumericalValue
TMPro::TagValueType TMPro::TagValueType::_get_NumericalValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_NumericalValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "NumericalValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType NumericalValue
void TMPro::TagValueType::_set_NumericalValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_NumericalValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "NumericalValue", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType StringValue
TMPro::TagValueType TMPro::TagValueType::_get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_StringValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "StringValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType StringValue
void TMPro::TagValueType::_set_StringValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_StringValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "StringValue", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType ColorValue
TMPro::TagValueType TMPro::TagValueType::_get_ColorValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_ColorValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "ColorValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType ColorValue
void TMPro::TagValueType::_set_ColorValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_ColorValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "ColorValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TagValueType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TagUnitType
#include "TMPro/TagUnitType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType Pixels
TMPro::TagUnitType TMPro::TagUnitType::_get_Pixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_Pixels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "Pixels"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType Pixels
void TMPro::TagUnitType::_set_Pixels(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_Pixels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "Pixels", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType FontUnits
TMPro::TagUnitType TMPro::TagUnitType::_get_FontUnits() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_FontUnits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "FontUnits"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType FontUnits
void TMPro::TagUnitType::_set_FontUnits(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_FontUnits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "FontUnits", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType Percentage
TMPro::TagUnitType TMPro::TagUnitType::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType Percentage
void TMPro::TagUnitType::_set_Percentage(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "Percentage", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TagUnitType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.UnicodeCharacter
#include "TMPro/UnicodeCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter HYPHEN_MINUS
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_HYPHEN_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_HYPHEN_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "HYPHEN_MINUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter HYPHEN_MINUS
void TMPro::UnicodeCharacter::_set_HYPHEN_MINUS(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_HYPHEN_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "HYPHEN_MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter SOFT_HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_SOFT_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_SOFT_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "SOFT_HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter SOFT_HYPHEN
void TMPro::UnicodeCharacter::_set_SOFT_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_SOFT_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "SOFT_HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter HYPHEN
void TMPro::UnicodeCharacter::_set_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter NON_BREAKING_HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_NON_BREAKING_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_NON_BREAKING_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "NON_BREAKING_HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter NON_BREAKING_HYPHEN
void TMPro::UnicodeCharacter::_set_NON_BREAKING_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_NON_BREAKING_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "NON_BREAKING_HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter ZERO_WIDTH_SPACE
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_ZERO_WIDTH_SPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_ZERO_WIDTH_SPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "ZERO_WIDTH_SPACE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter ZERO_WIDTH_SPACE
void TMPro::UnicodeCharacter::_set_ZERO_WIDTH_SPACE(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_ZERO_WIDTH_SPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "ZERO_WIDTH_SPACE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter RIGHT_SINGLE_QUOTATION
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_RIGHT_SINGLE_QUOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_RIGHT_SINGLE_QUOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "RIGHT_SINGLE_QUOTATION"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter RIGHT_SINGLE_QUOTATION
void TMPro::UnicodeCharacter::_set_RIGHT_SINGLE_QUOTATION(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_RIGHT_SINGLE_QUOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "RIGHT_SINGLE_QUOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter APOSTROPHE
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_APOSTROPHE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_APOSTROPHE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "APOSTROPHE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter APOSTROPHE
void TMPro::UnicodeCharacter::_set_APOSTROPHE(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_APOSTROPHE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "APOSTROPHE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter WORD_JOINER
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_WORD_JOINER() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_WORD_JOINER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "WORD_JOINER"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter WORD_JOINER
void TMPro::UnicodeCharacter::_set_WORD_JOINER(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_WORD_JOINER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "WORD_JOINER", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 value__
uint& TMPro::UnicodeCharacter::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_ScrollbarEventHandler
#include "TMPro/TMP_ScrollbarEventHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isSelected
bool& TMPro::TMP_ScrollbarEventHandler::dyn_isSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::dyn_isSelected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isSelected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnPointerClick
void TMPro::TMP_ScrollbarEventHandler::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnSelect
void TMPro::TMP_ScrollbarEventHandler::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnDeselect
void TMPro::TMP_ScrollbarEventHandler::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SelectionCaret
#include "TMPro/TMP_SelectionCaret.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SelectionCaret.Cull
void TMPro::TMP_SelectionCaret::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SelectionCaret::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, clipRect, validRect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Settings
#include "TMPro/TMP_Settings.hpp"
// Including type: TMPro.TMP_Settings/TMPro.LineBreakingTable
#include "TMPro/TMP_Settings_LineBreakingTable.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_Settings s_Instance
TMPro::TMP_Settings* TMPro::TMP_Settings::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Settings*>("TMPro", "TMP_Settings", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_Settings s_Instance
void TMPro::TMP_Settings::_set_s_Instance(TMPro::TMP_Settings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Settings", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableWordWrapping
bool& TMPro::TMP_Settings::dyn_m_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableWordWrapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableWordWrapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableKerning
bool& TMPro::TMP_Settings::dyn_m_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableKerning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableKerning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableExtraPadding
bool& TMPro::TMP_Settings::dyn_m_enableExtraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableExtraPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableExtraPadding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableTintAllSprites
bool& TMPro::TMP_Settings::dyn_m_enableTintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableTintAllSprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableTintAllSprites"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableParseEscapeCharacters
bool& TMPro::TMP_Settings::dyn_m_enableParseEscapeCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableParseEscapeCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableParseEscapeCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_EnableRaycastTarget
bool& TMPro::TMP_Settings::dyn_m_EnableRaycastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_EnableRaycastTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_EnableRaycastTarget"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_GetFontFeaturesAtRuntime
bool& TMPro::TMP_Settings::dyn_m_GetFontFeaturesAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_GetFontFeaturesAtRuntime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GetFontFeaturesAtRuntime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_missingGlyphCharacter
int& TMPro::TMP_Settings::dyn_m_missingGlyphCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_missingGlyphCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_missingGlyphCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_warningsDisabled
bool& TMPro::TMP_Settings::dyn_m_warningsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_warningsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_warningsDisabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontAsset m_defaultFontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_Settings::dyn_m_defaultFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultFontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultFontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_defaultFontAssetPath
::Il2CppString*& TMPro::TMP_Settings::dyn_m_defaultFontAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultFontAssetPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultFontAssetPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_defaultFontSize
float& TMPro::TMP_Settings::dyn_m_defaultFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_defaultAutoSizeMinRatio
float& TMPro::TMP_Settings::dyn_m_defaultAutoSizeMinRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultAutoSizeMinRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultAutoSizeMinRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_defaultAutoSizeMaxRatio
float& TMPro::TMP_Settings::dyn_m_defaultAutoSizeMaxRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultAutoSizeMaxRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultAutoSizeMaxRatio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_defaultTextMeshProTextContainerSize
UnityEngine::Vector2& TMPro::TMP_Settings::dyn_m_defaultTextMeshProTextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultTextMeshProTextContainerSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultTextMeshProTextContainerSize"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 m_defaultTextMeshProUITextContainerSize
UnityEngine::Vector2& TMPro::TMP_Settings::dyn_m_defaultTextMeshProUITextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultTextMeshProUITextContainerSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultTextMeshProUITextContainerSize"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_autoSizeTextContainer
bool& TMPro::TMP_Settings::dyn_m_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_autoSizeTextContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoSizeTextContainer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_FontAsset> m_fallbackFontAssets
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*& TMPro::TMP_Settings::dyn_m_fallbackFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_fallbackFontAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackFontAssets"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_matchMaterialPreset
bool& TMPro::TMP_Settings::dyn_m_matchMaterialPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_matchMaterialPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_matchMaterialPreset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SpriteAsset m_defaultSpriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_Settings::dyn_m_defaultSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultSpriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultSpriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_defaultSpriteAssetPath
::Il2CppString*& TMPro::TMP_Settings::dyn_m_defaultSpriteAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultSpriteAssetPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultSpriteAssetPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_defaultColorGradientPresetsPath
::Il2CppString*& TMPro::TMP_Settings::dyn_m_defaultColorGradientPresetsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultColorGradientPresetsPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultColorGradientPresetsPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_enableEmojiSupport
bool& TMPro::TMP_Settings::dyn_m_enableEmojiSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_enableEmojiSupport");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableEmojiSupport"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_StyleSheet m_defaultStyleSheet
TMPro::TMP_StyleSheet*& TMPro::TMP_Settings::dyn_m_defaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_defaultStyleSheet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultStyleSheet"))->offset;
  return *reinterpret_cast<TMPro::TMP_StyleSheet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset m_leadingCharacters
UnityEngine::TextAsset*& TMPro::TMP_Settings::dyn_m_leadingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_leadingCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leadingCharacters"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset m_followingCharacters
UnityEngine::TextAsset*& TMPro::TMP_Settings::dyn_m_followingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_followingCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_followingCharacters"))->offset;
  return *reinterpret_cast<UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Settings/TMPro.LineBreakingTable m_linebreakingRules
TMPro::TMP_Settings::LineBreakingTable*& TMPro::TMP_Settings::dyn_m_linebreakingRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::dyn_m_linebreakingRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_linebreakingRules"))->offset;
  return *reinterpret_cast<TMPro::TMP_Settings::LineBreakingTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Settings.get_version
::Il2CppString* TMPro::TMP_Settings::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableWordWrapping
bool TMPro::TMP_Settings::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableKerning
bool TMPro::TMP_Settings::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableExtraPadding
bool TMPro::TMP_Settings::get_enableExtraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableExtraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableExtraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableTintAllSprites
bool TMPro::TMP_Settings::get_enableTintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableTintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableTintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableParseEscapeCharacters
bool TMPro::TMP_Settings::get_enableParseEscapeCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableParseEscapeCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableParseEscapeCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableRaycastTarget
bool TMPro::TMP_Settings::get_enableRaycastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableRaycastTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableRaycastTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_getFontFeaturesAtRuntime
bool TMPro::TMP_Settings::get_getFontFeaturesAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_getFontFeaturesAtRuntime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_getFontFeaturesAtRuntime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_missingGlyphCharacter
int TMPro::TMP_Settings::get_missingGlyphCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_missingGlyphCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_missingGlyphCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.set_missingGlyphCharacter
void TMPro::TMP_Settings::set_missingGlyphCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::set_missingGlyphCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "set_missingGlyphCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Settings.get_warningsDisabled
bool TMPro::TMP_Settings::get_warningsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_warningsDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_warningsDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_Settings::get_defaultFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontAssetPath
::Il2CppString* TMPro::TMP_Settings::get_defaultFontAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontSize
float TMPro::TMP_Settings::get_defaultFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextAutoSizingMinRatio
float TMPro::TMP_Settings::get_defaultTextAutoSizingMinRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextAutoSizingMinRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextAutoSizingMinRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextAutoSizingMaxRatio
float TMPro::TMP_Settings::get_defaultTextAutoSizingMaxRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextAutoSizingMaxRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextAutoSizingMaxRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextMeshProTextContainerSize
UnityEngine::Vector2 TMPro::TMP_Settings::get_defaultTextMeshProTextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextMeshProTextContainerSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextMeshProTextContainerSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextMeshProUITextContainerSize
UnityEngine::Vector2 TMPro::TMP_Settings::get_defaultTextMeshProUITextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextMeshProUITextContainerSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextMeshProUITextContainerSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_autoSizeTextContainer
bool TMPro::TMP_Settings::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_fallbackFontAssets
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* TMPro::TMP_Settings::get_fallbackFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_fallbackFontAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_fallbackFontAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_matchMaterialPreset
bool TMPro::TMP_Settings::get_matchMaterialPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_matchMaterialPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_matchMaterialPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultSpriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Settings::get_defaultSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultSpriteAssetPath
::Il2CppString* TMPro::TMP_Settings::get_defaultSpriteAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultSpriteAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultSpriteAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultColorGradientPresetsPath
::Il2CppString* TMPro::TMP_Settings::get_defaultColorGradientPresetsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultColorGradientPresetsPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultColorGradientPresetsPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableEmojiSupport
bool TMPro::TMP_Settings::get_enableEmojiSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableEmojiSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableEmojiSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.set_enableEmojiSupport
void TMPro::TMP_Settings::set_enableEmojiSupport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::set_enableEmojiSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "set_enableEmojiSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_Settings::get_defaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_leadingCharacters
UnityEngine::TextAsset* TMPro::TMP_Settings::get_leadingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_leadingCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_leadingCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_followingCharacters
UnityEngine::TextAsset* TMPro::TMP_Settings::get_followingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_followingCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_followingCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_linebreakingRules
TMPro::TMP_Settings::LineBreakingTable* TMPro::TMP_Settings::get_linebreakingRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_linebreakingRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_linebreakingRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings::LineBreakingTable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_instance
TMPro::TMP_Settings* TMPro::TMP_Settings::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.LoadDefaultSettings
TMPro::TMP_Settings* TMPro::TMP_Settings::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetSettings
TMPro::TMP_Settings* TMPro::TMP_Settings::GetSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_Settings::GetFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetSpriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Settings::GetSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_Settings::GetStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.LoadLinebreakingRules
void TMPro::TMP_Settings::LoadLinebreakingRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LoadLinebreakingRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "LoadLinebreakingRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetCharacters
System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>* TMPro::TMP_Settings::GetCharacters(UnityEngine::TextAsset* file) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(file)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, file);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Settings/TMPro.LineBreakingTable
#include "TMPro/TMP_Settings_LineBreakingTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Char> leadingCharacters
System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>*& TMPro::TMP_Settings::LineBreakingTable::dyn_leadingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LineBreakingTable::dyn_leadingCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leadingCharacters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,System.Char> followingCharacters
System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>*& TMPro::TMP_Settings::LineBreakingTable::dyn_followingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LineBreakingTable::dyn_followingCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "followingCharacters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.ShaderUtilities
#include "TMPro/ShaderUtilities.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MainTex
int TMPro::ShaderUtilities::_get_ID_MainTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MainTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MainTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MainTex
void TMPro::ShaderUtilities::_set_ID_MainTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MainTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MainTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceTex
int TMPro::ShaderUtilities::_get_ID_FaceTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceTex
void TMPro::ShaderUtilities::_set_ID_FaceTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceColor
int TMPro::ShaderUtilities::_get_ID_FaceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceColor
void TMPro::ShaderUtilities::_set_ID_FaceColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceDilate
int TMPro::ShaderUtilities::_get_ID_FaceDilate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceDilate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceDilate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceDilate
void TMPro::ShaderUtilities::_set_ID_FaceDilate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceDilate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceDilate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Shininess
int TMPro::ShaderUtilities::_get_ID_Shininess() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Shininess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Shininess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Shininess
void TMPro::ShaderUtilities::_set_ID_Shininess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Shininess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Shininess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayColor
int TMPro::ShaderUtilities::_get_ID_UnderlayColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayColor
void TMPro::ShaderUtilities::_set_ID_UnderlayColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayOffsetX
int TMPro::ShaderUtilities::_get_ID_UnderlayOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayOffsetX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayOffsetX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayOffsetX
void TMPro::ShaderUtilities::_set_ID_UnderlayOffsetX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayOffsetX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayOffsetX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayOffsetY
int TMPro::ShaderUtilities::_get_ID_UnderlayOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayOffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayOffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayOffsetY
void TMPro::ShaderUtilities::_set_ID_UnderlayOffsetY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayOffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayOffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayDilate
int TMPro::ShaderUtilities::_get_ID_UnderlayDilate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayDilate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayDilate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayDilate
void TMPro::ShaderUtilities::_set_ID_UnderlayDilate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayDilate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayDilate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlaySoftness
int TMPro::ShaderUtilities::_get_ID_UnderlaySoftness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlaySoftness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlaySoftness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlaySoftness
void TMPro::ShaderUtilities::_set_ID_UnderlaySoftness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlaySoftness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlaySoftness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_WeightNormal
int TMPro::ShaderUtilities::_get_ID_WeightNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_WeightNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_WeightNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_WeightNormal
void TMPro::ShaderUtilities::_set_ID_WeightNormal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_WeightNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_WeightNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_WeightBold
int TMPro::ShaderUtilities::_get_ID_WeightBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_WeightBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_WeightBold"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_WeightBold
void TMPro::ShaderUtilities::_set_ID_WeightBold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_WeightBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_WeightBold", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineTex
int TMPro::ShaderUtilities::_get_ID_OutlineTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineTex
void TMPro::ShaderUtilities::_set_ID_OutlineTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineWidth
int TMPro::ShaderUtilities::_get_ID_OutlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineWidth
void TMPro::ShaderUtilities::_set_ID_OutlineWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineSoftness
int TMPro::ShaderUtilities::_get_ID_OutlineSoftness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineSoftness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineSoftness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineSoftness
void TMPro::ShaderUtilities::_set_ID_OutlineSoftness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineSoftness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineSoftness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineColor
int TMPro::ShaderUtilities::_get_ID_OutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineColor
void TMPro::ShaderUtilities::_set_ID_OutlineColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Padding
int TMPro::ShaderUtilities::_get_ID_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Padding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Padding"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Padding
void TMPro::ShaderUtilities::_set_ID_Padding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Padding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Padding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GradientScale
int TMPro::ShaderUtilities::_get_ID_GradientScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GradientScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GradientScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GradientScale
void TMPro::ShaderUtilities::_set_ID_GradientScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GradientScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GradientScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleX
int TMPro::ShaderUtilities::_get_ID_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleX
void TMPro::ShaderUtilities::_set_ID_ScaleX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleY
int TMPro::ShaderUtilities::_get_ID_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleY
void TMPro::ShaderUtilities::_set_ID_ScaleY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_PerspectiveFilter
int TMPro::ShaderUtilities::_get_ID_PerspectiveFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_PerspectiveFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_PerspectiveFilter"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_PerspectiveFilter
void TMPro::ShaderUtilities::_set_ID_PerspectiveFilter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_PerspectiveFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_PerspectiveFilter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Sharpness
int TMPro::ShaderUtilities::_get_ID_Sharpness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Sharpness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Sharpness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Sharpness
void TMPro::ShaderUtilities::_set_ID_Sharpness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Sharpness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Sharpness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_TextureWidth
int TMPro::ShaderUtilities::_get_ID_TextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_TextureWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_TextureWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_TextureWidth
void TMPro::ShaderUtilities::_set_ID_TextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_TextureWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_TextureWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_TextureHeight
int TMPro::ShaderUtilities::_get_ID_TextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_TextureHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_TextureHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_TextureHeight
void TMPro::ShaderUtilities::_set_ID_TextureHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_TextureHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_TextureHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_BevelAmount
int TMPro::ShaderUtilities::_get_ID_BevelAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_BevelAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_BevelAmount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_BevelAmount
void TMPro::ShaderUtilities::_set_ID_BevelAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_BevelAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_BevelAmount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowColor
int TMPro::ShaderUtilities::_get_ID_GlowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowColor
void TMPro::ShaderUtilities::_set_ID_GlowColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowOffset
int TMPro::ShaderUtilities::_get_ID_GlowOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowOffset
void TMPro::ShaderUtilities::_set_ID_GlowOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowPower
int TMPro::ShaderUtilities::_get_ID_GlowPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowPower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowPower"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowPower
void TMPro::ShaderUtilities::_set_ID_GlowPower(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowPower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowPower", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowOuter
int TMPro::ShaderUtilities::_get_ID_GlowOuter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowOuter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowOuter"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowOuter
void TMPro::ShaderUtilities::_set_ID_GlowOuter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowOuter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowOuter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_LightAngle
int TMPro::ShaderUtilities::_get_ID_LightAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_LightAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_LightAngle"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_LightAngle
void TMPro::ShaderUtilities::_set_ID_LightAngle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_LightAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_LightAngle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMap
int TMPro::ShaderUtilities::_get_ID_EnvMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMap"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMap
void TMPro::ShaderUtilities::_set_ID_EnvMap(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMap", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMatrix
int TMPro::ShaderUtilities::_get_ID_EnvMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMatrix"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMatrix
void TMPro::ShaderUtilities::_set_ID_EnvMatrix(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMatrix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMatrixRotation
int TMPro::ShaderUtilities::_get_ID_EnvMatrixRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMatrixRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMatrixRotation"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMatrixRotation
void TMPro::ShaderUtilities::_set_ID_EnvMatrixRotation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMatrixRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMatrixRotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskCoord
int TMPro::ShaderUtilities::_get_ID_MaskCoord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskCoord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskCoord"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskCoord
void TMPro::ShaderUtilities::_set_ID_MaskCoord(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskCoord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskCoord", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ClipRect
int TMPro::ShaderUtilities::_get_ID_ClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ClipRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ClipRect"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ClipRect
void TMPro::ShaderUtilities::_set_ID_ClipRect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ClipRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ClipRect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskSoftnessX
int TMPro::ShaderUtilities::_get_ID_MaskSoftnessX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskSoftnessX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskSoftnessX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskSoftnessX
void TMPro::ShaderUtilities::_set_ID_MaskSoftnessX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskSoftnessX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskSoftnessX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskSoftnessY
int TMPro::ShaderUtilities::_get_ID_MaskSoftnessY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskSoftnessY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskSoftnessY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskSoftnessY
void TMPro::ShaderUtilities::_set_ID_MaskSoftnessY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskSoftnessY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskSoftnessY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_VertexOffsetX
int TMPro::ShaderUtilities::_get_ID_VertexOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_VertexOffsetX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_VertexOffsetX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_VertexOffsetX
void TMPro::ShaderUtilities::_set_ID_VertexOffsetX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_VertexOffsetX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_VertexOffsetX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_VertexOffsetY
int TMPro::ShaderUtilities::_get_ID_VertexOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_VertexOffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_VertexOffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_VertexOffsetY
void TMPro::ShaderUtilities::_set_ID_VertexOffsetY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_VertexOffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_VertexOffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UseClipRect
int TMPro::ShaderUtilities::_get_ID_UseClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UseClipRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UseClipRect"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UseClipRect
void TMPro::ShaderUtilities::_set_ID_UseClipRect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UseClipRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UseClipRect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilID
int TMPro::ShaderUtilities::_get_ID_StencilID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilID"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilID
void TMPro::ShaderUtilities::_set_ID_StencilID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilOp
int TMPro::ShaderUtilities::_get_ID_StencilOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilOp"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilOp
void TMPro::ShaderUtilities::_set_ID_StencilOp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilOp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilComp
int TMPro::ShaderUtilities::_get_ID_StencilComp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilComp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilComp"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilComp
void TMPro::ShaderUtilities::_set_ID_StencilComp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilComp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilComp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilReadMask
int TMPro::ShaderUtilities::_get_ID_StencilReadMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilReadMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilReadMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilReadMask
void TMPro::ShaderUtilities::_set_ID_StencilReadMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilReadMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilReadMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilWriteMask
int TMPro::ShaderUtilities::_get_ID_StencilWriteMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilWriteMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilWriteMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilWriteMask
void TMPro::ShaderUtilities::_set_ID_StencilWriteMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilWriteMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilWriteMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ShaderFlags
int TMPro::ShaderUtilities::_get_ID_ShaderFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ShaderFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ShaderFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ShaderFlags
void TMPro::ShaderUtilities::_set_ID_ShaderFlags(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ShaderFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ShaderFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_A
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_A"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_A
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_A(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_A", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_B
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_B"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_B
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_B(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_B", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_C
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_C"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_C
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_C(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_C", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Bevel
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Bevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Bevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Bevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Bevel
void TMPro::ShaderUtilities::_set_Keyword_Bevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Bevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Bevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Glow
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Glow() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Glow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Glow"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Glow
void TMPro::ShaderUtilities::_set_Keyword_Glow(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Glow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Glow", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Underlay
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Underlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Underlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Underlay"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Underlay
void TMPro::ShaderUtilities::_set_Keyword_Underlay(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Underlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Underlay", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Ratios
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Ratios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Ratios");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Ratios"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Ratios
void TMPro::ShaderUtilities::_set_Keyword_Ratios(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Ratios");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Ratios", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_SOFT
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_SOFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_SOFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_SOFT"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_SOFT
void TMPro::ShaderUtilities::_set_Keyword_MASK_SOFT(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_SOFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_SOFT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_HARD
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_HARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_HARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_HARD"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_HARD
void TMPro::ShaderUtilities::_set_Keyword_MASK_HARD(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_HARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_HARD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_TEX
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_TEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_TEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_TEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_TEX
void TMPro::ShaderUtilities::_set_Keyword_MASK_TEX(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_TEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_TEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Outline
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Outline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Outline"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Outline
void TMPro::ShaderUtilities::_set_Keyword_Outline(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Outline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Outline", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderTag_ZTestMode
::Il2CppString* TMPro::ShaderUtilities::_get_ShaderTag_ZTestMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ShaderTag_ZTestMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "ShaderTag_ZTestMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderTag_ZTestMode
void TMPro::ShaderUtilities::_set_ShaderTag_ZTestMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ShaderTag_ZTestMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ShaderTag_ZTestMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderTag_CullMode
::Il2CppString* TMPro::ShaderUtilities::_get_ShaderTag_CullMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ShaderTag_CullMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "ShaderTag_CullMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderTag_CullMode
void TMPro::ShaderUtilities::_set_ShaderTag_CullMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ShaderTag_CullMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ShaderTag_CullMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single m_clamp
float TMPro::ShaderUtilities::_get_m_clamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_m_clamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "ShaderUtilities", "m_clamp"));
}
// Autogenerated static field setter
// Set static field: static private System.Single m_clamp
void TMPro::ShaderUtilities::_set_m_clamp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_m_clamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "m_clamp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean isInitialized
bool TMPro::ShaderUtilities::_get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_isInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("TMPro", "ShaderUtilities", "isInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean isInitialized
void TMPro::ShaderUtilities::_set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_isInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "isInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Shader k_ShaderRef_MobileSDF
UnityEngine::Shader* TMPro::ShaderUtilities::_get_k_ShaderRef_MobileSDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_k_ShaderRef_MobileSDF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Shader*>("TMPro", "ShaderUtilities", "k_ShaderRef_MobileSDF"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Shader k_ShaderRef_MobileSDF
void TMPro::ShaderUtilities::_set_k_ShaderRef_MobileSDF(UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_k_ShaderRef_MobileSDF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "k_ShaderRef_MobileSDF", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Shader k_ShaderRef_MobileBitmap
UnityEngine::Shader* TMPro::ShaderUtilities::_get_k_ShaderRef_MobileBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_k_ShaderRef_MobileBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Shader*>("TMPro", "ShaderUtilities", "k_ShaderRef_MobileBitmap"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Shader k_ShaderRef_MobileBitmap
void TMPro::ShaderUtilities::_set_k_ShaderRef_MobileBitmap(UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_k_ShaderRef_MobileBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "k_ShaderRef_MobileBitmap", value));
}
// Autogenerated method: TMPro.ShaderUtilities.get_ShaderRef_MobileSDF
UnityEngine::Shader* TMPro::ShaderUtilities::get_ShaderRef_MobileSDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::get_ShaderRef_MobileSDF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "get_ShaderRef_MobileSDF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.get_ShaderRef_MobileBitmap
UnityEngine::Shader* TMPro::ShaderUtilities::get_ShaderRef_MobileBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::get_ShaderRef_MobileBitmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "get_ShaderRef_MobileBitmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities..cctor
void TMPro::ShaderUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.GetShaderPropertyIDs
void TMPro::ShaderUtilities::GetShaderPropertyIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetShaderPropertyIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetShaderPropertyIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.UpdateShaderRatios
void TMPro::ShaderUtilities::UpdateShaderRatios(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::UpdateShaderRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "UpdateShaderRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mat);
}
// Autogenerated method: TMPro.ShaderUtilities.GetFontExtent
UnityEngine::Vector4 TMPro::ShaderUtilities::GetFontExtent(UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetFontExtent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetFontExtent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material);
}
// Autogenerated method: TMPro.ShaderUtilities.IsMaskingEnabled
bool TMPro::ShaderUtilities::IsMaskingEnabled(UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::IsMaskingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "IsMaskingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material);
}
// Autogenerated method: TMPro.ShaderUtilities.GetPadding
float TMPro::ShaderUtilities::GetPadding(UnityEngine::Material* material, bool enableExtraPadding, bool isBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(enableExtraPadding), ::il2cpp_utils::ExtractType(isBold)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material, enableExtraPadding, isBold);
}
// Autogenerated method: TMPro.ShaderUtilities.GetPadding
float TMPro::ShaderUtilities::GetPadding(::ArrayW<UnityEngine::Material*> materials, bool enableExtraPadding, bool isBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(enableExtraPadding), ::il2cpp_utils::ExtractType(isBold)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, materials, enableExtraPadding, isBold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Sprite
#include "TMPro/TMP_Sprite.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
::Il2CppString*& TMPro::TMP_Sprite::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Sprite::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 hashCode
int& TMPro::TMP_Sprite::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Sprite::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 unicode
int& TMPro::TMP_Sprite::dyn_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Sprite::dyn_unicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unicode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 pivot
UnityEngine::Vector2& TMPro::TMP_Sprite::dyn_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Sprite::dyn_pivot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pivot"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite sprite
UnityEngine::Sprite*& TMPro::TMP_Sprite::dyn_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Sprite::dyn_sprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7
#include "TMPro/TMP_SpriteAnimator_-DoSpriteAnimationInternal-d__7.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Boolean> m_animations
System::Collections::Generic::Dictionary_2<int, bool>*& TMPro::TMP_SpriteAnimator::dyn_m_animations() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::dyn_m_animations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_animations"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text m_TextComponent
TMPro::TMP_Text*& TMPro::TMP_SpriteAnimator::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.Awake
void TMPro::TMP_SpriteAnimator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.OnEnable
void TMPro::TMP_SpriteAnimator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.OnDisable
void TMPro::TMP_SpriteAnimator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.StopAllAnimations
void TMPro::TMP_SpriteAnimator::StopAllAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::StopAllAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.DoSpriteAnimation
void TMPro::TMP_SpriteAnimator::DoSpriteAnimation(int currentCharacter, TMPro::TMP_SpriteAsset* spriteAsset, int start, int end, int framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::DoSpriteAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCharacter), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(framerate)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, currentCharacter, spriteAsset, start, end, framerate);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.DoSpriteAnimationInternal
System::Collections::IEnumerator* TMPro::TMP_SpriteAnimator::DoSpriteAnimationInternal(int currentCharacter, TMPro::TMP_SpriteAsset* spriteAsset, int start, int end, int framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::DoSpriteAnimationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteAnimationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCharacter), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(framerate)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, currentCharacter, spriteAsset, start, end, framerate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7
#include "TMPro/TMP_SpriteAnimator_-DoSpriteAnimationInternal-d__7.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_SpriteAnimator <>4__this
TMPro::TMP_SpriteAnimator*& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 start
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 end
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_SpriteAsset spriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentCharacter
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_currentCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_currentCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentFrame>5__2
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$currentFrame$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$currentFrame$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentFrame>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_CharacterInfo <charInfo>5__3
TMPro::TMP_CharacterInfo& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$charInfo$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$charInfo$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<charInfo>5__3"))->offset;
  return *reinterpret_cast<TMPro::TMP_CharacterInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <materialIndex>5__4
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$materialIndex$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$materialIndex$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<materialIndex>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <vertexIndex>5__5
int& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$vertexIndex$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$vertexIndex$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<vertexIndex>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_MeshInfo <meshInfo>5__6
TMPro::TMP_MeshInfo& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$meshInfo$5__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$meshInfo$5__6");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<meshInfo>5__6"))->offset;
  return *reinterpret_cast<TMPro::TMP_MeshInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__7
float& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$elapsedTime$5__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$elapsedTime$5__7");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__7"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <targetTime>5__8
float& TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$targetTime$5__8() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::dyn_$targetTime$5__8");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<targetTime>5__8"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7.System.IDisposable.Dispose
void TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7.MoveNext
bool TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/TMPro.<DoSpriteAnimationInternal>d__7.System.Collections.IEnumerator.Reset
void TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset/TMPro.<>c
#include "TMPro/TMP_SpriteAsset_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_Sprite
#include "TMPro/TMP_Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
System::Collections::Generic::List_1<int>* TMPro::TMP_SpriteAsset::_get_k_searchedSpriteAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::_get_k_searchedSpriteAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<int>*>("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
void TMPro::TMP_SpriteAsset::_set_k_searchedSpriteAssets(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::_set_k_searchedSpriteAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.UInt32,System.Int32> m_UnicodeLookup
System::Collections::Generic::Dictionary_2<uint, int>*& TMPro::TMP_SpriteAsset::dyn_m_UnicodeLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_UnicodeLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UnicodeLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<uint, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_NameLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_SpriteAsset::dyn_m_NameLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_NameLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_NameLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.UInt32,System.Int32> m_GlyphIndexLookup
System::Collections::Generic::Dictionary_2<uint, int>*& TMPro::TMP_SpriteAsset::dyn_m_GlyphIndexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_GlyphIndexLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndexLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<uint, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Version
::Il2CppString*& TMPro::TMP_SpriteAsset::dyn_m_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Version"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Texture spriteSheet
UnityEngine::Texture*& TMPro::TMP_SpriteAsset::dyn_spriteSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_spriteSheet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteSheet"))->offset;
  return *reinterpret_cast<UnityEngine::Texture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_SpriteCharacter> m_SpriteCharacterTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>*& TMPro::TMP_SpriteAsset::dyn_m_SpriteCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_SpriteCharacterTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteCharacterTable"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_SpriteGlyph> m_SpriteGlyphTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>*& TMPro::TMP_SpriteAsset::dyn_m_SpriteGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_SpriteGlyphTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SpriteGlyphTable"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.TMP_Sprite> spriteInfoList
System::Collections::Generic::List_1<TMPro::TMP_Sprite*>*& TMPro::TMP_SpriteAsset::dyn_spriteInfoList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_spriteInfoList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteInfoList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Sprite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<TMPro.TMP_SpriteAsset> fallbackSpriteAssets
System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>*& TMPro::TMP_SpriteAsset::dyn_fallbackSpriteAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_fallbackSpriteAssets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fallbackSpriteAssets"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_IsSpriteAssetLookupTablesDirty
bool& TMPro::TMP_SpriteAsset::dyn_m_IsSpriteAssetLookupTablesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::dyn_m_IsSpriteAssetLookupTablesDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsSpriteAssetLookupTablesDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_version
::Il2CppString* TMPro::TMP_SpriteAsset::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_version
void TMPro::TMP_SpriteAsset::set_version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteCharacterTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* TMPro::TMP_SpriteAsset::get_spriteCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteCharacterTable
void TMPro::TMP_SpriteAsset::set_spriteCharacterTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteGlyphTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* TMPro::TMP_SpriteAsset::get_spriteGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteGlyphTable
void TMPro::TMP_SpriteAsset::set_spriteGlyphTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.Awake
void TMPro::TMP_SpriteAsset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetDefaultSpriteMaterial
UnityEngine::Material* TMPro::TMP_SpriteAsset::GetDefaultSpriteMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetDefaultSpriteMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultSpriteMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpdateLookupTables
void TMPro::TMP_SpriteAsset::UpdateLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::UpdateLookupTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLookupTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromHashcode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromHashcode(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromHashcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromHashcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromUnicode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromUnicode(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromName
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, name);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicode(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAssets), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, unicode, includeFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCode(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool includeFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, includeFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, int hashCode, bool searchFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAssets), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, hashCode, searchFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool searchFallbacks, ByRef<int> spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, searchFallbacks, byref(spriteIndex));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphTable
void TMPro::TMP_SpriteAsset::SortGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortCharacterTable
void TMPro::TMP_SpriteAsset::SortCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphAndCharacterTables
void TMPro::TMP_SpriteAsset::SortGlyphAndCharacterTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortGlyphAndCharacterTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphAndCharacterTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpgradeSpriteAsset
void TMPro::TMP_SpriteAsset::UpgradeSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::UpgradeSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteAsset/TMPro.<>c
#include "TMPro/TMP_SpriteAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_SpriteAsset/TMPro.<>c <>9
TMPro::TMP_SpriteAsset::$$c* TMPro::TMP_SpriteAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::TMP_SpriteAsset::$$c*>("TMPro", "TMP_SpriteAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_SpriteAsset/TMPro.<>c <>9
void TMPro::TMP_SpriteAsset::$$c::_set_$$9(TMPro::TMP_SpriteAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_SpriteGlyph,System.UInt32> <>9__32_0
System::Func_2<TMPro::TMP_SpriteGlyph*, uint>* TMPro::TMP_SpriteAsset::$$c::_get_$$9__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9__32_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_SpriteGlyph*, uint>*>("TMPro", "TMP_SpriteAsset/<>c", "<>9__32_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_SpriteGlyph,System.UInt32> <>9__32_0
void TMPro::TMP_SpriteAsset::$$c::_set_$$9__32_0(System::Func_2<TMPro::TMP_SpriteGlyph*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9__32_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9__32_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_SpriteCharacter,System.UInt32> <>9__33_0
System::Func_2<TMPro::TMP_SpriteCharacter*, uint>* TMPro::TMP_SpriteAsset::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_SpriteCharacter*, uint>*>("TMPro", "TMP_SpriteAsset/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_SpriteCharacter,System.UInt32> <>9__33_0
void TMPro::TMP_SpriteAsset::$$c::_set_$$9__33_0(System::Func_2<TMPro::TMP_SpriteCharacter*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9__33_0", value)));
}
// Autogenerated method: TMPro.TMP_SpriteAsset/TMPro.<>c..cctor
void TMPro::TMP_SpriteAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset/TMPro.<>c.<SortGlyphTable>b__32_0
uint TMPro::TMP_SpriteAsset::$$c::$SortGlyphTable$b__32_0(TMPro::TMP_SpriteGlyph* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::<SortGlyphTable>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphTable>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, item);
}
// Autogenerated method: TMPro.TMP_SpriteAsset/TMPro.<>c.<SortCharacterTable>b__33_0
uint TMPro::TMP_SpriteAsset::$$c::$SortCharacterTable$b__33_0(TMPro::TMP_SpriteCharacter* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::<SortCharacterTable>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortCharacterTable>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
::Il2CppString*& TMPro::TMP_SpriteCharacter::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HashCode
int& TMPro::TMP_SpriteCharacter::dyn_m_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::dyn_m_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_name
::Il2CppString* TMPro::TMP_SpriteCharacter::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.set_name
void TMPro::TMP_SpriteCharacter::set_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_hashCode
int TMPro::TMP_SpriteCharacter::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Sprite sprite
UnityEngine::Sprite*& TMPro::TMP_SpriteGlyph::dyn_sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteGlyph::dyn_sprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Name
::Il2CppString*& TMPro::TMP_Style::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_HashCode
int& TMPro::TMP_Style::dyn_m_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_HashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_OpeningDefinition
::Il2CppString*& TMPro::TMP_Style::dyn_m_OpeningDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_OpeningDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpeningDefinition"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_ClosingDefinition
::Il2CppString*& TMPro::TMP_Style::dyn_m_ClosingDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_ClosingDefinition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClosingDefinition"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_OpeningTagArray
::ArrayW<int>& TMPro::TMP_Style::dyn_m_OpeningTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_OpeningTagArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OpeningTagArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] m_ClosingTagArray
::ArrayW<int>& TMPro::TMP_Style::dyn_m_ClosingTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::dyn_m_ClosingTagArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ClosingTagArray"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Style.get_name
::Il2CppString* TMPro::TMP_Style::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_name
void TMPro::TMP_Style::set_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_hashCode
int TMPro::TMP_Style::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_hashCode
void TMPro::TMP_Style::set_hashCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::set_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningDefinition
::Il2CppString* TMPro::TMP_Style::get_styleOpeningDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleOpeningDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingDefinition
::Il2CppString* TMPro::TMP_Style::get_styleClosingDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleClosingDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningTagArray
::ArrayW<int> TMPro::TMP_Style::get_styleOpeningTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleOpeningTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingTagArray
::ArrayW<int> TMPro::TMP_Style::get_styleClosingTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleClosingTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.RefreshStyle
void TMPro::TMP_Style::RefreshStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::RefreshStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_StyleSheet s_Instance
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_StyleSheet*>("TMPro", "TMP_StyleSheet", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_StyleSheet s_Instance
void TMPro::TMP_StyleSheet::_set_s_Instance(TMPro::TMP_StyleSheet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_StyleSheet", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TMPro.TMP_Style> m_StyleList
System::Collections::Generic::List_1<TMPro::TMP_Style*>*& TMPro::TMP_StyleSheet::dyn_m_StyleList() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::dyn_m_StyleList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleList"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Style*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,TMPro.TMP_Style> m_StyleDictionary
System::Collections::Generic::Dictionary_2<int, TMPro::TMP_Style*>*& TMPro::TMP_StyleSheet::dyn_m_StyleDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::dyn_m_StyleDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StyleDictionary"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, TMPro::TMP_Style*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_StyleSheet.get_instance
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.LoadDefaultStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::LoadDefaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::LoadDefaultStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "LoadDefaultStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyle
TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyle(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::GetStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "GetStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Style*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyleInternal
TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyleInternal(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::GetStyleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Style*, false>(___instance_arg, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_StyleSheet.UpdateStyleDictionaryKey
void TMPro::TMP_StyleSheet::UpdateStyleDictionaryKey(int old_key, int new_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::UpdateStyleDictionaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStyleDictionaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(old_key), ::il2cpp_utils::ExtractType(new_key)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, old_key, new_key);
}
// Autogenerated method: TMPro.TMP_StyleSheet.UpdateStyleSheet
void TMPro::TMP_StyleSheet::UpdateStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::UpdateStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "UpdateStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.RefreshStyles
void TMPro::TMP_StyleSheet::RefreshStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::RefreshStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "RefreshStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.LoadStyleDictionaryInternal
void TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadStyleDictionaryInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontAsset m_fontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_SubMesh::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SpriteAsset m_spriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_SubMesh::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_sharedMaterial
UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackMaterial
UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_fallbackMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackSourceMaterial
UnityEngine::Material*& TMPro::TMP_SubMesh::dyn_m_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_fallbackSourceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackSourceMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultMaterial
bool& TMPro::TMP_SubMesh::dyn_m_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_isDefaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding
float& TMPro::TMP_SubMesh::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer m_renderer
UnityEngine::Renderer*& TMPro::TMP_SubMesh::dyn_m_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter m_meshFilter
UnityEngine::MeshFilter*& TMPro::TMP_SubMesh::dyn_m_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
UnityEngine::Mesh*& TMPro::TMP_SubMesh::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro m_TextComponent
TMPro::TextMeshPro*& TMPro::TMP_SubMesh::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TMP_SubMesh::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_SubMesh::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fontAsset
void TMPro::TMP_SubMesh::set_fontAsset(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_SubMesh::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_spriteAsset
void TMPro::TMP_SubMesh::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_material
UnityEngine::Material* TMPro::TMP_SubMesh::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_material
void TMPro::TMP_SubMesh::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_sharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_sharedMaterial
void TMPro::TMP_SubMesh::set_sharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackMaterial
void TMPro::TMP_SubMesh::set_fallbackMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackSourceMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackSourceMaterial
void TMPro::TMP_SubMesh::set_fallbackSourceMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_isDefaultMaterial
bool TMPro::TMP_SubMesh::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_isDefaultMaterial
void TMPro::TMP_SubMesh::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_padding
float TMPro::TMP_SubMesh::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_padding
void TMPro::TMP_SubMesh::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_renderer
UnityEngine::Renderer* TMPro::TMP_SubMesh::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_meshFilter
UnityEngine::MeshFilter* TMPro::TMP_SubMesh::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshFilter*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_mesh
UnityEngine::Mesh* TMPro::TMP_SubMesh::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_mesh
void TMPro::TMP_SubMesh::set_mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnEnable
void TMPro::TMP_SubMesh::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDisable
void TMPro::TMP_SubMesh::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDestroy
void TMPro::TMP_SubMesh::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.AddSubTextObject
TMPro::TMP_SubMesh* TMPro::TMP_SubMesh::AddSubTextObject(TMPro::TextMeshPro* textComponent, TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMesh", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SubMesh*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMesh.DestroySelf
void TMPro::TMP_SubMesh::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_SubMesh::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetSharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetSharedMaterial
void TMPro::TMP_SubMesh::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetPaddingForMaterial
float TMPro::TMP_SubMesh::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMeshPadding
void TMPro::TMP_SubMesh::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetVerticesDirty
void TMPro::TMP_SubMesh::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetMaterialDirty
void TMPro::TMP_SubMesh::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetMaterialDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMaterial
void TMPro::TMP_SubMesh::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::UpdateMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_FontAsset m_fontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_SubMeshUI::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_SpriteAsset m_spriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_SubMeshUI::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_material
UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_sharedMaterial
UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackMaterial
UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_fallbackMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material m_fallbackSourceMaterial
UnityEngine::Material*& TMPro::TMP_SubMeshUI::dyn_m_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_fallbackSourceMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fallbackSourceMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isDefaultMaterial
bool& TMPro::TMP_SubMeshUI::dyn_m_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_isDefaultMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_padding
float& TMPro::TMP_SubMeshUI::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasRenderer m_canvasRenderer
UnityEngine::CanvasRenderer*& TMPro::TMP_SubMeshUI::dyn_m_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_canvasRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canvasRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh m_mesh
UnityEngine::Mesh*& TMPro::TMP_SubMeshUI::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI m_TextComponent
TMPro::TextMeshProUGUI*& TMPro::TMP_SubMeshUI::dyn_m_TextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_TextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextComponent"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isRegisteredForEvents
bool& TMPro::TMP_SubMeshUI::dyn_m_isRegisteredForEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_isRegisteredForEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRegisteredForEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_materialDirty
bool& TMPro::TMP_SubMeshUI::dyn_m_materialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_materialDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_materialReferenceIndex
int& TMPro::TMP_SubMeshUI::dyn_m_materialReferenceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::dyn_m_materialReferenceIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialReferenceIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_SubMeshUI::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fontAsset
void TMPro::TMP_SubMeshUI::set_fontAsset(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_SubMeshUI::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_spriteAsset
void TMPro::TMP_SubMeshUI::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_sharedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_sharedMaterial
void TMPro::TMP_SubMeshUI::set_sharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackMaterial
void TMPro::TMP_SubMeshUI::set_fallbackMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackSourceMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackSourceMaterial
void TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_isDefaultMaterial
bool TMPro::TMP_SubMeshUI::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_isDefaultMaterial
void TMPro::TMP_SubMeshUI::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_padding
float TMPro::TMP_SubMeshUI::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_padding
void TMPro::TMP_SubMeshUI::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mesh
UnityEngine::Mesh* TMPro::TMP_SubMeshUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_mesh
void TMPro::TMP_SubMeshUI::set_mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.AddSubTextObject
TMPro::TMP_SubMeshUI* TMPro::TMP_SubMeshUI::AddSubTextObject(TMPro::TextMeshProUGUI* textComponent, TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMeshUI", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SubMeshUI*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMeshPadding
void TMPro::TMP_SubMeshUI::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetPivotDirty
void TMPro::TMP_SubMeshUI::SetPivotDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetPivotDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPivotDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RefreshMaterial
void TMPro::TMP_SubMeshUI::RefreshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RefreshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_SubMeshUI::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetSharedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetSharedMaterial
void TMPro::TMP_SubMeshUI::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mainTexture
UnityEngine::Texture* TMPro::TMP_SubMeshUI::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_material
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_material
void TMPro::TMP_SubMeshUI::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_materialForRendering
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_canvasRenderer
UnityEngine::CanvasRenderer* TMPro::TMP_SubMeshUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasRenderer*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnEnable
void TMPro::TMP_SubMeshUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDisable
void TMPro::TMP_SubMeshUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDestroy
void TMPro::TMP_SubMeshUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnTransformParentChanged
void TMPro::TMP_SubMeshUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetModifiedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetAllDirty
void TMPro::TMP_SubMeshUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetVerticesDirty
void TMPro::TMP_SubMeshUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetLayoutDirty
void TMPro::TMP_SubMeshUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetMaterialDirty
void TMPro::TMP_SubMeshUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Cull
void TMPro::TMP_SubMeshUI::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateGeometry
void TMPro::TMP_SubMeshUI::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Rebuild
void TMPro::TMP_SubMeshUI::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, update);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMaterial
void TMPro::TMP_SubMeshUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RecalculateClipping
void TMPro::TMP_SubMeshUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RecalculateMasking
void TMPro::TMP_SubMeshUI::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITextElement
#include "TMPro/ITextElement.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITextElement.get_sharedMaterial
UnityEngine::Material* TMPro::ITextElement::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::get_sharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.ITextElement.Rebuild
void TMPro::ITextElement::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, update);
}
// Autogenerated method: TMPro.ITextElement.GetInstanceID
int TMPro::ITextElement::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::GetInstanceID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopLeft
void TMPro::TextAlignmentOptions::_set_TopLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Top
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Top
void TMPro::TextAlignmentOptions::_set_Top(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopRight
void TMPro::TextAlignmentOptions::_set_TopRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopJustified
void TMPro::TextAlignmentOptions::_set_TopJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopFlush
void TMPro::TextAlignmentOptions::_set_TopFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopGeoAligned
void TMPro::TextAlignmentOptions::_set_TopGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Left
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Left
void TMPro::TextAlignmentOptions::_set_Left(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Center
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Center
void TMPro::TextAlignmentOptions::_set_Center(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Right
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Right
void TMPro::TextAlignmentOptions::_set_Right(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Justified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Justified
void TMPro::TextAlignmentOptions::_set_Justified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Flush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Flush
void TMPro::TextAlignmentOptions::_set_Flush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CenterGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CenterGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CenterGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
void TMPro::TextAlignmentOptions::_set_CenterGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CenterGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CenterGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomLeft
void TMPro::TextAlignmentOptions::_set_BottomLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Bottom
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Bottom
void TMPro::TextAlignmentOptions::_set_Bottom(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomRight
void TMPro::TextAlignmentOptions::_set_BottomRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomJustified
void TMPro::TextAlignmentOptions::_set_BottomJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomFlush
void TMPro::TextAlignmentOptions::_set_BottomFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
void TMPro::TextAlignmentOptions::_set_BottomGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineLeft
void TMPro::TextAlignmentOptions::_set_BaselineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Baseline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Baseline
void TMPro::TextAlignmentOptions::_set_Baseline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineRight
void TMPro::TextAlignmentOptions::_set_BaselineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineJustified
void TMPro::TextAlignmentOptions::_set_BaselineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineFlush
void TMPro::TextAlignmentOptions::_set_BaselineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
void TMPro::TextAlignmentOptions::_set_BaselineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineLeft
void TMPro::TextAlignmentOptions::_set_MidlineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Midline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Midline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Midline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Midline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Midline
void TMPro::TextAlignmentOptions::_set_Midline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Midline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Midline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineRight
void TMPro::TextAlignmentOptions::_set_MidlineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineJustified
void TMPro::TextAlignmentOptions::_set_MidlineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineFlush
void TMPro::TextAlignmentOptions::_set_MidlineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
void TMPro::TextAlignmentOptions::_set_MidlineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineLeft
void TMPro::TextAlignmentOptions::_set_CaplineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Capline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Capline
void TMPro::TextAlignmentOptions::_set_Capline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Capline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineRight
void TMPro::TextAlignmentOptions::_set_CaplineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineJustified
void TMPro::TextAlignmentOptions::_set_CaplineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineFlush
void TMPro::TextAlignmentOptions::_set_CaplineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
void TMPro::TextAlignmentOptions::_set_CaplineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineGeoAligned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro._HorizontalAlignmentOptions
#include "TMPro/_HorizontalAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Left
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Left
void TMPro::_HorizontalAlignmentOptions::_set_Left(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Center
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Center
void TMPro::_HorizontalAlignmentOptions::_set_Center(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Right
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Right
void TMPro::_HorizontalAlignmentOptions::_set_Right(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Justified
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Justified
void TMPro::_HorizontalAlignmentOptions::_set_Justified(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Flush
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Flush
void TMPro::_HorizontalAlignmentOptions::_set_Flush(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Geometry
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Geometry
void TMPro::_HorizontalAlignmentOptions::_set_Geometry(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Geometry", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::_HorizontalAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro._VerticalAlignmentOptions
#include "TMPro/_VerticalAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Top
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Top
void TMPro::_VerticalAlignmentOptions::_set_Top(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Middle
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Middle
void TMPro::_VerticalAlignmentOptions::_set_Middle(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Bottom
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Bottom
void TMPro::_VerticalAlignmentOptions::_set_Bottom(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Baseline
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Baseline
void TMPro::_VerticalAlignmentOptions::_set_Baseline(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Geometry
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Geometry
void TMPro::_VerticalAlignmentOptions::_set_Geometry(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Geometry", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Capline
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Capline
void TMPro::_VerticalAlignmentOptions::_set_Capline(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Capline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::_VerticalAlignmentOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextRenderFlags
#include "TMPro/TextRenderFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags DontRender
TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_DontRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_get_DontRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "DontRender"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags DontRender
void TMPro::TextRenderFlags::_set_DontRender(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_set_DontRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "DontRender", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags Render
TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "Render"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags Render
void TMPro::TextRenderFlags::_set_Render(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "Render", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextRenderFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElementType
#include "TMPro/TMP_TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Character
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Character
void TMPro::TMP_TextElementType::_set_Character(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Sprite
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Sprite
void TMPro::TMP_TextElementType::_set_Sprite(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Sprite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_TextElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingTypes
#include "TMPro/MaskingTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskOff
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskOff"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskOff
void TMPro::MaskingTypes::_set_MaskOff(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskOff", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskHard
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskHard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskHard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskHard
void TMPro::MaskingTypes::_set_MaskHard(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskHard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskHard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskSoft
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskSoft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskSoft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskSoft
void TMPro::MaskingTypes::_set_MaskSoft(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskSoft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskSoft", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::MaskingTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextOverflowModes
#include "TMPro/TextOverflowModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Overflow
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Overflow
void TMPro::TextOverflowModes::_set_Overflow(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Overflow", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Ellipsis
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Ellipsis() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Ellipsis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Ellipsis"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Ellipsis
void TMPro::TextOverflowModes::_set_Ellipsis(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Ellipsis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Ellipsis", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Masking
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Masking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Masking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Masking"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Masking
void TMPro::TextOverflowModes::_set_Masking(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Masking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Masking", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Truncate
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Truncate
void TMPro::TextOverflowModes::_set_Truncate(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes ScrollRect
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_ScrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_ScrollRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "ScrollRect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes ScrollRect
void TMPro::TextOverflowModes::_set_ScrollRect(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_ScrollRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "ScrollRect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Page
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Page");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Page"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Page
void TMPro::TextOverflowModes::_set_Page(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Page");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Page", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Linked
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Linked() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Linked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Linked"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Linked
void TMPro::TextOverflowModes::_set_Linked(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Linked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Linked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextOverflowModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingOffsetMode
#include "TMPro/MaskingOffsetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Percentage
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Percentage
void TMPro::MaskingOffsetMode::_set_Percentage(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Pixel
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Pixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Pixel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Pixel"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Pixel
void TMPro::MaskingOffsetMode::_set_Pixel(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Pixel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Pixel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::MaskingOffsetMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextureMappingOptions
#include "TMPro/TextureMappingOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Character
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Character
void TMPro::TextureMappingOptions::_set_Character(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Line
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Line"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Line
void TMPro::TextureMappingOptions::_set_Line(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Paragraph
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Paragraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Paragraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Paragraph"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Paragraph
void TMPro::TextureMappingOptions::_set_Paragraph(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Paragraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Paragraph", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions MatchAspect
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_MatchAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_MatchAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "MatchAspect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions MatchAspect
void TMPro::TextureMappingOptions::_set_MatchAspect(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_MatchAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "MatchAspect", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TextureMappingOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Normal
TMPro::FontStyles TMPro::FontStyles::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Normal
void TMPro::FontStyles::_set_Normal(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Bold
TMPro::FontStyles TMPro::FontStyles::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Bold
void TMPro::FontStyles::_set_Bold(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Italic
TMPro::FontStyles TMPro::FontStyles::_get_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Italic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Italic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Italic
void TMPro::FontStyles::_set_Italic(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Italic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Italic", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Underline
TMPro::FontStyles TMPro::FontStyles::_get_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Underline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Underline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Underline
void TMPro::FontStyles::_set_Underline(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Underline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Underline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles LowerCase
TMPro::FontStyles TMPro::FontStyles::_get_LowerCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_LowerCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "LowerCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles LowerCase
void TMPro::FontStyles::_set_LowerCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_LowerCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "LowerCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles UpperCase
TMPro::FontStyles TMPro::FontStyles::_get_UpperCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_UpperCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "UpperCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles UpperCase
void TMPro::FontStyles::_set_UpperCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_UpperCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "UpperCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles SmallCaps
TMPro::FontStyles TMPro::FontStyles::_get_SmallCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_SmallCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "SmallCaps"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles SmallCaps
void TMPro::FontStyles::_set_SmallCaps(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_SmallCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "SmallCaps", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Strikethrough
TMPro::FontStyles TMPro::FontStyles::_get_Strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Strikethrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Strikethrough"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Strikethrough
void TMPro::FontStyles::_set_Strikethrough(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Strikethrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Strikethrough", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Superscript
TMPro::FontStyles TMPro::FontStyles::_get_Superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Superscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Superscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Superscript
void TMPro::FontStyles::_set_Superscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Superscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Superscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Subscript
TMPro::FontStyles TMPro::FontStyles::_get_Subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Subscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Subscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Subscript
void TMPro::FontStyles::_set_Subscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Subscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Subscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Highlight
TMPro::FontStyles TMPro::FontStyles::_get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Highlight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Highlight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Highlight
void TMPro::FontStyles::_set_Highlight(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Highlight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Highlight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Thin
TMPro::FontWeight TMPro::FontWeight::_get_Thin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Thin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Thin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Thin
void TMPro::FontWeight::_set_Thin(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Thin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Thin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight ExtraLight
TMPro::FontWeight TMPro::FontWeight::_get_ExtraLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_ExtraLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "ExtraLight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight ExtraLight
void TMPro::FontWeight::_set_ExtraLight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_ExtraLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "ExtraLight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Light
TMPro::FontWeight TMPro::FontWeight::_get_Light() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Light");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Light"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Light
void TMPro::FontWeight::_set_Light(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Light");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Light", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Regular
TMPro::FontWeight TMPro::FontWeight::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Regular
void TMPro::FontWeight::_set_Regular(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Medium
TMPro::FontWeight TMPro::FontWeight::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Medium
void TMPro::FontWeight::_set_Medium(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight SemiBold
TMPro::FontWeight TMPro::FontWeight::_get_SemiBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_SemiBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "SemiBold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight SemiBold
void TMPro::FontWeight::_set_SemiBold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_SemiBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "SemiBold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Bold
TMPro::FontWeight TMPro::FontWeight::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Bold
void TMPro::FontWeight::_set_Bold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Heavy
TMPro::FontWeight TMPro::FontWeight::_get_Heavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Heavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Heavy"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Heavy
void TMPro::FontWeight::_set_Heavy(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Heavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Heavy", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Black
TMPro::FontWeight TMPro::FontWeight::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Black"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Black
void TMPro::FontWeight::_set_Black(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Black", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::FontWeight::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Color32 s_colorWhite
UnityEngine::Color32 TMPro::TMP_Text::_get_s_colorWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_s_colorWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("TMPro", "TMP_Text", "s_colorWhite"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Color32 s_colorWhite
void TMPro::TMP_Text::_set_s_colorWhite(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_s_colorWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "s_colorWhite", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargePositiveVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargePositiveVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
void TMPro::TMP_Text::_set_k_LargePositiveVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargeNegativeVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargeNegativeVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
void TMPro::TMP_Text::_set_k_LargeNegativeVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargePositiveFloat
float TMPro::TMP_Text::_get_k_LargePositiveFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargePositiveFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargePositiveFloat
void TMPro::TMP_Text::_set_k_LargePositiveFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargeNegativeFloat
float TMPro::TMP_Text::_get_k_LargeNegativeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargeNegativeFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargeNegativeFloat
void TMPro::TMP_Text::_set_k_LargeNegativeFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargePositiveInt
int TMPro::TMP_Text::_get_k_LargePositiveInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargePositiveInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargePositiveInt
void TMPro::TMP_Text::_set_k_LargePositiveInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveInt", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargeNegativeInt
int TMPro::TMP_Text::_get_k_LargeNegativeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargeNegativeInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargeNegativeInt
void TMPro::TMP_Text::_set_k_LargeNegativeInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeInt", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.String m_text
::Il2CppString*& TMPro::TMP_Text::dyn_m_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRightToLeft
bool& TMPro::TMP_Text::dyn_m_isRightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isRightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_fontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_Text::dyn_m_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontAsset m_currentFontAsset
TMPro::TMP_FontAsset*& TMPro::TMP_Text::dyn_m_currentFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_currentFontAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentFontAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isSDFShader
bool& TMPro::TMP_Text::dyn_m_isSDFShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isSDFShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isSDFShader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_sharedMaterial
UnityEngine::Material*& TMPro::TMP_Text::dyn_m_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_sharedMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sharedMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_currentMaterial
UnityEngine::Material*& TMPro::TMP_Text::dyn_m_currentMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_currentMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.MaterialReference[] m_materialReferences
::ArrayW<TMPro::MaterialReference>& TMPro::TMP_Text::dyn_m_materialReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_materialReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialReferences"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::MaterialReference>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_materialReferenceIndexLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_Text::dyn_m_materialReferenceIndexLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_materialReferenceIndexLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialReferenceIndexLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<TMPro.MaterialReference> m_materialReferenceStack
TMPro::TMP_RichTextTagStack_1<TMPro::MaterialReference>& TMPro::TMP_Text::dyn_m_materialReferenceStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_materialReferenceStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_materialReferenceStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<TMPro::MaterialReference>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_currentMaterialIndex
int& TMPro::TMP_Text::dyn_m_currentMaterialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_currentMaterialIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentMaterialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material[] m_fontSharedMaterials
::ArrayW<UnityEngine::Material*>& TMPro::TMP_Text::dyn_m_fontSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontSharedMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSharedMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material m_fontMaterial
UnityEngine::Material*& TMPro::TMP_Text::dyn_m_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Material[] m_fontMaterials
::ArrayW<UnityEngine::Material*>& TMPro::TMP_Text::dyn_m_fontMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontMaterials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontMaterials"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isMaterialDirty
bool& TMPro::TMP_Text::dyn_m_isMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isMaterialDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMaterialDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_fontColor32
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_fontColor32() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontColor32");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColor32"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color m_fontColor
UnityEngine::Color& TMPro::TMP_Text::dyn_m_fontColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_underlineColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_underlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_underlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_underlineColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_strikethroughColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_strikethroughColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_strikethroughColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_strikethroughColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_highlightColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector4 m_highlightPadding
UnityEngine::Vector4& TMPro::TMP_Text::dyn_m_highlightPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_highlightPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlightPadding"))->offset;
  return *reinterpret_cast<UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableVertexGradient
bool& TMPro::TMP_Text::dyn_m_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_enableVertexGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableVertexGradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.ColorMode m_colorMode
TMPro::ColorMode& TMPro::TMP_Text::dyn_m_colorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_colorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorMode"))->offset;
  return *reinterpret_cast<TMPro::ColorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.VertexGradient m_fontColorGradient
TMPro::VertexGradient& TMPro::TMP_Text::dyn_m_fontColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColorGradient"))->offset;
  return *reinterpret_cast<TMPro::VertexGradient*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ColorGradient m_fontColorGradientPreset
TMPro::TMP_ColorGradient*& TMPro::TMP_Text::dyn_m_fontColorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontColorGradientPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontColorGradientPreset"))->offset;
  return *reinterpret_cast<TMPro::TMP_ColorGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_spriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_tintAllSprites
bool& TMPro::TMP_Text::dyn_m_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_tintAllSprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tintAllSprites"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_tintSprite
bool& TMPro::TMP_Text::dyn_m_tintSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_tintSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tintSprite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_spriteColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_spriteColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_overrideHtmlColors
bool& TMPro::TMP_Text::dyn_m_overrideHtmlColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_overrideHtmlColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overrideHtmlColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_faceColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_faceColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_faceColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_outlineColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_outlineColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outlineColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_outlineWidth
float& TMPro::TMP_Text::dyn_m_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_outlineWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_outlineWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSize
float& TMPro::TMP_Text::dyn_m_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_currentFontSize
float& TMPro::TMP_Text::dyn_m_currentFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_currentFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeBase
float& TMPro::TMP_Text::dyn_m_fontSizeBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontSizeBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeBase"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<System.Single> m_sizeStack
TMPro::TMP_RichTextTagStack_1<float>& TMPro::TMP_Text::dyn_m_sizeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_sizeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sizeStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontWeight m_fontWeight
TMPro::FontWeight& TMPro::TMP_Text::dyn_m_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontWeight"))->offset;
  return *reinterpret_cast<TMPro::FontWeight*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontWeight m_FontWeightInternal
TMPro::FontWeight& TMPro::TMP_Text::dyn_m_FontWeightInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_FontWeightInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightInternal"))->offset;
  return *reinterpret_cast<TMPro::FontWeight*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<TMPro.FontWeight> m_FontWeightStack
TMPro::TMP_RichTextTagStack_1<TMPro::FontWeight>& TMPro::TMP_Text::dyn_m_FontWeightStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_FontWeightStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontWeightStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<TMPro::FontWeight>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableAutoSizing
bool& TMPro::TMP_Text::dyn_m_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_enableAutoSizing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableAutoSizing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxFontSize
float& TMPro::TMP_Text::dyn_m_maxFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minFontSize
float& TMPro::TMP_Text::dyn_m_minFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_minFontSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minFontSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeMin
float& TMPro::TMP_Text::dyn_m_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontSizeMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontSizeMax
float& TMPro::TMP_Text::dyn_m_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontSizeMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontSizeMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontStyles m_fontStyle
TMPro::FontStyles& TMPro::TMP_Text::dyn_m_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontStyle"))->offset;
  return *reinterpret_cast<TMPro::FontStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.FontStyles m_FontStyleInternal
TMPro::FontStyles& TMPro::TMP_Text::dyn_m_FontStyleInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_FontStyleInternal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FontStyleInternal"))->offset;
  return *reinterpret_cast<TMPro::FontStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_FontStyleStack m_fontStyleStack
TMPro::TMP_FontStyleStack& TMPro::TMP_Text::dyn_m_fontStyleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontStyleStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontStyleStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_FontStyleStack*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isUsingBold
bool& TMPro::TMP_Text::dyn_m_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isUsingBold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isUsingBold"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextAlignmentOptions m_textAlignment
TMPro::TextAlignmentOptions& TMPro::TMP_Text::dyn_m_textAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_textAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textAlignment"))->offset;
  return *reinterpret_cast<TMPro::TextAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextAlignmentOptions m_lineJustification
TMPro::TextAlignmentOptions& TMPro::TMP_Text::dyn_m_lineJustification() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineJustification");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineJustification"))->offset;
  return *reinterpret_cast<TMPro::TextAlignmentOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<TMPro.TextAlignmentOptions> m_lineJustificationStack
TMPro::TMP_RichTextTagStack_1<TMPro::TextAlignmentOptions>& TMPro::TMP_Text::dyn_m_lineJustificationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineJustificationStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineJustificationStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<TMPro::TextAlignmentOptions>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector3[] m_textContainerLocalCorners
::ArrayW<UnityEngine::Vector3>& TMPro::TMP_Text::dyn_m_textContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_textContainerLocalCorners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textContainerLocalCorners"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_characterSpacing
float& TMPro::TMP_Text::dyn_m_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_characterSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_characterSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_cSpacing
float& TMPro::TMP_Text::dyn_m_cSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_cSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_monoSpacing
float& TMPro::TMP_Text::dyn_m_monoSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_monoSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_monoSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_wordSpacing
float& TMPro::TMP_Text::dyn_m_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_wordSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wordSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacing
float& TMPro::TMP_Text::dyn_m_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacingDelta
float& TMPro::TMP_Text::dyn_m_lineSpacingDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineSpacingDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacingDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineHeight
float& TMPro::TMP_Text::dyn_m_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineSpacingMax
float& TMPro::TMP_Text::dyn_m_lineSpacingMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineSpacingMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineSpacingMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_paragraphSpacing
float& TMPro::TMP_Text::dyn_m_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_paragraphSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_paragraphSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_charWidthMaxAdj
float& TMPro::TMP_Text::dyn_m_charWidthMaxAdj() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_charWidthMaxAdj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charWidthMaxAdj"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_charWidthAdjDelta
float& TMPro::TMP_Text::dyn_m_charWidthAdjDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_charWidthAdjDelta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charWidthAdjDelta"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableWordWrapping
bool& TMPro::TMP_Text::dyn_m_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_enableWordWrapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableWordWrapping"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCharacterWrappingEnabled
bool& TMPro::TMP_Text::dyn_m_isCharacterWrappingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isCharacterWrappingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCharacterWrappingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isNonBreakingSpace
bool& TMPro::TMP_Text::dyn_m_isNonBreakingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isNonBreakingSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isNonBreakingSpace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isIgnoringAlignment
bool& TMPro::TMP_Text::dyn_m_isIgnoringAlignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isIgnoringAlignment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isIgnoringAlignment"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_wordWrappingRatios
float& TMPro::TMP_Text::dyn_m_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_wordWrappingRatios");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_wordWrappingRatios"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextOverflowModes m_overflowMode
TMPro::TextOverflowModes& TMPro::TMP_Text::dyn_m_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_overflowMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_overflowMode"))->offset;
  return *reinterpret_cast<TMPro::TextOverflowModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstOverflowCharacterIndex
int& TMPro::TMP_Text::dyn_m_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_firstOverflowCharacterIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstOverflowCharacterIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text m_linkedTextComponent
TMPro::TMP_Text*& TMPro::TMP_Text::dyn_m_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_linkedTextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_linkedTextComponent"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isLinkedTextComponent
bool& TMPro::TMP_Text::dyn_m_isLinkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isLinkedTextComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLinkedTextComponent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isTextTruncated
bool& TMPro::TMP_Text::dyn_m_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isTextTruncated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isTextTruncated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableKerning
bool& TMPro::TMP_Text::dyn_m_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_enableKerning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableKerning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_enableExtraPadding
bool& TMPro::TMP_Text::dyn_m_enableExtraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_enableExtraPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_enableExtraPadding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkPaddingRequired
bool& TMPro::TMP_Text::dyn_checkPaddingRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_checkPaddingRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkPaddingRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isRichText
bool& TMPro::TMP_Text::dyn_m_isRichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isRichText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isRichText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_parseCtrlCharacters
bool& TMPro::TMP_Text::dyn_m_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_parseCtrlCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_parseCtrlCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isOverlay
bool& TMPro::TMP_Text::dyn_m_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isOrthographic
bool& TMPro::TMP_Text::dyn_m_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isOrthographic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isOrthographic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCullingEnabled
bool& TMPro::TMP_Text::dyn_m_isCullingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isCullingEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCullingEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ignoreRectMaskCulling
bool& TMPro::TMP_Text::dyn_m_ignoreRectMaskCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_ignoreRectMaskCulling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ignoreRectMaskCulling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ignoreCulling
bool& TMPro::TMP_Text::dyn_m_ignoreCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_ignoreCulling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ignoreCulling"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextureMappingOptions m_horizontalMapping
TMPro::TextureMappingOptions& TMPro::TMP_Text::dyn_m_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_horizontalMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_horizontalMapping"))->offset;
  return *reinterpret_cast<TMPro::TextureMappingOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextureMappingOptions m_verticalMapping
TMPro::TextureMappingOptions& TMPro::TMP_Text::dyn_m_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_verticalMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_verticalMapping"))->offset;
  return *reinterpret_cast<TMPro::TextureMappingOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_uvLineOffset
float& TMPro::TMP_Text::dyn_m_uvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_uvLineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_uvLineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextRenderFlags m_renderMode
TMPro::TextRenderFlags& TMPro::TMP_Text::dyn_m_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_renderMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderMode"))->offset;
  return *reinterpret_cast<TMPro::TextRenderFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.VertexSortingOrder m_geometrySortingOrder
TMPro::VertexSortingOrder& TMPro::TMP_Text::dyn_m_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_geometrySortingOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_geometrySortingOrder"))->offset;
  return *reinterpret_cast<TMPro::VertexSortingOrder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_VertexBufferAutoSizeReduction
bool& TMPro::TMP_Text::dyn_m_VertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_VertexBufferAutoSizeReduction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_VertexBufferAutoSizeReduction"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstVisibleCharacter
int& TMPro::TMP_Text::dyn_m_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_firstVisibleCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstVisibleCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleCharacters
int& TMPro::TMP_Text::dyn_m_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxVisibleCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleCharacters"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleWords
int& TMPro::TMP_Text::dyn_m_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxVisibleWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleWords"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_maxVisibleLines
int& TMPro::TMP_Text::dyn_m_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxVisibleLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxVisibleLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_useMaxVisibleDescender
bool& TMPro::TMP_Text::dyn_m_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_useMaxVisibleDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useMaxVisibleDescender"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_pageToDisplay
int& TMPro::TMP_Text::dyn_m_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_pageToDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pageToDisplay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isNewPage
bool& TMPro::TMP_Text::dyn_m_isNewPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isNewPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isNewPage"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Vector4 m_margin
UnityEngine::Vector4& TMPro::TMP_Text::dyn_m_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_margin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_margin"))->offset;
  return *reinterpret_cast<UnityEngine::Vector4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginLeft
float& TMPro::TMP_Text::dyn_m_marginLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_marginLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginLeft"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginRight
float& TMPro::TMP_Text::dyn_m_marginRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_marginRight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginRight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginWidth
float& TMPro::TMP_Text::dyn_m_marginWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_marginWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_marginHeight
float& TMPro::TMP_Text::dyn_m_marginHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_marginHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_marginHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_width
float& TMPro::TMP_Text::dyn_m_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextInfo m_textInfo
TMPro::TMP_TextInfo*& TMPro::TMP_Text::dyn_m_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textInfo"))->offset;
  return *reinterpret_cast<TMPro::TMP_TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_havePropertiesChanged
bool& TMPro::TMP_Text::dyn_m_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_havePropertiesChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_havePropertiesChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isUsingLegacyAnimationComponent
bool& TMPro::TMP_Text::dyn_m_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isUsingLegacyAnimationComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isUsingLegacyAnimationComponent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform m_transform
UnityEngine::Transform*& TMPro::TMP_Text::dyn_m_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.RectTransform m_rectTransform
UnityEngine::RectTransform*& TMPro::TMP_Text::dyn_m_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rectTransform"))->offset;
  return *reinterpret_cast<UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <autoSizeTextContainer>k__BackingField
bool& TMPro::TMP_Text::dyn_$autoSizeTextContainer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_$autoSizeTextContainer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<autoSizeTextContainer>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_autoSizeTextContainer
bool& TMPro::TMP_Text::dyn_m_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_autoSizeTextContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_autoSizeTextContainer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Mesh m_mesh
UnityEngine::Mesh*& TMPro::TMP_Text::dyn_m_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isVolumetricText
bool& TMPro::TMP_Text::dyn_m_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isVolumetricText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isVolumetricText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAnimator m_spriteAnimator
TMPro::TMP_SpriteAnimator*& TMPro::TMP_Text::dyn_m_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAnimator"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_flexibleHeight
float& TMPro::TMP_Text::dyn_m_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_flexibleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flexibleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_flexibleWidth
float& TMPro::TMP_Text::dyn_m_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_flexibleWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flexibleWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minWidth
float& TMPro::TMP_Text::dyn_m_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_minWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_minHeight
float& TMPro::TMP_Text::dyn_m_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_minHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxWidth
float& TMPro::TMP_Text::dyn_m_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxHeight
float& TMPro::TMP_Text::dyn_m_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.UI.LayoutElement m_LayoutElement
UnityEngine::UI::LayoutElement*& TMPro::TMP_Text::dyn_m_LayoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_LayoutElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutElement"))->offset;
  return *reinterpret_cast<UnityEngine::UI::LayoutElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_preferredWidth
float& TMPro::TMP_Text::dyn_m_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_preferredWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preferredWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_renderedWidth
float& TMPro::TMP_Text::dyn_m_renderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_renderedWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderedWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isPreferredWidthDirty
bool& TMPro::TMP_Text::dyn_m_isPreferredWidthDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isPreferredWidthDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPreferredWidthDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_preferredHeight
float& TMPro::TMP_Text::dyn_m_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_preferredHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_preferredHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_renderedHeight
float& TMPro::TMP_Text::dyn_m_renderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_renderedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_renderedHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isPreferredHeightDirty
bool& TMPro::TMP_Text::dyn_m_isPreferredHeightDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isPreferredHeightDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isPreferredHeightDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCalculatingPreferredValues
bool& TMPro::TMP_Text::dyn_m_isCalculatingPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isCalculatingPreferredValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCalculatingPreferredValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_recursiveCount
int& TMPro::TMP_Text::dyn_m_recursiveCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_recursiveCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_recursiveCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_layoutPriority
int& TMPro::TMP_Text::dyn_m_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_layoutPriority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_layoutPriority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isCalculateSizeRequired
bool& TMPro::TMP_Text::dyn_m_isCalculateSizeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isCalculateSizeRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isCalculateSizeRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isLayoutDirty
bool& TMPro::TMP_Text::dyn_m_isLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isLayoutDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isLayoutDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_verticesAlreadyDirty
bool& TMPro::TMP_Text::dyn_m_verticesAlreadyDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_verticesAlreadyDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_verticesAlreadyDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_layoutAlreadyDirty
bool& TMPro::TMP_Text::dyn_m_layoutAlreadyDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_layoutAlreadyDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_layoutAlreadyDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isAwake
bool& TMPro::TMP_Text::dyn_m_isAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isAwake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isWaitingOnResourceLoad
bool& TMPro::TMP_Text::dyn_m_isWaitingOnResourceLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isWaitingOnResourceLoad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isWaitingOnResourceLoad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isInputParsingRequired
bool& TMPro::TMP_Text::dyn_m_isInputParsingRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isInputParsingRequired");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isInputParsingRequired"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: TMPro.TMP_Text/TMPro.TextInputSources m_inputSource
TMPro::TMP_Text::TextInputSources& TMPro::TMP_Text::dyn_m_inputSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_inputSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inputSource"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text::TextInputSources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String old_text
::Il2CppString*& TMPro::TMP_Text::dyn_old_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_old_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "old_text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontScale
float& TMPro::TMP_Text::dyn_m_fontScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_fontScaleMultiplier
float& TMPro::TMP_Text::dyn_m_fontScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_fontScaleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fontScaleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] m_htmlTag
::ArrayW<::Il2CppChar>& TMPro::TMP_Text::dyn_m_htmlTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_htmlTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_htmlTag"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.RichTextTagAttribute[] m_xmlAttribute
::ArrayW<TMPro::RichTextTagAttribute>& TMPro::TMP_Text::dyn_m_xmlAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_xmlAttribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_xmlAttribute"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::RichTextTagAttribute>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single[] m_attributeParameterValues
::ArrayW<float>& TMPro::TMP_Text::dyn_m_attributeParameterValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_attributeParameterValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_attributeParameterValues"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single tag_LineIndent
float& TMPro::TMP_Text::dyn_tag_LineIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_tag_LineIndent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_LineIndent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single tag_Indent
float& TMPro::TMP_Text::dyn_tag_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_tag_Indent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_Indent"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<System.Single> m_indentStack
TMPro::TMP_RichTextTagStack_1<float>& TMPro::TMP_Text::dyn_m_indentStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_indentStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indentStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean tag_NoParsing
bool& TMPro::TMP_Text::dyn_tag_NoParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_tag_NoParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag_NoParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isParsingText
bool& TMPro::TMP_Text::dyn_m_isParsingText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isParsingText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isParsingText"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Matrix4x4 m_FXMatrix
UnityEngine::Matrix4x4& TMPro::TMP_Text::dyn_m_FXMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_FXMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_FXMatrix"))->offset;
  return *reinterpret_cast<UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_isFXMatrixSet
bool& TMPro::TMP_Text::dyn_m_isFXMatrixSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_isFXMatrixSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isFXMatrixSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Text/TMPro.UnicodeChar[] m_TextParsingBuffer
::ArrayW<TMPro::TMP_Text::UnicodeChar>& TMPro::TMP_Text::dyn_m_TextParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_TextParsingBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TextParsingBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_Text::UnicodeChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_CharacterInfo[] m_internalCharacterInfo
::ArrayW<TMPro::TMP_CharacterInfo>& TMPro::TMP_Text::dyn_m_internalCharacterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_internalCharacterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_internalCharacterInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_CharacterInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] m_input_CharArray
::ArrayW<::Il2CppChar>& TMPro::TMP_Text::dyn_m_input_CharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_input_CharArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_input_CharArray"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_charArray_Length
int& TMPro::TMP_Text::dyn_m_charArray_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_charArray_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charArray_Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_totalCharacterCount
int& TMPro::TMP_Text::dyn_m_totalCharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_totalCharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_totalCharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.WordWrapState m_SavedWordWrapState
TMPro::WordWrapState& TMPro::TMP_Text::dyn_m_SavedWordWrapState() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_SavedWordWrapState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SavedWordWrapState"))->offset;
  return *reinterpret_cast<TMPro::WordWrapState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.WordWrapState m_SavedLineState
TMPro::WordWrapState& TMPro::TMP_Text::dyn_m_SavedLineState() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_SavedLineState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SavedLineState"))->offset;
  return *reinterpret_cast<TMPro::WordWrapState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_characterCount
int& TMPro::TMP_Text::dyn_m_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_characterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_characterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstCharacterOfLine
int& TMPro::TMP_Text::dyn_m_firstCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_firstCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_firstVisibleCharacterOfLine
int& TMPro::TMP_Text::dyn_m_firstVisibleCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_firstVisibleCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstVisibleCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lastCharacterOfLine
int& TMPro::TMP_Text::dyn_m_lastCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lastCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lastVisibleCharacterOfLine
int& TMPro::TMP_Text::dyn_m_lastVisibleCharacterOfLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lastVisibleCharacterOfLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastVisibleCharacterOfLine"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lineNumber
int& TMPro::TMP_Text::dyn_m_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_lineVisibleCharacterCount
int& TMPro::TMP_Text::dyn_m_lineVisibleCharacterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineVisibleCharacterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineVisibleCharacterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_pageNumber
int& TMPro::TMP_Text::dyn_m_pageNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_pageNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pageNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxAscender
float& TMPro::TMP_Text::dyn_m_maxAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxCapHeight
float& TMPro::TMP_Text::dyn_m_maxCapHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxCapHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCapHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxDescender
float& TMPro::TMP_Text::dyn_m_maxDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxDescender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxLineAscender
float& TMPro::TMP_Text::dyn_m_maxLineAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxLineAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxLineAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_maxLineDescender
float& TMPro::TMP_Text::dyn_m_maxLineDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_maxLineDescender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxLineDescender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_startOfLineAscender
float& TMPro::TMP_Text::dyn_m_startOfLineAscender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_startOfLineAscender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_startOfLineAscender"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_lineOffset
float& TMPro::TMP_Text::dyn_m_lineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_lineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.Extents m_meshExtents
TMPro::Extents& TMPro::TMP_Text::dyn_m_meshExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_meshExtents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_meshExtents"))->offset;
  return *reinterpret_cast<TMPro::Extents*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color32 m_htmlColor
UnityEngine::Color32& TMPro::TMP_Text::dyn_m_htmlColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_htmlColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_htmlColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<UnityEngine.Color32> m_colorStack
TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_colorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_colorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<UnityEngine.Color32> m_underlineColorStack
TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_underlineColorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_underlineColorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_underlineColorStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<UnityEngine.Color32> m_strikethroughColorStack
TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_strikethroughColorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_strikethroughColorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_strikethroughColorStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<UnityEngine.Color32> m_highlightColorStack
TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>& TMPro::TMP_Text::dyn_m_highlightColorStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_highlightColorStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_highlightColorStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<UnityEngine::Color32>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_ColorGradient m_colorGradientPreset
TMPro::TMP_ColorGradient*& TMPro::TMP_Text::dyn_m_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_colorGradientPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorGradientPreset"))->offset;
  return *reinterpret_cast<TMPro::TMP_ColorGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<TMPro.TMP_ColorGradient> m_colorGradientStack
TMPro::TMP_RichTextTagStack_1<TMPro::TMP_ColorGradient*>& TMPro::TMP_Text::dyn_m_colorGradientStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_colorGradientStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_colorGradientStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<TMPro::TMP_ColorGradient*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_tabSpacing
float& TMPro::TMP_Text::dyn_m_tabSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_tabSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tabSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_spacing
float& TMPro::TMP_Text::dyn_m_spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<System.Int32> m_styleStack
TMPro::TMP_RichTextTagStack_1<int>& TMPro::TMP_Text::dyn_m_styleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_styleStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_styleStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<System.Int32> m_actionStack
TMPro::TMP_RichTextTagStack_1<int>& TMPro::TMP_Text::dyn_m_actionStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_actionStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actionStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_padding
float& TMPro::TMP_Text::dyn_m_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_padding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_baselineOffset
float& TMPro::TMP_Text::dyn_m_baselineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_baselineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baselineOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_RichTextTagStack`1<System.Single> m_baselineOffsetStack
TMPro::TMP_RichTextTagStack_1<float>& TMPro::TMP_Text::dyn_m_baselineOffsetStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_baselineOffsetStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_baselineOffsetStack"))->offset;
  return *reinterpret_cast<TMPro::TMP_RichTextTagStack_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single m_xAdvance
float& TMPro::TMP_Text::dyn_m_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_xAdvance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextElementType m_textElementType
TMPro::TMP_TextElementType& TMPro::TMP_Text::dyn_m_textElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_textElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_textElementType"))->offset;
  return *reinterpret_cast<TMPro::TMP_TextElementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_TextElement m_cached_TextElement
TMPro::TMP_TextElement*& TMPro::TMP_Text::dyn_m_cached_TextElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_cached_TextElement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cached_TextElement"))->offset;
  return *reinterpret_cast<TMPro::TMP_TextElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Character m_cached_Underline_Character
TMPro::TMP_Character*& TMPro::TMP_Text::dyn_m_cached_Underline_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_cached_Underline_Character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cached_Underline_Character"))->offset;
  return *reinterpret_cast<TMPro::TMP_Character**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_Character m_cached_Ellipsis_Character
TMPro::TMP_Character*& TMPro::TMP_Text::dyn_m_cached_Ellipsis_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_cached_Ellipsis_Character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cached_Ellipsis_Character"))->offset;
  return *reinterpret_cast<TMPro::TMP_Character**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_defaultSpriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_defaultSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_defaultSpriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultSpriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected TMPro.TMP_SpriteAsset m_currentSpriteAsset
TMPro::TMP_SpriteAsset*& TMPro::TMP_Text::dyn_m_currentSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_currentSpriteAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentSpriteAsset"))->offset;
  return *reinterpret_cast<TMPro::TMP_SpriteAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteCount
int& TMPro::TMP_Text::dyn_m_spriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteIndex
int& TMPro::TMP_Text::dyn_m_spriteIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 m_spriteAnimationID
int& TMPro::TMP_Text::dyn_m_spriteAnimationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_spriteAnimationID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_spriteAnimationID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean m_ignoreActiveState
bool& TMPro::TMP_Text::dyn_m_ignoreActiveState() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_m_ignoreActiveState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ignoreActiveState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] k_Power
::ArrayW<float>& TMPro::TMP_Text::dyn_k_Power() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::dyn_k_Power");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k_Power"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_Text.get_text
::Il2CppString* TMPro::TMP_Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_text
void TMPro::TMP_Text::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isRightToLeftText
bool TMPro::TMP_Text::get_isRightToLeftText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isRightToLeftText
void TMPro::TMP_Text::set_isRightToLeftText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_font
TMPro::TMP_FontAsset* TMPro::TMP_Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_font
void TMPro::TMP_Text::set_font(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterial
void TMPro::TMP_Text::set_fontSharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterials
::ArrayW<UnityEngine::Material*> TMPro::TMP_Text::get_fontSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Material*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterials
void TMPro::TMP_Text::set_fontSharedMaterials(::ArrayW<UnityEngine::Material*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterial
void TMPro::TMP_Text::set_fontMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterials
::ArrayW<UnityEngine::Material*> TMPro::TMP_Text::get_fontMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Material*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterials
void TMPro::TMP_Text::set_fontMaterials(::ArrayW<UnityEngine::Material*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_alpha
float TMPro::TMP_Text::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alpha
void TMPro::TMP_Text::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableVertexGradient
bool TMPro::TMP_Text::get_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableVertexGradient
void TMPro::TMP_Text::set_enableVertexGradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradient
TMPro::VertexGradient TMPro::TMP_Text::get_colorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexGradient, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradient
void TMPro::TMP_Text::set_colorGradient(TMPro::VertexGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradientPreset
TMPro::TMP_ColorGradient* TMPro::TMP_Text::get_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_ColorGradient*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradientPreset
void TMPro::TMP_Text::set_colorGradientPreset(TMPro::TMP_ColorGradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Text::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_spriteAsset
void TMPro::TMP_Text::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_tintAllSprites
bool TMPro::TMP_Text::get_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_tintAllSprites
void TMPro::TMP_Text::set_tintAllSprites(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overrideColorTags
bool TMPro::TMP_Text::get_overrideColorTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overrideColorTags
void TMPro::TMP_Text::set_overrideColorTags(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_faceColor
UnityEngine::Color32 TMPro::TMP_Text::get_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_faceColor
void TMPro::TMP_Text::set_faceColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineColor
UnityEngine::Color32 TMPro::TMP_Text::get_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineColor
void TMPro::TMP_Text::set_outlineColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineWidth
float TMPro::TMP_Text::get_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineWidth
void TMPro::TMP_Text::set_outlineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSize
float TMPro::TMP_Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSize
void TMPro::TMP_Text::set_fontSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontScale
float TMPro::TMP_Text::get_fontScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_fontWeight
TMPro::FontWeight TMPro::TMP_Text::get_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontWeight, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontWeight
void TMPro::TMP_Text::set_fontWeight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pixelsPerUnit
float TMPro::TMP_Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableAutoSizing
bool TMPro::TMP_Text::get_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableAutoSizing
void TMPro::TMP_Text::set_enableAutoSizing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMin
float TMPro::TMP_Text::get_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMin
void TMPro::TMP_Text::set_fontSizeMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMax
float TMPro::TMP_Text::get_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMax
void TMPro::TMP_Text::set_fontSizeMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontStyle
TMPro::FontStyles TMPro::TMP_Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontStyles, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontStyle
void TMPro::TMP_Text::set_fontStyle(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingBold
bool TMPro::TMP_Text::get_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingBold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingBold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_alignment
TMPro::TextAlignmentOptions TMPro::TMP_Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextAlignmentOptions, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alignment
void TMPro::TMP_Text::set_alignment(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterSpacing
float TMPro::TMP_Text::get_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterSpacing
void TMPro::TMP_Text::set_characterSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordSpacing
float TMPro::TMP_Text::get_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordSpacing
void TMPro::TMP_Text::set_wordSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacing
float TMPro::TMP_Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacing
void TMPro::TMP_Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacingAdjustment
float TMPro::TMP_Text::get_lineSpacingAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacingAdjustment
void TMPro::TMP_Text::set_lineSpacingAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_paragraphSpacing
float TMPro::TMP_Text::get_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_paragraphSpacing
void TMPro::TMP_Text::set_paragraphSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterWidthAdjustment
float TMPro::TMP_Text::get_characterWidthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterWidthAdjustment
void TMPro::TMP_Text::set_characterWidthAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableWordWrapping
bool TMPro::TMP_Text::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableWordWrapping
void TMPro::TMP_Text::set_enableWordWrapping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordWrappingRatios
float TMPro::TMP_Text::get_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordWrappingRatios
void TMPro::TMP_Text::set_wordWrappingRatios(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overflowMode
TMPro::TextOverflowModes TMPro::TMP_Text::get_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextOverflowModes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overflowMode
void TMPro::TMP_Text::set_overflowMode(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextOverflowing
bool TMPro::TMP_Text::get_isTextOverflowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextOverflowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextOverflowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_firstOverflowCharacterIndex
int TMPro::TMP_Text::get_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstOverflowCharacterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstOverflowCharacterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_linkedTextComponent
TMPro::TMP_Text* TMPro::TMP_Text::get_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_linkedTextComponent
void TMPro::TMP_Text::set_linkedTextComponent(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isLinkedTextComponent
bool TMPro::TMP_Text::get_isLinkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isLinkedTextComponent
void TMPro::TMP_Text::set_isLinkedTextComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextTruncated
bool TMPro::TMP_Text::get_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextTruncated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextTruncated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableKerning
bool TMPro::TMP_Text::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableKerning
void TMPro::TMP_Text::set_enableKerning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_extraPadding
bool TMPro::TMP_Text::get_extraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_extraPadding
void TMPro::TMP_Text::set_extraPadding(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_richText
bool TMPro::TMP_Text::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_richText
void TMPro::TMP_Text::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_parseCtrlCharacters
bool TMPro::TMP_Text::get_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_parseCtrlCharacters
void TMPro::TMP_Text::set_parseCtrlCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOverlay
bool TMPro::TMP_Text::get_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOverlay
void TMPro::TMP_Text::set_isOverlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOrthographic
bool TMPro::TMP_Text::get_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOrthographic
void TMPro::TMP_Text::set_isOrthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableCulling
bool TMPro::TMP_Text::get_enableCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableCulling
void TMPro::TMP_Text::set_enableCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreRectMaskCulling
bool TMPro::TMP_Text::get_ignoreRectMaskCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreRectMaskCulling
void TMPro::TMP_Text::set_ignoreRectMaskCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreVisibility
bool TMPro::TMP_Text::get_ignoreVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreVisibility
void TMPro::TMP_Text::set_ignoreVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_horizontalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_horizontalMapping
void TMPro::TMP_Text::set_horizontalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_verticalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_verticalMapping
void TMPro::TMP_Text::set_verticalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mappingUvLineOffset
float TMPro::TMP_Text::get_mappingUvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_mappingUvLineOffset
void TMPro::TMP_Text::set_mappingUvLineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_renderMode
TMPro::TextRenderFlags TMPro::TMP_Text::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextRenderFlags, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_renderMode
void TMPro::TMP_Text::set_renderMode(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_geometrySortingOrder
TMPro::VertexSortingOrder TMPro::TMP_Text::get_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexSortingOrder, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_geometrySortingOrder
void TMPro::TMP_Text::set_geometrySortingOrder(TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_vertexBufferAutoSizeReduction
bool TMPro::TMP_Text::get_vertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_vertexBufferAutoSizeReduction
void TMPro::TMP_Text::set_vertexBufferAutoSizeReduction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_firstVisibleCharacter
int TMPro::TMP_Text::get_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_firstVisibleCharacter
void TMPro::TMP_Text::set_firstVisibleCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleCharacters
int TMPro::TMP_Text::get_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleCharacters
void TMPro::TMP_Text::set_maxVisibleCharacters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleWords
int TMPro::TMP_Text::get_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleWords
void TMPro::TMP_Text::set_maxVisibleWords(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleLines
int TMPro::TMP_Text::get_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleLines
void TMPro::TMP_Text::set_maxVisibleLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_useMaxVisibleDescender
bool TMPro::TMP_Text::get_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_useMaxVisibleDescender
void TMPro::TMP_Text::set_useMaxVisibleDescender(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pageToDisplay
int TMPro::TMP_Text::get_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_pageToDisplay
void TMPro::TMP_Text::set_pageToDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_margin
UnityEngine::Vector4 TMPro::TMP_Text::get_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_margin
void TMPro::TMP_Text::set_margin(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::get_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_havePropertiesChanged
bool TMPro::TMP_Text::get_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_havePropertiesChanged
void TMPro::TMP_Text::set_havePropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingLegacyAnimationComponent
bool TMPro::TMP_Text::get_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isUsingLegacyAnimationComponent
void TMPro::TMP_Text::set_isUsingLegacyAnimationComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_autoSizeTextContainer
bool TMPro::TMP_Text::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_autoSizeTextContainer
void TMPro::TMP_Text::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mesh
UnityEngine::Mesh* TMPro::TMP_Text::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_isVolumetricText
bool TMPro::TMP_Text::get_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isVolumetricText
void TMPro::TMP_Text::set_isVolumetricText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_bounds
UnityEngine::Bounds TMPro::TMP_Text::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_textBounds
UnityEngine::Bounds TMPro::TMP_Text::get_textBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAnimator
TMPro::TMP_SpriteAnimator* TMPro::TMP_Text::get_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAnimator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleHeight
float TMPro::TMP_Text::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleWidth
float TMPro::TMP_Text::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minWidth
float TMPro::TMP_Text::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minHeight
float TMPro::TMP_Text::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxWidth
float TMPro::TMP_Text::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxHeight
float TMPro::TMP_Text::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutElement
UnityEngine::UI::LayoutElement* TMPro::TMP_Text::get_layoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::LayoutElement*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredWidth
float TMPro::TMP_Text::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredHeight
float TMPro::TMP_Text::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedWidth
float TMPro::TMP_Text::get_renderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedHeight
float TMPro::TMP_Text::get_renderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutPriority
int TMPro::TMP_Text::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.LoadFontAsset
void TMPro::TMP_Text::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterial
void TMPro::TMP_Text::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterial
UnityEngine::Material* TMPro::TMP_Text::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.SetFontBaseMaterial
void TMPro::TMP_Text::SetFontBaseMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFontBaseMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFontBaseMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetSharedMaterials
::ArrayW<UnityEngine::Material*> TMPro::TMP_Text::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Material*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterials
void TMPro::TMP_Text::SetSharedMaterials(::ArrayW<UnityEngine::Material*> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterials
::ArrayW<UnityEngine::Material*> TMPro::TMP_Text::GetMaterials(::ArrayW<UnityEngine::Material*> mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Material*>, false>(___instance_arg, ___internal__method, mats);
}
// Autogenerated method: TMPro.TMP_Text.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_Text::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CreateMaterialInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(___instance_arg, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_Text.SetVertexColorGradient
void TMPro::TMP_Text::SetVertexColorGradient(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertexColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(::ArrayW<int> order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetFaceColor
void TMPro::TMP_Text::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineColor
void TMPro::TMP_Text::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineThickness
void TMPro::TMP_Text::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TMP_Text.SetShaderDepth
void TMPro::TMP_Text::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetCulling
void TMPro::TMP_Text::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetTextContainerLocalCorners
::ArrayW<UnityEngine::Vector3> TMPro::TMP_Text::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<UnityEngine::Vector3>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate(bool ignoreActiveState) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreActiveState)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ignoreActiveState);
}
// Autogenerated method: TMPro.TMP_Text.SetTextInternal
void TMPro::TMP_Text::SetTextInternal(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.UpdateGeometry
void TMPro::TMP_Text::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flags);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetVertices
void TMPro::TMP_Text::SetVertices(::ArrayW<UnityEngine::Vector3> vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vertices);
}
// Autogenerated method: TMPro.TMP_Text.UpdateMeshPadding
void TMPro::TMP_Text::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeColor
void TMPro::TMP_Text::InternalCrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeAlpha
void TMPro::TMP_Text::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text.ParseInputText
void TMPro::TMP_Text::ParseInputText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ParseInputText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInputText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, bool syncTextInputBox) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(syncTextInputBox)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, syncTextInputBox);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, arg0);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, arg0, arg1);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1, float arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text, arg0, arg1, arg2);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::ArrayW<::Il2CppChar> sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::ArrayW<::Il2CppChar> sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::ArrayW<int> sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetTextArrayToCharArray
void TMPro::TMP_Text::SetTextArrayToCharArray(::ArrayW<::Il2CppChar> sourceText, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextArrayToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextArrayToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText, byref(charBuffer));
}
// Autogenerated method: TMPro.TMP_Text.StringToCharArray
void TMPro::TMP_Text::StringToCharArray(::Il2CppString* sourceText, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText, byref(charBuffer));
}
// Autogenerated method: TMPro.TMP_Text.StringBuilderToIntArray
void TMPro::TMP_Text::StringBuilderToIntArray(System::Text::StringBuilder* sourceText, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringBuilderToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringBuilderToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sourceText, byref(charBuffer));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<::Il2CppString*> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<::ArrayW<int>> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<::ArrayW<::Il2CppChar>> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(ByRef<System::Text::StringBuilder*> sourceText, int srcIndex, ByRef<int> srcOffset, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(srcOffset), byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<::Il2CppString*> sourceText, int srcIndex, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<::ArrayW<int>> sourceText, int srcIndex, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<::ArrayW<::Il2CppChar>> sourceText, int srcIndex, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(ByRef<System::Text::StringBuilder*> sourceText, int srcIndex, ByRef<::ArrayW<TMPro::TMP_Text::UnicodeChar>> charBuffer, ByRef<int> writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(sourceText), srcIndex, byref(charBuffer), byref(writeIndex));
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(ByRef<::Il2CppString*> text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(text), tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(ByRef<::ArrayW<::Il2CppChar>> text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(text), tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(ByRef<::ArrayW<int>> text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(text), tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(ByRef<System::Text::StringBuilder*> text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(text), tag, index);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(ByRef<::Il2CppString*> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(ByRef<::ArrayW<::Il2CppChar>> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(ByRef<::ArrayW<int>> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(ByRef<System::Text::StringBuilder*> text, int index, ByRef<int> closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(text), index, byref(closeIndex));
}
// Autogenerated method: TMPro.TMP_Text.AddFloatToCharArray
void TMPro::TMP_Text::AddFloatToCharArray(double number, ByRef<int> index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddFloatToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFloatToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(precision)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, number, byref(index), precision);
}
// Autogenerated method: TMPro.TMP_Text.AddIntToCharArray
void TMPro::TMP_Text::AddIntToCharArray(double number, ByRef<int> index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddIntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(precision)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, number, byref(index), precision);
}
// Autogenerated method: TMPro.TMP_Text.SetArraySizes
int TMPro::TMP_Text::SetArraySizes(::ArrayW<TMPro::TMP_Text::UnicodeChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, chars);
}
// Autogenerated method: TMPro.TMP_Text.GenerateTextMesh
void TMPro::TMP_Text::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text, float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, text, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.CalculatePreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::CalculatePreferredValues(float defaultFontSize, UnityEngine::Vector2 marginSize, bool ignoreTextAutoSizing) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CalculatePreferredValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultFontSize), ::il2cpp_utils::ExtractType(marginSize), ::il2cpp_utils::ExtractType(ignoreTextAutoSizing)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, defaultFontSize, marginSize, ignoreTextAutoSizing);
}
// Autogenerated method: TMPro.TMP_Text.GetCompoundBounds
UnityEngine::Bounds TMPro::TMP_Text::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(___instance_arg, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.AdjustLineOffset
void TMPro::TMP_Text::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AdjustLineOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractType(offset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TMP_Text.ResizeLineExtents
void TMPro::TMP_Text::ResizeLineExtents(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ResizeLineExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeLineExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_Text.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.ComputeMarginSize
void TMPro::TMP_Text::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SaveWordWrappingState
void TMPro::TMP_Text::SaveWordWrappingState(ByRef<TMPro::WordWrapState> state, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(state), index, count);
}
// Autogenerated method: TMPro.TMP_Text.RestoreWordWrappingState
int TMPro::TMP_Text::RestoreWordWrappingState(ByRef<TMPro::WordWrapState> state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::RestoreWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(state));
}
// Autogenerated method: TMPro.TMP_Text.SaveGlyphVertexInfo
void TMPro::TMP_Text::SaveGlyphVertexInfo(float padding, float style_padding, UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveGlyphVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveGlyphVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(style_padding), ::il2cpp_utils::ExtractType(vertexColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, padding, style_padding, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.SaveSpriteVertexInfo
void TMPro::TMP_Text::SaveSpriteVertexInfo(UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveSpriteVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveSpriteVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4), ::il2cpp_utils::ExtractType(isVolumetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, i, index_X4, isVolumetric);
}
// Autogenerated method: TMPro.TMP_Text.FillSpriteVertexBuffers
void TMPro::TMP_Text::FillSpriteVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillSpriteVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSpriteVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.DrawUnderlineMesh
void TMPro::TMP_Text::DrawUnderlineMesh(UnityEngine::Vector3 start, UnityEngine::Vector3 end, ByRef<int> index, float startScale, float endScale, float maxScale, float sdfScale, UnityEngine::Color32 underlineColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawUnderlineMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawUnderlineMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startScale), ::il2cpp_utils::ExtractType(endScale), ::il2cpp_utils::ExtractType(maxScale), ::il2cpp_utils::ExtractType(sdfScale), ::il2cpp_utils::ExtractType(underlineColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, start, end, byref(index), startScale, endScale, maxScale, sdfScale, underlineColor);
}
// Autogenerated method: TMPro.TMP_Text.DrawTextHighlight
void TMPro::TMP_Text::DrawTextHighlight(UnityEngine::Vector3 start, UnityEngine::Vector3 end, ByRef<int> index, UnityEngine::Color32 highlightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawTextHighlight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawTextHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(highlightColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, start, end, byref(index), highlightColor);
}
// Autogenerated method: TMPro.TMP_Text.LoadDefaultSettings
void TMPro::TMP_Text::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetSpecialCharacters
void TMPro::TMP_Text::GetSpecialCharacters(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceTagWithCharacter
void TMPro::TMP_Text::ReplaceTagWithCharacter(::ArrayW<int> chars, int insertionIndex, int tagLength, ::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceTagWithCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceTagWithCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(insertionIndex), ::il2cpp_utils::ExtractType(tagLength), ::il2cpp_utils::ExtractType(c)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, chars, insertionIndex, tagLength, c);
}
// Autogenerated method: TMPro.TMP_Text.GetFontAssetForWeight
TMPro::TMP_FontAsset* TMPro::TMP_Text::GetFontAssetForWeight(int fontWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetFontAssetForWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFontAssetForWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontWeight)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(___instance_arg, ___internal__method, fontWeight);
}
// Autogenerated method: TMPro.TMP_Text.SetActiveSubMeshes
void TMPro::TMP_Text::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.ClearSubMeshObjects
void TMPro::TMP_Text::ClearSubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearSubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh(bool uploadGeometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadGeometry)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, uploadGeometry);
}
// Autogenerated method: TMPro.TMP_Text.GetParsedText
::Il2CppString* TMPro::TMP_Text::GetParsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetParsedText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
UnityEngine::Vector2 TMPro::TMP_Text::PackUV(float x, float y, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(scale)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(___instance_arg, ___internal__method, x, y, scale);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
float TMPro::TMP_Text::PackUV(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, x, y);
}
// Autogenerated method: TMPro.TMP_Text.InternalUpdate
void TMPro::TMP_Text::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.HexToInt
int TMPro::TMP_Text::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::ArrayW<::Il2CppChar> hexChars, int tagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(tagCount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(___instance_arg, ___internal__method, hexChars, tagCount);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::ArrayW<::Il2CppChar> hexChars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(___instance_arg, ___internal__method, hexChars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.GetAttributeParameters
int TMPro::TMP_Text::GetAttributeParameters(::ArrayW<::Il2CppChar> chars, int startIndex, int length, ByRef<::ArrayW<float>> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetAttributeParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(parameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, chars, startIndex, length, byref(parameters));
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::ArrayW<::Il2CppChar> chars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, chars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::ArrayW<::Il2CppChar> chars, int startIndex, int length, ByRef<int> lastIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method, chars, startIndex, length, byref(lastIndex));
}
// Autogenerated method: TMPro.TMP_Text.ValidateHtmlTag
bool TMPro::TMP_Text::ValidateHtmlTag(::ArrayW<TMPro::TMP_Text::UnicodeChar> chars, int startIndex, ByRef<int> endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ValidateHtmlTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateHtmlTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, chars, startIndex, byref(endIndex));
}
// Autogenerated method: TMPro.TMP_Text.get_color
UnityEngine::Color TMPro::TMP_Text::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_color
void TMPro::TMP_Text::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_transform
UnityEngine::Transform* TMPro::TMP_Text::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_rectTransform
UnityEngine::RectTransform* TMPro::TMP_Text::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text..cctor
void TMPro::TMP_Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeColor
void TMPro::TMP_Text::CrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeAlpha
void TMPro::TMP_Text::CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TMPro.TextInputSources
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources Text
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "Text"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources Text
void TMPro::TMP_Text::TextInputSources::_set_Text(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetText
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetText"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetText
void TMPro::TMP_Text::TextInputSources::_set_SetText(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetText", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetCharArray
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetCharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetCharArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources SetCharArray
void TMPro::TMP_Text::TextInputSources::_set_SetCharArray(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetCharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetCharArray", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TMPro.TextInputSources String
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "String"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TMPro.TextInputSources String
void TMPro::TMP_Text::TextInputSources::_set_String(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "String", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::TMP_Text::TextInputSources::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextElementType
#include "TMPro/TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Character
TMPro::TextElementType TMPro::TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Character
void TMPro::TextElementType::_set_Character(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Sprite
TMPro::TextElementType TMPro::TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Sprite
void TMPro::TextElementType::_set_Sprite(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Sprite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t& TMPro::TextElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected TMPro.TextElementType m_ElementType
TMPro::TextElementType& TMPro::TMP_TextElement::dyn_m_ElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::dyn_m_ElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ElementType"))->offset;
  return *reinterpret_cast<TMPro::TextElementType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_Unicode
uint& TMPro::TMP_TextElement::dyn_m_Unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::dyn_m_Unicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Unicode"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextCore.Glyph m_Glyph
UnityEngine::TextCore::Glyph*& TMPro::TMP_TextElement::dyn_m_Glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::dyn_m_Glyph");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Glyph"))->offset;
  return *reinterpret_cast<UnityEngine::TextCore::Glyph**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 m_GlyphIndex
uint& TMPro::TMP_TextElement::dyn_m_GlyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::dyn_m_GlyphIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GlyphIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Scale
float& TMPro::TMP_TextElement::dyn_m_Scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::dyn_m_Scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextElement.get_elementType
TMPro::TextElementType TMPro::TMP_TextElement::get_elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_elementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextElementType, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.get_unicode
uint TMPro::TMP_TextElement::get_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_unicode
void TMPro::TMP_TextElement::set_unicode(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyph
UnityEngine::TextCore::Glyph* TMPro::TMP_TextElement::get_glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::Glyph*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyph
void TMPro::TMP_TextElement::set_glyph(UnityEngine::TextCore::Glyph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyphIndex
uint TMPro::TMP_TextElement::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyphIndex
void TMPro::TMP_TextElement::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_scale
float TMPro::TMP_TextElement::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_scale
void TMPro::TMP_TextElement::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement_Legacy
#include "TMPro/TMP_TextElement_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
int& TMPro::TMP_TextElement_Legacy::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
float& TMPro::TMP_TextElement_Legacy::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
float& TMPro::TMP_TextElement_Legacy::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& TMPro::TMP_TextElement_Legacy::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& TMPro::TMP_TextElement_Legacy::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xOffset
float& TMPro::TMP_TextElement_Legacy::dyn_xOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_xOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single yOffset
float& TMPro::TMP_TextElement_Legacy::dyn_yOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_yOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single xAdvance
float& TMPro::TMP_TextElement_Legacy::dyn_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_xAdvance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xAdvance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single scale
float& TMPro::TMP_TextElement_Legacy::dyn_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement_Legacy::dyn_scale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
void TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
void TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative", value));
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_Text textComponent
TMPro::TMP_Text*& TMPro::TMP_TextInfo::dyn_textComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_textComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textComponent"))->offset;
  return *reinterpret_cast<TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 characterCount
int& TMPro::TMP_TextInfo::dyn_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_characterCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spriteCount
int& TMPro::TMP_TextInfo::dyn_spriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_spriteCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spriteCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 spaceCount
int& TMPro::TMP_TextInfo::dyn_spaceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_spaceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spaceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 wordCount
int& TMPro::TMP_TextInfo::dyn_wordCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_wordCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wordCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 linkCount
int& TMPro::TMP_TextInfo::dyn_linkCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_linkCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineCount
int& TMPro::TMP_TextInfo::dyn_lineCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_lineCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 pageCount
int& TMPro::TMP_TextInfo::dyn_pageCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_pageCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 materialCount
int& TMPro::TMP_TextInfo::dyn_materialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_materialCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_CharacterInfo[] characterInfo
::ArrayW<TMPro::TMP_CharacterInfo>& TMPro::TMP_TextInfo::dyn_characterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_characterInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characterInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_CharacterInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_WordInfo[] wordInfo
::ArrayW<TMPro::TMP_WordInfo>& TMPro::TMP_TextInfo::dyn_wordInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_wordInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wordInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_WordInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_LinkInfo[] linkInfo
::ArrayW<TMPro::TMP_LinkInfo>& TMPro::TMP_TextInfo::dyn_linkInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_linkInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_LinkInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_LineInfo[] lineInfo
::ArrayW<TMPro::TMP_LineInfo>& TMPro::TMP_TextInfo::dyn_lineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_lineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_LineInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_PageInfo[] pageInfo
::ArrayW<TMPro::TMP_PageInfo>& TMPro::TMP_TextInfo::dyn_pageInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_pageInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pageInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_PageInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TMP_MeshInfo[] meshInfo
::ArrayW<TMPro::TMP_MeshInfo>& TMPro::TMP_TextInfo::dyn_meshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_meshInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_MeshInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_MeshInfo[] m_CachedMeshInfo
::ArrayW<TMPro::TMP_MeshInfo>& TMPro::TMP_TextInfo::dyn_m_CachedMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::dyn_m_CachedMeshInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedMeshInfo"))->offset;
  return *reinterpret_cast<::ArrayW<TMPro::TMP_MeshInfo>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextInfo..cctor
void TMPro::TMP_TextInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.Clear
void TMPro::TMP_TextInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearMeshInfo
void TMPro::TMP_TextInfo::ClearMeshInfo(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMesh)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearAllMeshInfo
void TMPro::TMP_TextInfo::ClearAllMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearAllMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ResetVertexLayout
void TMPro::TMP_TextInfo::ResetVertexLayout(bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ResetVertexLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetVertexLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVolumetric)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, isVolumetric);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearUnusedVertices
void TMPro::TMP_TextInfo::ClearUnusedVertices(::ArrayW<TMPro::MaterialReference> materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearLineInfo
void TMPro::TMP_TextInfo::ClearLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.CopyMeshInfoVertexData
::ArrayW<TMPro::TMP_MeshInfo> TMPro::TMP_TextInfo::CopyMeshInfoVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::CopyMeshInfoVertexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyMeshInfoVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<TMPro::TMP_MeshInfo>, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextParsingUtilities
#include "TMPro/TMP_TextParsingUtilities.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextParsingUtilities*>("TMPro", "TMP_TextParsingUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
void TMPro::TMP_TextParsingUtilities::_set_s_Instance(TMPro::TMP_TextParsingUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringL
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringL
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringU
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringU
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.get_instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextParsingUtilities*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities..cctor
void TMPro::TMP_TextParsingUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCode
uint TMPro::TMP_TextParsingUtilities::GetHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCodeCaseSensitive
int TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCodeCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsHighSurrogate
bool TMPro::TMP_TextParsingUtilities::IsHighSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsLowSurrogate
bool TMPro::TMP_TextParsingUtilities::IsLowSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition None
TMPro::CaretPosition TMPro::CaretPosition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition None
void TMPro::CaretPosition::_set_None(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Left
TMPro::CaretPosition TMPro::CaretPosition::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Left
void TMPro::CaretPosition::_set_Left(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Right
TMPro::CaretPosition TMPro::CaretPosition::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Right
void TMPro::CaretPosition::_set_Right(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::CaretPosition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretInfo
#include "TMPro/CaretInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 index
int& TMPro::CaretInfo::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretInfo::dyn_index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.CaretPosition position
TMPro::CaretPosition& TMPro::CaretInfo::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretInfo::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<TMPro::CaretPosition*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.CaretInfo..ctor
// ABORTED elsewhere.  TMPro::CaretInfo::CaretInfo(int index, TMPro::CaretPosition position)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextUtilities
#include "TMPro/TMP_TextUtilities.hpp"
// Including type: TMPro.TMP_TextUtilities/TMPro.LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] m_rectWorldCorners
::ArrayW<UnityEngine::Vector3> TMPro::TMP_TextUtilities::_get_m_rectWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_m_rectWorldCorners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<UnityEngine::Vector3>>("TMPro", "TMP_TextUtilities", "m_rectWorldCorners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] m_rectWorldCorners
void TMPro::TMP_TextUtilities::_set_m_rectWorldCorners(::ArrayW<UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_m_rectWorldCorners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "m_rectWorldCorners", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringL
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringL
void TMPro::TMP_TextUtilities::_set_k_lookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringU
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringU
void TMPro::TMP_TextUtilities::_set_k_lookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextUtilities..cctor
void TMPro::TMP_TextUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera, ByRef<TMPro::CaretPosition> cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractIndependentType<TMPro::CaretPosition&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera, byref(cursor));
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLine
int TMPro::TMP_TextUtilities::FindNearestLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacterOnLine
int TMPro::TMP_TextUtilities::FindNearestCharacterOnLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, int line, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacterOnLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacterOnLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, line, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IsIntersectingRectTransform
bool TMPro::TMP_TextUtilities::IsIntersectingRectTransform(UnityEngine::RectTransform* rectTransform, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IsIntersectingRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IsIntersectingRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingCharacter
int TMPro::TMP_TextUtilities::FindIntersectingCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacter
int TMPro::TMP_TextUtilities::FindNearestCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingWord
int TMPro::TMP_TextUtilities::FindIntersectingWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestWord
int TMPro::TMP_TextUtilities::FindNearestWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLine
int TMPro::TMP_TextUtilities::FindIntersectingLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLink
int TMPro::TMP_TextUtilities::FindIntersectingLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLink
int TMPro::TMP_TextUtilities::FindNearestLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.PointIntersectRectangle
bool TMPro::TMP_TextUtilities::PointIntersectRectangle(UnityEngine::Vector3 m, UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 c, UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::PointIntersectRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "PointIntersectRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m, a, b, c, d);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle
bool TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle(UnityEngine::Transform* transform, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, ByRef<UnityEngine::Vector3> worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, screenPoint, cam, byref(worldPoint));
}
// Autogenerated method: TMPro.TMP_TextUtilities.IntersectLinePlane
bool TMPro::TMP_TextUtilities::IntersectLinePlane(TMPro::TMP_TextUtilities::LineSegment line, UnityEngine::Vector3 point, UnityEngine::Vector3 normal, ByRef<UnityEngine::Vector3> intersectingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IntersectLinePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IntersectLinePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, line, point, normal, byref(intersectingPoint));
}
// Autogenerated method: TMPro.TMP_TextUtilities.DistanceToLine
float TMPro::TMP_TextUtilities::DistanceToLine(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::DistanceToLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "DistanceToLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, point);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToLowerFast
::Il2CppChar TMPro::TMP_TextUtilities::ToLowerFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToLowerFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToLowerFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperFast
::Il2CppChar TMPro::TMP_TextUtilities::ToUpperFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToUpperFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCode
int TMPro::TMP_TextUtilities::GetSimpleHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase
uint TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCodeLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.HexToInt
int TMPro::TMP_TextUtilities::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_TextUtilities.StringHexToInt
int TMPro::TMP_TextUtilities::StringHexToInt(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::StringHexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "StringHexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextUtilities/TMPro.LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Point1
UnityEngine::Vector3& TMPro::TMP_TextUtilities::LineSegment::dyn_Point1() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::LineSegment::dyn_Point1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point1"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 Point2
UnityEngine::Vector3& TMPro::TMP_TextUtilities::LineSegment::dyn_Point2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::LineSegment::dyn_Point2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Point2"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_TextUtilities/TMPro.LineSegment..ctor
// ABORTED elsewhere.  TMPro::TMP_TextUtilities::LineSegment::LineSegment(UnityEngine::Vector3 p1, UnityEngine::Vector3 p2)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateManager
#include "TMPro/TMP_UpdateManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateManager s_Instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateManager*>("TMPro", "TMP_UpdateManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateManager s_Instance
void TMPro::TMP_UpdateManager::_set_s_Instance(TMPro::TMP_UpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_LayoutRebuildQueue
System::Collections::Generic::List_1<TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_LayoutRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_LayoutRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutRebuildQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_LayoutQueueLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_UpdateManager::dyn_m_LayoutQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_LayoutQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutQueueLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_GraphicRebuildQueue
System::Collections::Generic::List_1<TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_GraphicRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_GraphicRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicRebuildQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_GraphicQueueLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_UpdateManager::dyn_m_GraphicQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_GraphicQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicQueueLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<TMPro.TMP_Text> m_InternalUpdateQueue
System::Collections::Generic::List_1<TMPro::TMP_Text*>*& TMPro::TMP_UpdateManager::dyn_m_InternalUpdateQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_InternalUpdateQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalUpdateQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<TMPro::TMP_Text*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_InternalUpdateLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_UpdateManager::dyn_m_InternalUpdateLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::dyn_m_InternalUpdateLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InternalUpdateLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_UpdateManager.get_instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForLayoutRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForGraphicRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnBeginFrameRendering
void TMPro::TMP_UpdateManager::OnBeginFrameRendering(UnityEngine::Rendering::ScriptableRenderContext renderContext, ::ArrayW<UnityEngine::Camera*> cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnBeginFrameRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginFrameRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderContext), ::il2cpp_utils::ExtractType(cameras)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, renderContext, cameras);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnCameraPreCull
void TMPro::TMP_UpdateManager::OnCameraPreCull(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnCameraPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cam);
}
// Autogenerated method: TMPro.TMP_UpdateManager.DoRebuilds
void TMPro::TMP_UpdateManager::DoRebuilds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::DoRebuilds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoRebuilds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextElementForRebuild
void TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, textObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateRegistry
#include "TMPro/TMP_UpdateRegistry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateRegistry s_Instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateRegistry*>("TMPro", "TMP_UpdateRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateRegistry s_Instance
void TMPro::TMP_UpdateRegistry::_set_s_Instance(TMPro::TMP_UpdateRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateRegistry", "s_Instance", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UI.ICanvasElement> m_LayoutRebuildQueue
System::Collections::Generic::List_1<UnityEngine::UI::ICanvasElement*>*& TMPro::TMP_UpdateRegistry::dyn_m_LayoutRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::dyn_m_LayoutRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutRebuildQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::UI::ICanvasElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_LayoutQueueLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_UpdateRegistry::dyn_m_LayoutQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::dyn_m_LayoutQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LayoutQueueLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UI.ICanvasElement> m_GraphicRebuildQueue
System::Collections::Generic::List_1<UnityEngine::UI::ICanvasElement*>*& TMPro::TMP_UpdateRegistry::dyn_m_GraphicRebuildQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::dyn_m_GraphicRebuildQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicRebuildQueue"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::UI::ICanvasElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,System.Int32> m_GraphicQueueLookup
System::Collections::Generic::Dictionary_2<int, int>*& TMPro::TMP_UpdateRegistry::dyn_m_GraphicQueueLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::dyn_m_GraphicQueueLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_GraphicQueueLookup"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.get_instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForCanvasRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForCanvasRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForMeshRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForMeshRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.UnRegisterCanvasElementForRebuild
void TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DistanceTransform_EventTypes
#include "TMPro/Compute_DistanceTransform_EventTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Processing"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
void TMPro::Compute_DistanceTransform_EventTypes::_set_Processing(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Processing", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
void TMPro::Compute_DistanceTransform_EventTypes::_set_Completed(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Completed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& TMPro::Compute_DistanceTransform_EventTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_EventManager
#include "TMPro/TMPro_EventManager.hpp"
// Including type: TMPro.FastAction`2
#include "TMPro/FastAction_2.hpp"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.FastAction`3
#include "TMPro/FastAction_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.FastAction`1
#include "TMPro/FastAction_1.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>*>("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT(TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>*>("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshPro*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
void TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT(TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
TMPro::FastAction_1<bool>* TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<bool>*>("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT(TMPro::FastAction_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<TMPro::TMP_ColorGradient*>*>("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT(TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
void TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
TMPro::FastAction* TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
void TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
TMPro::FastAction_1<UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT(TMPro::FastAction_1<UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT", value));
}
// Autogenerated method: TMPro.TMPro_EventManager..cctor
void TMPro::TMPro_EventManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_PRE_RENDER_OBJECT_CHANGED
void TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_PRE_RENDER_OBJECT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_MATERIAL_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, mat);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_FONT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED(bool isChanged, TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_FONT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, font);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_SPRITE_ASSET_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_SPRITE_ASSET_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshPro* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_DRAG_AND_DROP_MATERIAL_CHANGED
void TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED(UnityEngine::GameObject* sender, UnityEngine::Material* currentMaterial, UnityEngine::Material* newMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_DRAG_AND_DROP_MATERIAL_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(currentMaterial), ::il2cpp_utils::ExtractType(newMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, currentMaterial, newMaterial);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_STYLE_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_STYLE_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COLOR_GRAIDENT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COLOR_GRAIDENT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_CHANGED(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TMP_SETTINGS_CHANGED
void TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TMP_SETTINGS_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_RESOURCES_LOADED
void TMPro::TMPro_EventManager::ON_RESOURCES_LOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_RESOURCES_LOADED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_RESOURCES_LOADED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshProUGUI* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT(::Il2CppObject* Sender, TMPro::Compute_DT_EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COMPUTE_DT_EVENT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.Compute_DistanceTransform_EventTypes EventType
TMPro::Compute_DistanceTransform_EventTypes& TMPro::Compute_DT_EventArgs::dyn_EventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DT_EventArgs::dyn_EventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EventType"))->offset;
  return *reinterpret_cast<TMPro::Compute_DistanceTransform_EventTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ProgressPercentage
float& TMPro::Compute_DT_EventArgs::dyn_ProgressPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DT_EventArgs::dyn_ProgressPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProgressPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] Colors
::ArrayW<UnityEngine::Color>& TMPro::Compute_DT_EventArgs::dyn_Colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DT_EventArgs::dyn_Colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Colors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_ExtensionMethods
#include "TMPro/TMPro_ExtensionMethods.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ArrayToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::ArrayToString(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::ArrayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "ArrayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::ArrayW<int> unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::ArrayW<int> unicodes, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes, start, length);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Multiply
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Multiply(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(tint)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, tint);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, accuracy);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Quaternion q1, UnityEngine::Quaternion q2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q1), ::il2cpp_utils::ExtractType(q2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q1, q2, accuracy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Math
#include "TMPro/TMP_Math.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MAX
float TMPro::TMP_Math::_get_FLOAT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MAX
void TMPro::TMP_Math::_set_FLOAT_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MIN
float TMPro::TMP_Math::_get_FLOAT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MIN
void TMPro::TMP_Math::_set_FLOAT_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MAX
int TMPro::TMP_Math::_get_INT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MAX
void TMPro::TMP_Math::_set_INT_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MIN
int TMPro::TMP_Math::_get_INT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MIN
void TMPro::TMP_Math::_set_INT_MIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_UNSET
float TMPro::TMP_Math::_get_FLOAT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_UNSET
void TMPro::TMP_Math::_set_FLOAT_UNSET(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_UNSET
int TMPro::TMP_Math::_get_INT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_UNSET
void TMPro::TMP_Math::_set_INT_UNSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MAX_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MAX_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MAX_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MAX_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MAX_16BIT
void TMPro::TMP_Math::_set_MAX_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MAX_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MAX_16BIT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MIN_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MIN_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MIN_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MIN_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MIN_16BIT
void TMPro::TMP_Math::_set_MIN_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MIN_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MIN_16BIT", value));
}
// Autogenerated method: TMPro.TMP_Math..cctor
void TMPro::TMP_Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Math.Approximately
bool TMPro::TMP_Math::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
