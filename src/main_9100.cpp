// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers
#include "Mono/Net/Security/Private/CallbackHelpers.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.PublicToMono
::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::PublicToMono(::System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::PublicToMono");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "PublicToMono", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToPublic
::System::Net::Security::RemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToPublic(::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToPublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::RemoteCertificateValidationCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToInternal
::System::Net::Security::LocalCertSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToInternal(::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::MonoToInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Security::LocalCertSelectionCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Net.Security.RemoteCertificateValidationCallback callback
[[deprecated("Use field access instead!")]] ::System::Net::Security::RemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Net::Security::RemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass0_0.<PublicToMono>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::$PublicToMono$b__0(::StringW h, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::Mono::Security::Interface::MonoSslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::<PublicToMono>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PublicToMono>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, h, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoRemoteCertificateValidationCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass5_0.<MonoToPublic>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::$MonoToPublic$b__0(::Il2CppObject* t, ::System::Security::Cryptography::X509Certificates::X509Certificate* c, ::System::Security::Cryptography::X509Certificates::X509Chain* ch, ::System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::<MonoToPublic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToPublic>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Mono.Security.Interface.MonoLocalCertificateSelectionCallback callback
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/Mono.Net.Security.Private.<>c__DisplayClass8_0.<MonoToInternal>b__0
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::$MonoToInternal$b__0(::StringW t, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, ::System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::ArrayW<::StringW> ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lc), ::il2cpp_utils::ExtractType(rc), ::il2cpp_utils::ExtractType(ai)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Protocol.Ntlm.MessageBase message
[[deprecated("Use field access instead!")]] ::Mono::Security::Protocol::Ntlm::MessageBase*& Mono::Http::NtlmSession::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::Mono::Security::Protocol::Ntlm::MessageBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Http.NtlmSession.Authenticate
::System::Net::Authorization* Mono::Http::NtlmSession::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmSession::Authenticate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient
#include "Mono/Http/NtlmClient.hpp"
// Including type: Mono.Http.NtlmClient/Mono.Http.<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>* Mono::Http::NtlmClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::_get_cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>*>("Mono.Http", "NtlmClient", "cache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
void Mono::Http::NtlmClient::_set_cache(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient", "cache", value));
}
// Autogenerated method: Mono.Http.NtlmClient.get_AuthenticationType
::StringW Mono::Http::NtlmClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient..cctor
void Mono::Http::NtlmClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient.Authenticate
::System::Net::Authorization* Mono::Http::NtlmClient::Authenticate(::StringW challenge, ::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::Authenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: Mono.Http.NtlmClient.PreAuthenticate
::System::Net::Authorization* Mono::Http::NtlmClient::PreAuthenticate(::System::Net::WebRequest* webRequest, ::System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::PreAuthenticate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(webRequest), ::il2cpp_utils::ExtractType(credentials)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient/Mono.Http.<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Http.NtlmClient/Mono.Http.<>c <>9
::Mono::Http::NtlmClient::$$c* Mono::Http::NtlmClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Http::NtlmClient::$$c*>("Mono.Http", "NtlmClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Http.NtlmClient/Mono.Http.<>c <>9
void Mono::Http::NtlmClient::$$c::_set_$$9(::Mono::Http::NtlmClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/System.Runtime.CompilerServices.CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback* Mono::Http::NtlmClient::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback*>("Mono.Http", "NtlmClient/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/System.Runtime.CompilerServices.CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
void Mono::Http::NtlmClient::$$c::_set_$$9__1_0(typename ::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Net::HttpWebRequest*, ::Mono::Http::NtlmSession*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Mono.Http.NtlmClient/Mono.Http.<>c..cctor
void Mono::Http::NtlmClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient/Mono.Http.<>c.<Authenticate>b__1_0
::Mono::Http::NtlmSession* Mono::Http::NtlmClient::$$c::$Authenticate$b__1_0(::System::Net::HttpWebRequest* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Http::NtlmClient::$$c::<Authenticate>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Authenticate>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Http::NtlmSession*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.NativeMethods
#include "Microsoft/Win32/NativeMethods.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(::System::Runtime::InteropServices::HandleRef hSourceProcessHandle, ::System::Runtime::InteropServices::SafeHandle* hSourceHandle, ::System::Runtime::InteropServices::HandleRef hTargetProcess, ByRef<::Microsoft::Win32::SafeHandles::SafeWaitHandle*> targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hSourceProcessHandle), ::il2cpp_utils::ExtractType(hSourceHandle), ::il2cpp_utils::ExtractType(hTargetProcess), ::il2cpp_utils::ExtractIndependentType<::Microsoft::Win32::SafeHandles::SafeWaitHandle*&>(), ::il2cpp_utils::ExtractType(dwDesiredAccess), ::il2cpp_utils::ExtractType(bInheritHandle), ::il2cpp_utils::ExtractType(dwOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, byref(targetHandle), dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(::System::Runtime::InteropServices::HandleRef hSourceProcessHandle, ::System::Runtime::InteropServices::HandleRef hSourceHandle, ::System::Runtime::InteropServices::HandleRef hTargetProcess, ByRef<::Microsoft::Win32::SafeHandles::SafeProcessHandle*> targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hSourceProcessHandle), ::il2cpp_utils::ExtractType(hSourceHandle), ::il2cpp_utils::ExtractType(hTargetProcess), ::il2cpp_utils::ExtractIndependentType<::Microsoft::Win32::SafeHandles::SafeProcessHandle*&>(), ::il2cpp_utils::ExtractType(dwDesiredAccess), ::il2cpp_utils::ExtractType(bInheritHandle), ::il2cpp_utils::ExtractType(dwOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, byref(targetHandle), dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcess
::System::IntPtr Microsoft::Win32::NativeMethods::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(::System::IntPtr processHandle, ByRef<int> exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, byref(exitCode));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, ByRef<int> exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, byref(exitCode));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(::System::IntPtr processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractType(exitCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle), ::il2cpp_utils::ExtractType(exitCode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(::System::IntPtr handle, ByRef<int64_t> creation, ByRef<int64_t> exit, ByRef<int64_t> kernel, ByRef<int64_t> user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(creation), byref(exit), byref(kernel), byref(user));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle, ByRef<int64_t> creation, ByRef<int64_t> exit, ByRef<int64_t> kernel, ByRef<int64_t> user) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>(), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, byref(creation), byref(exit), byref(kernel), byref(user));
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcessId
int Microsoft::Win32::NativeMethods::GetCurrentProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::GetCurrentProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.CloseProcess
bool Microsoft::Win32::NativeMethods::CloseProcess(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::NativeMethods::CloseProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "CloseProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Microsoft::Win32::SafeHandles::SafeProcessHandle*>("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle", value));
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle..cctor
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeProcessHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changed
[[deprecated("Use field access instead!")]] bool& System::UriBuilder::dyn__changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fragment
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _host
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _password
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _path
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _port
[[deprecated("Use field access instead!")]] int& System::UriBuilder::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _query
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__query");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_query"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _scheme
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _schemeDelimiter
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__schemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__schemeDelimiter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_schemeDelimiter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri _uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::UriBuilder::dyn__uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _username
[[deprecated("Use field access instead!")]] ::StringW& System::UriBuilder::dyn__username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::dyn__username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UriBuilder.set_Host
void System::UriBuilder::set_Host(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Path
void System::UriBuilder::set_Path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Port
void System::UriBuilder::set_Port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Query
void System::UriBuilder::set_Query(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Scheme
void System::UriBuilder::set_Scheme(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Uri
::System::Uri* System::UriBuilder::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::get_Uri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.Init
void System::UriBuilder::Init(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.SetFieldsFromUri
void System::UriBuilder::SetFieldsFromUri(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::SetFieldsFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFieldsFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.Equals
bool System::UriBuilder::Equals(::Il2CppObject* rparam) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rparam)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rparam);
}
// Autogenerated method: System.UriBuilder.GetHashCode
int System::UriBuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.ToString
::StringW System::UriBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SecurityUtils
#include "System/SecurityUtils.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.SecurityUtils.DemandReflectionAccess
void System::SecurityUtils::DemandReflectionAccess(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::DemandReflectionAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "DemandReflectionAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.HasReflectionPermission
bool System::SecurityUtils::HasReflectionPermission(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::HasReflectionPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "HasReflectionPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.SecureCreateInstance
::Il2CppObject* System::SecurityUtils::SecureCreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.SecurityUtils.SecureCreateInstance
::Il2CppObject* System::SecurityUtils::SecureCreateInstance(::System::Type* type, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureCreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureCreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, args, allowNonPublic);
}
// Autogenerated method: System.SecurityUtils.SecureConstructorInvoke
::Il2CppObject* System::SecurityUtils::SecureConstructorInvoke(::System::Type* type, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureConstructorInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureConstructorInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argTypes), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argTypes, args, allowNonPublic);
}
// Autogenerated method: System.SecurityUtils.SecureConstructorInvoke
::Il2CppObject* System::SecurityUtils::SecureConstructorInvoke(::System::Type* type, ::ArrayW<::System::Type*> argTypes, ::ArrayW<::Il2CppObject*> args, bool allowNonPublic, ::System::Reflection::BindingFlags extraFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::SecurityUtils::SecureConstructorInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "SecurityUtils", "SecureConstructorInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(argTypes), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(allowNonPublic), ::il2cpp_utils::ExtractType(extraFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, argTypes, args, allowNonPublic, extraFlags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.InvariantComparer
#include "System/InvariantComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.InvariantComparer Default
::System::InvariantComparer* System::InvariantComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::InvariantComparer*>("System", "InvariantComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.InvariantComparer Default
void System::InvariantComparer::_set_Default(::System::InvariantComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "InvariantComparer", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareInfo*& System::InvariantComparer::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.InvariantComparer..cctor
void System::InvariantComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "InvariantComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.InvariantComparer.Compare
int System::InvariantComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::InvariantComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IriHelper
#include "System/IriHelper.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar unicode, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unicode, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar highSurr, ::Il2CppChar lowSurr, ByRef<bool> surrogatePair, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highSurr), ::il2cpp_utils::ExtractType(lowSurr), ::il2cpp_utils::ExtractType(surrogatePair), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, highSurr, lowSurr, byref(surrogatePair), isQuery);
}
// Autogenerated method: System.IriHelper.CheckIsReserved
bool System::IriHelper::CheckIsReserved(::Il2CppChar ch, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::CheckIsReserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIsReserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, component);
}
// Autogenerated method: System.IriHelper.EscapeUnescapeIri
::StringW System::IriHelper::EscapeUnescapeIri(::Il2CppChar* pInput, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IriHelper::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IriHelper", "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pInput), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pInput, start, end, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Uri/System.UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/System.Offset
#include "System/Uri_Offset.hpp"
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
// Including type: System.Uri/System.Check
#include "System/Uri_Check.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFile
::StringW System::Uri::_get_UriSchemeFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFile"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFile
void System::Uri::_set_UriSchemeFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFtp
::StringW System::Uri::_get_UriSchemeFtp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeFtp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeFtp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFtp
void System::Uri::_set_UriSchemeFtp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeFtp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFtp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeGopher
::StringW System::Uri::_get_UriSchemeGopher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeGopher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeGopher"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeGopher
void System::Uri::_set_UriSchemeGopher(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeGopher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeGopher", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttp
::StringW System::Uri::_get_UriSchemeHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttp
void System::Uri::_set_UriSchemeHttp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttps
::StringW System::Uri::_get_UriSchemeHttps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeHttps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeHttps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttps
void System::Uri::_set_UriSchemeHttps(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeHttps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWs
::StringW System::Uri::_get_UriSchemeWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWs"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWs
void System::Uri::_set_UriSchemeWs(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWs", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWss
::StringW System::Uri::_get_UriSchemeWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeWss"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWss
void System::Uri::_set_UriSchemeWss(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeMailto
::StringW System::Uri::_get_UriSchemeMailto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeMailto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeMailto"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeMailto
void System::Uri::_set_UriSchemeMailto(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeMailto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeMailto", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNews
::StringW System::Uri::_get_UriSchemeNews() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNews"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNews
void System::Uri::_set_UriSchemeNews(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNews", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNntp
::StringW System::Uri::_get_UriSchemeNntp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNntp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNntp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNntp
void System::Uri::_set_UriSchemeNntp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNntp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNntp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetTcp
::StringW System::Uri::_get_UriSchemeNetTcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetTcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetTcp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetTcp
void System::Uri::_set_UriSchemeNetTcp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetTcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetTcp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetPipe
::StringW System::Uri::_get_UriSchemeNetPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_UriSchemeNetPipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "UriSchemeNetPipe"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetPipe
void System::Uri::_set_UriSchemeNetPipe(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_UriSchemeNetPipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetPipe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SchemeDelimiter
::StringW System::Uri::_get_SchemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_SchemeDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System", "Uri", "SchemeDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SchemeDelimiter
void System::Uri::_set_SchemeDelimiter(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_SchemeDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "SchemeDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitialized
bool System::Uri::_get_s_ConfigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitialized
void System::Uri::_set_s_ConfigInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitializing
bool System::Uri::_get_s_ConfigInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_ConfigInitializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitializing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitializing
void System::Uri::_set_s_ConfigInitializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_ConfigInitializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitializing", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriIdnScope s_IdnScope
::System::UriIdnScope System::Uri::_get_s_IdnScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IdnScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "Uri", "s_IdnScope"));
}
// Autogenerated static field setter
// Set static field: static private System.UriIdnScope s_IdnScope
void System::Uri::_set_s_IdnScope(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IdnScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IdnScope", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_IriParsing
bool System::Uri::_get_s_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_IriParsing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_IriParsing
void System::Uri::_set_s_IriParsing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IriParsing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useDotNetRelativeOrAbsolute
bool System::Uri::_get_useDotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_useDotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "useDotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useDotNetRelativeOrAbsolute
void System::Uri::_set_useDotNetRelativeOrAbsolute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_useDotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "useDotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsFileSystem
bool System::Uri::_get_IsWindowsFileSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_IsWindowsFileSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "IsWindowsFileSystem"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsFileSystem
void System::Uri::_set_IsWindowsFileSystem(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_IsWindowsFileSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "IsWindowsFileSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_initLock
::Il2CppObject* System::Uri::_get_s_initLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_s_initLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Uri", "s_initLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_initLock
void System::Uri::_set_s_initLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_s_initLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_initLock", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] HexLowerChars
::ArrayW<::Il2CppChar> System::Uri::_get_HexLowerChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get_HexLowerChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "HexLowerChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] HexLowerChars
void System::Uri::_set_HexLowerChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set_HexLowerChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "HexLowerChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _WSchars
::ArrayW<::Il2CppChar> System::Uri::_get__WSchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_get__WSchars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "Uri", "_WSchars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _WSchars
void System::Uri::_set__WSchars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::_set__WSchars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "_WSchars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_String
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_originalUnicodeString
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_originalUnicodeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_originalUnicodeString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalUnicodeString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriParser m_Syntax
[[deprecated("Use field access instead!")]] ::System::UriParser*& System::Uri::dyn_m_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Syntax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Syntax"))->offset;
  return *reinterpret_cast<::System::UriParser**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_DnsSafeHost
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::dyn_m_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/System.Flags m_Flags
[[deprecated("Use field access instead!")]] ::System::Uri::Flags& System::Uri::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::Uri::Flags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Uri/System.UriInfo m_Info
[[deprecated("Use field access instead!")]] ::System::Uri::UriInfo*& System::Uri::dyn_m_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Info"))->offset;
  return *reinterpret_cast<::System::Uri::UriInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_iriParsing
[[deprecated("Use field access instead!")]] bool& System::Uri::dyn_m_iriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::dyn_m_iriParsing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_iriParsing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Uri.get_IsImplicitFile
bool System::Uri::get_IsImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncOrDosPath
bool System::Uri::get_IsUncOrDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncOrDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncOrDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDosPath
bool System::Uri::get_IsDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsDosPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDosPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncPath
bool System::Uri::get_IsUncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUncPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUncPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostType
::System::Uri::Flags System::Uri::get_HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HostType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Flags, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Syntax
::System::UriParser* System::Uri::get_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsNotAbsoluteUri
bool System::Uri::get_IsNotAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsNotAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNotAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AllowIdn
bool System::Uri::get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AllowIdn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIdn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserDrivenParsing
bool System::Uri::get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_SecuredPathIndex
uint16_t System::Uri::get_SecuredPathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_SecuredPathIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SecuredPathIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsolutePath
::StringW System::Uri::get_AbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PrivateAbsolutePath
::StringW System::Uri::get_PrivateAbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PrivateAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateAbsolutePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsoluteUri
::StringW System::Uri::get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_AbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_LocalPath
::StringW System::Uri::get_LocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_LocalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Authority
::StringW System::Uri::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Authority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Authority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostNameType
::System::UriHostNameType System::Uri::get_HostNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HostNameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostNameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriHostNameType, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDefaultPort
bool System::Uri::get_IsDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsDefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsFile
bool System::Uri::get_IsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsLoopback
bool System::Uri::get_IsLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsLoopback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoopback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PathAndQuery
::StringW System::Uri::get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_PathAndQuery");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathAndQuery", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUnc
bool System::Uri::get_IsUnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsUnc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUnc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Host
::StringW System::Uri::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_InitializeLock
::Il2CppObject* System::Uri::get_InitializeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_InitializeLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "get_InitializeLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.get_Port
int System::Uri::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Query
::StringW System::Uri::get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Fragment
::StringW System::Uri::get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Fragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Scheme
::StringW System::Uri::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalStringSwitched
bool System::Uri::get_OriginalStringSwitched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalStringSwitched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalStringSwitched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalString
::StringW System::Uri::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_OriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_DnsSafeHost
::StringW System::Uri::get_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_DnsSafeHost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DnsSafeHost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsAbsoluteUri
bool System::Uri::get_IsAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_IsAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserEscaped
bool System::Uri::get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserEscaped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserEscaped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserInfo
::StringW System::Uri::get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_UserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HasAuthority
bool System::Uri::get_HasAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::get_HasAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri..cctor
void System::Uri::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.IriParsingStatic
bool System::Uri::IriParsingStatic(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IriParsingStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IriParsingStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.AllowIdnStatic
bool System::Uri::AllowIdnStatic(::System::UriParser* syntax, ::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::AllowIdnStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllowIdnStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, syntax, flags);
}
// Autogenerated method: System.Uri.IsIntranet
bool System::Uri::IsIntranet(::StringW schemeHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsIntranet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsIntranet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemeHost)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemeHost);
}
// Autogenerated method: System.Uri.SetUserDrivenParsing
void System::Uri::SetUserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::SetUserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUserDrivenParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.NotAny
bool System::Uri::NotAny(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.InFact
bool System::Uri::InFact(::System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.StaticNotAny
bool System::Uri::StaticNotAny(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticNotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticNotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.StaticInFact
bool System::Uri::StaticInFact(::System::Uri::Flags allFlags, ::System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticInFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticInFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allFlags), ::il2cpp_utils::ExtractType(checkFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.EnsureUriInfo
::System::Uri::UriInfo* System::Uri::EnsureUriInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::UriInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureParseRemaining
void System::Uri::EnsureParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureHostString
void System::Uri::EnsureHostString(bool allowDnsOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EnsureHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allowDnsOptimization)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allowDnsOptimization);
}
// Autogenerated method: System.Uri.CreateUri
void System::Uri::CreateUri(::System::Uri* baseUri, ::StringW relativeUri, bool dontEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(dontEscape)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, relativeUri, dontEscape);
}
// Autogenerated method: System.Uri.GetCombinedString
::System::ParsingError System::Uri::GetCombinedString(::System::Uri* baseUri, ::StringW relativeStr, bool dontEscape, ByRef<::StringW> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCombinedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetCombinedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeStr), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeStr, dontEscape, byref(result));
}
// Autogenerated method: System.Uri.GetException
::System::UriFormatException* System::Uri::GetException(::System::ParsingError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, err);
}
// Autogenerated method: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Uri::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.GetObjectData
void System::Uri::GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.StaticIsFile
bool System::Uri::StaticIsFile(::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StaticIsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StaticIsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.InitializeUriConfig
void System::Uri::InitializeUriConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUriConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "InitializeUriConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.GetLocalPath
::StringW System::Uri::GetLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetLocalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsGenDelim
bool System::Uri::IsGenDelim(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsGenDelim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsGenDelim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.CheckSchemeName
bool System::Uri::CheckSchemeName(::StringW schemeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckSchemeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemeName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, schemeName);
}
// Autogenerated method: System.Uri.IsHexDigit
bool System::Uri::IsHexDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsHexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsHexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.FromHex
int System::Uri::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Uri.CheckForColonInFirstPathSegment
bool System::Uri::CheckForColonInFirstPathSegment(::StringW uriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForColonInFirstPathSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckForColonInFirstPathSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString);
}
// Autogenerated method: System.Uri.InternalEscapeString
::StringW System::Uri::InternalEscapeString(::StringW rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InternalEscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "InternalEscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawString)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Uri.ParseScheme
::System::ParsingError System::Uri::ParseScheme(::StringW uriString, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.ParseMinimal
::System::UriFormatException* System::Uri::ParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriFormatException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimal
::System::ParsingError System::Uri::PrivateParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimalIri
void System::Uri::PrivateParseMinimalIri(::StringW newHost, uint16_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::PrivateParseMinimalIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateParseMinimalIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newHost, idx);
}
// Autogenerated method: System.Uri.CreateUriInfo
void System::Uri::CreateUriInfo(::System::Uri::Flags cF) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateUriInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateUriInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cF)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cF);
}
// Autogenerated method: System.Uri.CreateHostString
void System::Uri::CreateHostString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateHostString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CreateHostStringHelper
::StringW System::Uri::CreateHostStringHelper(::StringW str, uint16_t idx, uint16_t end, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHostStringHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHostStringHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, idx, end, byref(flags), byref(scopeId));
}
// Autogenerated method: System.Uri.GetHostViaCustomSyntax
void System::Uri::GetHostViaCustomSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHostViaCustomSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHostViaCustomSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.GetParts
::StringW System::Uri::GetParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.GetEscapedParts
::StringW System::Uri::GetEscapedParts(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetEscapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEscapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.GetUnescapedParts
::StringW System::Uri::GetUnescapedParts(::System::UriComponents uriParts, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUnescapedParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnescapedParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.ReCreateParts
::StringW System::Uri::ReCreateParts(::System::UriComponents parts, uint16_t nonCanonical, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ReCreateParts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReCreateParts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parts), ::il2cpp_utils::ExtractType(nonCanonical), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parts, nonCanonical, formatAs);
}
// Autogenerated method: System.Uri.GetUriPartsFromUserString
::StringW System::Uri::GetUriPartsFromUserString(::System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetUriPartsFromUserString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUriPartsFromUserString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriParts)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.ParseRemaining
void System::Uri::ParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ParseSchemeCheckImplicitFile
uint16_t System::Uri::ParseSchemeCheckImplicitFile(::Il2CppChar* uriString, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ParseSchemeCheckImplicitFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ParseSchemeCheckImplicitFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, length, byref(err), byref(flags), byref(syntax));
}
// Autogenerated method: System.Uri.CheckKnownSchemes
bool System::Uri::CheckKnownSchemes(int64_t* lptr, uint16_t nChars, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckKnownSchemes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckKnownSchemes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lptr), ::il2cpp_utils::ExtractType(nChars), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lptr, nChars, byref(syntax));
}
// Autogenerated method: System.Uri.CheckSchemeSyntax
::System::ParsingError System::Uri::CheckSchemeSyntax(::Il2CppChar* ptr, uint16_t length, ByRef<::System::UriParser*> syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckSchemeSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ParsingError, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr, length, byref(syntax));
}
// Autogenerated method: System.Uri.CheckAuthorityHelper
uint16_t System::Uri::CheckAuthorityHelper(::Il2CppChar* pString, uint16_t idx, uint16_t length, ByRef<::System::ParsingError> err, ByRef<::System::Uri::Flags> flags, ::System::UriParser* syntax, ByRef<::StringW> newHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(newHost)})));
  return ::il2cpp_utils::RunMethodRethrow<uint16_t, false>(this, ___internal__method, pString, idx, length, byref(err), byref(flags), syntax, byref(newHost));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleDnsIri
void System::Uri::CheckAuthorityHelperHandleDnsIri(::Il2CppChar* pString, uint16_t start, int end, int startInput, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ::StringW userInfoString, ByRef<::System::Uri::Flags> flags, ByRef<bool> justNormalized, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleDnsIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleDnsIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(userInfoString), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(justNormalized), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, byref(flags), byref(justNormalized), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleAnyHostIri
void System::Uri::CheckAuthorityHelperHandleAnyHostIri(::Il2CppChar* pString, int startInput, int end, bool iriParsing, bool hasUnicode, ::System::UriParser* syntax, ByRef<::System::Uri::Flags> flags, ByRef<::StringW> newHost, ByRef<::System::ParsingError> err) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckAuthorityHelperHandleAnyHostIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleAnyHostIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pString), ::il2cpp_utils::ExtractType(startInput), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(iriParsing), ::il2cpp_utils::ExtractType(hasUnicode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(newHost), ::il2cpp_utils::ExtractType(err)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pString, startInput, end, iriParsing, hasUnicode, syntax, byref(flags), byref(newHost), byref(err));
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::StringW input, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.CheckCanonical
::System::Uri::Check System::Uri::CheckCanonical(::Il2CppChar* str, ByRef<uint16_t> idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(delim)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri::Check, false>(this, ___internal__method, str, byref(idx), end, delim);
}
// Autogenerated method: System.Uri.GetCanonicalPath
::ArrayW<::Il2CppChar> System::Uri::GetCanonicalPath(::ArrayW<::Il2CppChar> dest, ByRef<int> pos, ::System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(formatAs)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method, dest, byref(pos), formatAs);
}
// Autogenerated method: System.Uri.UnescapeOnly
void System::Uri::UnescapeOnly(::Il2CppChar* pch, int start, ByRef<int> end, ::Il2CppChar ch1, ::Il2CppChar ch2, ::Il2CppChar ch3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pch), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ch1), ::il2cpp_utils::ExtractType(ch2), ::il2cpp_utils::ExtractType(ch3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pch, start, byref(end), ch1, ch2, ch3);
}
// Autogenerated method: System.Uri.Compress
::ArrayW<::Il2CppChar> System::Uri::Compress(::ArrayW<::Il2CppChar> dest, uint16_t start, ByRef<int> destLength, ::System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Compress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "Compress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(destLength), ::il2cpp_utils::ExtractType(syntax)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dest, start, byref(destLength), syntax);
}
// Autogenerated method: System.Uri.CalculateCaseInsensitiveHashCode
int System::Uri::CalculateCaseInsensitiveHashCode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CalculateCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CalculateCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Uri.CombineUri
::StringW System::Uri::CombineUri(::System::Uri* basePart, ::StringW relativePart, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CombineUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CombineUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basePart), ::il2cpp_utils::ExtractType(relativePart), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basePart, relativePart, uriFormat);
}
// Autogenerated method: System.Uri.IsLWS
bool System::Uri::IsLWS(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsLWS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsLWS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsAsciiLetter
bool System::Uri::IsAsciiLetter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsAsciiLetterOrDigit
bool System::Uri::IsAsciiLetterOrDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsAsciiLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsBidiControlCharacter
bool System::Uri::IsBidiControlCharacter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.StripBidiControlCharacter
::StringW System::Uri::StripBidiControlCharacter(::Il2CppChar* strToClean, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::StripBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "StripBidiControlCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strToClean), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strToClean, start, length);
}
// Autogenerated method: System.Uri.CreateThis
void System::Uri::CreateThis(::StringW uri, bool dontEscape, ::System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, dontEscape, uriKind);
}
// Autogenerated method: System.Uri.InitializeUri
void System::Uri::InitializeUri(::System::ParsingError err, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InitializeUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(err), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, err, uriKind, byref(e));
}
// Autogenerated method: System.Uri.CheckForConfigLoad
bool System::Uri::CheckForConfigLoad(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForConfigLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForConfigLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForUnicode
bool System::Uri::CheckForUnicode(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForEscapedUnreserved
bool System::Uri::CheckForEscapedUnreserved(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CheckForEscapedUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForEscapedUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::StringW uriString, ::System::UriKind uriKind, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::TryCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, uriKind, byref(result));
}
// Autogenerated method: System.Uri.GetComponents
::StringW System::Uri::GetComponents(::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, components, format);
}
// Autogenerated method: System.Uri.IsWellFormedOriginalString
bool System::Uri::IsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsWellFormedUriString
bool System::Uri::IsWellFormedUriString(::StringW uriString, ::System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::IsWellFormedUriString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "IsWellFormedUriString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(uriKind)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, uriKind);
}
// Autogenerated method: System.Uri.InternalIsWellFormedOriginalString
bool System::Uri::InternalIsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.UnescapeDataString
::StringW System::Uri::UnescapeDataString(::StringW stringToUnescape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UnescapeDataString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "UnescapeDataString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToUnescape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToUnescape);
}
// Autogenerated method: System.Uri.EscapeDataString
::StringW System::Uri::EscapeDataString(::StringW stringToEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeDataString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "EscapeDataString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringToEscape)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringToEscape);
}
// Autogenerated method: System.Uri.EscapeUnescapeIri
::StringW System::Uri::EscapeUnescapeIri(::StringW input, int start, int end, ::System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, start, end, component);
}
// Autogenerated method: System.Uri.CreateHelper
::System::Uri* System::Uri::CreateHelper(::StringW uriString, bool dontEscape, ::System::UriKind uriKind, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "CreateHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriString), ::il2cpp_utils::ExtractType(dontEscape), ::il2cpp_utils::ExtractType(uriKind), ::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uriString, dontEscape, uriKind, byref(e));
}
// Autogenerated method: System.Uri.ResolveHelper
::System::Uri* System::Uri::ResolveHelper(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::StringW> newUriString, ByRef<bool> userEscaped, ByRef<::System::UriFormatException*> e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ResolveHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "ResolveHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractType(newUriString), ::il2cpp_utils::ExtractType(userEscaped), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseUri, relativeUri, byref(newUriString), byref(userEscaped), byref(e));
}
// Autogenerated method: System.Uri.GetRelativeSerializationString
::StringW System::Uri::GetRelativeSerializationString(::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetRelativeSerializationString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRelativeSerializationString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Uri.GetComponentsHelper
::StringW System::Uri::GetComponentsHelper(::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetComponentsHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uriComponents, uriFormat);
}
// Autogenerated method: System.Uri.CreateThisFromUri
void System::Uri::CreateThisFromUri(::System::Uri* otherUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::CreateThisFromUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateThisFromUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(otherUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherUri);
}
// Autogenerated method: System.Uri.GetHashCode
int System::Uri::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ToString
::StringW System::Uri::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.Equals
bool System::Uri::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Uri.op_Equality
bool System::operator ==(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated method: System.Uri.op_Inequality
bool System::operator !=(::System::Uri* uri1, ::System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Uri", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri1), ::il2cpp_utils::ExtractType(&uri2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.Flags
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags Zero
::System::Uri::Flags System::Uri::Flags::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags Zero
void System::Uri::Flags::_set_Zero(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags SchemeNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_SchemeNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_SchemeNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "SchemeNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags SchemeNotCanonical
void System::Uri::Flags::_set_SchemeNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_SchemeNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "SchemeNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserNotCanonical
void System::Uri::Flags::_set_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostNotCanonical
void System::Uri::Flags::_set_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PortNotCanonical
void System::Uri::Flags::_set_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PathNotCanonical
void System::Uri::Flags::_set_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags QueryNotCanonical
void System::Uri::Flags::_set_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FragmentNotCanonical
void System::Uri::Flags::_set_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CannotDisplayCanonical
void System::Uri::Flags::_set_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_UserNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_UserNotCanonical
void System::Uri::Flags::_set_E_UserNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_HostNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_HostNotCanonical
void System::Uri::Flags::_set_E_HostNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_PortNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_PortNotCanonical
void System::Uri::Flags::_set_E_PortNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_PathNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_PathNotCanonical
void System::Uri::Flags::_set_E_PathNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_QueryNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_QueryNotCanonical
void System::Uri::Flags::_set_E_QueryNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_FragmentNotCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_FragmentNotCanonical
void System::Uri::Flags::_set_E_FragmentNotCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags E_CannotDisplayCanonical
::System::Uri::Flags System::Uri::Flags::_get_E_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_E_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "E_CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags E_CannotDisplayCanonical
void System::Uri::Flags::_set_E_CannotDisplayCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_E_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ShouldBeCompressed
::System::Uri::Flags System::Uri::Flags::_get_ShouldBeCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ShouldBeCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ShouldBeCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ShouldBeCompressed
void System::Uri::Flags::_set_ShouldBeCompressed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ShouldBeCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ShouldBeCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FirstSlashAbsent
::System::Uri::Flags System::Uri::Flags::_get_FirstSlashAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FirstSlashAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FirstSlashAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FirstSlashAbsent
void System::Uri::Flags::_set_FirstSlashAbsent(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FirstSlashAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FirstSlashAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags BackslashInPath
::System::Uri::Flags System::Uri::Flags::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags BackslashInPath
void System::Uri::Flags::_set_BackslashInPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IndexMask
::System::Uri::Flags System::Uri::Flags::_get_IndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IndexMask
void System::Uri::Flags::_set_IndexMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostTypeMask
::System::Uri::Flags System::Uri::Flags::_get_HostTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostTypeMask
void System::Uri::Flags::_set_HostTypeMask(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostNotParsed
::System::Uri::Flags System::Uri::Flags::_get_HostNotParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostNotParsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostNotParsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostNotParsed
void System::Uri::Flags::_set_HostNotParsed(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostNotParsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotParsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IPv6HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv6HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv6HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv6HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IPv6HostType
void System::Uri::Flags::_set_IPv6HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv6HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv6HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IPv4HostType
::System::Uri::Flags System::Uri::Flags::_get_IPv4HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IPv4HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IPv4HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IPv4HostType
void System::Uri::Flags::_set_IPv4HostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IPv4HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv4HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags DnsHostType
::System::Uri::Flags System::Uri::Flags::_get_DnsHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DnsHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DnsHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags DnsHostType
void System::Uri::Flags::_set_DnsHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DnsHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DnsHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UncHostType
::System::Uri::Flags System::Uri::Flags::_get_UncHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UncHostType
void System::Uri::Flags::_set_UncHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags BasicHostType
::System::Uri::Flags System::Uri::Flags::_get_BasicHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_BasicHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "BasicHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags BasicHostType
void System::Uri::Flags::_set_BasicHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_BasicHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BasicHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnusedHostType
::System::Uri::Flags System::Uri::Flags::_get_UnusedHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnusedHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnusedHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnusedHostType
void System::Uri::Flags::_set_UnusedHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnusedHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnusedHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnknownHostType
::System::Uri::Flags System::Uri::Flags::_get_UnknownHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnknownHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnknownHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnknownHostType
void System::Uri::Flags::_set_UnknownHostType(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnknownHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnknownHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserEscaped
::System::Uri::Flags System::Uri::Flags::_get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserEscaped
void System::Uri::Flags::_set_UserEscaped(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags AuthorityFound
::System::Uri::Flags System::Uri::Flags::_get_AuthorityFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AuthorityFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AuthorityFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags AuthorityFound
void System::Uri::Flags::_set_AuthorityFound(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AuthorityFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AuthorityFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HasUserInfo
::System::Uri::Flags System::Uri::Flags::_get_HasUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HasUserInfo
void System::Uri::Flags::_set_HasUserInfo(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags LoopbackHost
::System::Uri::Flags System::Uri::Flags::_get_LoopbackHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_LoopbackHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "LoopbackHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags LoopbackHost
void System::Uri::Flags::_set_LoopbackHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_LoopbackHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "LoopbackHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags NotDefaultPort
::System::Uri::Flags System::Uri::Flags::_get_NotDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_NotDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "NotDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags NotDefaultPort
void System::Uri::Flags::_set_NotDefaultPort(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_NotDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "NotDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserDrivenParsing
::System::Uri::Flags System::Uri::Flags::_get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserDrivenParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserDrivenParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserDrivenParsing
void System::Uri::Flags::_set_UserDrivenParsing(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserDrivenParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserDrivenParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CanonicalDnsHost
::System::Uri::Flags System::Uri::Flags::_get_CanonicalDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CanonicalDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CanonicalDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CanonicalDnsHost
void System::Uri::Flags::_set_CanonicalDnsHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CanonicalDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CanonicalDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ErrorOrParsingRecursion
::System::Uri::Flags System::Uri::Flags::_get_ErrorOrParsingRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ErrorOrParsingRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ErrorOrParsingRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ErrorOrParsingRecursion
void System::Uri::Flags::_set_ErrorOrParsingRecursion(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ErrorOrParsingRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ErrorOrParsingRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags DosPath
::System::Uri::Flags System::Uri::Flags::_get_DosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_DosPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "DosPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags DosPath
void System::Uri::Flags::_set_DosPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_DosPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DosPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UncPath
::System::Uri::Flags System::Uri::Flags::_get_UncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UncPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UncPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UncPath
void System::Uri::Flags::_set_UncPath(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UncPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags ImplicitFile
::System::Uri::Flags System::Uri::Flags::_get_ImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_ImplicitFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "ImplicitFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags ImplicitFile
void System::Uri::Flags::_set_ImplicitFile(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_ImplicitFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ImplicitFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags MinimalUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_MinimalUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_MinimalUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "MinimalUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags MinimalUriInfoSet
void System::Uri::Flags::_set_MinimalUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_MinimalUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "MinimalUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags AllUriInfoSet
::System::Uri::Flags System::Uri::Flags::_get_AllUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_AllUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "AllUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags AllUriInfoSet
void System::Uri::Flags::_set_AllUriInfoSet(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_AllUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AllUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IdnHost
::System::Uri::Flags System::Uri::Flags::_get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IdnHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IdnHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IdnHost
void System::Uri::Flags::_set_IdnHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IdnHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IdnHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HasUnicode
::System::Uri::Flags System::Uri::Flags::_get_HasUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HasUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HasUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HasUnicode
void System::Uri::Flags::_set_HasUnicode(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HasUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags HostUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_HostUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_HostUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "HostUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags HostUnicodeNormalized
void System::Uri::Flags::_set_HostUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_HostUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags RestUnicodeNormalized
::System::Uri::Flags System::Uri::Flags::_get_RestUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_RestUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "RestUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags RestUnicodeNormalized
void System::Uri::Flags::_set_RestUnicodeNormalized(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_RestUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "RestUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UnicodeHost
::System::Uri::Flags System::Uri::Flags::_get_UnicodeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UnicodeHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UnicodeHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UnicodeHost
void System::Uri::Flags::_set_UnicodeHost(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UnicodeHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnicodeHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IntranetUri
::System::Uri::Flags System::Uri::Flags::_get_IntranetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IntranetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IntranetUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IntranetUri
void System::Uri::Flags::_set_IntranetUri(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IntranetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IntranetUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UseOrigUncdStrOffset
::System::Uri::Flags System::Uri::Flags::_get_UseOrigUncdStrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UseOrigUncdStrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UseOrigUncdStrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UseOrigUncdStrOffset
void System::Uri::Flags::_set_UseOrigUncdStrOffset(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UseOrigUncdStrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UseOrigUncdStrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags UserIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_UserIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_UserIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "UserIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags UserIriCanonical
void System::Uri::Flags::_set_UserIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_UserIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags PathIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_PathIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_PathIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "PathIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags PathIriCanonical
void System::Uri::Flags::_set_PathIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_PathIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags QueryIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_QueryIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_QueryIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "QueryIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags QueryIriCanonical
void System::Uri::Flags::_set_QueryIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_QueryIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags FragmentIriCanonical
::System::Uri::Flags System::Uri::Flags::_get_FragmentIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_FragmentIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "FragmentIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags FragmentIriCanonical
void System::Uri::Flags::_set_FragmentIriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_FragmentIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags IriCanonical
::System::Uri::Flags System::Uri::Flags::_get_IriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_IriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "IriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags IriCanonical
void System::Uri::Flags::_set_IriCanonical(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_IriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Flags CompressedSlashes
::System::Uri::Flags System::Uri::Flags::_get_CompressedSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_get_CompressedSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Flags>("System", "Uri/Flags", "CompressedSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Flags CompressedSlashes
void System::Uri::Flags::_set_CompressedSlashes(::System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::_set_CompressedSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CompressedSlashes", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 value__
[[deprecated("Use field access instead!")]] uint64_t& System::Uri::Flags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Flags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Host
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ScopeId
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_ScopeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_ScopeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ScopeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String String
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_String");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "String"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/System.Offset Offset
[[deprecated("Use field access instead!")]] ::System::Uri::Offset& System::Uri::UriInfo::dyn_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_Offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Offset"))->offset;
  return *reinterpret_cast<::System::Uri::Offset*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String DnsSafeHost
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::UriInfo::dyn_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_DnsSafeHost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DnsSafeHost"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri/System.MoreInfo MoreInfo
[[deprecated("Use field access instead!")]] ::System::Uri::MoreInfo*& System::Uri::UriInfo::dyn_MoreInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::UriInfo::dyn_MoreInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MoreInfo"))->offset;
  return *reinterpret_cast<::System::Uri::MoreInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Query
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Query");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Query"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Fragment
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Fragment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Fragment"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String AbsoluteUri
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_AbsoluteUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AbsoluteUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Hash
[[deprecated("Use field access instead!")]] int& System::Uri::MoreInfo::dyn_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_Hash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Hash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RemoteUrl
[[deprecated("Use field access instead!")]] ::StringW& System::Uri::MoreInfo::dyn_RemoteUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::MoreInfo::dyn_RemoteUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/System.Check
#include "System/Uri_Check.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check None
::System::Uri::Check System::Uri::Check::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check None
void System::Uri::Check::_set_None(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check EscapedCanonical
::System::Uri::Check System::Uri::Check::_get_EscapedCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_EscapedCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "EscapedCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check EscapedCanonical
void System::Uri::Check::_set_EscapedCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_EscapedCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "EscapedCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DisplayCanonical
::System::Uri::Check System::Uri::Check::_get_DisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DisplayCanonical
void System::Uri::Check::_set_DisplayCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DotSlashAttn
::System::Uri::Check System::Uri::Check::_get_DotSlashAttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashAttn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashAttn"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DotSlashAttn
void System::Uri::Check::_set_DotSlashAttn(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashAttn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashAttn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check DotSlashEscaped
::System::Uri::Check System::Uri::Check::_get_DotSlashEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_DotSlashEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "DotSlashEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check DotSlashEscaped
void System::Uri::Check::_set_DotSlashEscaped(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_DotSlashEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check BackslashInPath
::System::Uri::Check System::Uri::Check::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check BackslashInPath
void System::Uri::Check::_set_BackslashInPath(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check ReservedFound
::System::Uri::Check System::Uri::Check::_get_ReservedFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_ReservedFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "ReservedFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check ReservedFound
void System::Uri::Check::_set_ReservedFound(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_ReservedFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "ReservedFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check NotIriCanonical
::System::Uri::Check System::Uri::Check::_get_NotIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_NotIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "NotIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check NotIriCanonical
void System::Uri::Check::_set_NotIriCanonical(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_NotIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "NotIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/System.Check FoundNonAscii
::System::Uri::Check System::Uri::Check::_get_FoundNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_get_FoundNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Uri::Check>("System", "Uri/Check", "FoundNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/System.Check FoundNonAscii
void System::Uri::Check::_set_FoundNonAscii(::System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::_set_FoundNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "FoundNonAscii", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Uri::Check::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Uri::Check::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriFormatException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::UriFormatException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* serializationInfo, ::System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormatException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializationInfo), ::il2cpp_utils::ExtractType(streamingContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriKind
#include "System/UriKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriKind RelativeOrAbsolute
::System::UriKind System::UriKind::_get_RelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_RelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "RelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind RelativeOrAbsolute
void System::UriKind::_set_RelativeOrAbsolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_RelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "RelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Absolute
::System::UriKind System::UriKind::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Absolute
void System::UriKind::_set_Absolute(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Relative
::System::UriKind System::UriKind::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriKind>("System", "UriKind", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Relative
void System::UriKind::_set_Relative(::System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Relative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriComponents Scheme
::System::UriComponents System::UriComponents::_get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Scheme"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Scheme
void System::UriComponents::_set_Scheme(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents UserInfo
::System::UriComponents System::UriComponents::_get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_UserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "UserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents UserInfo
void System::UriComponents::_set_UserInfo(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_UserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "UserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Host
::System::UriComponents System::UriComponents::_get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Host
void System::UriComponents::_set_Host(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Port
::System::UriComponents System::UriComponents::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Port
void System::UriComponents::_set_Port(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Path
::System::UriComponents System::UriComponents::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Path
void System::UriComponents::_set_Path(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Query
::System::UriComponents System::UriComponents::_get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Query");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Query"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Query
void System::UriComponents::_set_Query(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Query");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Query", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Fragment
::System::UriComponents System::UriComponents::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Fragment
void System::UriComponents::_set_Fragment(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongPort
::System::UriComponents System::UriComponents::_get_StrongPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongPort
void System::UriComponents::_set_StrongPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents NormalizedHost
::System::UriComponents System::UriComponents::_get_NormalizedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_NormalizedHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "NormalizedHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents NormalizedHost
void System::UriComponents::_set_NormalizedHost(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_NormalizedHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "NormalizedHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents KeepDelimiter
::System::UriComponents System::UriComponents::_get_KeepDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_KeepDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "KeepDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents KeepDelimiter
void System::UriComponents::_set_KeepDelimiter(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_KeepDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "KeepDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SerializationInfoString
::System::UriComponents System::UriComponents::_get_SerializationInfoString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SerializationInfoString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SerializationInfoString"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SerializationInfoString
void System::UriComponents::_set_SerializationInfoString(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SerializationInfoString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SerializationInfoString", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents AbsoluteUri
::System::UriComponents System::UriComponents::_get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_AbsoluteUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "AbsoluteUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents AbsoluteUri
void System::UriComponents::_set_AbsoluteUri(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_AbsoluteUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "AbsoluteUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HostAndPort
::System::UriComponents System::UriComponents::_get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HostAndPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HostAndPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HostAndPort
void System::UriComponents::_set_HostAndPort(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HostAndPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HostAndPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongAuthority
::System::UriComponents System::UriComponents::_get_StrongAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_StrongAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "StrongAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongAuthority
void System::UriComponents::_set_StrongAuthority(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_StrongAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SchemeAndServer
::System::UriComponents System::UriComponents::_get_SchemeAndServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_SchemeAndServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "SchemeAndServer"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SchemeAndServer
void System::UriComponents::_set_SchemeAndServer(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_SchemeAndServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SchemeAndServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HttpRequestUrl
::System::UriComponents System::UriComponents::_get_HttpRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_HttpRequestUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "HttpRequestUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HttpRequestUrl
void System::UriComponents::_set_HttpRequestUrl(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_HttpRequestUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HttpRequestUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents PathAndQuery
::System::UriComponents System::UriComponents::_get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_get_PathAndQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriComponents>("System", "UriComponents", "PathAndQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents PathAndQuery
void System::UriComponents::_set_PathAndQuery(::System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::_set_PathAndQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "PathAndQuery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriComponents::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriComponents::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriFormat UriEscaped
::System::UriFormat System::UriFormat::_get_UriEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_UriEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "UriEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat UriEscaped
void System::UriFormat::_set_UriEscaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_UriEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "UriEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat Unescaped
::System::UriFormat System::UriFormat::_get_Unescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_Unescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "Unescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat Unescaped
void System::UriFormat::_set_Unescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_Unescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "Unescaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat SafeUnescaped
::System::UriFormat System::UriFormat::_get_SafeUnescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_get_SafeUnescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriFormat>("System", "UriFormat", "SafeUnescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat SafeUnescaped
void System::UriFormat::_set_SafeUnescaped(::System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::_set_SafeUnescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "SafeUnescaped", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriIdnScope
#include "System/UriIdnScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope None
::System::UriIdnScope System::UriIdnScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope None
void System::UriIdnScope::_set_None(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope AllExceptIntranet
::System::UriIdnScope System::UriIdnScope::_get_AllExceptIntranet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_AllExceptIntranet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "AllExceptIntranet"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope AllExceptIntranet
void System::UriIdnScope::_set_AllExceptIntranet(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_AllExceptIntranet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "AllExceptIntranet", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope All
::System::UriIdnScope System::UriIdnScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriIdnScope>("System", "UriIdnScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope All
void System::UriIdnScope::_set_All(::System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriIdnScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriIdnScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParsingError None
::System::ParsingError System::ParsingError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError None
void System::ParsingError::_set_None(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadFormat
::System::ParsingError System::ParsingError::_get_BadFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadFormat
void System::ParsingError::_set_BadFormat(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadScheme
::System::ParsingError System::ParsingError::_get_BadScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadScheme"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadScheme
void System::ParsingError::_set_BadScheme(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadScheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthority
::System::ParsingError System::ParsingError::_get_BadAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthority
void System::ParsingError::_set_BadAuthority(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError EmptyUriString
::System::ParsingError System::ParsingError::_get_EmptyUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_EmptyUriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "EmptyUriString"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError EmptyUriString
void System::ParsingError::_set_EmptyUriString(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_EmptyUriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "EmptyUriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError LastRelativeUriOkErrIndex
::System::ParsingError System::ParsingError::_get_LastRelativeUriOkErrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_LastRelativeUriOkErrIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "LastRelativeUriOkErrIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError LastRelativeUriOkErrIndex
void System::ParsingError::_set_LastRelativeUriOkErrIndex(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_LastRelativeUriOkErrIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "LastRelativeUriOkErrIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SchemeLimit
::System::ParsingError System::ParsingError::_get_SchemeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SchemeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SchemeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SchemeLimit
void System::ParsingError::_set_SchemeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SchemeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SchemeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SizeLimit
::System::ParsingError System::ParsingError::_get_SizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_SizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "SizeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SizeLimit
void System::ParsingError::_set_SizeLimit(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_SizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError MustRootedPath
::System::ParsingError System::ParsingError::_get_MustRootedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_MustRootedPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "MustRootedPath"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError MustRootedPath
void System::ParsingError::_set_MustRootedPath(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_MustRootedPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "MustRootedPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadHostName
::System::ParsingError System::ParsingError::_get_BadHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadHostName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadHostName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadHostName
void System::ParsingError::_set_BadHostName(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadHostName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadHostName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError NonEmptyHost
::System::ParsingError System::ParsingError::_get_NonEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_NonEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "NonEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError NonEmptyHost
void System::ParsingError::_set_NonEmptyHost(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_NonEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "NonEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadPort
::System::ParsingError System::ParsingError::_get_BadPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadPort"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadPort
void System::ParsingError::_set_BadPort(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthorityTerminator
::System::ParsingError System::ParsingError::_get_BadAuthorityTerminator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_BadAuthorityTerminator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "BadAuthorityTerminator"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthorityTerminator
void System::ParsingError::_set_BadAuthorityTerminator(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_BadAuthorityTerminator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthorityTerminator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError CannotCreateRelative
::System::ParsingError System::ParsingError::_get_CannotCreateRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_get_CannotCreateRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ParsingError>("System", "ParsingError", "CannotCreateRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError CannotCreateRelative
void System::ParsingError::_set_CannotCreateRelative(::System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::_set_CannotCreateRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "CannotCreateRelative", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ParsingError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ParsingError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode CopyOnly
::System::UnescapeMode System::UnescapeMode::_get_CopyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_CopyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "CopyOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode CopyOnly
void System::UnescapeMode::_set_CopyOnly(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_CopyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "CopyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Escape
::System::UnescapeMode System::UnescapeMode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Escape
void System::UnescapeMode::_set_Escape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Unescape
::System::UnescapeMode System::UnescapeMode::_get_Unescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_Unescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "Unescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Unescape
void System::UnescapeMode::_set_Unescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_Unescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Unescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode EscapeUnescape
::System::UnescapeMode System::UnescapeMode::_get_EscapeUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_EscapeUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "EscapeUnescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode EscapeUnescape
void System::UnescapeMode::_set_EscapeUnescape(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_EscapeUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "EscapeUnescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode V1ToStringFlag
::System::UnescapeMode System::UnescapeMode::_get_V1ToStringFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_V1ToStringFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "V1ToStringFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode V1ToStringFlag
void System::UnescapeMode::_set_V1ToStringFlag(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_V1ToStringFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "V1ToStringFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAll
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAll"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAll
void System::UnescapeMode::_set_UnescapeAll(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAllOrThrow
::System::UnescapeMode System::UnescapeMode::_get_UnescapeAllOrThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_get_UnescapeAllOrThrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UnescapeMode>("System", "UnescapeMode", "UnescapeAllOrThrow"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAllOrThrow
void System::UnescapeMode::_set_UnescapeAllOrThrow(::System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::_set_UnescapeAllOrThrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAllOrThrow", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UnescapeMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UnescapeMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriHelper
#include "System/UriHelper.hpp"
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HexUpperChars
::ArrayW<::Il2CppChar> System::UriHelper::_get_HexUpperChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_get_HexUpperChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System", "UriHelper", "HexUpperChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HexUpperChars
void System::UriHelper::_set_HexUpperChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::_set_HexUpperChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHelper", "HexUpperChars", value));
}
// Autogenerated method: System.UriHelper..cctor
void System::UriHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriHelper.EscapeString
::ArrayW<::Il2CppChar> System::UriHelper::EscapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPos, bool isUriString, ::Il2CppChar force1, ::Il2CppChar force2, ::Il2CppChar rsvd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(isUriString), ::il2cpp_utils::ExtractType(force1), ::il2cpp_utils::ExtractType(force2), ::il2cpp_utils::ExtractType(rsvd)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPos), isUriString, force1, force2, rsvd);
}
// Autogenerated method: System.UriHelper.EnsureDestinationSize
::ArrayW<::Il2CppChar> System::UriHelper::EnsureDestinationSize(::Il2CppChar* pStr, ::ArrayW<::Il2CppChar> dest, int currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, ByRef<int> destPos, int prevInputPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EnsureDestinationSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EnsureDestinationSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(currentInputPos), ::il2cpp_utils::ExtractType(charsToAdd), ::il2cpp_utils::ExtractType(minReallocateChars), ::il2cpp_utils::ExtractType(destPos), ::il2cpp_utils::ExtractType(prevInputPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, dest, currentInputPos, charsToAdd, minReallocateChars, byref(destPos), prevInputPos);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::StringW input, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.UnescapeString
::ArrayW<::Il2CppChar> System::UriHelper::UnescapeString(::Il2CppChar* pStr, int start, int end, ::ArrayW<::Il2CppChar> dest, ByRef<int> destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, ::System::UnescapeMode unescapeMode, ::System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::UnescapeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStr), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destPosition), ::il2cpp_utils::ExtractType(rsvd1), ::il2cpp_utils::ExtractType(rsvd2), ::il2cpp_utils::ExtractType(rsvd3), ::il2cpp_utils::ExtractType(unescapeMode), ::il2cpp_utils::ExtractType(syntax), ::il2cpp_utils::ExtractType(isQuery)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pStr, start, end, dest, byref(destPosition), rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.MatchUTF8Sequence
void System::UriHelper::MatchUTF8Sequence(::Il2CppChar* pDest, ::ArrayW<::Il2CppChar> dest, ByRef<int> destOffset, ::ArrayW<::Il2CppChar> unescapedChars, int charCount, ::ArrayW<uint8_t> bytes, int byteCount, bool isQuery, bool iriParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::MatchUTF8Sequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "MatchUTF8Sequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDest), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(destOffset), ::il2cpp_utils::ExtractType(unescapedChars), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(isQuery), ::il2cpp_utils::ExtractType(iriParsing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDest, dest, byref(destOffset), unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing);
}
// Autogenerated method: System.UriHelper.EscapeAsciiChar
void System::UriHelper::EscapeAsciiChar(::Il2CppChar ch, ::ArrayW<::Il2CppChar> to, ByRef<int> pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapeAsciiChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeAsciiChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, to, byref(pos));
}
// Autogenerated method: System.UriHelper.EscapedAscii
::Il2CppChar System::UriHelper::EscapedAscii(::Il2CppChar digit, ::Il2CppChar next) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::EscapedAscii");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "EscapedAscii", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit), ::il2cpp_utils::ExtractType(next)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit, next);
}
// Autogenerated method: System.UriHelper.IsNotSafeForUnescape
bool System::UriHelper::IsNotSafeForUnescape(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsNotSafeForUnescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsNotSafeForUnescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.UriHelper.IsReservedUnreservedOrHash
bool System::UriHelper::IsReservedUnreservedOrHash(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsReservedUnreservedOrHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsReservedUnreservedOrHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.IsUnreserved
bool System::UriHelper::IsUnreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::IsUnreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "IsUnreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.Is3986Unreserved
bool System::UriHelper::Is3986Unreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHelper::Is3986Unreserved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriHelper", "Is3986Unreserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Unknown
::System::UriHostNameType System::UriHostNameType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Unknown
void System::UriHostNameType::_set_Unknown(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Basic
::System::UriHostNameType System::UriHostNameType::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Basic
void System::UriHostNameType::_set_Basic(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Dns
::System::UriHostNameType System::UriHostNameType::_get_Dns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_Dns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "Dns"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Dns
void System::UriHostNameType::_set_Dns(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_Dns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Dns", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv4
::System::UriHostNameType System::UriHostNameType::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv4
void System::UriHostNameType::_set_IPv4(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv6
::System::UriHostNameType System::UriHostNameType::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriHostNameType>("System", "UriHostNameType", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv6
void System::UriHostNameType::_set_IPv6(::System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv6", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriHostNameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriHostNameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriParser/System.BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_Table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_Table")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
void System::UriParser::_set_m_Table(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_Table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* System::UriParser::_get_m_TempTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_m_TempTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>*>("System", "UriParser", "m_TempTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
void System::UriParser::_set_m_TempTable(::System::Collections::Generic::Dictionary_2<::StringW, ::System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_m_TempTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_TempTable", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpUri
::System::UriParser* System::UriParser::_get_HttpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpUri
void System::UriParser::_set_HttpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpsUri
::System::UriParser* System::UriParser::_get_HttpsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "HttpsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpsUri
void System::UriParser::_set_HttpsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WsUri
::System::UriParser* System::UriParser::_get_WsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WsUri
void System::UriParser::_set_WsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WssUri
::System::UriParser* System::UriParser::_get_WssUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_WssUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "WssUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WssUri
void System::UriParser::_set_WssUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_WssUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WssUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FtpUri
::System::UriParser* System::UriParser::_get_FtpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FtpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FtpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FtpUri
void System::UriParser::_set_FtpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FtpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FileUri
::System::UriParser* System::UriParser::_get_FileUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "FileUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FileUri
void System::UriParser::_set_FileUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser GopherUri
::System::UriParser* System::UriParser::_get_GopherUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_GopherUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "GopherUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser GopherUri
void System::UriParser::_set_GopherUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_GopherUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NntpUri
::System::UriParser* System::UriParser::_get_NntpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NntpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NntpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NntpUri
void System::UriParser::_set_NntpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NntpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NewsUri
::System::UriParser* System::UriParser::_get_NewsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NewsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NewsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NewsUri
void System::UriParser::_set_NewsUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NewsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser MailToUri
::System::UriParser* System::UriParser::_get_MailToUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_MailToUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "MailToUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser MailToUri
void System::UriParser::_set_MailToUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_MailToUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailToUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser UuidUri
::System::UriParser* System::UriParser::_get_UuidUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_UuidUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "UuidUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser UuidUri
void System::UriParser::_set_UuidUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_UuidUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UuidUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser TelnetUri
::System::UriParser* System::UriParser::_get_TelnetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_TelnetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "TelnetUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser TelnetUri
void System::UriParser::_set_TelnetUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_TelnetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser LdapUri
::System::UriParser* System::UriParser::_get_LdapUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_LdapUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "LdapUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser LdapUri
void System::UriParser::_set_LdapUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_LdapUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetTcpUri
::System::UriParser* System::UriParser::_get_NetTcpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetTcpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetTcpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetTcpUri
void System::UriParser::_set_NetTcpUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetTcpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetPipeUri
::System::UriParser* System::UriParser::_get_NetPipeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_NetPipeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "NetPipeUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetPipeUri
void System::UriParser::_set_NetPipeUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_NetPipeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser VsMacrosUri
::System::UriParser* System::UriParser::_get_VsMacrosUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_VsMacrosUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser*>("System", "UriParser", "VsMacrosUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser VsMacrosUri
void System::UriParser::_set_VsMacrosUri(::System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_VsMacrosUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsMacrosUri", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriParser/System.UriQuirksVersion s_QuirksVersion
::System::UriParser::UriQuirksVersion System::UriParser::_get_s_QuirksVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_s_QuirksVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser", "s_QuirksVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriParser/System.UriQuirksVersion s_QuirksVersion
void System::UriParser::_set_s_QuirksVersion(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_s_QuirksVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "s_QuirksVersion", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_HttpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_HttpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "HttpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
void System::UriParser::_set_HttpSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_HttpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
::System::UriSyntaxFlags System::UriParser::_get_FileSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_get_FileSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriParser", "FileSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
void System::UriParser::_set_FileSyntaxFlags(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::_set_FileSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileSyntaxFlags", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_Flags
[[deprecated("Use field access instead!")]] ::System::UriSyntaxFlags& System::UriParser::dyn_m_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Flags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UriSyntaxFlags m_UpdatableFlags
[[deprecated("Use field access instead!")]] ::System::UriSyntaxFlags& System::UriParser::dyn_m_UpdatableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlags"))->offset;
  return *reinterpret_cast<::System::UriSyntaxFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_UpdatableFlagsUsed
[[deprecated("Use field access instead!")]] bool& System::UriParser::dyn_m_UpdatableFlagsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_UpdatableFlagsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_UpdatableFlagsUsed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Port
[[deprecated("Use field access instead!")]] int& System::UriParser::dyn_m_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_Scheme
[[deprecated("Use field access instead!")]] ::StringW& System::UriParser::dyn_m_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::dyn_m_Scheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Scheme"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.UriParser.get_SchemeName
::StringW System::UriParser::get_SchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_SchemeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_DefaultPort
int System::UriParser::get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_DefaultPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_ShouldUseLegacyV2Quirks
bool System::UriParser::get_ShouldUseLegacyV2Quirks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_ShouldUseLegacyV2Quirks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "get_ShouldUseLegacyV2Quirks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.get_Flags
::System::UriSyntaxFlags System::UriParser::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriSyntaxFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_IsSimple
bool System::UriParser::get_IsSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::get_IsSimple");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSimple", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser..cctor
void System::UriParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.OnNewUri
::System::UriParser* System::UriParser::OnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::OnNewUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InitializeAndValidate
void System::UriParser::InitializeAndValidate(::System::Uri* uri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InitializeAndValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAndValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, uri, byref(parsingError));
}
// Autogenerated method: System.UriParser.Resolve
::StringW System::UriParser::Resolve(::System::Uri* baseUri, ::System::Uri* relativeUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::Resolve");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(relativeUri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, baseUri, relativeUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.GetComponents
::StringW System::UriParser::GetComponents(::System::Uri* uri, ::System::UriComponents components, ::System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::GetComponents");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(components), ::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri, components, format);
}
// Autogenerated method: System.UriParser.IsWellFormedOriginalString
bool System::UriParser::IsWellFormedOriginalString(::System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsWellFormedOriginalString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriParser.NotAny
bool System::UriParser::NotAny(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::NotAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.InFact
bool System::UriParser::InFact(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InFact");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsAllSet
bool System::UriParser::IsAllSet(::System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsAllSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAllSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsFullMatch
bool System::UriParser::IsFullMatch(::System::UriSyntaxFlags flags, ::System::UriSyntaxFlags expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::IsFullMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFullMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, flags, expected);
}
// Autogenerated method: System.UriParser.FindOrFetchAsUnknownV1Syntax
::System::UriParser* System::UriParser::FindOrFetchAsUnknownV1Syntax(::StringW lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::FindOrFetchAsUnknownV1Syntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "FindOrFetchAsUnknownV1Syntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lwrCaseScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.GetSyntax
::System::UriParser* System::UriParser::GetSyntax(::StringW lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::GetSyntax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UriParser", "GetSyntax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lwrCaseScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.InternalOnNewUri
::System::UriParser* System::UriParser::InternalOnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalOnNewUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalOnNewUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalValidate
void System::UriParser::InternalValidate(::System::Uri* thisUri, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, thisUri, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalResolve
::StringW System::UriParser::InternalResolve(::System::Uri* thisBaseUri, ::System::Uri* uriLink, ByRef<::System::UriFormatException*> parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisBaseUri), ::il2cpp_utils::ExtractType(uriLink), ::il2cpp_utils::ExtractIndependentType<::System::UriFormatException*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisBaseUri, uriLink, byref(parsingError));
}
// Autogenerated method: System.UriParser.InternalGetComponents
::StringW System::UriParser::InternalGetComponents(::System::Uri* thisUri, ::System::UriComponents uriComponents, ::System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalGetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri), ::il2cpp_utils::ExtractType(uriComponents), ::il2cpp_utils::ExtractType(uriFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, thisUri, uriComponents, uriFormat);
}
// Autogenerated method: System.UriParser.InternalIsWellFormedOriginalString
bool System::UriParser::InternalIsWellFormedOriginalString(::System::Uri* thisUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/System.UriQuirksVersion
#include "System/UriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriParser/System.UriQuirksVersion V2
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/System.UriQuirksVersion V2
void System::UriParser::UriQuirksVersion::_set_V2(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriParser/System.UriQuirksVersion V3
::System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/System.UriQuirksVersion V3
void System::UriParser::UriQuirksVersion::_set_V3(::System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V3", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriParser::UriQuirksVersion::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriParser::UriQuirksVersion::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/System.BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.DomainNameHelper
#include "System/DomainNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::StringW System::DomainNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, ByRef<int> returnedEnd, ByRef<bool> notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidByIri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidByIri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notCanonical), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, pos, byref(returnedEnd), byref(notCanonical), notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::StringW System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<::StringW> bidiStrippedHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(bidiStrippedHost)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(bidiStrippedHost));
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::StringW input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::StringW idnHost, ::Il2CppChar* hostname, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idnHost), ::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, idnHost, hostname, start, end);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::StringW System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, ByRef<bool> allAscii, ByRef<bool> atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hostname), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allAscii), ::il2cpp_utils::ExtractType(atLeastOneValidIdn)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hostname, start, end, byref(allAscii), byref(atLeastOneValidIdn));
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsASCIILetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsASCIILetterOrDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, ByRef<bool> notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::DomainNameHelper::IsValidDomainLabelCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidDomainLabelCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(notCanonical)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, character, byref(notCanonical));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IPv4AddressHelper
#include "System/IPv4AddressHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv4AddressHelper.ParseCanonicalName
::StringW System::IPv4AddressHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> isLoopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(isLoopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(isLoopback));
}
// Autogenerated method: System.IPv4AddressHelper.ParseHostNumber
int System::IPv4AddressHelper::ParseHostNumber(::StringW str, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseHostNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseHostNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.IsValid
bool System::IPv4AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile, bool unknownScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile), ::il2cpp_utils::ExtractType(unknownScheme)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile, unknownScheme);
}
// Autogenerated method: System.IPv4AddressHelper.IsValidCanonical
bool System::IPv4AddressHelper::IsValidCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool allowIPv6, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::IsValidCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "IsValidCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(allowIPv6), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), allowIPv6, notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.ParseNonCanonical
int64_t System::IPv4AddressHelper::ParseNonCanonical(::Il2CppChar* name, int start, ByRef<int> end, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseNonCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseNonCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), notImplicitFile);
}
// Autogenerated method: System.IPv4AddressHelper.Parse
bool System::IPv4AddressHelper::Parse(::StringW name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated method: System.IPv4AddressHelper.ParseCanonical
bool System::IPv4AddressHelper::ParseCanonical(::StringW name, uint8_t* numbers, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv4AddressHelper::ParseCanonical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv4AddressHelper", "ParseCanonical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, numbers, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IPv6AddressHelper
#include "System/IPv6AddressHelper.hpp"
// Including type: System.Collections.Generic.KeyValuePair`2
#include "System/Collections/Generic/KeyValuePair_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IPv6AddressHelper.ParseCanonicalName
::StringW System::IPv6AddressHelper::ParseCanonicalName(::StringW str, int start, ByRef<bool> isLoopback, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(isLoopback), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, byref(isLoopback), byref(scopeId));
}
// Autogenerated method: System.IPv6AddressHelper.CreateCanonicalName
::StringW System::IPv6AddressHelper::CreateCanonicalName(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::CreateCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "CreateCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.FindCompressionRange
::System::Collections::Generic::KeyValuePair_2<int, int> System::IPv6AddressHelper::FindCompressionRange(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::FindCompressionRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "FindCompressionRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::KeyValuePair_2<int, int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.ShouldHaveIpv4Embedded
bool System::IPv6AddressHelper::ShouldHaveIpv4Embedded(uint16_t* numbers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::ShouldHaveIpv4Embedded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "ShouldHaveIpv4Embedded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numbers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numbers);
}
// Autogenerated method: System.IPv6AddressHelper.InternalIsValid
bool System::IPv6AddressHelper::InternalIsValid(::Il2CppChar* name, int start, ByRef<int> end, bool validateStrictAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::InternalIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "InternalIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(validateStrictAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end), validateStrictAddress);
}
// Autogenerated method: System.IPv6AddressHelper.IsValid
bool System::IPv6AddressHelper::IsValid(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated method: System.IPv6AddressHelper.IsValidStrict
bool System::IPv6AddressHelper::IsValidStrict(::Il2CppChar* name, int start, ByRef<int> end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::IsValidStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "IsValidStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(end));
}
// Autogenerated method: System.IPv6AddressHelper.Parse
bool System::IPv6AddressHelper::Parse(::StringW address, uint16_t* numbers, int start, ByRef<::StringW> scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IPv6AddressHelper::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IPv6AddressHelper", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address), ::il2cpp_utils::ExtractType(numbers), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(scopeId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address, numbers, start, byref(scopeId));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UncNameHelper
#include "System/UncNameHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UncNameHelper.ParseCanonicalName
::StringW System::UncNameHelper::ParseCanonicalName(::StringW str, int start, int end, ByRef<bool> loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(loopback)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, start, end, byref(loopback));
}
// Autogenerated method: System.UncNameHelper.IsValid
bool System::UncNameHelper::IsValid(::Il2CppChar* name, uint16_t start, ByRef<int> returnedEnd, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UncNameHelper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "UncNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(returnedEnd), ::il2cpp_utils::ExtractType(notImplicitFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, start, byref(returnedEnd), notImplicitFile);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriSyntaxFlags
#include "System/UriSyntaxFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags None
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags None
void System::UriSyntaxFlags::_set_None(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MustHaveAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MustHaveAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MustHaveAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MustHaveAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MustHaveAuthority
void System::UriSyntaxFlags::_set_MustHaveAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MustHaveAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MustHaveAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags OptionalAuthority
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_OptionalAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_OptionalAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "OptionalAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags OptionalAuthority
void System::UriSyntaxFlags::_set_OptionalAuthority(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_OptionalAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "OptionalAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveUserInfo
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveUserInfo
void System::UriSyntaxFlags::_set_MayHaveUserInfo(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePort
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePort
void System::UriSyntaxFlags::_set_MayHavePort(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHavePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHavePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHavePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHavePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHavePath
void System::UriSyntaxFlags::_set_MayHavePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHavePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHavePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveQuery
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveQuery
void System::UriSyntaxFlags::_set_MayHaveQuery(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MayHaveFragment
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MayHaveFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MayHaveFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MayHaveFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MayHaveFragment
void System::UriSyntaxFlags::_set_MayHaveFragment(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MayHaveFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MayHaveFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowEmptyHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowEmptyHost
void System::UriSyntaxFlags::_set_AllowEmptyHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowUncHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowUncHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowUncHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowUncHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowUncHost
void System::UriSyntaxFlags::_set_AllowUncHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowUncHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowUncHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDnsHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDnsHost
void System::UriSyntaxFlags::_set_AllowDnsHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv4Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv4Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv4Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv4Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv4Host
void System::UriSyntaxFlags::_set_AllowIPv4Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv4Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv4Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIPv6Host
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIPv6Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIPv6Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIPv6Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIPv6Host
void System::UriSyntaxFlags::_set_AllowIPv6Host(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIPv6Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIPv6Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnInternetHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnInternetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnInternetHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnInternetHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnInternetHost
void System::UriSyntaxFlags::_set_AllowAnInternetHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnInternetHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnInternetHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowAnyOtherHost
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowAnyOtherHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowAnyOtherHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowAnyOtherHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowAnyOtherHost
void System::UriSyntaxFlags::_set_AllowAnyOtherHost(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowAnyOtherHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowAnyOtherHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags FileLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_FileLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_FileLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "FileLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags FileLikeUri
void System::UriSyntaxFlags::_set_FileLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_FileLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "FileLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags MailToLikeUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_MailToLikeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_MailToLikeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "MailToLikeUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags MailToLikeUri
void System::UriSyntaxFlags::_set_MailToLikeUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_MailToLikeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "MailToLikeUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags V1_UnknownUri
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_V1_UnknownUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_V1_UnknownUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "V1_UnknownUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags V1_UnknownUri
void System::UriSyntaxFlags::_set_V1_UnknownUri(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_V1_UnknownUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "V1_UnknownUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags SimpleUserSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_SimpleUserSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_SimpleUserSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "SimpleUserSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags SimpleUserSyntax
void System::UriSyntaxFlags::_set_SimpleUserSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_SimpleUserSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "SimpleUserSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags BuiltInSyntax
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_BuiltInSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_BuiltInSyntax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "BuiltInSyntax"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags BuiltInSyntax
void System::UriSyntaxFlags::_set_BuiltInSyntax(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_BuiltInSyntax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "BuiltInSyntax", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ParserSchemeOnly
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ParserSchemeOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ParserSchemeOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ParserSchemeOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ParserSchemeOnly
void System::UriSyntaxFlags::_set_ParserSchemeOnly(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ParserSchemeOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ParserSchemeOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowDOSPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowDOSPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowDOSPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowDOSPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowDOSPath
void System::UriSyntaxFlags::_set_AllowDOSPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowDOSPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowDOSPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags PathIsRooted
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_PathIsRooted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_PathIsRooted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "PathIsRooted"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags PathIsRooted
void System::UriSyntaxFlags::_set_PathIsRooted(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_PathIsRooted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "PathIsRooted", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags ConvertPathSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_ConvertPathSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_ConvertPathSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "ConvertPathSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags ConvertPathSlashes
void System::UriSyntaxFlags::_set_ConvertPathSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_ConvertPathSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "ConvertPathSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CompressPath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CompressPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CompressPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CompressPath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CompressPath
void System::UriSyntaxFlags::_set_CompressPath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CompressPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CompressPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_CanonicalizeAsFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_CanonicalizeAsFilePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "CanonicalizeAsFilePath"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags CanonicalizeAsFilePath
void System::UriSyntaxFlags::_set_CanonicalizeAsFilePath(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_CanonicalizeAsFilePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "CanonicalizeAsFilePath", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_UnEscapeDotsAndSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags UnEscapeDotsAndSlashes
void System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_UnEscapeDotsAndSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "UnEscapeDotsAndSlashes", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIdn
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIdn"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIdn
void System::UriSyntaxFlags::_set_AllowIdn(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriSyntaxFlags AllowIriParsing
::System::UriSyntaxFlags System::UriSyntaxFlags::_get_AllowIriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_get_AllowIriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::UriSyntaxFlags>("System", "UriSyntaxFlags", "AllowIriParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.UriSyntaxFlags AllowIriParsing
void System::UriSyntaxFlags::_set_AllowIriParsing(::System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::_set_AllowIriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriSyntaxFlags", "AllowIriParsing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::UriSyntaxFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriSyntaxFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.EnvironmentHelpers
#include "System/EnvironmentHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.EnvironmentHelpers.IsWindowsVistaOrAbove
bool System::EnvironmentHelpers::IsWindowsVistaOrAbove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::EnvironmentHelpers::IsWindowsVistaOrAbove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "EnvironmentHelpers", "IsWindowsVistaOrAbove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.LocalAppContextSwitches
#include "System/LocalAppContextSwitches.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean MemberDescriptorEqualsReturnsFalseIfEquivalent
bool System::LocalAppContextSwitches::_get_MemberDescriptorEqualsReturnsFalseIfEquivalent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches::_get_MemberDescriptorEqualsReturnsFalseIfEquivalent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "LocalAppContextSwitches", "MemberDescriptorEqualsReturnsFalseIfEquivalent"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean MemberDescriptorEqualsReturnsFalseIfEquivalent
void System::LocalAppContextSwitches::_set_MemberDescriptorEqualsReturnsFalseIfEquivalent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::LocalAppContextSwitches::_set_MemberDescriptorEqualsReturnsFalseIfEquivalent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "LocalAppContextSwitches", "MemberDescriptorEqualsReturnsFalseIfEquivalent", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOOperation
#include "System/IOOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IOOperation Read
::System::IOOperation System::IOOperation::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Read
void System::IOOperation::_set_Read(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IOOperation Write
::System::IOOperation System::IOOperation::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IOOperation>("System", "IOOperation", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IOOperation Write
void System::IOOperation::_set_Write(::System::IOOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IOOperation", "Write", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IOOperation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOOperation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOAsyncCallback.Invoke
void System::IOAsyncCallback::Invoke(::System::IOAsyncResult* ioares) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioares)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ioares);
}
// Autogenerated method: System.IOAsyncCallback.BeginInvoke
::System::IAsyncResult* System::IOAsyncCallback::BeginInvoke(::System::IOAsyncResult* ioares, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioares), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ioares, callback, object);
}
// Autogenerated method: System.IOAsyncCallback.EndInvoke
void System::IOAsyncCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback async_callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::IOAsyncResult::dyn_async_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object async_state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::IOAsyncResult::dyn_async_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_async_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wait_handle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::IOAsyncResult::dyn_wait_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_wait_handle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wait_handle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed_synchronously
[[deprecated("Use field access instead!")]] bool& System::IOAsyncResult::dyn_completed_synchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed_synchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed_synchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
[[deprecated("Use field access instead!")]] bool& System::IOAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncCallback
::System::AsyncCallback* System::IOAsyncResult::get_AsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AsyncCallback*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncState
::Il2CppObject* System::IOAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::IOAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.get_CompletedSynchronously
bool System::IOAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_CompletedSynchronously
void System::IOAsyncResult::set_CompletedSynchronously(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_CompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.get_IsCompleted
bool System::IOAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IOAsyncResult.set_IsCompleted
void System::IOAsyncResult::set_IsCompleted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::set_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IOAsyncResult.Init
void System::IOAsyncResult::Init(::System::AsyncCallback* async_callback, ::Il2CppObject* async_state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(async_callback), ::il2cpp_utils::ExtractType(async_state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, async_callback, async_state);
}
// Autogenerated method: System.IOAsyncResult.CompleteDisposed
void System::IOAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOAsyncResult::CompleteDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IOOperation operation
[[deprecated("Use field access instead!")]] ::System::IOOperation& System::IOSelectorJob::dyn_operation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_operation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "operation"))->offset;
  return *reinterpret_cast<::System::IOOperation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::IOAsyncCallback*& System::IOSelectorJob::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::IOAsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IOAsyncResult state
[[deprecated("Use field access instead!")]] ::System::IOAsyncResult*& System::IOSelectorJob::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::IOAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IOSelectorJob.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::IOSelectorJob::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.IOSelectorJob.MarkDisposed
void System::IOSelectorJob::MarkDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelectorJob::MarkDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IOSelector
#include "System/IOSelector.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IOSelector.Add
void System::IOSelector::Add(::System::IntPtr handle, ::System::IOSelectorJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IOSelector::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "IOSelector", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(job)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle, job);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Platform
#include "System/Platform.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean checkedOS
bool System::Platform::_get_checkedOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_checkedOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "checkedOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean checkedOS
void System::Platform::_set_checkedOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_checkedOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "checkedOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isMacOS
bool System::Platform::_get_isMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isMacOS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isMacOS"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isMacOS
void System::Platform::_set_isMacOS(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isMacOS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isMacOS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isFreeBSD
bool System::Platform::_get_isFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_get_isFreeBSD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Platform", "isFreeBSD"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isFreeBSD
void System::Platform::_set_isFreeBSD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::_set_isFreeBSD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Platform", "isFreeBSD", value));
}
// Autogenerated method: System.Platform.get_IsMacOS
bool System::Platform::get_IsMacOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsMacOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsMacOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.get_IsFreeBSD
bool System::Platform::get_IsFreeBSD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::get_IsFreeBSD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "get_IsFreeBSD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Platform.uname
int System::Platform::uname(::System::IntPtr buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::uname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "uname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buf);
}
// Autogenerated method: System.Platform.CheckOS
void System::Platform::CheckOS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Platform::CheckOS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "Platform", "CheckOS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriTypeConverter
#include "System/UriTypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriTypeConverter.CanConvert
bool System::UriTypeConverter::CanConvert(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.UriTypeConverter.CanConvertFrom
bool System::UriTypeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.UriTypeConverter.CanConvertTo
bool System::UriTypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.UriTypeConverter.ConvertFrom
::Il2CppObject* System::UriTypeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.UriTypeConverter.ConvertTo
::Il2CppObject* System::UriTypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::UriTypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Generic.LinkedList`1
#include "System/Collections/Generic/LinkedList_1.hpp"
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan MaximumMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_MaximumMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan MaximumMatchTimeout
void System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_MaximumMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "MaximumMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan InfiniteMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_InfiniteMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan InfiniteMatchTimeout
void System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_InfiniteMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "InfiniteMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_FallbackDefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan FallbackDefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_FallbackDefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "FallbackDefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.TimeSpan DefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_DefaultMatchTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::TimeSpan>("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout"));
}
// Autogenerated static field setter
// Set static field: static readonly System.TimeSpan DefaultMatchTimeout
void System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_DefaultMatchTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "DefaultMatchTimeout", value));
}
// Autogenerated static field getter
// Get static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>* System::Text::RegularExpressions::Regex::_get_livecode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_livecode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>*>("System.Text.RegularExpressions", "Regex", "livecode"));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Generic.LinkedList`1<System.Text.RegularExpressions.CachedCodeEntry> livecode
void System::Text::RegularExpressions::Regex::_set_livecode(::System::Collections::Generic::LinkedList_1<::System::Text::RegularExpressions::CachedCodeEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_livecode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "livecode", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 cacheSize
int System::Text::RegularExpressions::Regex::_get_cacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_get_cacheSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "Regex", "cacheSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 cacheSize
void System::Text::RegularExpressions::Regex::_set_cacheSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::_set_cacheSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Regex", "cacheSize", value));
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Regex::dyn_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexRunnerFactory factory
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunnerFactory*& System::Text::RegularExpressions::Regex::dyn_factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "factory"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunnerFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.RegexOptions roptions
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::Regex::dyn_roptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_roptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roptions"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.TimeSpan internalMatchTimeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_internalMatchTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMatchTimeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Collections.Hashtable capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::Regex::dyn_capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String[] capslist
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::Regex::dyn_capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Regex::dyn_capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.ExclusiveReference runnerref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::Regex::dyn_runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.SharedReference replref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::SharedReference*& System::Text::RegularExpressions::Regex::dyn_replref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_replref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::SharedReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode code
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::Regex::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean refsInitialized
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::Regex::dyn_refsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::dyn_refsInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "refsInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_Options
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::Regex::get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_MatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::get_MatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_MatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.get_RightToLeft
bool System::Text::RegularExpressions::Regex::get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::get_RightToLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RightToLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex..cctor
void System::Text::RegularExpressions::Regex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::Regex::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ValidateMatchTimeout
void System::Text::RegularExpressions::Regex::ValidateMatchTimeout(::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ValidateMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "ValidateMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matchTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout
::System::TimeSpan System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitDefaultMatchTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "InitDefaultMatchTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Escape
::StringW System::Text::RegularExpressions::Regex::Escape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.GroupNameFromNumber
::StringW System::Text::RegularExpressions::Regex::GroupNameFromNumber(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::GroupNameFromNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupNameFromNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.IsMatch
bool System::Text::RegularExpressions::Regex::IsMatch(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, ::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Match
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Match(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Match");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Match", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Matches
::System::Text::RegularExpressions::MatchCollection* System::Text::RegularExpressions::Regex::Matches(::StringW input, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::MatchCollection*, false>(this, ___internal__method, input, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW pattern, ::StringW replacement, ::System::Text::RegularExpressions::RegexOptions options, ::System::TimeSpan matchTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(matchTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input, pattern, replacement, options, matchTimeout);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::StringW replacement, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(replacement), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, replacement, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::System::Text::RegularExpressions::MatchEvaluator* evaluator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(evaluator)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, evaluator);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Replace
::StringW System::Text::RegularExpressions::Regex::Replace(::StringW input, ::System::Text::RegularExpressions::MatchEvaluator* evaluator, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, input, evaluator, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.InitializeReferences
void System::Text::RegularExpressions::Regex::InitializeReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::InitializeReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.Run
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Regex::Run(bool quick, int prevlen, ::StringW input, int beginning, int length, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(beginning), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick, prevlen, input, beginning, length, startat);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.LookupCachedAndUpdate
::System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::LookupCachedAndUpdate(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::LookupCachedAndUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Regex", "LookupCachedAndUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::CachedCodeEntry*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.CacheCode
::System::Text::RegularExpressions::CachedCodeEntry* System::Text::RegularExpressions::Regex::CacheCode(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::CacheCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CacheCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::CachedCodeEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionR
bool System::Text::RegularExpressions::Regex::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.UseOptionInvariant
bool System::Text::RegularExpressions::Regex::UseOptionInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::UseOptionInvariant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionInvariant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Regex.ToString
::StringW System::Text::RegularExpressions::Regex::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Regex::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.Invoke
::StringW System::Text::RegularExpressions::MatchEvaluator::Invoke(::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEvaluator::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, match);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.BeginInvoke
::System::IAsyncResult* System::Text::RegularExpressions::MatchEvaluator::BeginInvoke(::System::Text::RegularExpressions::Match* match, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEvaluator::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(match), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, match, callback, object);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEvaluator.EndInvoke
::StringW System::Text::RegularExpressions::MatchEvaluator::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEvaluator::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.CachedCodeEntry
#include "System/Text/RegularExpressions/CachedCodeEntry.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _key
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::CachedCodeEntry::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode _code
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::CachedCodeEntry::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::CachedCodeEntry::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::CachedCodeEntry::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _capslist
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::CachedCodeEntry::dyn__capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::CachedCodeEntry::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexRunnerFactory _factory
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunnerFactory*& System::Text::RegularExpressions::CachedCodeEntry::dyn__factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__factory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_factory"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunnerFactory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.ExclusiveReference _runnerref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::ExclusiveReference*& System::Text::RegularExpressions::CachedCodeEntry::dyn__runnerref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__runnerref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runnerref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::ExclusiveReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.SharedReference _replref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::SharedReference*& System::Text::RegularExpressions::CachedCodeEntry::dyn__replref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::CachedCodeEntry::dyn__replref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::SharedReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.ExclusiveReference
#include "System/Text/RegularExpressions/ExclusiveReference.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexRunner _ref
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexRunner*& System::Text::RegularExpressions::ExclusiveReference::dyn__ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ref"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexRunner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _obj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Text::RegularExpressions::ExclusiveReference::dyn__obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _locked
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::ExclusiveReference::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Get
::Il2CppObject* System::Text::RegularExpressions::ExclusiveReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.ExclusiveReference.Release
void System::Text::RegularExpressions::ExclusiveReference::Release(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::ExclusiveReference::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.SharedReference
#include "System/Text/RegularExpressions/SharedReference.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.WeakReference _ref
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Text::RegularExpressions::SharedReference::dyn__ref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::dyn__ref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ref"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _locked
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::SharedReference::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.SharedReference.Get
::Il2CppObject* System::Text::RegularExpressions::SharedReference::Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.SharedReference.Cache
void System::Text::RegularExpressions::SharedReference::Cache(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::SharedReference::Cache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _positive
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__positive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positive"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _negativeASCII
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negativeASCII"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[][] _negativeUnicode
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__negativeUnicode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negativeUnicode"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexBoyerMoore::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lowASCII
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexBoyerMoore::dyn__lowASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__lowASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _highASCII
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexBoyerMoore::dyn__highASCII() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__highASCII");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highASCII"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _rightToLeft
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexBoyerMoore::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern
bool System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern(::StringW text, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::MatchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.IsMatch
bool System::Text::RegularExpressions::RegexBoyerMoore::IsMatch(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::IsMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.Scan
int System::Text::RegularExpressions::RegexBoyerMoore::Scan(::StringW text, int index, int beglimit, int endlimit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(beglimit), ::il2cpp_utils::ExtractType(endlimit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, text, index, beglimit, endlimit);
}
// Autogenerated method: System.Text.RegularExpressions.RegexBoyerMoore.ToString
::StringW System::Text::RegularExpressions::RegexBoyerMoore::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexBoyerMoore::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _text
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Capture::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Capture::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Capture::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Index
int System::Text::RegularExpressions::Capture::get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Length
int System::Text::RegularExpressions::Capture::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.get_Value
::StringW System::Text::RegularExpressions::Capture::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetOriginalString
::StringW System::Text::RegularExpressions::Capture::GetOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetOriginalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOriginalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetLeftSubstring
::StringW System::Text::RegularExpressions::Capture::GetLeftSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetLeftSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeftSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.GetRightSubstring
::StringW System::Text::RegularExpressions::Capture::GetRightSubstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::GetRightSubstring");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRightSubstring", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Capture.ToString
::StringW System::Text::RegularExpressions::Capture::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Capture::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String InternalRegexIgnoreCase
::StringW System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_InternalRegexIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String InternalRegexIgnoreCase
void System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_InternalRegexIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "InternalRegexIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Space
::StringW System::Text::RegularExpressions::RegexCharClass::_get_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_Space");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "Space"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Space
void System::Text::RegularExpressions::RegexCharClass::_set_Space(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_Space");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Space", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotSpace
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotSpace"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotSpace
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpace(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpace", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String Word
::StringW System::Text::RegularExpressions::RegexCharClass::_get_Word() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_Word");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "Word"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String Word
void System::Text::RegularExpressions::RegexCharClass::_set_Word(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_Word");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "Word", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String NotWord
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotWord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotWord"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String NotWord
void System::Text::RegularExpressions::RegexCharClass::_set_NotWord(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotWord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWord", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String SpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_SpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String SpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_SpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "SpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotSpaceClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotSpaceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotSpaceClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotSpaceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotSpaceClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String WordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_WordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_WordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "WordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String WordClass
void System::Text::RegularExpressions::RegexCharClass::_set_WordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_WordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "WordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotWordClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotWordClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotWordClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotWordClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotWordClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_DigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_DigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "DigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_DigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_DigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "DigitClass", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String NotDigitClass
::StringW System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get_NotDigitClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String NotDigitClass
void System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set_NotDigitClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "NotDigitClass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* System::Text::RegularExpressions::RegexCharClass::_get__definedCategories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__definedCategories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*>("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> _definedCategories
void System::Text::RegularExpressions::RegexCharClass::_set__definedCategories(::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__definedCategories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_definedCategories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[,] _propTable
::ArrayW<::StringW> System::Text::RegularExpressions::RegexCharClass::_get__propTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__propTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Text.RegularExpressions", "RegexCharClass", "_propTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[,] _propTable
void System::Text::RegularExpressions::RegexCharClass::_set__propTable(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__propTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_propTable", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping[] _lcTable
::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> System::Text::RegularExpressions::RegexCharClass::_get__lcTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_get__lcTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping>>("System.Text.RegularExpressions", "RegexCharClass", "_lcTable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping[] _lcTable
void System::Text::RegularExpressions::RegexCharClass::_set__lcTable(::ArrayW<::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::_set__lcTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexCharClass", "_lcTable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange> _rangelist
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange*>*& System::Text::RegularExpressions::RegexCharClass::dyn__rangelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__rangelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rangelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexCharClass::SingleRange*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _categories
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Text::RegularExpressions::RegexCharClass::dyn__categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__categories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_categories"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canonical
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCharClass::dyn__canonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__canonical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canonical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _negate
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCharClass::dyn__negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__negate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_negate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexCharClass _subtractor
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexCharClass::dyn__subtractor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::dyn__subtractor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subtractor"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.get_CanMerge
bool System::Text::RegularExpressions::RegexCharClass::get_CanMerge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::get_CanMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.set_Negate
void System::Text::RegularExpressions::RegexCharClass::set_Negate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::set_Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass..cctor
void System::Text::RegularExpressions::RegexCharClass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddChar
void System::Text::RegularExpressions::RegexCharClass::AddChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCharClass
void System::Text::RegularExpressions::RegexCharClass::AddCharClass(::System::Text::RegularExpressions::RegexCharClass* cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSet
void System::Text::RegularExpressions::RegexCharClass::AddSet(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSubtraction
void System::Text::RegularExpressions::RegexCharClass::AddSubtraction(::System::Text::RegularExpressions::RegexCharClass* sub) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sub)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sub);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddRange
void System::Text::RegularExpressions::RegexCharClass::AddRange(::Il2CppChar first, ::Il2CppChar last) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(last)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, first, last);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName
void System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName(::StringW categoryName, bool invert, bool caseInsensitive, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategoryFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategoryFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(categoryName), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, categoryName, invert, caseInsensitive, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddCategory
void System::Text::RegularExpressions::RegexCharClass::AddCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercase
void System::Text::RegularExpressions::RegexCharClass::AddLowercase(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddLowercaseRange
void System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange(::Il2CppChar chMin, ::Il2CppChar chMax, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddLowercaseRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLowercaseRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chMin), ::il2cpp_utils::ExtractType(chMax), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chMin, chMax, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddWord
void System::Text::RegularExpressions::RegexCharClass::AddWord(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddSpace
void System::Text::RegularExpressions::RegexCharClass::AddSpace(bool ecma, bool negate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.AddDigit
void System::Text::RegularExpressions::RegexCharClass::AddDigit(bool ecma, bool negate, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::AddDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecma), ::il2cpp_utils::ExtractType(negate), ::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ecma, negate, pattern);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SingletonChar
::Il2CppChar System::Text::RegularExpressions::RegexCharClass::SingletonChar(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingletonChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SingletonChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsMergeable
bool System::Text::RegularExpressions::RegexCharClass::IsMergeable(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsMergeable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsMergeable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsEmpty
bool System::Text::RegularExpressions::RegexCharClass::IsEmpty(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingleton
bool System::Text::RegularExpressions::RegexCharClass::IsSingleton(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse
bool System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSingletonInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSingletonInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsSubtraction
bool System::Text::RegularExpressions::RegexCharClass::IsSubtraction(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsSubtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsSubtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsNegated
bool System::Text::RegularExpressions::RegexCharClass::IsNegated(::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsNegated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsNegated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsECMAWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsECMAWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsECMAWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.IsWordChar
bool System::Text::RegularExpressions::RegexCharClass::IsWordChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::IsWordChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "IsWordChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClass
bool System::Text::RegularExpressions::RegexCharClass::CharInClass(::Il2CppChar ch, ::StringW set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive
bool System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive(::Il2CppChar ch, ::StringW set, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInClassInternal
bool System::Text::RegularExpressions::RegexCharClass::CharInClassInternal(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInClassInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInClassInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategory
bool System::Text::RegularExpressions::RegexCharClass::CharInCategory(::Il2CppChar ch, ::StringW set, int start, int mySetLength, int myCategoryLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(mySetLength), ::il2cpp_utils::ExtractType(myCategoryLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, set, start, mySetLength, myCategoryLength);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup
bool System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup(::Il2CppChar ch, ::System::Globalization::UnicodeCategory chcategory, ::StringW category, ByRef<int> i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::CharInCategoryGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "CharInCategoryGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(chcategory), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, chcategory, category, byref(i));
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.NegateCategory
::StringW System::Text::RegularExpressions::RegexCharClass::NegateCategory(::StringW category) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::NegateCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "NegateCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, category);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Parse
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::Parse(::StringW charClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ParseRecursive
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexCharClass::ParseRecursive(::StringW charClass, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ParseRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "ParseRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charClass), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, charClass, start);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.RangeCount
int System::Text::RegularExpressions::RegexCharClass::RangeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::RangeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RangeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.ToStringClass
::StringW System::Text::RegularExpressions::RegexCharClass::ToStringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::ToStringClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.GetRangeAt
::System::Text::RegularExpressions::RegexCharClass::SingleRange* System::Text::RegularExpressions::RegexCharClass::GetRangeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::GetRangeAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRangeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass::SingleRange*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.Canonicalize
void System::Text::RegularExpressions::RegexCharClass::Canonicalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::Canonicalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Canonicalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass.SetFromProperty
::StringW System::Text::RegularExpressions::RegexCharClass::SetFromProperty(::StringW capname, bool invert, ::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SetFromProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCharClass", "SetFromProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname), ::il2cpp_utils::ExtractType(invert), ::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, capname, invert, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char _chMin
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMin");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chMin"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _chMax
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__chMax");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chMax"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _lcOp
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__lcOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__lcOp");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lcOp"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _data
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::dyn__data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.LowerCaseMapping..ctor
// ABORTED elsewhere.  System::Text::RegularExpressions::RegexCharClass::LowerCaseMapping::LowerCaseMapping(::Il2CppChar chMin, ::Il2CppChar chMax, int lcOp, int data)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer
#include "System/Text/RegularExpressions/RegexCharClass_SingleRangeComparer.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRangeComparer.Compare
int System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare(::System::Text::RegularExpressions::RegexCharClass::SingleRange* x, ::System::Text::RegularExpressions::RegexCharClass::SingleRange* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRangeComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCharClass/System.Text.RegularExpressions.SingleRange
#include "System/Text/RegularExpressions/RegexCharClass_SingleRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char _first
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__first() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__first");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_first"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _last
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__last() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCharClass::SingleRange::dyn__last");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_last"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _codes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexCode::dyn__codes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__codes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _strings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::RegexCode::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _trackcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn__trackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__trackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexCode::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexPrefix _fcPrefix
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexPrefix*& System::Text::RegularExpressions::RegexCode::dyn__fcPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__fcPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexPrefix**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexBoyerMoore _bmPrefix
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexBoyerMoore*& System::Text::RegularExpressions::RegexCode::dyn__bmPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__bmPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bmPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexBoyerMoore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _anchors
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexCode::dyn__anchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__anchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _rightToLeft
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexCode::dyn__rightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::dyn__rightToLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightToLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexCode.OpcodeBacktracks
bool System::Text::RegularExpressions::RegexCode::OpcodeBacktracks(int Op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexCode::OpcodeBacktracks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexCode", "OpcodeBacktracks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, Op);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFCD
#include "System/Text/RegularExpressions/RegexFCD.hpp"
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _intStack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexFCD::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__intStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _intDepth
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexFCD::dyn__intDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__intDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.RegularExpressions.RegexFC[] _fcStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::RegexFC*>& System::Text::RegularExpressions::RegexFCD::dyn__fcStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__fcStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::RegexFC*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _fcDepth
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexFCD::dyn__fcDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__fcDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fcDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipAllChildren
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipAllChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipAllChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _skipchild
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__skipchild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__skipchild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skipchild"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _failed
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFCD::dyn__failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::dyn__failed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FirstChars
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::FirstChars(::System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "FirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Prefix
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexFCD::Prefix(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.Anchors
int System::Text::RegularExpressions::RegexFCD::Anchors(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::Anchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "Anchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.AnchorFromType
int System::Text::RegularExpressions::RegexFCD::AnchorFromType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::AnchorFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexFCD", "AnchorFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushInt
void System::Text::RegularExpressions::RegexFCD::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.IntIsEmpty
bool System::Text::RegularExpressions::RegexFCD::IntIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::IntIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IntIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopInt
int System::Text::RegularExpressions::RegexFCD::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PushFC
void System::Text::RegularExpressions::RegexFCD::PushFC(::System::Text::RegularExpressions::RegexFC* fc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PushFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.FCIsEmpty
bool System::Text::RegularExpressions::RegexFCD::FCIsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::FCIsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FCIsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.PopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::PopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::PopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.TopFC
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::TopFC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::TopFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree
::System::Text::RegularExpressions::RegexFC* System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::RegexFCFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegexFCFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexFC*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.SkipChild
void System::Text::RegularExpressions::RegexFCD::SkipChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::SkipChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFCD.CalculateFC
void System::Text::RegularExpressions::RegexFCD::CalculateFC(int NodeType, ::System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFCD::CalculateFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(NodeType), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(CurIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, NodeType, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexFC
#include "System/Text/RegularExpressions/RegexFC.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCharClass _cc
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCharClass*& System::Text::RegularExpressions::RegexFC::dyn__cc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__cc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cc"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCharClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _nullable
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFC::dyn__nullable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__nullable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nullable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexFC::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.AddFC
bool System::Text::RegularExpressions::RegexFC::AddFC(::System::Text::RegularExpressions::RegexFC* fc, bool concatenate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::AddFC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fc), ::il2cpp_utils::ExtractType(concatenate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, fc, concatenate);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.GetFirstChars
::StringW System::Text::RegularExpressions::RegexFC::GetFirstChars(::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::GetFirstChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.Text.RegularExpressions.RegexFC.IsCaseInsensitive
bool System::Text::RegularExpressions::RegexFC::IsCaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexFC::IsCaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.RegexPrefix _empty
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexPrefix*>("System.Text.RegularExpressions", "RegexPrefix", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.RegexPrefix _empty
void System::Text::RegularExpressions::RegexPrefix::_set__empty(::System::Text::RegularExpressions::RegexPrefix* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexPrefix", "_empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.String _prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexPrefix::dyn__prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn__prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _caseInsensitive
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexPrefix::dyn__caseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::dyn__caseInsensitive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caseInsensitive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Prefix
::StringW System::Text::RegularExpressions::RegexPrefix::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_CaseInsensitive
bool System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_CaseInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CaseInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix.get_Empty
::System::Text::RegularExpressions::RegexPrefix* System::Text::RegularExpressions::RegexPrefix::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexPrefix*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexPrefix..cctor
void System::Text::RegularExpressions::RegexPrefix::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexPrefix::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexPrefix", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Group _emptygroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::Group::_get__emptygroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_get__emptygroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Group*>("System.Text.RegularExpressions", "Group", "_emptygroup"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Group _emptygroup
void System::Text::RegularExpressions::Group::_set__emptygroup(::System::Text::RegularExpressions::Group* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::_set__emptygroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Group", "_emptygroup", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _caps
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::Group::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Group::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::Group::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Group.get_Success
bool System::Text::RegularExpressions::Group::get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::get_Success");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Success", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Group..cctor
void System::Text::RegularExpressions::Group::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Group::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Group", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Group
#include "System/Text/RegularExpressions/Group.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Match _match
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::GroupCollection::dyn__match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_match"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _captureMap
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::GroupCollection::dyn__captureMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__captureMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captureMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Group[] _groups
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Text::RegularExpressions::Group*>& System::Text::RegularExpressions::GroupCollection::dyn__groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::dyn__groups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groups"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Text::RegularExpressions::Group*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_SyncRoot
::Il2CppObject* System::Text::RegularExpressions::GroupCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Count
int System::Text::RegularExpressions::GroupCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.get_Item
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::get_Item(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroup
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroup(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetGroupImpl
::System::Text::RegularExpressions::Group* System::Text::RegularExpressions::GroupCollection::GetGroupImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetGroupImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGroupImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Group*, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.CopyTo
void System::Text::RegularExpressions::GroupCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.GroupCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::GroupCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.GroupEnumerator
#include "System/Text/RegularExpressions/GroupEnumerator.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Capture
#include "System/Text/RegularExpressions/Capture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.GroupCollection _rgc
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::GroupEnumerator::dyn__rgc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::dyn__rgc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgc"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curindex
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::GroupEnumerator::dyn__curindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::dyn__curindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curindex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::GroupEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.get_Capture
::System::Text::RegularExpressions::Capture* System::Text::RegularExpressions::GroupEnumerator::get_Capture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::get_Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Capture*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.MoveNext
bool System::Text::RegularExpressions::GroupEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.GroupEnumerator.Reset
void System::Text::RegularExpressions::GroupEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::GroupEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexInterpreter
#include "System/Text/RegularExpressions/RegexInterpreter.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexPrefix
#include "System/Text/RegularExpressions/RegexPrefix.hpp"
// Including type: System.Text.RegularExpressions.RegexBoyerMoore
#include "System/Text/RegularExpressions/RegexBoyerMoore.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 runoperator
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexInterpreter::dyn_runoperator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runoperator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runoperator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] runcodes
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexInterpreter::dyn_runcodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcodes"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 runcodepos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexInterpreter::dyn_runcodepos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcodepos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcodepos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] runstrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::RegexInterpreter::dyn_runstrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runstrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexCode runcode
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexCode*& System::Text::RegularExpressions::RegexInterpreter::dyn_runcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runcode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcode"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexCode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexPrefix runfcPrefix
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexPrefix*& System::Text::RegularExpressions::RegexInterpreter::dyn_runfcPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runfcPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runfcPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexPrefix**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexBoyerMoore runbmPrefix
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexBoyerMoore*& System::Text::RegularExpressions::RegexInterpreter::dyn_runbmPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runbmPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runbmPrefix"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexBoyerMoore**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 runanchors
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexInterpreter::dyn_runanchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runanchors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runanchors"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean runrtl
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexInterpreter::dyn_runrtl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runrtl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runrtl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean runci
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexInterpreter::dyn_runci() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runci");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runci"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo runculture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexInterpreter::dyn_runculture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::dyn_runculture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runculture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Advance
void System::Text::RegularExpressions::RegexInterpreter::Advance(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Advance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Advance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Goto
void System::Text::RegularExpressions::RegexInterpreter::Goto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textto
void System::Text::RegularExpressions::RegexInterpreter::Textto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackto
void System::Text::RegularExpressions::RegexInterpreter::Trackto(int newpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textstart
int System::Text::RegularExpressions::RegexInterpreter::Textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textstart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textstart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Textpos
int System::Text::RegularExpressions::RegexInterpreter::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Trackpos
int System::Text::RegularExpressions::RegexInterpreter::Trackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Trackpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trackpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush
void System::Text::RegularExpressions::RegexInterpreter::TrackPush(int I1, int I2, int I3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2), ::il2cpp_utils::ExtractType(I3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2, I3);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPush2
void System::Text::RegularExpressions::RegexInterpreter::TrackPush2(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPush2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPush2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backtrack
void System::Text::RegularExpressions::RegexInterpreter::Backtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backtrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backtrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.SetOperator
void System::Text::RegularExpressions::RegexInterpreter::SetOperator(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::SetOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPop
void System::Text::RegularExpressions::RegexInterpreter::TrackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.TrackPeek
int System::Text::RegularExpressions::RegexInterpreter::TrackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::TrackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPush
void System::Text::RegularExpressions::RegexInterpreter::StackPush(int I1, int I2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I1), ::il2cpp_utils::ExtractType(I2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I1, I2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPop
void System::Text::RegularExpressions::RegexInterpreter::StackPop(int framesize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(framesize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, framesize);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.StackPeek
int System::Text::RegularExpressions::RegexInterpreter::StackPeek(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::StackPeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StackPeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operator
int System::Text::RegularExpressions::RegexInterpreter::Operator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Operand
int System::Text::RegularExpressions::RegexInterpreter::Operand(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Operand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Operand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Leftchars
int System::Text::RegularExpressions::RegexInterpreter::Leftchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Leftchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leftchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Rightchars
int System::Text::RegularExpressions::RegexInterpreter::Rightchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Rightchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rightchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Bump
int System::Text::RegularExpressions::RegexInterpreter::Bump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Bump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardchars
int System::Text::RegularExpressions::RegexInterpreter::Forwardchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardchars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardchars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Forwardcharnext
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Forwardcharnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Forwardcharnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Stringmatch
bool System::Text::RegularExpressions::RegexInterpreter::Stringmatch(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Stringmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stringmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Refmatch
bool System::Text::RegularExpressions::RegexInterpreter::Refmatch(int index, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Refmatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refmatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, len);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Backwardnext
void System::Text::RegularExpressions::RegexInterpreter::Backwardnext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Backwardnext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Backwardnext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexInterpreter::CharAt(int j) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(j)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, j);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.InitTrackCount
void System::Text::RegularExpressions::RegexInterpreter::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.FindFirstChar
bool System::Text::RegularExpressions::RegexInterpreter::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexInterpreter.Go
void System::Text::RegularExpressions::RegexInterpreter::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexInterpreter::Go");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Text.RegularExpressions.Match _empty
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::_get__empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_get__empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Match*>("System.Text.RegularExpressions", "Match", "_empty"));
}
// Autogenerated static field setter
// Set static field: static System.Text.RegularExpressions.Match _empty
void System::Text::RegularExpressions::Match::_set__empty(::System::Text::RegularExpressions::Match* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::_set__empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "Match", "_empty", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.GroupCollection _groupcoll
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::GroupCollection*& System::Text::RegularExpressions::Match::dyn__groupcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__groupcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_groupcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::GroupCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Regex _regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::Match::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textbeg
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textend
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _textstart
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::Match::dyn__textstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__textstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[][] _matches
[[deprecated("Use field access instead!")]] ::ArrayW<::ArrayW<int>>& System::Text::RegularExpressions::Match::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _matchcount
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::Match::dyn__matchcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__matchcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchcount"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _balancing
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::Match::dyn__balancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::dyn__balancing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_balancing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Empty
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", "get_Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::Match::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::get_Groups");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Reset
void System::Text::RegularExpressions::Match::Reset(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textbeg), ::il2cpp_utils::ExtractType(textend), ::il2cpp_utils::ExtractType(textstart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regex, text, textbeg, textend, textstart);
}
// Autogenerated method: System.Text.RegularExpressions.Match.NextMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::Match::NextMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::NextMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.GroupToStringImpl
::StringW System::Text::RegularExpressions::Match::GroupToStringImpl(int groupnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::GroupToStringImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GroupToStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupnum)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, groupnum);
}
// Autogenerated method: System.Text.RegularExpressions.Match.LastGroupToStringImpl
::StringW System::Text::RegularExpressions::Match::LastGroupToStringImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::LastGroupToStringImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastGroupToStringImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.Match.AddMatch
void System::Text::RegularExpressions::Match::AddMatch(int cap, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::AddMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap, start, len);
}
// Autogenerated method: System.Text.RegularExpressions.Match.BalanceMatch
void System::Text::RegularExpressions::Match::BalanceMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::BalanceMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BalanceMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.RemoveMatch
void System::Text::RegularExpressions::Match::RemoveMatch(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::RemoveMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.IsMatched
bool System::Text::RegularExpressions::Match::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::IsMatched");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchIndex
int System::Text::RegularExpressions::Match::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.MatchLength
int System::Text::RegularExpressions::Match::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::MatchLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.Match.Tidy
void System::Text::RegularExpressions::Match::Tidy(int textpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::Tidy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tidy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textpos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textpos);
}
// Autogenerated method: System.Text.RegularExpressions.Match..cctor
void System::Text::RegularExpressions::Match::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::Match::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "Match", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.MatchSparse
#include "System/Text/RegularExpressions/MatchSparse.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.GroupCollection
#include "System/Text/RegularExpressions/GroupCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::MatchSparse::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchSparse.get_Groups
::System::Text::RegularExpressions::GroupCollection* System::Text::RegularExpressions::MatchSparse::get_Groups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchSparse::get_Groups");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Groups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::GroupCollection*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 infinite
int System::Text::RegularExpressions::MatchCollection::_get_infinite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::_get_infinite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Text.RegularExpressions", "MatchCollection", "infinite"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 infinite
void System::Text::RegularExpressions::MatchCollection::_set_infinite(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::_set_infinite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "MatchCollection", "infinite", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Regex _regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::MatchCollection::dyn__regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ArrayList _matches
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Text::RegularExpressions::MatchCollection::dyn__matches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__matches");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matches"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _done
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::MatchCollection::dyn__done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _input
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::MatchCollection::dyn__input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_input"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _beginning
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__beginning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__beginning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beginning"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _length
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _startat
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__startat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__startat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startat"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _prevlen
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchCollection::dyn__prevlen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::dyn__prevlen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevlen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_Count
int System::Text::RegularExpressions::MatchCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.get_SyncRoot
::Il2CppObject* System::Text::RegularExpressions::MatchCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection..cctor
void System::Text::RegularExpressions::MatchCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "MatchCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::MatchCollection::GetMatch(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.CopyTo
void System::Text::RegularExpressions::MatchCollection::CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Text.RegularExpressions.MatchCollection.GetEnumerator
::System::Collections::IEnumerator* System::Text::RegularExpressions::MatchCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Text.RegularExpressions.MatchEnumerator
#include "System/Text/RegularExpressions/MatchEnumerator.hpp"
// Including type: System.Text.RegularExpressions.MatchCollection
#include "System/Text/RegularExpressions/MatchCollection.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.MatchCollection _matchcoll
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::MatchCollection*& System::Text::RegularExpressions::MatchEnumerator::dyn__matchcoll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__matchcoll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matchcoll"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::MatchCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.Match _match
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::MatchEnumerator::dyn__match() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__match");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_match"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curindex
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::MatchEnumerator::dyn__curindex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__curindex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curindex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _done
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::MatchEnumerator::dyn__done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::dyn__done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.get_Current
::Il2CppObject* System::Text::RegularExpressions::MatchEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.MoveNext
bool System::Text::RegularExpressions::MatchEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.MatchEnumerator.Reset
void System::Text::RegularExpressions::MatchEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::MatchEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexMatchTimeoutException
#include "System/Text/RegularExpressions/RegexMatchTimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String regexInput
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regexInput"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String regexPattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_regexPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regexPattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan matchTimeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_matchTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::dyn_matchTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchTimeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Text::RegularExpressions::RegexMatchTimeoutException::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* si, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, si, context);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexMatchTimeoutException.Init
void System::Text::RegularExpressions::RegexMatchTimeoutException::Init(::StringW input, ::StringW pattern, ::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexMatchTimeoutException::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, pattern, timeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 _type
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexNode> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>*& System::Text::RegularExpressions::RegexNode::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _str
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexNode::dyn__str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char _ch
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Text::RegularExpressions::RegexNode::dyn__ch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__ch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ch"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _m
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn__m() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__m");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_m"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _n
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexNode::dyn__n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_n"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexNode::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _next
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexNode::dyn__next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::dyn__next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_next"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.UseOptionR
bool System::Text::RegularExpressions::RegexNode::UseOptionR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::UseOptionR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReverseLeft
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReverseLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReverseLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeRep
void System::Text::RegularExpressions::RegexNode::MakeRep(int type, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Reduce
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Reduce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.StripEnation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::StripEnation(int emptyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::StripEnation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StripEnation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(emptyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, emptyType);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceGroup
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceRep
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceRep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceRep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceRep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceSet
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceAlternation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceAlternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceAlternation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceAlternation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ReduceConcatenation
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::ReduceConcatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ReduceConcatenation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceConcatenation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.MakeQuantifier
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::MakeQuantifier(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::MakeQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.AddChild
void System::Text::RegularExpressions::RegexNode::AddChild(::System::Text::RegularExpressions::RegexNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Child
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexNode::Child(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Child");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Child", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.ChildCount
int System::Text::RegularExpressions::RegexNode::ChildCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::ChildCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChildCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexNode.Type
int System::Text::RegularExpressions::RegexNode::Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexNode::Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions None
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions None
void System::Text::RegularExpressions::RegexOptions::_set_None(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnoreCase
void System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Multiline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Multiline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Multiline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Multiline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Multiline
void System::Text::RegularExpressions::RegexOptions::_set_Multiline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Multiline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Multiline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ExplicitCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ExplicitCapture
void System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ExplicitCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ExplicitCapture", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Compiled
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Compiled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Compiled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Compiled"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Compiled
void System::Text::RegularExpressions::RegexOptions::_set_Compiled(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Compiled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Compiled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions Singleline
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_Singleline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_Singleline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "Singleline"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions Singleline
void System::Text::RegularExpressions::RegexOptions::_set_Singleline(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_Singleline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "Singleline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_IgnorePatternWhitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions IgnorePatternWhitespace
void System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_IgnorePatternWhitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "IgnorePatternWhitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions RightToLeft
void System::Text::RegularExpressions::RegexOptions::_set_RightToLeft(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_ECMAScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_ECMAScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "ECMAScript"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions ECMAScript
void System::Text::RegularExpressions::RegexOptions::_set_ECMAScript(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_ECMAScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "ECMAScript", value));
}
// Autogenerated static field getter
// Get static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_get_CultureInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::RegexOptions>("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant"));
}
// Autogenerated static field setter
// Set static field: static public System.Text.RegularExpressions.RegexOptions CultureInvariant
void System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant(::System::Text::RegularExpressions::RegexOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::_set_CultureInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexOptions", "CultureInvariant", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexParser
#include "System/Text/RegularExpressions/RegexParser.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Text.RegularExpressions.RegexCharClass
#include "System/Text/RegularExpressions/RegexCharClass.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Byte[] _category
::ArrayW<uint8_t> System::Text::RegularExpressions::RegexParser::_get__category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_get__category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Text.RegularExpressions", "RegexParser", "_category"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Byte[] _category
void System::Text::RegularExpressions::RegexParser::_set__category(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::_set__category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Text.RegularExpressions", "RegexParser", "_category", value));
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _stack
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _group
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_group"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _alternation
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__alternation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__alternation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _concatenation
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__concatenation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__concatenation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_concatenation"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _unit
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexParser::dyn__unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__unit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unit"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexParser::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _currentPos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__currentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__currentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& System::Text::RegularExpressions::RegexParser::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _autocap
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__autocap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__autocap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autocap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__capcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _captop
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__captop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__captop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _capsize
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexParser::dyn__capsize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capsize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capsize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexParser::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _capnumlist
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexParser::dyn__capnumlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnumlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnumlist"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _capnamelist
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexParser::dyn__capnamelist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__capnamelist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnamelist"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexParser::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Text.RegularExpressions.RegexOptions> _optionsStack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>*& System::Text::RegularExpressions::RegexParser::dyn__optionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__optionsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsStack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Text::RegularExpressions::RegexOptions>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _ignoreNextParen
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::dyn__ignoreNextParen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreNextParen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser..cctor
void System::Text::RegularExpressions::RegexParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Parse
::System::Text::RegularExpressions::RegexTree* System::Text::RegularExpressions::RegexParser::Parse(::StringW re, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(re), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexTree*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, re, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseReplacement
::System::Text::RegularExpressions::RegexReplacement* System::Text::RegularExpressions::RegexParser::ParseReplacement(::StringW rep, ::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames, ::System::Text::RegularExpressions::RegexOptions op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "ParseReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rep), ::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames), ::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexReplacement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rep, caps, capsize, capnames, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Escape
::StringW System::Text::RegularExpressions::RegexParser::Escape(::StringW input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.SetPattern
void System::Text::RegularExpressions::RegexParser::SetPattern(::StringW Re) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::SetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Re)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Re);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Reset
void System::Text::RegularExpressions::RegexParser::Reset(::System::Text::RegularExpressions::RegexOptions topopts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topopts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topopts);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanRegex
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanReplacement
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanReplacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanReplacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanReplacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caseInsensitive)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharClass
::System::Text::RegularExpressions::RegexCharClass* System::Text::RegularExpressions::RegexParser::ScanCharClass(bool caseInsensitive, bool scanOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caseInsensitive), ::il2cpp_utils::ExtractType(scanOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCharClass*, false>(this, ___internal__method, caseInsensitive, scanOnly);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanGroupOpen
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanGroupOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanGroupOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanGroupOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBlank
void System::Text::RegularExpressions::RegexParser::ScanBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBlank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBlank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanBasicBackslash
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanBasicBackslash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanBasicBackslash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanBasicBackslash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDollar
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::ScanDollar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDollar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDollar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCapname
::StringW System::Text::RegularExpressions::RegexParser::ScanCapname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCapname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCapname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOctal
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanOctal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOctal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOctal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanDecimal
int System::Text::RegularExpressions::RegexParser::ScanDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanHex
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanHex(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.HexDigit
int System::Text::RegularExpressions::RegexParser::HexDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::HexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "HexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanControl
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsOnlyTopOption
bool System::Text::RegularExpressions::RegexParser::IsOnlyTopOption(::System::Text::RegularExpressions::RegexOptions option) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsOnlyTopOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOnlyTopOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(option)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, option);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanOptions
void System::Text::RegularExpressions::RegexParser::ScanOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ScanCharEscape
::Il2CppChar System::Text::RegularExpressions::RegexParser::ScanCharEscape() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ScanCharEscape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCharEscape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.ParseProperty
::StringW System::Text::RegularExpressions::RegexParser::ParseProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::ParseProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.TypeFromCode
int System::Text::RegularExpressions::RegexParser::TypeFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::TypeFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TypeFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.OptionFromCode
::System::Text::RegularExpressions::RegexOptions System::Text::RegularExpressions::RegexParser::OptionFromCode(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::OptionFromCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "OptionFromCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexOptions, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CountCaptures
void System::Text::RegularExpressions::RegexParser::CountCaptures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CountCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CountCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureSlot
void System::Text::RegularExpressions::RegexParser::NoteCaptureSlot(int i, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptureName
void System::Text::RegularExpressions::RegexParser::NoteCaptureName(::StringW name, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.NoteCaptures
void System::Text::RegularExpressions::RegexParser::NoteCaptures(::System::Collections::Hashtable* caps, int capsize, ::System::Collections::Hashtable* capnames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::NoteCaptures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCaptures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caps), ::il2cpp_utils::ExtractType(capsize), ::il2cpp_utils::ExtractType(capnames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, caps, capsize, capnames);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AssignNameSlots
void System::Text::RegularExpressions::RegexParser::AssignNameSlots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AssignNameSlots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignNameSlots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CaptureSlotFromName
int System::Text::RegularExpressions::RegexParser::CaptureSlotFromName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CaptureSlotFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CaptureSlotFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureSlot
bool System::Text::RegularExpressions::RegexParser::IsCaptureSlot(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsCaptureName
bool System::Text::RegularExpressions::RegexParser::IsCaptureName(::StringW capname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsCaptureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCaptureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capname)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, capname);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionN
bool System::Text::RegularExpressions::RegexParser::UseOptionN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionI
bool System::Text::RegularExpressions::RegexParser::UseOptionI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionM
bool System::Text::RegularExpressions::RegexParser::UseOptionM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionS
bool System::Text::RegularExpressions::RegexParser::UseOptionS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionX
bool System::Text::RegularExpressions::RegexParser::UseOptionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.UseOptionE
bool System::Text::RegularExpressions::RegexParser::UseOptionE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::UseOptionE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseOptionE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpecial
bool System::Text::RegularExpressions::RegexParser::IsSpecial(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpecial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpecial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsStopperX
bool System::Text::RegularExpressions::RegexParser::IsStopperX(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsStopperX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsStopperX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsQuantifier
bool System::Text::RegularExpressions::RegexParser::IsQuantifier(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsTrueQuantifier
bool System::Text::RegularExpressions::RegexParser::IsTrueQuantifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsTrueQuantifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTrueQuantifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsSpace
bool System::Text::RegularExpressions::RegexParser::IsSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.IsMetachar
bool System::Text::RegularExpressions::RegexParser::IsMetachar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::IsMetachar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexParser", "IsMetachar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(int pos, int cch, bool isReplacement) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(cch), ::il2cpp_utils::ExtractType(isReplacement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, cch, isReplacement);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushGroup
void System::Text::RegularExpressions::RegexParser::PushGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopGroup
void System::Text::RegularExpressions::RegexParser::PopGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyStack
bool System::Text::RegularExpressions::RegexParser::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.StartGroup
void System::Text::RegularExpressions::RegexParser::StartGroup(::System::Text::RegularExpressions::RegexNode* openGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::StartGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openGroup)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, openGroup);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddAlternate
void System::Text::RegularExpressions::RegexParser::AddAlternate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddAlternate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAlternate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddConcatenate
void System::Text::RegularExpressions::RegexParser::AddConcatenate(bool lazy, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddConcatenate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddConcatenate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lazy, min, max);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Unit
::System::Text::RegularExpressions::RegexNode* System::Text::RegularExpressions::RegexParser::Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitOne
void System::Text::RegularExpressions::RegexParser::AddUnitOne(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNotone
void System::Text::RegularExpressions::RegexParser::AddUnitNotone(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNotone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNotone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitSet
void System::Text::RegularExpressions::RegexParser::AddUnitSet(::StringW cc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cc);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitNode
void System::Text::RegularExpressions::RegexParser::AddUnitNode(::System::Text::RegularExpressions::RegexNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddUnitType
void System::Text::RegularExpressions::RegexParser::AddUnitType(int type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddUnitType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUnitType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.AddGroup
void System::Text::RegularExpressions::RegexParser::AddGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::AddGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PushOptions
void System::Text::RegularExpressions::RegexParser::PushOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PushOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopOptions
void System::Text::RegularExpressions::RegexParser::PopOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.EmptyOptionsStack
bool System::Text::RegularExpressions::RegexParser::EmptyOptionsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::EmptyOptionsStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyOptionsStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.PopKeepOptions
void System::Text::RegularExpressions::RegexParser::PopKeepOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::PopKeepOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopKeepOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MakeException
::System::ArgumentException* System::Text::RegularExpressions::RegexParser::MakeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MakeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textpos
int System::Text::RegularExpressions::RegexParser::Textpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.Textto
void System::Text::RegularExpressions::RegexParser::Textto(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::Textto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Textto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRightGetChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::MoveRightGetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRightGetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRightGetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveRight
void System::Text::RegularExpressions::RegexParser::MoveRight(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.MoveLeft
void System::Text::RegularExpressions::RegexParser::MoveLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::MoveLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharAt
::Il2CppChar System::Text::RegularExpressions::RegexParser::CharAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.RightChar
::Il2CppChar System::Text::RegularExpressions::RegexParser::RightChar(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::RightChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RightChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexParser.CharsRight
int System::Text::RegularExpressions::RegexParser::CharsRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexParser::CharsRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CharsRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexReplacement
#include "System/Text/RegularExpressions/RegexReplacement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Text.RegularExpressions.MatchEvaluator
#include "System/Text/RegularExpressions/MatchEvaluator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String _rep
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexReplacement::dyn__rep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__rep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rep"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _strings
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexReplacement::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Int32> _rules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& System::Text::RegularExpressions::RegexReplacement::dyn__rules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::dyn__rules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.get_Pattern
::StringW System::Text::RegularExpressions::RegexReplacement::get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::get_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImpl
void System::Text::RegularExpressions::RegexReplacement::ReplacementImpl(::System::Text::StringBuilder* sb, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.ReplacementImplRTL
void System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL(::System::Collections::Generic::List_1<::StringW>* al, ::System::Text::RegularExpressions::Match* match) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::ReplacementImplRTL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplacementImplRTL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(al), ::il2cpp_utils::ExtractType(match)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, al, match);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.Replace
::StringW System::Text::RegularExpressions::RegexReplacement::Replace(::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, regex, input, count, startat);
}
// Autogenerated method: System.Text.RegularExpressions.RegexReplacement.Replace
::StringW System::Text::RegularExpressions::RegexReplacement::Replace(::System::Text::RegularExpressions::MatchEvaluator* evaluator, ::System::Text::RegularExpressions::Regex* regex, ::StringW input, int count, int startat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexReplacement::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexReplacement", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(evaluator), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(startat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, evaluator, regex, input, count, startat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
// Including type: System.Text.RegularExpressions.Match
#include "System/Text/RegularExpressions/Match.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextbeg
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextbeg");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextbeg"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextend
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextend"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextstart
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextstart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextstart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextstart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.String runtext
[[deprecated("Use field access instead!")]] ::StringW& System::Text::RegularExpressions::RegexRunner::dyn_runtext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtext"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtextpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtextpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtextpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtextpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runtrack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runtrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runstack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runstackpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runstackpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runstackpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runstackpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32[] runcrawl
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexRunner::dyn_runcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawl"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runcrawlpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runcrawlpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runcrawlpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Int32 runtrackcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runtrackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runtrackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Match runmatch
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Match*& System::Text::RegularExpressions::RegexRunner::dyn_runmatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runmatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runmatch"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Match**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected internal System.Text.RegularExpressions.Regex runregex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& System::Text::RegularExpressions::RegexRunner::dyn_runregex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_runregex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runregex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeout
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreTimeout
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexRunner::dyn_ignoreTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_ignoreTimeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreTimeout"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeoutOccursAt
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_timeoutOccursAt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeoutOccursAt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeoutOccursAt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 timeoutChecksToSkip
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexRunner::dyn_timeoutChecksToSkip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::dyn_timeoutChecksToSkip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeoutChecksToSkip"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Scan
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::Scan(::System::Text::RegularExpressions::Regex* regex, ::StringW text, int textbeg, int textend, int textstart, int prevlen, bool quick, ::System::TimeSpan timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Scan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Scan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(textbeg), ::il2cpp_utils::ExtractType(textend), ::il2cpp_utils::ExtractType(textstart), ::il2cpp_utils::ExtractType(prevlen), ::il2cpp_utils::ExtractType(quick), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, regex, text, textbeg, textend, textstart, prevlen, quick, timeout);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.StartTimeoutWatch
void System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::StartTimeoutWatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimeoutWatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.CheckTimeout
void System::Text::RegularExpressions::RegexRunner::CheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::CheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoCheckTimeout
void System::Text::RegularExpressions::RegexRunner::DoCheckTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoCheckTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCheckTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Go
void System::Text::RegularExpressions::RegexRunner::Go() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Go");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Go", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.FindFirstChar
bool System::Text::RegularExpressions::RegexRunner::FindFirstChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::FindFirstChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindFirstChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitTrackCount
void System::Text::RegularExpressions::RegexRunner::InitTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitTrackCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitTrackCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.InitMatch
void System::Text::RegularExpressions::RegexRunner::InitMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::InitMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TidyMatch
::System::Text::RegularExpressions::Match* System::Text::RegularExpressions::RegexRunner::TidyMatch(bool quick) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TidyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TidyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quick)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Match*, false>(this, ___internal__method, quick);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.EnsureStorage
void System::Text::RegularExpressions::RegexRunner::EnsureStorage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::EnsureStorage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureStorage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsBoundary
bool System::Text::RegularExpressions::RegexRunner::IsBoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsBoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsECMABoundary
bool System::Text::RegularExpressions::RegexRunner::IsECMABoundary(int index, int startpos, int endpos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsECMABoundary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsECMABoundary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startpos), ::il2cpp_utils::ExtractType(endpos)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index, startpos, endpos);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleTrack
void System::Text::RegularExpressions::RegexRunner::DoubleTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleStack
void System::Text::RegularExpressions::RegexRunner::DoubleStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.DoubleCrawl
void System::Text::RegularExpressions::RegexRunner::DoubleCrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::DoubleCrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleCrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawl
void System::Text::RegularExpressions::RegexRunner::Crawl(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Popcrawl
int System::Text::RegularExpressions::RegexRunner::Popcrawl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Popcrawl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Popcrawl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Crawlpos
int System::Text::RegularExpressions::RegexRunner::Crawlpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Crawlpos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Crawlpos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Capture
void System::Text::RegularExpressions::RegexRunner::Capture(int capnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Capture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Capture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.TransferCapture
void System::Text::RegularExpressions::RegexRunner::TransferCapture(int capnum, int uncapnum, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::TransferCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum), ::il2cpp_utils::ExtractType(uncapnum), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, capnum, uncapnum, start, end);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.Uncapture
void System::Text::RegularExpressions::RegexRunner::Uncapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::Uncapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Uncapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.IsMatched
bool System::Text::RegularExpressions::RegexRunner::IsMatched(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::IsMatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchIndex
int System::Text::RegularExpressions::RegexRunner::MatchIndex(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated method: System.Text.RegularExpressions.RegexRunner.MatchLength
int System::Text::RegularExpressions::RegexRunner::MatchLength(int cap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunner::MatchLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cap);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexRunnerFactory
#include "System/Text/RegularExpressions/RegexRunnerFactory.hpp"
// Including type: System.Text.RegularExpressions.RegexRunner
#include "System/Text/RegularExpressions/RegexRunner.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance
::System::Text::RegularExpressions::RegexRunner* System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexRunnerFactory::CreateInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexRunner*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexNode _root
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexNode*& System::Text::RegularExpressions::RegexTree::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _capnumlist
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexTree::dyn__capnumlist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capnumlist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnumlist"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _capnames
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexTree::dyn__capnames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capnames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capnames"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] _capslist
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Text::RegularExpressions::RegexTree::dyn__capslist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__capslist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capslist"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.RegularExpressions.RegexOptions _options
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::RegexOptions& System::Text::RegularExpressions::RegexTree::dyn__options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_options"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::RegexOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _captop
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexTree::dyn__captop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexTree::dyn__captop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_captop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Text.RegularExpressions.RegexWriter
#include "System/Text/RegularExpressions/RegexWriter.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.RegularExpressions.RegexCode
#include "System/Text/RegularExpressions/RegexCode.hpp"
// Including type: System.Text.RegularExpressions.RegexTree
#include "System/Text/RegularExpressions/RegexTree.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
// Including type: System.Text.RegularExpressions.RegexNode
#include "System/Text/RegularExpressions/RegexNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32[] _intStack
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexWriter::dyn__intStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__intStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intStack"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _depth
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexWriter::dyn__depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] _emitted
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Text::RegularExpressions::RegexWriter::dyn__emitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__emitted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitted"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _curpos
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexWriter::dyn__curpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__curpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_curpos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.Dictionary`2<System.String,System.Int32> _stringhash
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Text::RegularExpressions::RegexWriter::dyn__stringhash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringhash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringhash"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> _stringtable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& System::Text::RegularExpressions::RegexWriter::dyn__stringtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__stringtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringtable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _counting
[[deprecated("Use field access instead!")]] bool& System::Text::RegularExpressions::RegexWriter::dyn__counting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__counting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_counting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _count
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexWriter::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _trackcount
[[deprecated("Use field access instead!")]] int& System::Text::RegularExpressions::RegexWriter::dyn__trackcount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__trackcount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackcount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Hashtable _caps
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Text::RegularExpressions::RegexWriter::dyn__caps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::dyn__caps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_caps"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Write
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::Write(::System::Text::RegularExpressions::RegexTree* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Text.RegularExpressions", "RegexWriter", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PushInt
void System::Text::RegularExpressions::RegexWriter::PushInt(int I) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PushInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(I)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, I);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmptyStack
bool System::Text::RegularExpressions::RegexWriter::EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::EmptyStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmptyStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PopInt
int System::Text::RegularExpressions::RegexWriter::PopInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PopInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.CurPos
int System::Text::RegularExpressions::RegexWriter::CurPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::CurPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.PatchJump
void System::Text::RegularExpressions::RegexWriter::PatchJump(int Offset, int jumpDest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::PatchJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PatchJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Offset), ::il2cpp_utils::ExtractType(jumpDest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, Offset, jumpDest);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.Emit
void System::Text::RegularExpressions::RegexWriter::Emit(int op, int opd1, int opd2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op), ::il2cpp_utils::ExtractType(opd1), ::il2cpp_utils::ExtractType(opd2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, op, opd1, opd2);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.StringCode
int System::Text::RegularExpressions::RegexWriter::StringCode(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::StringCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MakeException
::System::ArgumentException* System::Text::RegularExpressions::RegexWriter::MakeException(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::MakeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.MapCapnum
int System::Text::RegularExpressions::RegexWriter::MapCapnum(int capnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::MapCapnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapCapnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capnum)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, capnum);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree
::System::Text::RegularExpressions::RegexCode* System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree(::System::Text::RegularExpressions::RegexTree* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::RegexCodeFromRegexTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegexCodeFromRegexTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::RegexCode*, false>(this, ___internal__method, tree);
}
// Autogenerated method: System.Text.RegularExpressions.RegexWriter.EmitFragment
void System::Text::RegularExpressions::RegexWriter::EmitFragment(int nodetype, ::System::Text::RegularExpressions::RegexNode* node, int CurIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Text::RegularExpressions::RegexWriter::EmitFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EmitFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodetype), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(CurIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodetype, node, CurIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.BooleanSwitch
#include "System/Diagnostics/BooleanSwitch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.CorrelationManager
#include "System/Diagnostics/CorrelationManager.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.CorrelationManager.get_LogicalOperationStack
::System::Collections::Stack* System::Diagnostics::CorrelationManager::get_LogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::CorrelationManager::get_LogicalOperationStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalOperationStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Stack*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.CorrelationManager.GetLogicalOperationStack
::System::Collections::Stack* System::Diagnostics::CorrelationManager::GetLogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::CorrelationManager::GetLogicalOperationStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLogicalOperationStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Stack*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debug
#include "System/Diagnostics/Debug.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Debug.Assert
void System::Diagnostics::Debug::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debug::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debug", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Switch
#include "System/Diagnostics/Switch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.WeakReference> switches
::System::Collections::Generic::List_1<::System::WeakReference*>* System::Diagnostics::Switch::_get_switches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_get_switches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::System::WeakReference*>*>("System.Diagnostics", "Switch", "switches"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.WeakReference> switches
void System::Diagnostics::Switch::_set_switches(::System::Collections::Generic::List_1<::System::WeakReference*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_set_switches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Switch", "switches", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 s_LastCollectionCount
int System::Diagnostics::Switch::_get_s_LastCollectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_get_s_LastCollectionCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "Switch", "s_LastCollectionCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 s_LastCollectionCount
void System::Diagnostics::Switch::_set_s_LastCollectionCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_set_s_LastCollectionCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Switch", "s_LastCollectionCount", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String switchValueString
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_switchValueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_switchValueString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "switchValueString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String defaultValue
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Switch::dyn_defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::dyn_defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Switch..cctor
void System::Diagnostics::Switch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Switch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Switch._pruneCachedSwitches
void System::Diagnostics::Switch::_pruneCachedSwitches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Switch::_pruneCachedSwitches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Switch", "_pruneCachedSwitches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.SwitchLevelAttribute
#include "System/Diagnostics/SwitchLevelAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::Diagnostics::SwitchLevelAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::SwitchLevelAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.SwitchLevelAttribute.set_SwitchLevelType
void System::Diagnostics::SwitchLevelAttribute::set_SwitchLevelType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::SwitchLevelAttribute::set_SwitchLevelType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SwitchLevelType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Trace
#include "System/Diagnostics/Trace.hpp"
// Including type: System.Diagnostics.CorrelationManager
#include "System/Diagnostics/CorrelationManager.hpp"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.CorrelationManager correlationManager
::System::Diagnostics::CorrelationManager* System::Diagnostics::Trace::_get_correlationManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::_get_correlationManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::CorrelationManager*>("System.Diagnostics", "Trace", "correlationManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.CorrelationManager correlationManager
void System::Diagnostics::Trace::_set_correlationManager(::System::Diagnostics::CorrelationManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::_set_correlationManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Trace", "correlationManager", value));
}
// Autogenerated method: System.Diagnostics.Trace.get_Listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::Trace::get_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::get_Listeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Trace", "get_Listeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceListenerCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Trace.get_AutoFlush
bool System::Diagnostics::Trace::get_AutoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::get_AutoFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Trace", "get_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Trace.get_CorrelationManager
::System::Diagnostics::CorrelationManager* System::Diagnostics::Trace::get_CorrelationManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Trace::get_CorrelationManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Trace", "get_CorrelationManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::CorrelationManager*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 processId
int System::Diagnostics::TraceEventCache::_get_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_get_processId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceEventCache", "processId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 processId
void System::Diagnostics::TraceEventCache::_set_processId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_set_processId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventCache", "processId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String processName
::StringW System::Diagnostics::TraceEventCache::_get_processName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_get_processName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "TraceEventCache", "processName"));
}
// Autogenerated static field setter
// Set static field: static private System.String processName
void System::Diagnostics::TraceEventCache::_set_processName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::_set_processName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventCache", "processName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 timeStamp
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::TraceEventCache::dyn_timeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_timeStamp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeStamp"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime dateTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Diagnostics::TraceEventCache::dyn_dateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_dateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String stackTrace
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::TraceEventCache::dyn_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::dyn_stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_Callstack
::StringW System::Diagnostics::TraceEventCache::get_Callstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_Callstack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Callstack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_LogicalOperationStack
::System::Collections::Stack* System::Diagnostics::TraceEventCache::get_LogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_LogicalOperationStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalOperationStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Stack*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_DateTime
::System::DateTime System::Diagnostics::TraceEventCache::get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_DateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_ProcessId
int System::Diagnostics::TraceEventCache::get_ProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_ProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_ThreadId
::StringW System::Diagnostics::TraceEventCache::get_ThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_ThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.get_Timestamp
int64_t System::Diagnostics::TraceEventCache::get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::get_Timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.InitProcessInfo
void System::Diagnostics::TraceEventCache::InitProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::InitProcessInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "InitProcessInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.GetProcessId
int System::Diagnostics::TraceEventCache::GetProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::GetProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "GetProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceEventCache.GetThreadId
int System::Diagnostics::TraceEventCache::GetThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventCache::GetThreadId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceEventCache", "GetThreadId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Critical
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Critical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Critical"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Critical
void System::Diagnostics::TraceEventType::_set_Critical(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Critical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Critical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Error
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Error
void System::Diagnostics::TraceEventType::_set_Error(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Warning
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Warning
void System::Diagnostics::TraceEventType::_set_Warning(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Information
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Information() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Information");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Information"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Information
void System::Diagnostics::TraceEventType::_set_Information(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Information");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Information", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Verbose
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Verbose
void System::Diagnostics::TraceEventType::_set_Verbose(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Verbose", value));
}
// [EditorBrowsableAttribute] Offset: 0x107AD28
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Start
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Start
void System::Diagnostics::TraceEventType::_set_Start(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Start", value));
}
// [EditorBrowsableAttribute] Offset: 0x107AD3C
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Stop
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Stop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Stop"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Stop
void System::Diagnostics::TraceEventType::_set_Stop(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Stop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Stop", value));
}
// [EditorBrowsableAttribute] Offset: 0x107AD50
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Suspend
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Suspend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Suspend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Suspend"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Suspend
void System::Diagnostics::TraceEventType::_set_Suspend(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Suspend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Suspend", value));
}
// [EditorBrowsableAttribute] Offset: 0x107AD64
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Resume
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Resume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Resume"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Resume
void System::Diagnostics::TraceEventType::_set_Resume(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Resume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Resume", value));
}
// [EditorBrowsableAttribute] Offset: 0x107AD78
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceEventType Transfer
::System::Diagnostics::TraceEventType System::Diagnostics::TraceEventType::_get_Transfer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_get_Transfer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceEventType>("System.Diagnostics", "TraceEventType", "Transfer"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceEventType Transfer
void System::Diagnostics::TraceEventType::_set_Transfer(::System::Diagnostics::TraceEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::_set_Transfer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceEventType", "Transfer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage, ::ArrayW<::Il2CppObject*> args, ::Il2CppObject* data1, ::ArrayW<::Il2CppObject*> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(formatOrMessage), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(data1), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage, args, data1, data);
}
// Autogenerated method: System.Diagnostics.TraceFilter.ShouldTrace
bool System::Diagnostics::TraceFilter::ShouldTrace(::System::Diagnostics::TraceEventCache* cache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW formatOrMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceFilter::ShouldTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(formatOrMessage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, cache, source, eventType, id, formatOrMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceInternal
#include "System/Diagnostics/TraceInternal.hpp"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String appName
::StringW System::Diagnostics::TraceInternal::_get_appName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_appName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "TraceInternal", "appName"));
}
// Autogenerated static field setter
// Set static field: static private System.String appName
void System::Diagnostics::TraceInternal::_set_appName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_appName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "appName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.TraceListenerCollection listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::_get_listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_listeners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceListenerCollection*>("System.Diagnostics", "TraceInternal", "listeners"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.TraceListenerCollection listeners
void System::Diagnostics::TraceInternal::_set_listeners(::System::Diagnostics::TraceListenerCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_listeners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "listeners", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean autoFlush
bool System::Diagnostics::TraceInternal::_get_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_autoFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "autoFlush"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean autoFlush
void System::Diagnostics::TraceInternal::_set_autoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_autoFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "autoFlush", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useGlobalLock
bool System::Diagnostics::TraceInternal::_get_useGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_useGlobalLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "TraceInternal", "useGlobalLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useGlobalLock
void System::Diagnostics::TraceInternal::_set_useGlobalLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_useGlobalLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "useGlobalLock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentLevel
int System::Diagnostics::TraceInternal::_get_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentLevel
void System::Diagnostics::TraceInternal::_set_indentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 indentSize
int System::Diagnostics::TraceInternal::_get_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_indentSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "TraceInternal", "indentSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 indentSize
void System::Diagnostics::TraceInternal::_set_indentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_indentSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "indentSize", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Object critSec
::Il2CppObject* System::Diagnostics::TraceInternal::_get_critSec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_get_critSec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Diagnostics", "TraceInternal", "critSec"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Object critSec
void System::Diagnostics::TraceInternal::_set_critSec(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::_set_critSec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceInternal", "critSec", value));
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_Listeners
::System::Diagnostics::TraceListenerCollection* System::Diagnostics::TraceInternal::get_Listeners() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_Listeners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_Listeners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceListenerCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_AutoFlush
bool System::Diagnostics::TraceInternal::get_AutoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_AutoFlush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_UseGlobalLock
bool System::Diagnostics::TraceInternal::get_UseGlobalLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_UseGlobalLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_UseGlobalLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentLevel
int System::Diagnostics::TraceInternal::get_IndentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.get_IndentSize
int System::Diagnostics::TraceInternal::get_IndentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::get_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "get_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal..cctor
void System::Diagnostics::TraceInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Assert
void System::Diagnostics::TraceInternal::Assert_(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: System.Diagnostics.TraceInternal.Fail
void System::Diagnostics::TraceInternal::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::Fail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceInternal.InitializeSettings
void System::Diagnostics::TraceInternal::InitializeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceInternal::InitializeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "TraceInternal", "InitializeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceLevel
#include "System/Diagnostics/TraceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Off
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Off
void System::Diagnostics::TraceLevel::_set_Off(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Error
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Error
void System::Diagnostics::TraceLevel::_set_Error(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Warning
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Warning
void System::Diagnostics::TraceLevel::_set_Warning(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Info
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Info
void System::Diagnostics::TraceLevel::_set_Info(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceLevel Verbose
::System::Diagnostics::TraceLevel System::Diagnostics::TraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceLevel>("System.Diagnostics", "TraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceLevel Verbose
void System::Diagnostics::TraceLevel::_set_Verbose(::System::Diagnostics::TraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Diagnostics.TraceFilter
#include "System/Diagnostics/TraceFilter.hpp"
// Including type: System.Diagnostics.TraceEventCache
#include "System/Diagnostics/TraceEventCache.hpp"
// Including type: System.Diagnostics.TraceEventType
#include "System/Diagnostics/TraceEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentSize
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceListener::dyn_indentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_indentSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceOptions traceOptions
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceOptions& System::Diagnostics::TraceListener::dyn_traceOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_traceOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "traceOptions"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needIndent
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::TraceListener::dyn_needIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_needIndent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needIndent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String listenerName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::TraceListener::dyn_listenerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_listenerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listenerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.TraceFilter filter
[[deprecated("Use field access instead!")]] ::System::Diagnostics::TraceFilter*& System::Diagnostics::TraceListener::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::System::Diagnostics::TraceFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_IsThreadSafe
bool System::Diagnostics::TraceListener::get_IsThreadSafe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_IsThreadSafe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsThreadSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentLevel
void System::Diagnostics::TraceListener::set_IndentLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_IndentSize
void System::Diagnostics::TraceListener::set_IndentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_IndentSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_Filter
::System::Diagnostics::TraceFilter* System::Diagnostics::TraceListener::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceFilter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_NeedIndent
bool System::Diagnostics::TraceListener::get_NeedIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.set_NeedIndent
void System::Diagnostics::TraceListener::set_NeedIndent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::set_NeedIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NeedIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListener.get_TraceOutputOptions
::System::Diagnostics::TraceOptions System::Diagnostics::TraceListener::get_TraceOutputOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::get_TraceOutputOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TraceOutputOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::TraceOptions, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Dispose
void System::Diagnostics::TraceListener::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.TraceListener.Flush
void System::Diagnostics::TraceListener::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.Fail
void System::Diagnostics::TraceListener::Fail(::StringW message, ::StringW detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(detailMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.TraceListener.Write
void System::Diagnostics::TraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteIndent
void System::Diagnostics::TraceListener::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteIndent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteLine
void System::Diagnostics::TraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.TraceEvent
void System::Diagnostics::TraceListener::TraceEvent(::System::Diagnostics::TraceEventCache* eventCache, ::StringW source, ::System::Diagnostics::TraceEventType eventType, int id, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::TraceEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TraceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCache), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCache, source, eventType, id, message);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteHeader
void System::Diagnostics::TraceListener::WriteHeader(::StringW source, ::System::Diagnostics::TraceEventType eventType, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(eventType), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source, eventType, id);
}
// Autogenerated method: System.Diagnostics.TraceListener.WriteFooter
void System::Diagnostics::TraceListener::WriteFooter(::System::Diagnostics::TraceEventCache* eventCache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::WriteFooter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFooter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventCache)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventCache);
}
// Autogenerated method: System.Diagnostics.TraceListener.IsEnabled
bool System::Diagnostics::TraceListener::IsEnabled(::System::Diagnostics::TraceOptions opts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListener::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opts)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opts);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.TraceListenerCollection
#include "System/Diagnostics/TraceListenerCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Diagnostics.TraceListener
#include "System/Diagnostics/TraceListener.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Diagnostics::TraceListenerCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.get_Count
int System::Diagnostics::TraceListenerCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.set_Item
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsReadOnly
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.get_IsFixedSize
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Add
int System::Diagnostics::TraceListenerCollection::Add(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.Clear
void System::Diagnostics::TraceListenerCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.GetEnumerator
::System::Collections::IEnumerator* System::Diagnostics::TraceListenerCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.InitializeListener
void System::Diagnostics::TraceListenerCollection::InitializeListener(::System::Diagnostics::TraceListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::InitializeListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.RemoveAt
void System::Diagnostics::TraceListenerCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains
bool System::Diagnostics::TraceListenerCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf
int System::Diagnostics::TraceListenerCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove
void System::Diagnostics::TraceListenerCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo
void System::Diagnostics::TraceListenerCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceListenerCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.TraceOptions
#include "System/Diagnostics/TraceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions None
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions None
void System::Diagnostics::TraceOptions::_set_None(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions LogicalOperationStack
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_LogicalOperationStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_LogicalOperationStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "LogicalOperationStack"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions LogicalOperationStack
void System::Diagnostics::TraceOptions::_set_LogicalOperationStack(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_LogicalOperationStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "LogicalOperationStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions DateTime
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions DateTime
void System::Diagnostics::TraceOptions::_set_DateTime(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions Timestamp
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_Timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_Timestamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "Timestamp"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions Timestamp
void System::Diagnostics::TraceOptions::_set_Timestamp(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_Timestamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "Timestamp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions ProcessId
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_ProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_ProcessId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "ProcessId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions ProcessId
void System::Diagnostics::TraceOptions::_set_ProcessId(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_ProcessId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "ProcessId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions ThreadId
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_ThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_ThreadId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "ThreadId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions ThreadId
void System::Diagnostics::TraceOptions::_set_ThreadId(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_ThreadId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "ThreadId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.TraceOptions Callstack
::System::Diagnostics::TraceOptions System::Diagnostics::TraceOptions::_get_Callstack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_get_Callstack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::TraceOptions>("System.Diagnostics", "TraceOptions", "Callstack"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.TraceOptions Callstack
void System::Diagnostics::TraceOptions::_set_Callstack(::System::Diagnostics::TraceOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::_set_Callstack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "TraceOptions", "Callstack", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::TraceOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::TraceOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Diagnostics::AsyncStreamReader::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::AsyncStreamReader::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::Diagnostics::AsyncStreamReader::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Diagnostics::AsyncStreamReader::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Diagnostics::AsyncStreamReader::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cancelOperation
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::AsyncStreamReader::dyn_cancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_cancelOperation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelOperation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent eofEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& System::Diagnostics::AsyncStreamReader::dyn_eofEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_eofEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eofEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object syncObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Diagnostics::AsyncStreamReader::dyn_syncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::dyn_syncObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Close
void System::Diagnostics::AsyncStreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.Dispose
void System::Diagnostics::AsyncStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.AsyncStreamReader.CancelOperation
void System::Diagnostics::AsyncStreamReader::CancelOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::AsyncStreamReader::CancelOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
// Including type: System.Diagnostics.AsyncStreamReader
#include "System/Diagnostics/AsyncStreamReader.hpp"
// Including type: System.Diagnostics.Process/System.Diagnostics.State
#include "System/Diagnostics/Process_State.hpp"
// Including type: System.Diagnostics.Process/System.Diagnostics.ProcInfo
#include "System/Diagnostics/Process_ProcInfo.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.Diagnostics.ProcessThreadCollection
#include "System/Diagnostics/ProcessThreadCollection.hpp"
// Including type: System.Diagnostics.ProcessModuleCollection
#include "System/Diagnostics/ProcessModuleCollection.hpp"
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.Threading.RegisteredWaitHandle
#include "System/Threading/RegisteredWaitHandle.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Diagnostics.ProcessInfo
#include "System/Diagnostics/ProcessInfo.hpp"
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessId
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 processId
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_processId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_processId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveProcessHandle
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveProcessHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveProcessHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveProcessHandle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeProcessHandle m_processHandle
[[deprecated("Use field access instead!")]] ::Microsoft::Win32::SafeHandles::SafeProcessHandle*& System::Diagnostics::Process::dyn_m_processHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processHandle"))->offset;
  return *reinterpret_cast<::Microsoft::Win32::SafeHandles::SafeProcessHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRemoteMachine
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_isRemoteMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_isRemoteMachine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRemoteMachine"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String machineName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_machineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_machineName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "machineName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_processAccess
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_m_processAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_m_processAccess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_processAccess"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessThreadCollection threads
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessThreadCollection*& System::Diagnostics::Process::dyn_threads() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_threads");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "threads"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessThreadCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessModuleCollection modules
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessModuleCollection*& System::Diagnostics::Process::dyn_modules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_modules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modules"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessModuleCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveWorkingSetLimits
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveWorkingSetLimits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveWorkingSetLimits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWorkingSetLimits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean havePriorityClass
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_havePriorityClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_havePriorityClass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "havePriorityClass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessStartInfo startInfo
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessStartInfo*& System::Diagnostics::Process::dyn_startInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_startInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startInfo"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessStartInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean watchingForExit
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_watchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_watchingForExit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watchingForExit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.EventHandler onExited
[[deprecated("Use field access instead!")]] ::System::EventHandler*& System::Diagnostics::Process::dyn_onExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_onExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onExited"))->offset;
  return *reinterpret_cast<::System::EventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean exited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 exitCode
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::dyn_exitCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_exitCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exitCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean signaled
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_signaled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_signaled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signaled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveExitTime
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_haveExitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_haveExitTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveExitTime"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean raisedOnExited
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_raisedOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_raisedOnExited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raisedOnExited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.RegisteredWaitHandle registeredWaitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::RegisteredWaitHandle*& System::Diagnostics::Process::dyn_registeredWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_registeredWaitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "registeredWaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::RegisteredWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.WaitHandle waitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::WaitHandle*& System::Diagnostics::Process::dyn_waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::WaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISynchronizeInvoke synchronizingObject
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISynchronizeInvoke*& System::Diagnostics::Process::dyn_synchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_synchronizingObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchronizingObject"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISynchronizeInvoke**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardOutput
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutput"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamWriter standardInput
[[deprecated("Use field access instead!")]] ::System::IO::StreamWriter*& System::Diagnostics::Process::dyn_standardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardInput"))->offset;
  return *reinterpret_cast<::System::IO::StreamWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.StreamReader standardError
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Diagnostics::Process::dyn_standardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_standardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardError"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Process::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode outputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_outputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_outputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode errorStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_errorStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_errorStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Process/System.Diagnostics.StreamReadMode inputStreamReadMode
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process::StreamReadMode& System::Diagnostics::Process::dyn_inputStreamReadMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_inputStreamReadMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputStreamReadMode"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process::StreamReadMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader output
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_output() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_output");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "output"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Diagnostics.AsyncStreamReader error
[[deprecated("Use field access instead!")]] ::System::Diagnostics::AsyncStreamReader*& System::Diagnostics::Process::dyn_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "error"))->offset;
  return *reinterpret_cast<::System::Diagnostics::AsyncStreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String process_name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::Process::dyn_process_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::dyn_process_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "process_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Process.get_Associated
bool System::Diagnostics::Process::get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Associated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Associated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_HasExited
bool System::Diagnostics::Process::get_HasExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_HasExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Handle
::System::IntPtr System::Diagnostics::Process::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_Id
int System::Diagnostics::Process::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_StartInfo
::System::Diagnostics::ProcessStartInfo* System::Diagnostics::Process::get_StartInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_StartInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::ProcessStartInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_SynchronizingObject
::System::ComponentModel::ISynchronizeInvoke* System::Diagnostics::Process::get_SynchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_SynchronizingObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SynchronizingObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISynchronizeInvoke*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_TotalProcessorTime
::System::TimeSpan System::Diagnostics::Process::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_ProcessName
::StringW System::Diagnostics::Process::get_ProcessName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_ProcessName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.get_IsWindows
bool System::Diagnostics::Process::get_IsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::get_IsWindows");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "get_IsWindows", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessTimes
::System::Diagnostics::ProcessThreadTimes* System::Diagnostics::Process::GetProcessTimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::ProcessThreadTimes*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ReleaseProcessHandle
void System::Diagnostics::Process::ReleaseProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ReleaseProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.CompletionCallback
void System::Diagnostics::Process::CompletionCallback(::Il2CppObject* context, bool wasSignaled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CompletionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompletionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(wasSignaled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context, wasSignaled);
}
// Autogenerated method: System.Diagnostics.Process.Close
void System::Diagnostics::Process::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.EnsureState
void System::Diagnostics::Process::EnsureState(::System::Diagnostics::Process::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Diagnostics.Process.EnsureWatchingForExit
void System::Diagnostics::Process::EnsureWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::EnsureWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.GetCurrentProcess
::System::Diagnostics::Process* System::Diagnostics::Process::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.OnExited
void System::Diagnostics::Process::OnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access, bool throwIfExited) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(throwIfExited)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access, throwIfExited);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::GetProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.OpenProcessHandle
::Microsoft::Win32::SafeHandles::SafeProcessHandle* System::Diagnostics::Process::OpenProcessHandle(int access) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::OpenProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(access)})));
  return ::il2cpp_utils::RunMethodRethrow<::Microsoft::Win32::SafeHandles::SafeProcessHandle*, false>(this, ___internal__method, access);
}
// Autogenerated method: System.Diagnostics.Process.Refresh
void System::Diagnostics::Process::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessHandle
void System::Diagnostics::Process::SetProcessHandle(::Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processHandle);
}
// Autogenerated method: System.Diagnostics.Process.SetProcessId
void System::Diagnostics::Process::SetProcessId(int processId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::SetProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, processId);
}
// Autogenerated method: System.Diagnostics.Process.Start
bool System::Diagnostics::Process::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Kill
void System::Diagnostics::Process::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Kill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.StopWatchingForExit
void System::Diagnostics::Process::StopWatchingForExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StopWatchingForExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopWatchingForExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::StringW System::Diagnostics::Process::ProcessName_internal(::System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.ProcessName_internal
::StringW System::Diagnostics::Process::ProcessName_internal(::Microsoft::Win32::SafeHandles::SafeProcessHandle* handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ProcessName_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ProcessName_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Diagnostics.Process.GetProcess_internal
::System::IntPtr System::Diagnostics::Process::GetProcess_internal(int pid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pid);
}
// Autogenerated method: System.Diagnostics.Process.GetProcessById
::System::Diagnostics::Process* System::Diagnostics::Process::GetProcessById(int processId, ::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::GetProcessById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "GetProcessById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(processId), ::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::Process*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, processId, machineName);
}
// Autogenerated method: System.Diagnostics.Process.IsLocalMachine
bool System::Diagnostics::Process::IsLocalMachine(::StringW machineName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::IsLocalMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "IsLocalMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(machineName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, machineName);
}
// Autogenerated method: System.Diagnostics.Process.ShellExecuteEx_internal
bool System::Diagnostics::Process::ShellExecuteEx_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ShellExecuteEx_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "ShellExecuteEx_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.CreateProcess_internal
bool System::Diagnostics::Process::CreateProcess_internal(::System::Diagnostics::ProcessStartInfo* startInfo, ::System::IntPtr stdin, ::System::IntPtr stdout, ::System::IntPtr stderr, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreateProcess_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreateProcess_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(stdin), ::il2cpp_utils::ExtractType(stdout), ::il2cpp_utils::ExtractType(stderr), ::il2cpp_utils::ExtractType(procInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, stdin, stdout, stderr, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.StartWithShellExecuteEx
bool System::Diagnostics::Process::StartWithShellExecuteEx(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithShellExecuteEx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithShellExecuteEx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.CreatePipe
void System::Diagnostics::Process::CreatePipe(ByRef<::System::IntPtr> read, ByRef<::System::IntPtr> write, bool writeDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::CreatePipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "CreatePipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>(), ::il2cpp_utils::ExtractType(writeDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(read), byref(write), writeDirection);
}
// Autogenerated method: System.Diagnostics.Process.StartWithCreateProcess
bool System::Diagnostics::Process::StartWithCreateProcess(::System::Diagnostics::ProcessStartInfo* startInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StartWithCreateProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWithCreateProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startInfo);
}
// Autogenerated method: System.Diagnostics.Process.FillUserInfo
void System::Diagnostics::Process::FillUserInfo(::System::Diagnostics::ProcessStartInfo* startInfo, ByRef<::System::Diagnostics::Process::ProcInfo> procInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::FillUserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Process", "FillUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startInfo), ::il2cpp_utils::ExtractType(procInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startInfo, byref(procInfo));
}
// Autogenerated method: System.Diagnostics.Process.RaiseOnExited
void System::Diagnostics::Process::RaiseOnExited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::RaiseOnExited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnExited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Process.Dispose
void System::Diagnostics::Process::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Process.ToString
::StringW System::Diagnostics::Process::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/System.Diagnostics.StreamReadMode
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode undefined
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "undefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode undefined
void System::Diagnostics::Process::StreamReadMode::_set_undefined(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "undefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode syncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_syncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_syncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "syncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode syncMode
void System::Diagnostics::Process::StreamReadMode::_set_syncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_syncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "syncMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode asyncMode
::System::Diagnostics::Process::StreamReadMode System::Diagnostics::Process::StreamReadMode::_get_asyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_get_asyncMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::StreamReadMode>("System.Diagnostics", "Process/StreamReadMode", "asyncMode"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.StreamReadMode asyncMode
void System::Diagnostics::Process::StreamReadMode::_set_asyncMode(::System::Diagnostics::Process::StreamReadMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::_set_asyncMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/StreamReadMode", "asyncMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::StreamReadMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::StreamReadMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Process/System.Diagnostics.State
#include "System/Diagnostics/Process_State.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveId
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveId"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveId
void System::Diagnostics::Process::State::_set_HaveId(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsLocal
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsLocal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsLocal
void System::Diagnostics::Process::State::_set_IsLocal(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsLocal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsNt
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsNt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsNt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsNt"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsNt
void System::Diagnostics::Process::State::_set_IsNt(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsNt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsNt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveProcessInfo
void System::Diagnostics::Process::State::_set_HaveProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveProcessInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State Exited
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Exited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Exited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Exited"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State Exited
void System::Diagnostics::Process::State::_set_Exited(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Exited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Exited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State Associated
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_Associated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_Associated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "Associated"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State Associated
void System::Diagnostics::Process::State::_set_Associated(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_Associated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "Associated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State IsWin2k
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_IsWin2k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_IsWin2k");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "IsWin2k"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State IsWin2k
void System::Diagnostics::Process::State::_set_IsWin2k(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_IsWin2k");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "IsWin2k", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveNtProcessInfo
::System::Diagnostics::Process::State System::Diagnostics::Process::State::_get_HaveNtProcessInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_get_HaveNtProcessInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::Process::State>("System.Diagnostics", "Process/State", "HaveNtProcessInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Process/System.Diagnostics.State HaveNtProcessInfo
void System::Diagnostics::Process::State::_set_HaveNtProcessInfo(::System::Diagnostics::Process::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::_set_HaveNtProcessInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Process/State", "HaveNtProcessInfo", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::Process::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Process::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessThreadTimes
#include "System/Diagnostics/ProcessThreadTimes.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int64 create
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_create");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "create"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 exit
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_exit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exit"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 kernel
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_kernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_kernel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kernel"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int64 user
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::ProcessThreadTimes::dyn_user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::dyn_user");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.ProcessThreadTimes.get_TotalProcessorTime
::System::TimeSpan System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessThreadTimes::get_TotalProcessorTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalProcessorTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessStartInfo
#include "System/Diagnostics/ProcessStartInfo.hpp"
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Collections.Specialized.StringDictionary
#include "System/Collections/Specialized/StringDictionary.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] empty
::ArrayW<::StringW> System::Diagnostics::ProcessStartInfo::_get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_get_empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Diagnostics", "ProcessStartInfo", "empty"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] empty
void System::Diagnostics::ProcessStartInfo::_set_empty(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::_set_empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessStartInfo", "empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String arguments
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arguments"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String directory
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String verb
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_verb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_verb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "verb"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.ProcessWindowStyle windowStyle
[[deprecated("Use field access instead!")]] ::System::Diagnostics::ProcessWindowStyle& System::Diagnostics::ProcessStartInfo::dyn_windowStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_windowStyle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "windowStyle"))->offset;
  return *reinterpret_cast<::System::Diagnostics::ProcessWindowStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean errorDialog
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_errorDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialog"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr errorDialogParentHandle
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_errorDialogParentHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "errorDialogParentHandle"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useShellExecute
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_useShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_useShellExecute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useShellExecute"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String domain
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_domain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domain"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecureString password
[[deprecated("Use field access instead!")]] ::System::Security::SecureString*& System::Diagnostics::ProcessStartInfo::dyn_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "password"))->offset;
  return *reinterpret_cast<::System::Security::SecureString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String passwordInClearText
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_passwordInClearText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "passwordInClearText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loadUserProfile
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_loadUserProfile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadUserProfile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardInput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardInput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardOutput
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean redirectStandardError
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_redirectStandardError");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "redirectStandardError"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardOutputEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardOutputEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardOutputEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding standardErrorEncoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_standardErrorEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standardErrorEncoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean createNoWindow
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::ProcessStartInfo::dyn_createNoWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_createNoWindow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createNoWindow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.WeakReference weakParentProcess
[[deprecated("Use field access instead!")]] ::System::WeakReference*& System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_weakParentProcess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weakParentProcess"))->offset;
  return *reinterpret_cast<::System::WeakReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Specialized.StringDictionary environmentVariables
[[deprecated("Use field access instead!")]] ::System::Collections::Specialized::StringDictionary*& System::Diagnostics::ProcessStartInfo::dyn_environmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environmentVariables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentVariables"))->offset;
  return *reinterpret_cast<::System::Collections::Specialized::StringDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,System.String> environment
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*& System::Diagnostics::ProcessStartInfo::dyn_environment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::dyn_environment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environment"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Arguments
::StringW System::Diagnostics::ProcessStartInfo::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_Arguments
void System::Diagnostics::ProcessStartInfo::set_Arguments(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_EnvironmentVariables
::System::Collections::Specialized::StringDictionary* System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_EnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnvironmentVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Specialized::StringDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardInput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardOutput
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_RedirectStandardError
bool System::Diagnostics::ProcessStartInfo::get_RedirectStandardError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_RedirectStandardError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RedirectStandardError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardErrorEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardErrorEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardErrorEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_StandardOutputEncoding
::System::Text::Encoding* System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_StandardOutputEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StandardOutputEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UseShellExecute
bool System::Diagnostics::ProcessStartInfo::get_UseShellExecute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UseShellExecute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseShellExecute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_UserName
::StringW System::Diagnostics::ProcessStartInfo::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_UserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Password
::System::Security::SecureString* System::Diagnostics::ProcessStartInfo::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecureString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_Domain
::StringW System::Diagnostics::ProcessStartInfo::get_Domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_LoadUserProfile
bool System::Diagnostics::ProcessStartInfo::get_LoadUserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_LoadUserProfile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadUserProfile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_FileName
::StringW System::Diagnostics::ProcessStartInfo::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.set_FileName
void System::Diagnostics::ProcessStartInfo::set_FileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::set_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_WorkingDirectory
::StringW System::Diagnostics::ProcessStartInfo::get_WorkingDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_WorkingDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WorkingDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo.get_HaveEnvVars
bool System::Diagnostics::ProcessStartInfo::get_HaveEnvVars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::get_HaveEnvVars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HaveEnvVars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.ProcessStartInfo..cctor
void System::Diagnostics::ProcessStartInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessStartInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "ProcessStartInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWaitHandle
#include "System/Diagnostics/ProcessWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DefaultTraceListener
#include "System/Diagnostics/DefaultTraceListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean OnWin32
bool System::Diagnostics::DefaultTraceListener::_get_OnWin32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_OnWin32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "DefaultTraceListener", "OnWin32"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean OnWin32
void System::Diagnostics::DefaultTraceListener::_set_OnWin32(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_OnWin32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "OnWin32", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTracePrefix
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTracePrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTracePrefix
void System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTracePrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTracePrefix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String MonoTraceFile
::StringW System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_get_MonoTraceFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String MonoTraceFile
void System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::_set_MonoTraceFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DefaultTraceListener", "MonoTraceFile", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String logFileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DefaultTraceListener::dyn_logFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::dyn_logFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.get_LogFileName
::StringW System::Diagnostics::DefaultTraceListener::get_LogFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::get_LogFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener..cctor
void System::Diagnostics::DefaultTraceListener::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.GetPrefix
::StringW System::Diagnostics::DefaultTraceListener::GetPrefix(::StringW var, ::StringW target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::GetPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "GetPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(var), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, var, target);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteWindowsDebugString
void System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteWindowsDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "DefaultTraceListener", "WriteWindowsDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteDebugString
void System::Diagnostics::DefaultTraceListener::WriteDebugString(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteDebugString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDebugString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteMonoTrace
void System::Diagnostics::DefaultTraceListener::WriteMonoTrace(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteMonoTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteMonoTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WritePrefix
void System::Diagnostics::DefaultTraceListener::WritePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WritePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteImpl
void System::Diagnostics::DefaultTraceListener::WriteImpl(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLogFile
void System::Diagnostics::DefaultTraceListener::WriteLogFile(::StringW message, ::StringW logFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLogFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLogFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(logFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, logFile);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Fail
void System::Diagnostics::DefaultTraceListener::Fail(::StringW message, ::StringW detailMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Fail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(detailMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, detailMessage);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.Write
void System::Diagnostics::DefaultTraceListener::Write(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: System.Diagnostics.DefaultTraceListener.WriteLine
void System::Diagnostics::DefaultTraceListener::WriteLine(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DefaultTraceListener::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.MonitoringDescriptionAttribute
#include "System/Diagnostics/MonitoringDescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.MonitoringDescriptionAttribute.get_Description
::StringW System::Diagnostics::MonitoringDescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::MonitoringDescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ProcessWindowStyle
#include "System/Diagnostics/ProcessWindowStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Hidden
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Hidden
void System::Diagnostics::ProcessWindowStyle::_set_Hidden(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Maximized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Maximized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Maximized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Maximized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Maximized
void System::Diagnostics::ProcessWindowStyle::_set_Maximized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Maximized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Maximized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Minimized
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Minimized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Minimized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Minimized"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Minimized
void System::Diagnostics::ProcessWindowStyle::_set_Minimized(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Minimized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Minimized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.ProcessWindowStyle Normal
::System::Diagnostics::ProcessWindowStyle System::Diagnostics::ProcessWindowStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::ProcessWindowStyle>("System.Diagnostics", "ProcessWindowStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.ProcessWindowStyle Normal
void System::Diagnostics::ProcessWindowStyle::_set_Normal(::System::Diagnostics::ProcessWindowStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "ProcessWindowStyle", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::ProcessWindowStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ProcessWindowStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int64 Frequency
int64_t System::Diagnostics::Stopwatch::_get_Frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_Frequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Diagnostics", "Stopwatch", "Frequency"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int64 Frequency
void System::Diagnostics::Stopwatch::_set_Frequency(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_Frequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "Frequency", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsHighResolution
bool System::Diagnostics::Stopwatch::_get_IsHighResolution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_get_IsHighResolution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "Stopwatch", "IsHighResolution"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsHighResolution
void System::Diagnostics::Stopwatch::_set_IsHighResolution(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::_set_IsHighResolution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Stopwatch", "IsHighResolution", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 elapsed
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_elapsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elapsed"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 started
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::Stopwatch::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_running
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::Stopwatch::dyn_is_running() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::dyn_is_running");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_running"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_Elapsed
::System::TimeSpan System::Diagnostics::Stopwatch::get_Elapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_Elapsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Elapsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedMilliseconds
int64_t System::Diagnostics::Stopwatch::get_ElapsedMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_ElapsedTicks
int64_t System::Diagnostics::Stopwatch::get_ElapsedTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_ElapsedTicks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ElapsedTicks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.get_IsRunning
bool System::Diagnostics::Stopwatch::get_IsRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::get_IsRunning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRunning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch..cctor
void System::Diagnostics::Stopwatch::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.GetTimestamp
int64_t System::Diagnostics::Stopwatch::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Stopwatch", "GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Reset
void System::Diagnostics::Stopwatch::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Start
void System::Diagnostics::Stopwatch::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Stop
void System::Diagnostics::Stopwatch::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Stopwatch.Restart
void System::Diagnostics::Stopwatch::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Stopwatch::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArrayConverter/System.ComponentModel.ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.ComponentModel.ArrayConverter
#include "System/ComponentModel/ArrayConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ArrayConverter.ConvertTo
::Il2CppObject* System::ComponentModel::ArrayConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::ArrayConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.ArrayConverter.GetPropertiesSupported
bool System::ComponentModel::ArrayConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ArrayConverter/System.ComponentModel.ArrayPropertyDescriptor
#include "System/ComponentModel/ArrayConverter_ArrayPropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArrayConverter::ArrayPropertyDescriptor::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ArraySubsetEnumerator
#include "System/ComponentModel/ArraySubsetEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Array array
[[deprecated("Use field access instead!")]] ::System::Array*& System::ComponentModel::ArraySubsetEnumerator::dyn_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "array"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 total
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArraySubsetEnumerator::dyn_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_total");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 current
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ArraySubsetEnumerator::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.get_Current
::Il2CppObject* System::ComponentModel::ArraySubsetEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.MoveNext
bool System::ComponentModel::ArraySubsetEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ArraySubsetEnumerator.Reset
void System::ComponentModel::ArraySubsetEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ArraySubsetEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.AttributeCollection Empty
::System::ComponentModel::AttributeCollection* System::ComponentModel::AttributeCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::AttributeCollection*>("System.ComponentModel", "AttributeCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.AttributeCollection Empty
void System::ComponentModel::AttributeCollection::_set_Empty(::System::ComponentModel::AttributeCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _defaultAttributes
::System::Collections::Hashtable* System::ComponentModel::AttributeCollection::_get__defaultAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get__defaultAttributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "AttributeCollection", "_defaultAttributes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _defaultAttributes
void System::ComponentModel::AttributeCollection::_set__defaultAttributes(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set__defaultAttributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "_defaultAttributes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object internalSyncObject
::Il2CppObject* System::ComponentModel::AttributeCollection::_get_internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_get_internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "AttributeCollection", "internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object internalSyncObject
void System::ComponentModel::AttributeCollection::_set_internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::_set_internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "AttributeCollection", "internalSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] _attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::AttributeCollection::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection/System.ComponentModel.AttributeEntry[] _foundAttributeTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>& System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__foundAttributeTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundAttributeTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::AttributeCollection::AttributeEntry>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::AttributeCollection::dyn__index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::dyn__index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Attributes
::ArrayW<::System::Attribute*> System::ComponentModel::AttributeCollection::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Count
int System::ComponentModel::AttributeCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.get_Item
::System::Attribute* System::ComponentModel::AttributeCollection::get_Item(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::AttributeCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection..cctor
void System::ComponentModel::AttributeCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "AttributeCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetDefaultAttribute
::System::Attribute* System::ComponentModel::AttributeCollection::GetDefaultAttribute(::System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Attribute*, false>(this, ___internal__method, attributeType);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.CopyTo
void System::ComponentModel::AttributeCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.AttributeCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::AttributeCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AttributeCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BooleanConverter
#include "System/ComponentModel/BooleanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::_get_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_get_values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverter::StandardValuesCollection*>("System.ComponentModel", "BooleanConverter", "values"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
void System::ComponentModel::BooleanConverter::_set_values(::System::ComponentModel::TypeConverter::StandardValuesCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::_set_values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BooleanConverter", "values", value));
}
// Autogenerated method: System.ComponentModel.BooleanConverter.CanConvertFrom
bool System::ComponentModel::BooleanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::BooleanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::BooleanConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesExclusive
bool System::ComponentModel::BooleanConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.BooleanConverter.GetStandardValuesSupported
bool System::ComponentModel::BooleanConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BooleanConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BrowsableAttribute
#include "System/ComponentModel/BrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Yes
void System::ComponentModel::BrowsableAttribute::_set_Yes(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute No
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute No
void System::ComponentModel::BrowsableAttribute::_set_No(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.BrowsableAttribute Default
::System::ComponentModel::BrowsableAttribute* System::ComponentModel::BrowsableAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::BrowsableAttribute*>("System.ComponentModel", "BrowsableAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.BrowsableAttribute Default
void System::ComponentModel::BrowsableAttribute::_set_Default(::System::ComponentModel::BrowsableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "BrowsableAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean browsable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::BrowsableAttribute::dyn_browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::dyn_browsable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.get_Browsable
bool System::ComponentModel::BrowsableAttribute::get_Browsable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::get_Browsable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Browsable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute..cctor
void System::ComponentModel::BrowsableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "BrowsableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.Equals
bool System::ComponentModel::BrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.GetHashCode
int System::ComponentModel::BrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BrowsableAttribute.IsDefaultAttribute
bool System::ComponentModel::BrowsableAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BrowsableAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ByteConverter
#include "System/ComponentModel/ByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ByteConverter.get_TargetType
::System::Type* System::ComponentModel::ByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.ByteConverter.FromString
::Il2CppObject* System::ComponentModel::ByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.ByteConverter.ToString
::StringW System::ComponentModel::ByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.CollectionConverter
#include "System/ComponentModel/CollectionConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.CollectionConverter.ConvertTo
::Il2CppObject* System::ComponentModel::CollectionConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.CollectionConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::CollectionConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.CollectionConverter.GetPropertiesSupported
bool System::ComponentModel::CollectionConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CollectionConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object EventDisposed
::Il2CppObject* System::ComponentModel::Component::_get_EventDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::_get_EventDisposed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "Component", "EventDisposed"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object EventDisposed
void System::ComponentModel::Component::_set_EventDisposed(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::_set_EventDisposed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "Component", "EventDisposed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISite site
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISite*& System::ComponentModel::Component::dyn_site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::dyn_site");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "site"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList*& System::ComponentModel::Component::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEvents
bool System::ComponentModel::Component::get_CanRaiseEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_CanRaiseEvents");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRaiseEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_CanRaiseEventsInternal
bool System::ComponentModel::Component::get_CanRaiseEventsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_CanRaiseEventsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRaiseEventsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_Site
::System::ComponentModel::ISite* System::ComponentModel::Component::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_Site");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Site", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.get_DesignMode
bool System::ComponentModel::Component::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::get_DesignMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component..cctor
void System::ComponentModel::Component::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "Component", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.Dispose
void System::ComponentModel::Component::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.ComponentModel.Component.GetService
::Il2CppObject* System::ComponentModel::Component::GetService(::System::Type* service) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::GetService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(service)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, service);
}
// Autogenerated method: System.ComponentModel.Component.Finalize
void System::ComponentModel::Component::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Component.ToString
::StringW System::ComponentModel::Component::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Component::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.CustomTypeDescriptor
#include "System/ComponentModel/CustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ICustomTypeDescriptor _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ICustomTypeDescriptor*& System::ComponentModel::CustomTypeDescriptor::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::CustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.CustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::CustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::CustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DecimalConverter
#include "System/ComponentModel/DecimalConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DecimalConverter.get_AllowHex
bool System::ComponentModel::DecimalConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.get_TargetType
::System::Type* System::ComponentModel::DecimalConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.CanConvertTo
bool System::ComponentModel::DecimalConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ConvertTo
::Il2CppObject* System::ComponentModel::DecimalConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.FromString
::Il2CppObject* System::ComponentModel::DecimalConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DecimalConverter.ToString
::StringW System::ComponentModel::DecimalConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DecimalConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultEventAttribute
#include "System/ComponentModel/DefaultEventAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
::System::ComponentModel::DefaultEventAttribute* System::ComponentModel::DefaultEventAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultEventAttribute*>("System.ComponentModel", "DefaultEventAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultEventAttribute Default
void System::ComponentModel::DefaultEventAttribute::_set_Default(::System::ComponentModel::DefaultEventAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultEventAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultEventAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.get_Name
::StringW System::ComponentModel::DefaultEventAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute..cctor
void System::ComponentModel::DefaultEventAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultEventAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.Equals
bool System::ComponentModel::DefaultEventAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultEventAttribute.GetHashCode
int System::ComponentModel::DefaultEventAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultEventAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultPropertyAttribute
#include "System/ComponentModel/DefaultPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
::System::ComponentModel::DefaultPropertyAttribute* System::ComponentModel::DefaultPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DefaultPropertyAttribute*>("System.ComponentModel", "DefaultPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DefaultPropertyAttribute Default
void System::ComponentModel::DefaultPropertyAttribute::_set_Default(::System::ComponentModel::DefaultPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DefaultPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DefaultPropertyAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.get_Name
::StringW System::ComponentModel::DefaultPropertyAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute..cctor
void System::ComponentModel::DefaultPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DefaultPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.Equals
bool System::ComponentModel::DefaultPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultPropertyAttribute.GetHashCode
int System::ComponentModel::DefaultPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DefaultValueAttribute
#include "System/ComponentModel/DefaultValueAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::DefaultValueAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.get_Value
::Il2CppObject* System::ComponentModel::DefaultValueAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.Equals
bool System::ComponentModel::DefaultValueAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DefaultValueAttribute.GetHashCode
int System::ComponentModel::DefaultValueAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DefaultValueAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.DelegatingTypeDescriptionProvider
#include "System/ComponentModel/DelegatingTypeDescriptionProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.get_Provider
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.DelegatingTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DelegatingTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DescriptionAttribute
#include "System/ComponentModel/DescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DescriptionAttribute Default
::System::ComponentModel::DescriptionAttribute* System::ComponentModel::DescriptionAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DescriptionAttribute*>("System.ComponentModel", "DescriptionAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DescriptionAttribute Default
void System::ComponentModel::DescriptionAttribute::_set_Default(::System::ComponentModel::DescriptionAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DescriptionAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DescriptionAttribute::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_Description
::StringW System::ComponentModel::DescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.get_DescriptionValue
::StringW System::ComponentModel::DescriptionAttribute::get_DescriptionValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::get_DescriptionValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DescriptionValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute..cctor
void System::ComponentModel::DescriptionAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DescriptionAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.Equals
bool System::ComponentModel::DescriptionAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.GetHashCode
int System::ComponentModel::DescriptionAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DescriptionAttribute.IsDefaultAttribute
bool System::ComponentModel::DescriptionAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DescriptionAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerAttribute
#include "System/ComponentModel/DesignerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String designerBaseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_designerBaseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "designerBaseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.Equals
bool System::ComponentModel::DesignerAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerAttribute.GetHashCode
int System::ComponentModel::DesignerAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerCategoryAttribute
#include "System/ComponentModel/DesignerCategoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Component");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Component"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Component
void System::ComponentModel::DesignerCategoryAttribute::_set_Component(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Component");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Component", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Default
void System::ComponentModel::DesignerCategoryAttribute::_set_Default(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Form() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Form");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Form"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Form
void System::ComponentModel::DesignerCategoryAttribute::_set_Form(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Form");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Form", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
::System::ComponentModel::DesignerCategoryAttribute* System::ComponentModel::DesignerCategoryAttribute::_get_Generic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_get_Generic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerCategoryAttribute*>("System.ComponentModel", "DesignerCategoryAttribute", "Generic"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerCategoryAttribute Generic
void System::ComponentModel::DesignerCategoryAttribute::_set_Generic(::System::ComponentModel::DesignerCategoryAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::_set_Generic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerCategoryAttribute", "Generic", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DesignerCategoryAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_Category
::StringW System::ComponentModel::DesignerCategoryAttribute::get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute..cctor
void System::ComponentModel::DesignerCategoryAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerCategoryAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::DesignerCategoryAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.Equals
bool System::ComponentModel::DesignerCategoryAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.GetHashCode
int System::ComponentModel::DesignerCategoryAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerCategoryAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerCategoryAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.DesignerSerializationVisibility
#include "System/ComponentModel/DesignerSerializationVisibility.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Hidden
void System::ComponentModel::DesignerSerializationVisibility::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Visible
void System::ComponentModel::DesignerSerializationVisibility::_set_Visible(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.DesignerSerializationVisibility Content
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibility::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibility>("System.ComponentModel", "DesignerSerializationVisibility", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.DesignerSerializationVisibility Content
void System::ComponentModel::DesignerSerializationVisibility::_set_Content(::System::ComponentModel::DesignerSerializationVisibility value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibility", "Content", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::DesignerSerializationVisibility::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibility::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DesignerSerializationVisibilityAttribute
#include "System/ComponentModel/DesignerSerializationVisibilityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Content
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Hidden
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Visible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Visible
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Visible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Visible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
::System::ComponentModel::DesignerSerializationVisibilityAttribute* System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DesignerSerializationVisibilityAttribute*>("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DesignerSerializationVisibilityAttribute Default
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default(::System::ComponentModel::DesignerSerializationVisibilityAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DesignerSerializationVisibilityAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.DesignerSerializationVisibility visibility
[[deprecated("Use field access instead!")]] ::System::ComponentModel::DesignerSerializationVisibility& System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::dyn_visibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visibility"))->offset;
  return *reinterpret_cast<::System::ComponentModel::DesignerSerializationVisibility*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.get_Visibility
::System::ComponentModel::DesignerSerializationVisibility System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::get_Visibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Visibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::DesignerSerializationVisibility, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute..cctor
void System::ComponentModel::DesignerSerializationVisibilityAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DesignerSerializationVisibilityAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.GetHashCode
int System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DesignerSerializationVisibilityAttribute.IsDefaultAttribute
bool System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DesignerSerializationVisibilityAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DisplayNameAttribute
#include "System/ComponentModel/DisplayNameAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
::System::ComponentModel::DisplayNameAttribute* System::ComponentModel::DisplayNameAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::DisplayNameAttribute*>("System.ComponentModel", "DisplayNameAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.DisplayNameAttribute Default
void System::ComponentModel::DisplayNameAttribute::_set_Default(::System::ComponentModel::DisplayNameAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "DisplayNameAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::DisplayNameAttribute::dyn__displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::dyn__displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayName
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.get_DisplayNameValue
::StringW System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::get_DisplayNameValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayNameValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute..cctor
void System::ComponentModel::DisplayNameAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "DisplayNameAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.Equals
bool System::ComponentModel::DisplayNameAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.GetHashCode
int System::ComponentModel::DisplayNameAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
bool System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DisplayNameAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.DoubleConverter
#include "System/ComponentModel/DoubleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.DoubleConverter.get_AllowHex
bool System::ComponentModel::DoubleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.get_TargetType
::System::Type* System::ComponentModel::DoubleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.FromString
::Il2CppObject* System::ComponentModel::DoubleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.DoubleConverter.ToString
::StringW System::ComponentModel::DoubleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::DoubleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorAttribute
#include "System/ComponentModel/EditorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String baseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_baseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_baseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::EditorAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::EditorAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.Equals
bool System::ComponentModel::EditorAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorAttribute.GetHashCode
int System::ComponentModel::EditorAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EditorBrowsableAttribute
#include "System/ComponentModel/EditorBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EditorBrowsableState browsableState
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EditorBrowsableState& System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::dyn_browsableState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "browsableState"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EditorBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.Equals
bool System::ComponentModel::EditorBrowsableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.EditorBrowsableAttribute.GetHashCode
int System::ComponentModel::EditorBrowsableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.EditorBrowsableState
#include "System/ComponentModel/EditorBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Always
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Always
void System::ComponentModel::EditorBrowsableState::_set_Always(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Never
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Never
void System::ComponentModel::EditorBrowsableState::_set_Never(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.EditorBrowsableState Advanced
::System::ComponentModel::EditorBrowsableState System::ComponentModel::EditorBrowsableState::_get_Advanced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_get_Advanced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EditorBrowsableState>("System.ComponentModel", "EditorBrowsableState", "Advanced"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.EditorBrowsableState Advanced
void System::ComponentModel::EditorBrowsableState::_set_Advanced(::System::ComponentModel::EditorBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::_set_Advanced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EditorBrowsableState", "Advanced", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EditorBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EditorBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EnumConverter
#include "System/ComponentModel/EnumConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection values
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter::StandardValuesCollection*& System::ComponentModel::EnumConverter::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter::StandardValuesCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::EnumConverter::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EnumConverter.get_Comparer
::System::Collections::IComparer* System::ComponentModel::EnumConverter::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::get_Comparer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertFrom
bool System::ComponentModel::EnumConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.CanConvertTo
bool System::ComponentModel::EnumConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.EnumConverter.ConvertTo
::Il2CppObject* System::ComponentModel::EnumConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::EnumConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesExclusive
bool System::ComponentModel::EnumConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.GetStandardValuesSupported
bool System::ComponentModel::EnumConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.EnumConverter.IsValid
bool System::ComponentModel::EnumConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EnumConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventDescriptor
#include "System/ComponentModel/EventDescriptor.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
::System::ComponentModel::EventDescriptorCollection* System::ComponentModel::EventDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::EventDescriptorCollection*>("System.ComponentModel", "EventDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.EventDescriptorCollection Empty
void System::ComponentModel::EventDescriptorCollection::_set_Empty(::System::ComponentModel::EventDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "EventDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptor[] events
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::EventDescriptor*>& System::ComponentModel::EventDescriptorCollection::dyn_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "events"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::EventDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::EventDescriptorCollection::dyn_namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::EventDescriptorCollection::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean eventsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 eventCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::EventDescriptorCollection::dyn_eventCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_eventCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::EventDescriptorCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Count
int System::ComponentModel::EventDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.get_Item
::System::ComponentModel::EventDescriptor* System::ComponentModel::EventDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection..cctor
void System::ComponentModel::EventDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "EventDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Add
int System::ComponentModel::EventDescriptorCollection::Add(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Clear
void System::ComponentModel::EventDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Contains
bool System::ComponentModel::EventDescriptorCollection::Contains(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::EventDescriptorCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureEventsOwned
void System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureEventsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureEventsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.EnsureSize
void System::ComponentModel::EventDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.IndexOf
int System::ComponentModel::EventDescriptorCollection::IndexOf(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Insert
void System::ComponentModel::EventDescriptorCollection::Insert(int index, ::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.Remove
void System::ComponentModel::EventDescriptorCollection::Remove(::System::ComponentModel::EventDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.RemoveAt
void System::ComponentModel::EventDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.InternalSort
void System::ComponentModel::EventDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::EventDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::EventDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::EventDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.EventHandlerList
#include "System/ComponentModel/EventHandlerList.hpp"
// Including type: System.ComponentModel.EventHandlerList/System.ComponentModel.ListEntry
#include "System/ComponentModel/EventHandlerList_ListEntry.hpp"
// Including type: System.ComponentModel.Component
#include "System/ComponentModel/Component.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventHandlerList/System.ComponentModel.ListEntry head
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventHandlerList::ListEntry*& System::ComponentModel::EventHandlerList::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventHandlerList::ListEntry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Component parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Component*& System::ComponentModel::EventHandlerList::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.get_Item
::System::Delegate* System::ComponentModel::EventHandlerList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Delegate*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.EventHandlerList.Find
::System::ComponentModel::EventHandlerList::ListEntry* System::ComponentModel::EventHandlerList::Find(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::EventHandlerList::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::EventHandlerList::ListEntry*, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ExtenderProvidedPropertyAttribute
#include "System/ComponentModel/ExtenderProvidedPropertyAttribute.hpp"
// Including type: System.ComponentModel.IExtenderProvider
#include "System/ComponentModel/IExtenderProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.IExtenderProvider provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::IExtenderProvider*& System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::dyn_provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::IExtenderProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ExtenderProvidedPropertyAttribute.get_Provider
::System::ComponentModel::IExtenderProvider* System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ExtenderProvidedPropertyAttribute::get_Provider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IExtenderProvider*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IComponent.get_Site
::System::ComponentModel::ISite* System::ComponentModel::IComponent::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IComponent::get_Site");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Site", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.IContainer.Remove
void System::ComponentModel::IContainer::Remove(::System::ComponentModel::IComponent* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::IContainer::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ICustomTypeDescriptor::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ICustomTypeDescriptor::GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ICustomTypeDescriptor::GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
// Including type: System.ComponentModel.IContainer
#include "System/ComponentModel/IContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISite.get_Container
::System::ComponentModel::IContainer* System::ComponentModel::ISite::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Container");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_DesignMode
bool System::ComponentModel::ISite::get_DesignMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_DesignMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DesignMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISite.get_Name
::StringW System::ComponentModel::ISite::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISite::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.get_InvokeRequired
bool System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::get_InvokeRequired");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvokeRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ISynchronizeInvoke.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ISynchronizeInvoke::BeginInvoke(::System::Delegate* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ISynchronizeInvoke::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int16Converter
#include "System/ComponentModel/Int16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int16Converter.get_TargetType
::System::Type* System::ComponentModel::Int16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int16Converter.FromString
::Il2CppObject* System::ComponentModel::Int16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int16Converter.ToString
::StringW System::ComponentModel::Int16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int32Converter
#include "System/ComponentModel/Int32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int32Converter.get_TargetType
::System::Type* System::ComponentModel::Int32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int32Converter.FromString
::Il2CppObject* System::ComponentModel::Int32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int32Converter.ToString
::StringW System::ComponentModel::Int32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Int64Converter
#include "System/ComponentModel/Int64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Int64Converter.get_TargetType
::System::Type* System::ComponentModel::Int64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.Int64Converter.FromString
::Il2CppObject* System::ComponentModel::Int64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.Int64Converter.ToString
::StringW System::ComponentModel::Int64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Int64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ListChangedType listChangedType
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ListChangedType& System::ComponentModel::ListChangedEventArgs::dyn_listChangedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_listChangedType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "listChangedType"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ListChangedType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 newIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_newIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_newIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 oldIndex
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedEventArgs::dyn_oldIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventArgs::dyn_oldIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ListChangedEventHandler
#include "System/ComponentModel/ListChangedEventHandler.hpp"
// Including type: System.ComponentModel.ListChangedEventArgs
#include "System/ComponentModel/ListChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.Invoke
void System::ComponentModel::ListChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::ListChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::ListChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.ListChangedEventHandler.EndInvoke
void System::ComponentModel::ListChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ListChangedType
#include "System/ComponentModel/ListChangedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType Reset
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType Reset
void System::ComponentModel::ListChangedType::_set_Reset(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "Reset", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemAdded
void System::ComponentModel::ListChangedType::_set_ItemAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemDeleted
void System::ComponentModel::ListChangedType::_set_ItemDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemMoved
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemMoved"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemMoved
void System::ComponentModel::ListChangedType::_set_ItemMoved(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemMoved", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType ItemChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_ItemChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_ItemChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "ItemChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType ItemChanged
void System::ComponentModel::ListChangedType::_set_ItemChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_ItemChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "ItemChanged", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorAdded
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorAdded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorDeleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorDeleted
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorDeleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorDeleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
::System::ComponentModel::ListChangedType System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_get_PropertyDescriptorChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::ListChangedType>("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.ListChangedType PropertyDescriptorChanged
void System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged(::System::ComponentModel::ListChangedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::_set_PropertyDescriptorChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ListChangedType", "PropertyDescriptorChanged", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ListChangedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ListChangedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.MemberDescriptor
#include "System/ComponentModel/MemberDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String displayName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_displayName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "displayName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nameHash
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_nameHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_nameHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameHash"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection attributeCollection
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AttributeCollection*& System::ComponentModel::MemberDescriptor::dyn_attributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributeCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributeCollection"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] attributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Attribute[] originalAttributes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Attribute*>& System::ComponentModel::MemberDescriptor::dyn_originalAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_originalAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalAttributes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Attribute*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFiltered
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFiltered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFiltered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFiltered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean attributesFilled
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::MemberDescriptor::dyn_attributesFilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_attributesFilled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributesFilled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 metadataVersion
[[deprecated("Use field access instead!")]] int& System::ComponentModel::MemberDescriptor::dyn_metadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_metadataVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "metadataVersion"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String category
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_category");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "category"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::MemberDescriptor::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object lockCookie
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::MemberDescriptor::dyn_lockCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::dyn_lockCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockCookie"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_AttributeArray
::ArrayW<::System::Attribute*> System::ComponentModel::MemberDescriptor::get_AttributeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_AttributeArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AttributeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Attributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_Name
::StringW System::ComponentModel::MemberDescriptor::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.get_NameHashCode
int System::ComponentModel::MemberDescriptor::get_NameHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::get_NameHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CheckAttributesValid
void System::ComponentModel::MemberDescriptor::CheckAttributesValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CheckAttributesValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAttributesValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
::System::ComponentModel::AttributeCollection* System::ComponentModel::MemberDescriptor::CreateAttributeCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::CreateAttributeCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttributeCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FillAttributes
void System::ComponentModel::MemberDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.FilterAttributesIfNeeded
void System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::FilterAttributesIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttributesIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.Equals
bool System::ComponentModel::MemberDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.MemberDescriptor.GetHashCode
int System::ComponentModel::MemberDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::MemberDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String propertyName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::PropertyChangedEventArgs::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventArgs::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyChangedEventHandler
#include "System/ComponentModel/PropertyChangedEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangedEventArgs
#include "System/ComponentModel/PropertyChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.Invoke
void System::ComponentModel::PropertyChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::PropertyChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.PropertyChangedEventHandler.EndInvoke
void System::ComponentModel::PropertyChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::PropertyDescriptor::dyn_converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] editors
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ComponentModel::PropertyDescriptor::dyn_editors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editors"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] editorTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::PropertyDescriptor::dyn_editorTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editorTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 editorCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptor::dyn_editorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::dyn_editorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "editorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::PropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.Equals
bool System::ComponentModel::PropertyDescriptor::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.FillAttributes
void System::ComponentModel::PropertyDescriptor::FillAttributes(::System::Collections::IList* attributeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::FillAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeList);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptor.GetHashCode
int System::ComponentModel::PropertyDescriptor::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptor::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptor
#include "System/ComponentModel/PropertyDescriptor.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::PropertyDescriptorCollection*>("System.ComponentModel", "PropertyDescriptorCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.PropertyDescriptorCollection Empty
void System::ComponentModel::PropertyDescriptorCollection::_set_Empty(::System::ComponentModel::PropertyDescriptorCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "PropertyDescriptorCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IDictionary cachedFoundProperties
[[deprecated("Use field access instead!")]] ::System::Collections::IDictionary*& System::ComponentModel::PropertyDescriptorCollection::dyn_cachedFoundProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_cachedFoundProperties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedFoundProperties"))->offset;
  return *reinterpret_cast<::System::Collections::IDictionary**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cachedIgnoreCase
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_cachedIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_cachedIgnoreCase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedIgnoreCase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptor[] properties
[[deprecated("Use field access instead!")]] ::ArrayW<::System::ComponentModel::PropertyDescriptor*>& System::ComponentModel::PropertyDescriptorCollection::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::ArrayW<::System::ComponentModel::PropertyDescriptor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 propCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::dyn_propCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_propCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] namedSort
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::ComponentModel::PropertyDescriptorCollection::dyn_namedSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_namedSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namedSort"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IComparer comparer
[[deprecated("Use field access instead!")]] ::System::Collections::IComparer*& System::ComponentModel::PropertyDescriptorCollection::dyn_comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comparer"))->offset;
  return *reinterpret_cast<::System::Collections::IComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean propsOwned
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_propsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_propsOwned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propsOwned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean needSort
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_needSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_needSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "needSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::PropertyDescriptorCollection::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.get_Item
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::get_Item(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsReadOnly
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_IsFixedSize
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsFixedSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.get_Item
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.set_Item
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection..cctor
void System::ComponentModel::PropertyDescriptorCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "PropertyDescriptorCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Add
int System::ComponentModel::PropertyDescriptorCollection::Add(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Clear
void System::ComponentModel::PropertyDescriptorCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Contains
bool System::ComponentModel::PropertyDescriptorCollection::Contains(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.CopyTo
void System::ComponentModel::PropertyDescriptorCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsurePropsOwned
void System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsurePropsOwned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsurePropsOwned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.EnsureSize
void System::ComponentModel::PropertyDescriptorCollection::EnsureSize(int sizeNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::EnsureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeNeeded)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeNeeded);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Find
::System::ComponentModel::PropertyDescriptor* System::ComponentModel::PropertyDescriptorCollection::Find(::StringW name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Find");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(ignoreCase)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptor*, false>(this, ___internal__method, name, ignoreCase);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::IndexOf(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Insert
void System::ComponentModel::PropertyDescriptorCollection::Insert(int index, ::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Remove
void System::ComponentModel::PropertyDescriptorCollection::Remove(::System::ComponentModel::PropertyDescriptor* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.Sort
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::PropertyDescriptorCollection::Sort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::Sort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(names)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, names);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.InternalSort
void System::ComponentModel::PropertyDescriptorCollection::InternalSort(::System::Collections::IComparer* sorter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::InternalSort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sorter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sorter);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Add
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IDictionary.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IDictionary_Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IDictionary.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IDictionary.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::PropertyDescriptorCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Add
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Clear
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Contains
bool System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.IndexOf
int System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Insert
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.Remove
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection.System.Collections.IList.RemoveAt
void System::ComponentModel::PropertyDescriptorCollection::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator
#include "System/ComponentModel/PropertyDescriptorCollection_PropertyDescriptorEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection owner
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Current
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Entry
::System::Collections::DictionaryEntry System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Key
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.get_Value
::Il2CppObject* System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.MoveNext
bool System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.PropertyDescriptorCollection/System.ComponentModel.PropertyDescriptorEnumerator.Reset
void System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyDescriptorCollection::PropertyDescriptorEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.ReferenceConverter
#include "System/ComponentModel/ReferenceConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String none
::StringW System::ComponentModel::ReferenceConverter::_get_none() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_get_none");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "ReferenceConverter", "none"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String none
void System::ComponentModel::ReferenceConverter::_set_none(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::_set_none");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReferenceConverter", "none", value));
}
// Autogenerated method: System.ComponentModel.ReferenceConverter..cctor
void System::ComponentModel::ReferenceConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReferenceConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReferenceConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider
#include "System/ComponentModel/ReflectTypeDescriptionProvider.hpp"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData
#include "System/ComponentModel/ReflectTypeDescriptionProvider_ReflectedTypeData.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type[] _typeConstructor
::ArrayW<::System::Type*> System::ComponentModel::ReflectTypeDescriptionProvider::_get__typeConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__typeConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_typeConstructor"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] _typeConstructor
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__typeConstructor(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__typeConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_typeConstructor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _intrinsicTypeConverters
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicTypeConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicTypeConverters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicTypeConverters"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _intrinsicTypeConverters
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicTypeConverters(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicTypeConverters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicTypeConverters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _intrinsicReferenceKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicReferenceKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicReferenceKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicReferenceKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _intrinsicReferenceKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicReferenceKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicReferenceKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicReferenceKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _intrinsicNullableKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicNullableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__intrinsicNullableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicNullableKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _intrinsicNullableKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicNullableKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__intrinsicNullableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_intrinsicNullableKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _dictionaryKey
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__dictionaryKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__dictionaryKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_dictionaryKey"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _dictionaryKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__dictionaryKey(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__dictionaryKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_dictionaryKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _attributeCache
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::_get__attributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__attributeCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_attributeCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _attributeCache
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__attributeCache(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__attributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_attributeCache", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderProviderKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderProviderKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderPropertiesKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderPropertiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderPropertiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderPropertiesKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderPropertiesKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderPropertiesKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderPropertiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderPropertiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid _extenderProviderPropertiesKey
::System::Guid System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderPropertiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__extenderProviderPropertiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderPropertiesKey"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid _extenderProviderPropertiesKey
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderPropertiesKey(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__extenderProviderPropertiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_extenderProviderPropertiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] _skipInterfaceAttributeList
::ArrayW<::System::Type*> System::ComponentModel::ReflectTypeDescriptionProvider::_get__skipInterfaceAttributeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__skipInterfaceAttributeList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Type*>>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_skipInterfaceAttributeList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] _skipInterfaceAttributeList
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__skipInterfaceAttributeList(::ArrayW<::System::Type*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__skipInterfaceAttributeList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_skipInterfaceAttributeList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _internalSyncObject
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::_get__internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_get__internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "ReflectTypeDescriptionProvider", "_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _internalSyncObject
void System::ComponentModel::ReflectTypeDescriptionProvider::_set__internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::_set__internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "ReflectTypeDescriptionProvider", "_internalSyncObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable _typeData
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::ComponentModel::ReflectTypeDescriptionProvider::dyn__typeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::dyn__typeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeData"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.get_IntrinsicTypeConverters
::System::Collections::Hashtable* System::ComponentModel::ReflectTypeDescriptionProvider::get_IntrinsicTypeConverters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::get_IntrinsicTypeConverters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "get_IntrinsicTypeConverters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider..cctor
void System::ComponentModel::ReflectTypeDescriptionProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.CreateInstance
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::CreateInstance(::System::Type* objectType, ::System::Type* callingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(callingType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, objectType, callingType);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::GetAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::GetConverter(::System::Type* type, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, type, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedAttributes(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedConverter(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeData
::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData* System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeData(::System::Type* type, bool createIfNeeded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(createIfNeeded)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData*, false>(this, ___internal__method, type, createIfNeeded);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.IsPopulated
bool System::ComponentModel::ReflectTypeDescriptionProvider::IsPopulated(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::IsPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetAttributes
::ArrayW<::System::Attribute*> System::ComponentModel::ReflectTypeDescriptionProvider::ReflectGetAttributes(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectGetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "ReflectGetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Attribute*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.Refresh
void System::ComponentModel::ReflectTypeDescriptionProvider::Refresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.SearchIntrinsicTable
::Il2CppObject* System::ComponentModel::ReflectTypeDescriptionProvider::SearchIntrinsicTable(::System::Collections::Hashtable* table, ::System::Type* callingType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::SearchIntrinsicTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "ReflectTypeDescriptionProvider", "SearchIntrinsicTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(callingType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, callingType);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::ReflectTypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::ReflectTypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData
#include "System/ComponentModel/ReflectTypeDescriptionProvider_ReflectedTypeData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.EventDescriptorCollection
#include "System/ComponentModel/EventDescriptorCollection.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type _type
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.AttributeCollection _attributes
[[deprecated("Use field access instead!")]] ::System::ComponentModel::AttributeCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::ComponentModel::AttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.EventDescriptorCollection _events
[[deprecated("Use field access instead!")]] ::System::ComponentModel::EventDescriptorCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::System::ComponentModel::EventDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.PropertyDescriptorCollection _properties
[[deprecated("Use field access instead!")]] ::System::ComponentModel::PropertyDescriptorCollection*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_properties"))->offset;
  return *reinterpret_cast<::System::ComponentModel::PropertyDescriptorCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeConverter _converter
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeConverter*& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__converter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_converter"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] _editors
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editors"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] _editorTypes
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorTypes"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _editorCount
[[deprecated("Use field access instead!")]] int& System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::dyn__editorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.get_IsPopulated
bool System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::get_IsPopulated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::get_IsPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetConverter(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.GetTypeFromName
::System::Type* System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetTypeFromName(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::GetTypeFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, typeName);
}
// Autogenerated method: System.ComponentModel.ReflectTypeDescriptionProvider/System.ComponentModel.ReflectedTypeData.Refresh
void System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::ReflectTypeDescriptionProvider::ReflectedTypeData::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type typeChanged
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::RefreshEventArgs::dyn_typeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventArgs::dyn_typeChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeChanged"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.RefreshEventHandler
#include "System/ComponentModel/RefreshEventHandler.hpp"
// Including type: System.ComponentModel.RefreshEventArgs
#include "System/ComponentModel/RefreshEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.RefreshEventHandler.Invoke
void System::ComponentModel::RefreshEventHandler::Invoke(::System::ComponentModel::RefreshEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::RefreshEventHandler::BeginInvoke(::System::ComponentModel::RefreshEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, e, callback, object);
}
// Autogenerated method: System.ComponentModel.RefreshEventHandler.EndInvoke
void System::ComponentModel::RefreshEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::RefreshEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SByteConverter
#include "System/ComponentModel/SByteConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SByteConverter.get_TargetType
::System::Type* System::ComponentModel::SByteConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SByteConverter.FromString
::Il2CppObject* System::ComponentModel::SByteConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SByteConverter.ToString
::StringW System::ComponentModel::SByteConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SByteConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SettingsBindableAttribute
#include "System/ComponentModel/SettingsBindableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute Yes
void System::ComponentModel::SettingsBindableAttribute::_set_Yes(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
::System::ComponentModel::SettingsBindableAttribute* System::ComponentModel::SettingsBindableAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::SettingsBindableAttribute*>("System.ComponentModel", "SettingsBindableAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.SettingsBindableAttribute No
void System::ComponentModel::SettingsBindableAttribute::_set_No(::System::ComponentModel::SettingsBindableAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "SettingsBindableAttribute", "No", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bindable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::SettingsBindableAttribute::dyn__bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::dyn__bindable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.get_Bindable
bool System::ComponentModel::SettingsBindableAttribute::get_Bindable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::get_Bindable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute..cctor
void System::ComponentModel::SettingsBindableAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "SettingsBindableAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.Equals
bool System::ComponentModel::SettingsBindableAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.SettingsBindableAttribute.GetHashCode
int System::ComponentModel::SettingsBindableAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SettingsBindableAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.SingleConverter
#include "System/ComponentModel/SingleConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.SingleConverter.get_AllowHex
bool System::ComponentModel::SingleConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.get_TargetType
::System::Type* System::ComponentModel::SingleConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.SingleConverter.FromString
::Il2CppObject* System::ComponentModel::SingleConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.SingleConverter.ToString
::StringW System::ComponentModel::SingleConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::SingleConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.StringConverter
#include "System/ComponentModel/StringConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.StringConverter.CanConvertFrom
bool System::ComponentModel::StringConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.StringConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::StringConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::StringConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TimeSpanConverter
#include "System/ComponentModel/TimeSpanConverter.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertFrom
bool System::ComponentModel::TimeSpanConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.CanConvertTo
bool System::ComponentModel::TimeSpanConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TimeSpanConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TimeSpanConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TimeSpanConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor
#include "System/ComponentModel/TypeConverter_SimplePropertyDescriptor.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.PropertyDescriptorCollection
#include "System/ComponentModel/PropertyDescriptorCollection.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String s_UseCompatibleTypeConverterBehavior
::StringW System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_s_UseCompatibleTypeConverterBehavior");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_UseCompatibleTypeConverterBehavior
void System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_s_UseCompatibleTypeConverterBehavior");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "s_UseCompatibleTypeConverterBehavior", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_get_useCompatibleTypeConversion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useCompatibleTypeConversion
void System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::_set_useCompatibleTypeConversion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverter", "useCompatibleTypeConversion", value));
}
// Autogenerated method: System.ComponentModel.TypeConverter.get_UseCompatibleTypeConversion
bool System::ComponentModel::TypeConverter::get_UseCompatibleTypeConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::get_UseCompatibleTypeConversion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverter", "get_UseCompatibleTypeConversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter..cctor
void System::ComponentModel::TypeConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertFrom
bool System::ComponentModel::TypeConverter::CanConvertFrom(::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sourceType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertFrom
bool System::ComponentModel::TypeConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertTo
bool System::ComponentModel::TypeConverter::CanConvertTo(::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CanConvertTo
bool System::ComponentModel::TypeConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFrom(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromInvariantString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromInvariantString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromInvariantString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromInvariantString(::System::ComponentModel::ITypeDescriptorContext* context, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::System::ComponentModel::ITypeDescriptorContext* context, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertFromString
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertFromString(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, text);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertTo(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertTo
::Il2CppObject* System::ComponentModel::TypeConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToInvariantString
::StringW System::ComponentModel::TypeConverter::ConvertToInvariantString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToInvariantString
::StringW System::ComponentModel::TypeConverter::ConvertToInvariantString(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToInvariantString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToInvariantString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.ConvertToString
::StringW System::ComponentModel::TypeConverter::ConvertToString(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::ConvertToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CreateInstance
::Il2CppObject* System::ComponentModel::TypeConverter::CreateInstance(::System::Collections::IDictionary* propertyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyValues)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, propertyValues);
}
// Autogenerated method: System.ComponentModel.TypeConverter.CreateInstance
::Il2CppObject* System::ComponentModel::TypeConverter::CreateInstance(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Collections::IDictionary* propertyValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::CreateInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(propertyValues)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, propertyValues);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetConvertFromException
::System::Exception* System::ComponentModel::TypeConverter::GetConvertFromException(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetConvertFromException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConvertFromException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetConvertToException
::System::Exception* System::ComponentModel::TypeConverter::GetConvertToException(::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetConvertToException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConvertToException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, value, destinationType);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
bool System::ComponentModel::TypeConverter::GetCreateInstanceSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetCreateInstanceSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCreateInstanceSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
bool System::ComponentModel::TypeConverter::GetCreateInstanceSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetCreateInstanceSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCreateInstanceSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::GetProperties(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value, ::ArrayW<::System::Attribute*> attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, context, value, attributes);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetPropertiesSupported
bool System::ComponentModel::TypeConverter::GetPropertiesSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetPropertiesSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetPropertiesSupported
bool System::ComponentModel::TypeConverter::GetPropertiesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetPropertiesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValues
::System::Collections::ICollection* System::ComponentModel::TypeConverter::GetStandardValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValues
::System::ComponentModel::TypeConverter::StandardValuesCollection* System::ComponentModel::TypeConverter::GetStandardValues(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter::StandardValuesCollection*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
bool System::ComponentModel::TypeConverter::GetStandardValuesExclusive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesExclusive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
bool System::ComponentModel::TypeConverter::GetStandardValuesExclusive(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesExclusive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesExclusive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesSupported
bool System::ComponentModel::TypeConverter::GetStandardValuesSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter.GetStandardValuesSupported
bool System::ComponentModel::TypeConverter::GetStandardValuesSupported(::System::ComponentModel::ITypeDescriptorContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::GetStandardValuesSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStandardValuesSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context);
}
// Autogenerated method: System.ComponentModel.TypeConverter.IsValid
bool System::ComponentModel::TypeConverter::IsValid(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.IsValid
bool System::ComponentModel::TypeConverter::IsValid(::System::ComponentModel::ITypeDescriptorContext* context, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, value);
}
// Autogenerated method: System.ComponentModel.TypeConverter.SortProperties
::System::ComponentModel::PropertyDescriptorCollection* System::ComponentModel::TypeConverter::SortProperties(::System::ComponentModel::PropertyDescriptorCollection* props, ::ArrayW<::StringW> names) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SortProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(props), ::il2cpp_utils::ExtractType(names)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::PropertyDescriptorCollection*, false>(this, ___internal__method, props, names);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor
#include "System/ComponentModel/TypeConverter_SimplePropertyDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type componentType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_componentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_componentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "componentType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type propertyType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_propertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::dyn_propertyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.SimplePropertyDescriptor.get_PropertyType
::System::Type* System::ComponentModel::TypeConverter::SimplePropertyDescriptor::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::SimplePropertyDescriptor::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection
#include "System/ComponentModel/TypeConverter_StandardValuesCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection values
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_values");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "values"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Array valueArray
[[deprecated("Use field access instead!")]] ::System::Array*& System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_valueArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::dyn_valueArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueArray"))->offset;
  return *reinterpret_cast<::System::Array**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.get_Count
int System::ComponentModel::TypeConverter::StandardValuesCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.get_Count
int System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.CopyTo
void System::ComponentModel::TypeConverter::StandardValuesCollection::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::TypeConverter::StandardValuesCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.ICollection.CopyTo
void System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.ComponentModel.TypeConverter/System.ComponentModel.StandardValuesCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::ComponentModel::TypeConverter::StandardValuesCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverter::StandardValuesCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeConverterAttribute
#include "System/ComponentModel/TypeConverterAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
::System::ComponentModel::TypeConverterAttribute* System::ComponentModel::TypeConverterAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeConverterAttribute*>("System.ComponentModel", "TypeConverterAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.TypeConverterAttribute Default
void System::ComponentModel::TypeConverterAttribute::_set_Default(::System::ComponentModel::TypeConverterAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeConverterAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeConverterAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.get_ConverterTypeName
::StringW System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::get_ConverterTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConverterTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute..cctor
void System::ComponentModel::TypeConverterAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeConverterAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.Equals
bool System::ComponentModel::TypeConverterAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.TypeConverterAttribute.GetHashCode
int System::ComponentModel::TypeConverterAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeConverterAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptionProvider
#include "System/ComponentModel/TypeDescriptionProvider.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptionProvider _parent
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider*& System::ComponentModel::TypeDescriptionProvider::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor _emptyDescriptor
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor*& System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::dyn__emptyDescriptor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptyDescriptor"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider::EmptyCustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptionProvider::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptionProvider::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProvider::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProvider/System.ComponentModel.EmptyCustomTypeDescriptor
#include "System/ComponentModel/TypeDescriptionProvider_EmptyCustomTypeDescriptor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptionProviderAttribute
#include "System/ComponentModel/TypeDescriptionProviderAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::TypeDescriptionProviderAttribute::dyn__typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::dyn__typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptionProviderAttribute.get_TypeName
::StringW System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptionProviderAttribute::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor
#include "System/ComponentModel/TypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MergedTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_MergedTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.MemberDescriptor
#include "System/ComponentModel/MemberDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.FilterCacheItem
#include "System/ComponentModel/TypeDescriptor_FilterCacheItem.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.IUnimplemented
#include "System/ComponentModel/TypeDescriptor_IUnimplemented.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer
#include "System/ComponentModel/TypeDescriptor_MemberDescriptorComparer.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptorComObject
#include "System/ComponentModel/TypeDescriptor_TypeDescriptorComObject.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptorInterface
#include "System/ComponentModel/TypeDescriptor_TypeDescriptorInterface.hpp"
// Including type: System.ComponentModel.WeakHashtable
#include "System/ComponentModel/WeakHashtable.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Diagnostics.BooleanSwitch
#include "System/Diagnostics/BooleanSwitch.hpp"
// Including type: System.ComponentModel.RefreshEventHandler
#include "System/ComponentModel/RefreshEventHandler.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.TypeDescriptionProvider
#include "System/ComponentModel/TypeDescriptionProvider.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.WeakHashtable _providerTable
::System::ComponentModel::WeakHashtable* System::ComponentModel::TypeDescriptor::_get__providerTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__providerTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::WeakHashtable*>("System.ComponentModel", "TypeDescriptor", "_providerTable"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.WeakHashtable _providerTable
void System::ComponentModel::TypeDescriptor::_set__providerTable(::System::ComponentModel::WeakHashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__providerTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_providerTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _providerTypeTable
::System::Collections::Hashtable* System::ComponentModel::TypeDescriptor::_get__providerTypeTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__providerTypeTable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "TypeDescriptor", "_providerTypeTable"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _providerTypeTable
void System::ComponentModel::TypeDescriptor::_set__providerTypeTable(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__providerTypeTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_providerTypeTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _defaultProviders
::System::Collections::Hashtable* System::ComponentModel::TypeDescriptor::_get__defaultProviders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__defaultProviders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.ComponentModel", "TypeDescriptor", "_defaultProviders"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _defaultProviders
void System::ComponentModel::TypeDescriptor::_set__defaultProviders(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__defaultProviders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_defaultProviders", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _metadataVersion
int System::ComponentModel::TypeDescriptor::_get__metadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__metadataVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "TypeDescriptor", "_metadataVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _metadataVersion
void System::ComponentModel::TypeDescriptor::_set__metadataVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__metadataVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_metadataVersion", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _collisionIndex
int System::ComponentModel::TypeDescriptor::_get__collisionIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__collisionIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.ComponentModel", "TypeDescriptor", "_collisionIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _collisionIndex
void System::ComponentModel::TypeDescriptor::_set__collisionIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__collisionIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_collisionIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Diagnostics.BooleanSwitch TraceDescriptor
::System::Diagnostics::BooleanSwitch* System::ComponentModel::TypeDescriptor::_get_TraceDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get_TraceDescriptor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::BooleanSwitch*>("System.ComponentModel", "TypeDescriptor", "TraceDescriptor"));
}
// Autogenerated static field setter
// Set static field: static private System.Diagnostics.BooleanSwitch TraceDescriptor
void System::ComponentModel::TypeDescriptor::_set_TraceDescriptor(::System::Diagnostics::BooleanSwitch* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set_TraceDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "TraceDescriptor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineInitializeKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineInitializeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineInitializeKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineInitializeKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineInitializeKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineInitializeKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineInitializeKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineInitializeKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineMergeKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineMergeKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineMergeKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineMergeKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineMergeKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineMergeKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineMergeKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineMergeKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineFilterKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineFilterKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineFilterKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineFilterKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineFilterKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineFilterKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineFilterKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineFilterKeys", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid[] _pipelineAttributeFilterKeys
::ArrayW<::System::Guid> System::ComponentModel::TypeDescriptor::_get__pipelineAttributeFilterKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__pipelineAttributeFilterKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Guid>>("System.ComponentModel", "TypeDescriptor", "_pipelineAttributeFilterKeys"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid[] _pipelineAttributeFilterKeys
void System::ComponentModel::TypeDescriptor::_set__pipelineAttributeFilterKeys(::ArrayW<::System::Guid> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__pipelineAttributeFilterKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_pipelineAttributeFilterKeys", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object _internalSyncObject
::Il2CppObject* System::ComponentModel::TypeDescriptor::_get__internalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get__internalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.ComponentModel", "TypeDescriptor", "_internalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _internalSyncObject
void System::ComponentModel::TypeDescriptor::_set__internalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set__internalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "_internalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.ComponentModel.RefreshEventHandler Refreshed
::System::ComponentModel::RefreshEventHandler* System::ComponentModel::TypeDescriptor::_get_Refreshed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_get_Refreshed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::RefreshEventHandler*>("System.ComponentModel", "TypeDescriptor", "Refreshed"));
}
// Autogenerated static field setter
// Set static field: static private System.ComponentModel.RefreshEventHandler Refreshed
void System::ComponentModel::TypeDescriptor::_set_Refreshed(::System::ComponentModel::RefreshEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::_set_Refreshed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor", "Refreshed", value));
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_ComObjectType
::System::Type* System::ComponentModel::TypeDescriptor::get_ComObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_ComObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_ComObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_InterfaceType
::System::Type* System::ComponentModel::TypeDescriptor::get_InterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_InterfaceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_InterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.get_MetadataVersion
int System::ComponentModel::TypeDescriptor::get_MetadataVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::get_MetadataVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "get_MetadataVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor..cctor
void System::ComponentModel::TypeDescriptor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.AddProvider
void System::ComponentModel::TypeDescriptor::AddProvider(::System::ComponentModel::TypeDescriptionProvider* provider, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::AddProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "AddProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.CheckDefaultProvider
void System::ComponentModel::TypeDescriptor::CheckDefaultProvider(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::CheckDefaultProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "CheckDefaultProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, componentType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::GetAttributes(::Il2CppObject* component, bool noCustomTypeDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(noCustomTypeDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, noCustomTypeDesc);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptor::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::TypeDescriptor::GetConverter(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetConverter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetDescriptor(::System::Type* type, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, typeName);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetDescriptor(::Il2CppObject* component, bool noCustomTypeDesc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(noCustomTypeDesc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, noCustomTypeDesc);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetExtendedDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::GetExtendedDescriptor(::Il2CppObject* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetExtendedDescriptor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetExtendedDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetExtenderCollisionSuffix
::StringW System::ComponentModel::TypeDescriptor::GetExtenderCollisionSuffix(::System::ComponentModel::MemberDescriptor* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetExtenderCollisionSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetExtenderCollisionSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, member);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetNodeForBaseType
::System::Type* System::ComponentModel::TypeDescriptor::GetNodeForBaseType(::System::Type* searchType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetNodeForBaseType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetNodeForBaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, searchType);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetProviderRecursive
::System::ComponentModel::TypeDescriptionProvider* System::ComponentModel::TypeDescriptor::GetProviderRecursive(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetProviderRecursive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetProviderRecursive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptionProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptor::GetReflectionType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::GetReflectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::System::Type* type, bool createDelegator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(createDelegator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, createDelegator);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.NodeFor
::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* System::ComponentModel::TypeDescriptor::NodeFor(::Il2CppObject* instance, bool createDelegator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::NodeFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "NodeFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(createDelegator)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, createDelegator);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineFilter
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineFilter(int pipelineType, ::System::Collections::ICollection* members, ::Il2CppObject* instance, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(members), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, members, instance, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineInitialize
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineInitialize(int pipelineType, ::System::Collections::ICollection* members, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(members), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, members, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.PipelineMerge
::System::Collections::ICollection* System::ComponentModel::TypeDescriptor::PipelineMerge(int pipelineType, ::System::Collections::ICollection* primary, ::System::Collections::ICollection* secondary, ::Il2CppObject* instance, ::System::Collections::IDictionary* cache) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::PipelineMerge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "PipelineMerge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pipelineType), ::il2cpp_utils::ExtractType(primary), ::il2cpp_utils::ExtractType(secondary), ::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(cache)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pipelineType, primary, secondary, instance, cache);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.RaiseRefresh
void System::ComponentModel::TypeDescriptor::RaiseRefresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::RaiseRefresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "RaiseRefresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.Refresh
void System::ComponentModel::TypeDescriptor::Refresh(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor.SortDescriptorArray
void System::ComponentModel::TypeDescriptor::SortDescriptorArray(::System::Collections::IList* infos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::SortDescriptorArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor", "SortDescriptorArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, infos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.FilterCacheItem
#include "System/ComponentModel/TypeDescriptor_FilterCacheItem.hpp"
// Including type: System.ComponentModel.Design.ITypeDescriptorFilterService
#include "System/ComponentModel/Design/ITypeDescriptorFilterService.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.Design.ITypeDescriptorFilterService _filterService
[[deprecated("Use field access instead!")]] ::System::ComponentModel::Design::ITypeDescriptorFilterService*& System::ComponentModel::TypeDescriptor::FilterCacheItem::dyn__filterService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::FilterCacheItem::dyn__filterService");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filterService"))->offset;
  return *reinterpret_cast<::System::ComponentModel::Design::ITypeDescriptorFilterService**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.ICollection FilteredMembers
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::ComponentModel::TypeDescriptor::FilterCacheItem::dyn_FilteredMembers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::FilterCacheItem::dyn_FilteredMembers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FilteredMembers"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.FilterCacheItem.IsValid
bool System::ComponentModel::TypeDescriptor::FilterCacheItem::IsValid(::System::ComponentModel::Design::ITypeDescriptorFilterService* filterService) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::FilterCacheItem::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filterService)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, filterService);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer
#include "System/ComponentModel/TypeDescriptor_MemberDescriptorComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer Instance
::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer* System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer*>("System.ComponentModel", "TypeDescriptor/MemberDescriptorComparer", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer Instance
void System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::_set_Instance(::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "TypeDescriptor/MemberDescriptorComparer", "Instance", value));
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer..cctor
void System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "TypeDescriptor/MemberDescriptorComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.MemberDescriptorComparer.Compare
int System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::Compare(::Il2CppObject* left, ::Il2CppObject* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MemberDescriptorComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, left, right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.MergedTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_MergedTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ICustomTypeDescriptor _primary
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ICustomTypeDescriptor*& System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::dyn__primary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::dyn__primary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_primary"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ICustomTypeDescriptor _secondary
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ICustomTypeDescriptor*& System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::dyn__secondary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::dyn__secondary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondary"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ICustomTypeDescriptor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.MergedTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.MergedTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::MergedTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ComponentModel.ICustomTypeDescriptor.GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultExtendedTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor.hpp"
// Including type: System.ComponentModel.ICustomTypeDescriptor
#include "System/ComponentModel/ICustomTypeDescriptor.hpp"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode Next
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.ComponentModel.TypeDescriptionProvider Provider
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptionProvider*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::dyn_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::dyn_Provider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Provider"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode.GetCache
::System::Collections::IDictionary* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetCache(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetCache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode.GetExtendedTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetExtendedTypeDescriptor(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetExtendedTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtendedTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode.GetReflectionType
::System::Type* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetReflectionType(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetReflectionType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReflectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode.GetTypeDescriptor
::System::ComponentModel::ICustomTypeDescriptor* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetTypeDescriptor(::System::Type* objectType, ::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::GetTypeDescriptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypeDescriptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ICustomTypeDescriptor*, false>(this, ___internal__method, objectType, instance);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultExtendedTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode_DefaultExtendedTypeDescriptor.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode _node
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::dyn__node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::dyn__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::dyn__instance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultExtendedTypeDescriptor..ctor
// ABORTED elsewhere.  System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::DefaultExtendedTypeDescriptor(::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* node, ::Il2CppObject* instance)
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultExtendedTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultExtendedTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultExtendedTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.ComponentModel.ICustomTypeDescriptor.GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultTypeDescriptor
#include "System/ComponentModel/TypeDescriptor_TypeDescriptionNode_DefaultTypeDescriptor.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.ComponentModel.AttributeCollection
#include "System/ComponentModel/AttributeCollection.hpp"
// Including type: System.ComponentModel.TypeConverter
#include "System/ComponentModel/TypeConverter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode _node
[[deprecated("Use field access instead!")]] ::System::ComponentModel::TypeDescriptor::TypeDescriptionNode*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__node");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::ComponentModel::TypeDescriptor::TypeDescriptionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type _objectType
[[deprecated("Use field access instead!")]] ::System::Type*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__objectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__objectType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object _instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::dyn__instance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultTypeDescriptor..ctor
// ABORTED elsewhere.  System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::DefaultTypeDescriptor(::System::ComponentModel::TypeDescriptor::TypeDescriptionNode* node, ::System::Type* objectType, ::Il2CppObject* instance)
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetAttributes
::System::ComponentModel::AttributeCollection* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.ComponentModel.ICustomTypeDescriptor.GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::AttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.TypeDescriptor/System.ComponentModel.TypeDescriptionNode/System.ComponentModel.DefaultTypeDescriptor.System.ComponentModel.ICustomTypeDescriptor.GetConverter
::System::ComponentModel::TypeConverter* System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::System_ComponentModel_ICustomTypeDescriptor_GetConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::TypeDescriptor::TypeDescriptionNode::DefaultTypeDescriptor::System.ComponentModel.ICustomTypeDescriptor.GetConverter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "System.ComponentModel.ICustomTypeDescriptor.GetConverter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::TypeConverter*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt16Converter
#include "System/ComponentModel/UInt16Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt16Converter.get_TargetType
::System::Type* System::ComponentModel::UInt16Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.FromString
::Il2CppObject* System::ComponentModel::UInt16Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.FromString
::Il2CppObject* System::ComponentModel::UInt16Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt16Converter.ToString
::StringW System::ComponentModel::UInt16Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt16Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt32Converter
#include "System/ComponentModel/UInt32Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt32Converter.get_TargetType
::System::Type* System::ComponentModel::UInt32Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.FromString
::Il2CppObject* System::ComponentModel::UInt32Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.FromString
::Il2CppObject* System::ComponentModel::UInt32Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt32Converter.ToString
::StringW System::ComponentModel::UInt32Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt32Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.UInt64Converter
#include "System/ComponentModel/UInt64Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.UInt64Converter.get_TargetType
::System::Type* System::ComponentModel::UInt64Converter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.FromString
::Il2CppObject* System::ComponentModel::UInt64Converter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.FromString
::Il2CppObject* System::ComponentModel::UInt64Converter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.UInt64Converter.ToString
::StringW System::ComponentModel::UInt64Converter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::UInt64Converter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Win32Exception
#include "System/ComponentModel/Win32Exception.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ErrorMessagesInitialized
bool System::ComponentModel::Win32Exception::_get_s_ErrorMessagesInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::_get_s_ErrorMessagesInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.ComponentModel", "Win32Exception", "s_ErrorMessagesInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ErrorMessagesInitialized
void System::ComponentModel::Win32Exception::_set_s_ErrorMessagesInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::_set_s_ErrorMessagesInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "Win32Exception", "s_ErrorMessagesInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.String> s_ErrorMessage
::System::Collections::Generic::Dictionary_2<int, ::StringW>* System::ComponentModel::Win32Exception::_get_s_ErrorMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::_get_s_ErrorMessage");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::StringW>*>("System.ComponentModel", "Win32Exception", "s_ErrorMessage")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Int32,System.String> s_ErrorMessage
void System::ComponentModel::Win32Exception::_set_s_ErrorMessage(::System::Collections::Generic::Dictionary_2<int, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::_set_s_ErrorMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "Win32Exception", "s_ErrorMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 nativeErrorCode
[[deprecated("Use field access instead!")]] int& System::ComponentModel::Win32Exception::dyn_nativeErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::dyn_nativeErrorCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeErrorCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Win32Exception.get_NativeErrorCode
int System::ComponentModel::Win32Exception::get_NativeErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::get_NativeErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NativeErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.Win32Exception..cctor
void System::ComponentModel::Win32Exception::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "Win32Exception", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.Win32Exception.GetErrorMessage
::StringW System::ComponentModel::Win32Exception::GetErrorMessage(int error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::GetErrorMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "Win32Exception", "GetErrorMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.ComponentModel.Win32Exception.InitializeErrorMessages
void System::ComponentModel::Win32Exception::InitializeErrorMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::InitializeErrorMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "Win32Exception", "InitializeErrorMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.Win32Exception.GetObjectData
void System::ComponentModel::Win32Exception::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Win32Exception::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.BaseNumberConverter
#include "System/ComponentModel/BaseNumberConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.ComponentModel.ITypeDescriptorContext
#include "System/ComponentModel/ITypeDescriptorContext.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.BaseNumberConverter.get_AllowHex
bool System::ComponentModel::BaseNumberConverter::get_AllowHex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::get_AllowHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.get_TargetType
::System::Type* System::ComponentModel::BaseNumberConverter::get_TargetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::get_TargetType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.FromString
::Il2CppObject* System::ComponentModel::BaseNumberConverter::FromString(::StringW value, int radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, radix);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.FromString
::Il2CppObject* System::ComponentModel::BaseNumberConverter::FromString(::StringW value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::FromString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.FromStringError
::System::Exception* System::ComponentModel::BaseNumberConverter::FromStringError(::StringW failedText, ::System::Exception* innerException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::FromStringError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromStringError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failedText), ::il2cpp_utils::ExtractType(innerException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, failedText, innerException);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ToString
::StringW System::ComponentModel::BaseNumberConverter::ToString(::Il2CppObject* value, ::System::Globalization::NumberFormatInfo* formatInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(formatInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value, formatInfo);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.CanConvertFrom
bool System::ComponentModel::BaseNumberConverter::CanConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* sourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::CanConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(sourceType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, sourceType);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ConvertFrom
::Il2CppObject* System::ComponentModel::BaseNumberConverter::ConvertFrom(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ConvertFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.ConvertTo
::Il2CppObject* System::ComponentModel::BaseNumberConverter::ConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Globalization::CultureInfo* culture, ::Il2CppObject* value, ::System::Type* destinationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::ConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(destinationType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, context, culture, value, destinationType);
}
// Autogenerated method: System.ComponentModel.BaseNumberConverter.CanConvertTo
bool System::ComponentModel::BaseNumberConverter::CanConvertTo(::System::ComponentModel::ITypeDescriptorContext* context, ::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::BaseNumberConverter::CanConvertTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvertTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, context, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NotifyParentPropertyAttribute
#include "System/ComponentModel/NotifyParentPropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Yes
::System::ComponentModel::NotifyParentPropertyAttribute* System::ComponentModel::NotifyParentPropertyAttribute::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyParentPropertyAttribute*>("System.ComponentModel", "NotifyParentPropertyAttribute", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Yes
void System::ComponentModel::NotifyParentPropertyAttribute::_set_Yes(::System::ComponentModel::NotifyParentPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyParentPropertyAttribute", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute No
::System::ComponentModel::NotifyParentPropertyAttribute* System::ComponentModel::NotifyParentPropertyAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyParentPropertyAttribute*>("System.ComponentModel", "NotifyParentPropertyAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute No
void System::ComponentModel::NotifyParentPropertyAttribute::_set_No(::System::ComponentModel::NotifyParentPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyParentPropertyAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Default
::System::ComponentModel::NotifyParentPropertyAttribute* System::ComponentModel::NotifyParentPropertyAttribute::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyParentPropertyAttribute*>("System.ComponentModel", "NotifyParentPropertyAttribute", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.ComponentModel.NotifyParentPropertyAttribute Default
void System::ComponentModel::NotifyParentPropertyAttribute::_set_Default(::System::ComponentModel::NotifyParentPropertyAttribute* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyParentPropertyAttribute", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean notifyParent
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::NotifyParentPropertyAttribute::dyn_notifyParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::dyn_notifyParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notifyParent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.NotifyParentPropertyAttribute.get_NotifyParent
bool System::ComponentModel::NotifyParentPropertyAttribute::get_NotifyParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::get_NotifyParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotifyParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NotifyParentPropertyAttribute..cctor
void System::ComponentModel::NotifyParentPropertyAttribute::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "NotifyParentPropertyAttribute", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.NotifyParentPropertyAttribute.Equals
bool System::ComponentModel::NotifyParentPropertyAttribute::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.ComponentModel.NotifyParentPropertyAttribute.GetHashCode
int System::ComponentModel::NotifyParentPropertyAttribute::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.NotifyParentPropertyAttribute.IsDefaultAttribute
bool System::ComponentModel::NotifyParentPropertyAttribute::IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyParentPropertyAttribute::IsDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.WeakHashtable
#include "System/ComponentModel/WeakHashtable.hpp"
// Including type: System.ComponentModel.WeakHashtable/System.ComponentModel.WeakKeyComparer
#include "System/ComponentModel/WeakHashtable_WeakKeyComparer.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.IEqualityComparer _comparer
::System::Collections::IEqualityComparer* System::ComponentModel::WeakHashtable::_get__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::_get__comparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::IEqualityComparer*>("System.ComponentModel", "WeakHashtable", "_comparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IEqualityComparer _comparer
void System::ComponentModel::WeakHashtable::_set__comparer(::System::Collections::IEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::_set__comparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "WeakHashtable", "_comparer", value));
}
// Autogenerated method: System.ComponentModel.WeakHashtable..cctor
void System::ComponentModel::WeakHashtable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.ComponentModel", "WeakHashtable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ComponentModel.WeakHashtable.Clear
void System::ComponentModel::WeakHashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.ComponentModel.WeakHashtable.Remove
void System::ComponentModel::WeakHashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.WeakHashtable/System.ComponentModel.WeakKeyComparer
#include "System/ComponentModel/WeakHashtable_WeakKeyComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.WeakHashtable/System.ComponentModel.WeakKeyComparer.System.Collections.IEqualityComparer.Equals
bool System::ComponentModel::WeakHashtable::WeakKeyComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::WeakKeyComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.ComponentModel.WeakHashtable/System.ComponentModel.WeakKeyComparer.System.Collections.IEqualityComparer.GetHashCode
int System::ComponentModel::WeakHashtable::WeakKeyComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::WeakHashtable::WeakKeyComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Design.IDesignerHost
#include "System/ComponentModel/Design/IDesignerHost.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Design.IDesignerHost.get_RootComponent
::System::ComponentModel::IComponent* System::ComponentModel::Design::IDesignerHost::get_RootComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::IDesignerHost::get_RootComponent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RootComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::IComponent*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Design.IDictionaryService
#include "System/ComponentModel/Design/IDictionaryService.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Design.IDictionaryService.GetValue
::Il2CppObject* System::ComponentModel::Design::IDictionaryService::GetValue(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::IDictionaryService::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.ComponentModel.Design.IDictionaryService.SetValue
void System::ComponentModel::Design::IDictionaryService::SetValue(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::IDictionaryService::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.Design.ITypeDescriptorFilterService
#include "System/ComponentModel/Design/ITypeDescriptorFilterService.hpp"
// Including type: System.ComponentModel.IComponent
#include "System/ComponentModel/IComponent.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes
bool System::ComponentModel::Design::ITypeDescriptorFilterService::FilterAttributes(::System::ComponentModel::IComponent* component, ::System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::ITypeDescriptorFilterService::FilterAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component, attributes);
}
// Autogenerated method: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents
bool System::ComponentModel::Design::ITypeDescriptorFilterService::FilterEvents(::System::ComponentModel::IComponent* component, ::System::Collections::IDictionary* events) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::ITypeDescriptorFilterService::FilterEvents");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(events)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component, events);
}
// Autogenerated method: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties
bool System::ComponentModel::Design::ITypeDescriptorFilterService::FilterProperties(::System::ComponentModel::IComponent* component, ::System::Collections::IDictionary* properties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::ITypeDescriptorFilterService::FilterProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(properties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, component, properties);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute
#include "System/ComponentModel/Design/Serialization/DesignerSerializerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String serializerTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_serializerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_serializerTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializerTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serializerBaseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_serializerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_serializerBaseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializerBaseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::DesignerSerializerAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Design.Serialization.InstanceDescriptor
#include "System/ComponentModel/Design/Serialization/InstanceDescriptor.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MemberInfo member
[[deprecated("Use field access instead!")]] ::System::Reflection::MemberInfo*& System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "member"))->offset;
  return *reinterpret_cast<::System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ICollection arguments
[[deprecated("Use field access instead!")]] ::System::Collections::ICollection*& System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arguments"))->offset;
  return *reinterpret_cast<::System::Collections::ICollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isComplete
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::InstanceDescriptor::dyn_isComplete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isComplete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
::Il2CppObject* System::ComponentModel::Design::Serialization::InstanceDescriptor::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::InstanceDescriptor::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute
#include "System/ComponentModel/Design/Serialization/RootDesignerSerializerAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean reloadable
[[deprecated("Use field access instead!")]] bool& System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_reloadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_reloadable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reloadable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serializerTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_serializerTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_serializerTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializerTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String serializerBaseTypeName
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_serializerBaseTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_serializerBaseTypeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serializerBaseTypeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String typeId
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_typeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::dyn_typeId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.get_TypeId
::Il2CppObject* System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::get_TypeId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::Design::Serialization::RootDesignerSerializerAttribute::get_TypeId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols None
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols None
void System::Security::Authentication::SslProtocols::_set_None(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Ssl2
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Ssl2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Ssl2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Ssl2"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Ssl2
void System::Security::Authentication::SslProtocols::_set_Ssl2(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Ssl2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Ssl2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Ssl3
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Ssl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Ssl3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Ssl3"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Ssl3
void System::Security::Authentication::SslProtocols::_set_Ssl3(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Ssl3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Ssl3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls
void System::Security::Authentication::SslProtocols::_set_Tls(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls", value));
}
// [MonoTODOAttribute] Offset: 0x107ADAC
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls11
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls11
void System::Security::Authentication::SslProtocols::_set_Tls11(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls11", value));
}
// [MonoTODOAttribute] Offset: 0x107ADE4
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Tls12
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Tls12
void System::Security::Authentication::SslProtocols::_set_Tls12(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Tls12", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.SslProtocols Default
::System::Security::Authentication::SslProtocols System::Security::Authentication::SslProtocols::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::SslProtocols>("System.Security.Authentication", "SslProtocols", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.SslProtocols Default
void System::Security::Authentication::SslProtocols::_set_Default(::System::Security::Authentication::SslProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication", "SslProtocols", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Authentication::SslProtocols::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::SslProtocols::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
#include "System/Security/Authentication/ExtendedProtection/ExtendedProtectionPolicy.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString
::StringW System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Authentication.ExtendedProtection.PolicyEnforcement
#include "System/Security/Authentication/ExtendedProtection/PolicyEnforcement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Never
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Never
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Never(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement WhenSupported
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_WhenSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_WhenSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "WhenSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement WhenSupported
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_WhenSupported(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_WhenSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "WhenSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Always
::System::Security::Authentication::ExtendedProtection::PolicyEnforcement System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Authentication::ExtendedProtection::PolicyEnforcement>("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Always"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Authentication.ExtendedProtection.PolicyEnforcement Always
void System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Always(::System::Security::Authentication::ExtendedProtection::PolicyEnforcement value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Authentication.ExtendedProtection", "PolicyEnforcement", "Always", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Authentication::ExtendedProtection::PolicyEnforcement::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Authentication::ExtendedProtection::PolicyEnforcement::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.OidGroup
#include "System/Security/Cryptography/OidGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup All
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup All
void System::Security::Cryptography::OidGroup::_set_All(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup HashAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_HashAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "HashAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup HashAlgorithm
void System::Security::Cryptography::OidGroup::_set_HashAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_HashAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "HashAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup EncryptionAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_EncryptionAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "EncryptionAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup EncryptionAlgorithm
void System::Security::Cryptography::OidGroup::_set_EncryptionAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_EncryptionAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "EncryptionAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup PublicKeyAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_PublicKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_PublicKeyAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "PublicKeyAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup PublicKeyAlgorithm
void System::Security::Cryptography::OidGroup::_set_PublicKeyAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_PublicKeyAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "PublicKeyAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup SignatureAlgorithm
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_SignatureAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "SignatureAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup SignatureAlgorithm
void System::Security::Cryptography::OidGroup::_set_SignatureAlgorithm(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_SignatureAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "SignatureAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Attribute
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Attribute
void System::Security::Cryptography::OidGroup::_set_Attribute(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup ExtensionOrAttribute
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_ExtensionOrAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_ExtensionOrAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "ExtensionOrAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup ExtensionOrAttribute
void System::Security::Cryptography::OidGroup::_set_ExtensionOrAttribute(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_ExtensionOrAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "ExtensionOrAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup EnhancedKeyUsage
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_EnhancedKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_EnhancedKeyUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "EnhancedKeyUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup EnhancedKeyUsage
void System::Security::Cryptography::OidGroup::_set_EnhancedKeyUsage(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_EnhancedKeyUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "EnhancedKeyUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Policy
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Policy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Policy
void System::Security::Cryptography::OidGroup::_set_Policy(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Policy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup Template
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_Template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_Template");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "Template"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup Template
void System::Security::Cryptography::OidGroup::_set_Template(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_Template");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "Template", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.OidGroup KeyDerivationFunction
::System::Security::Cryptography::OidGroup System::Security::Cryptography::OidGroup::_get_KeyDerivationFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_get_KeyDerivationFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::OidGroup>("System.Security.Cryptography", "OidGroup", "KeyDerivationFunction"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.OidGroup KeyDerivationFunction
void System::Security::Cryptography::OidGroup::_set_KeyDerivationFunction(::System::Security::Cryptography::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::_set_KeyDerivationFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "OidGroup", "KeyDerivationFunction", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::OidGroup::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidGroup::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::Oid::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_friendlyName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::Oid::dyn_m_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn_m_friendlyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_friendlyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidGroup m_group
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidGroup& System::Security::Cryptography::Oid::dyn_m_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::dyn_m_group");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_group"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidGroup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.Oid.get_Value
::StringW System::Security::Cryptography::Oid::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Oid.set_Value
void System::Security::Cryptography::Oid::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.Oid.get_FriendlyName
::StringW System::Security::Cryptography::Oid::get_FriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Oid::get_FriendlyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FriendlyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList m_list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Cryptography::OidCollection::dyn_m_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::dyn_m_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_Item
::System::Security::Cryptography::Oid* System::Security::Cryptography::OidCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_Count
int System::Security::Cryptography::OidCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::OidCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.Add
int System::Security::Cryptography::OidCollection::Add(::System::Security::Cryptography::Oid* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::OidCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::OidCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.OidEnumerator
#include "System/Security/Cryptography/OidEnumerator.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection m_oids
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::OidEnumerator::dyn_m_oids() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::dyn_m_oids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_oids"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_current
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::OidEnumerator::dyn_m_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::dyn_m_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::OidEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.MoveNext
bool System::Security::Cryptography::OidEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.OidEnumerator.Reset
void System::Security::Cryptography::OidEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::OidEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CAPI
#include "System/Security/Cryptography/CAPI.hpp"
// Including type: System.Security.Cryptography.OidGroup
#include "System/Security/Cryptography/OidGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CAPI.CryptFindOIDInfoNameFromKey
::StringW System::Security::Cryptography::CAPI::CryptFindOIDInfoNameFromKey(::StringW key, ::System::Security::Cryptography::OidGroup oidGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CAPI::CryptFindOIDInfoNameFromKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CAPI", "CryptFindOIDInfoNameFromKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(oidGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, oidGroup);
}
// Autogenerated method: System.Security.Cryptography.CAPI.CryptFindOIDInfoKeyFromName
::StringW System::Security::Cryptography::CAPI::CryptFindOIDInfoKeyFromName(::StringW name, ::System::Security::Cryptography::OidGroup oidGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CAPI::CryptFindOIDInfoKeyFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CAPI", "CryptFindOIDInfoKeyFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(oidGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, oidGroup);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsnDecodeStatus
#include "System/Security/Cryptography/AsnDecodeStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus NotDecoded
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_NotDecoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_NotDecoded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "NotDecoded"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus NotDecoded
void System::Security::Cryptography::AsnDecodeStatus::_set_NotDecoded(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_NotDecoded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "NotDecoded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus Ok
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus Ok
void System::Security::Cryptography::AsnDecodeStatus::_set_Ok(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadAsn
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadAsn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadAsn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadAsn"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadAsn
void System::Security::Cryptography::AsnDecodeStatus::_set_BadAsn(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadAsn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadAsn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadTag
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadTag
void System::Security::Cryptography::AsnDecodeStatus::_set_BadTag(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus BadLength
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_BadLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_BadLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "BadLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus BadLength
void System::Security::Cryptography::AsnDecodeStatus::_set_BadLength(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_BadLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "BadLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.AsnDecodeStatus InformationNotAvailable
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::AsnDecodeStatus::_get_InformationNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_get_InformationNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AsnDecodeStatus>("System.Security.Cryptography", "AsnDecodeStatus", "InformationNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.AsnDecodeStatus InformationNotAvailable
void System::Security::Cryptography::AsnDecodeStatus::_set_InformationNotAvailable(::System::Security::Cryptography::AsnDecodeStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::_set_InformationNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AsnDecodeStatus", "InformationNotAvailable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AsnDecodeStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnDecodeStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsnEncodedData
#include "System/Security/Cryptography/AsnEncodedData.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Security.Cryptography.Oid _oid
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::AsnEncodedData::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _raw
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::AsnEncodedData::dyn__raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::dyn__raw");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_raw"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.get_Oid
::System::Security::Cryptography::Oid* System::Security::Cryptography::AsnEncodedData::get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::get_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.set_Oid
void System::Security::Cryptography::AsnEncodedData::set_Oid(::System::Security::Cryptography::Oid* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::set_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.get_RawData
::ArrayW<uint8_t> System::Security::Cryptography::AsnEncodedData::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::get_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.set_RawData
void System::Security::Cryptography::AsnEncodedData::set_RawData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::set_RawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.CopyFrom
void System::Security::Cryptography::AsnEncodedData::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.Format
::StringW System::Security::Cryptography::AsnEncodedData::Format(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::Format");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.ToString
::StringW System::Security::Cryptography::AsnEncodedData::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.Default
::StringW System::Security::Cryptography::AsnEncodedData::Default(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.BasicConstraintsExtension
::StringW System::Security::Cryptography::AsnEncodedData::BasicConstraintsExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::BasicConstraintsExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BasicConstraintsExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.EnhancedKeyUsageExtension
::StringW System::Security::Cryptography::AsnEncodedData::EnhancedKeyUsageExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::EnhancedKeyUsageExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnhancedKeyUsageExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.KeyUsageExtension
::StringW System::Security::Cryptography::AsnEncodedData::KeyUsageExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::KeyUsageExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeyUsageExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.SubjectKeyIdentifierExtension
::StringW System::Security::Cryptography::AsnEncodedData::SubjectKeyIdentifierExtension(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::SubjectKeyIdentifierExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubjectKeyIdentifierExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.SubjectAltName
::StringW System::Security::Cryptography::AsnEncodedData::SubjectAltName(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::SubjectAltName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubjectAltName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated method: System.Security.Cryptography.AsnEncodedData.NetscapeCertType
::StringW System::Security::Cryptography::AsnEncodedData::NetscapeCertType(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsnEncodedData::NetscapeCertType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetscapeCertType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.OpenFlags
#include "System/Security/Cryptography/X509Certificates/OpenFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadOnly
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadOnly
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadOnly(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadWrite
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags ReadWrite
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadWrite(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags MaxAllowed
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_MaxAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_MaxAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "MaxAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags MaxAllowed
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_MaxAllowed(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_MaxAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "MaxAllowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags OpenExistingOnly
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_OpenExistingOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_OpenExistingOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "OpenExistingOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags OpenExistingOnly
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_OpenExistingOnly(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_OpenExistingOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "OpenExistingOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OpenFlags IncludeArchived
::System::Security::Cryptography::X509Certificates::OpenFlags System::Security::Cryptography::X509Certificates::OpenFlags::_get_IncludeArchived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_get_IncludeArchived");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::OpenFlags>("System.Security.Cryptography.X509Certificates", "OpenFlags", "IncludeArchived"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OpenFlags IncludeArchived
void System::Security::Cryptography::X509Certificates::OpenFlags::_set_IncludeArchived(::System::Security::Cryptography::X509Certificates::OpenFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::_set_IncludeArchived");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OpenFlags", "IncludeArchived", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::OpenFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::OpenFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.StoreLocation
#include "System/Security/Cryptography/X509Certificates/StoreLocation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreLocation CurrentUser
::System::Security::Cryptography::X509Certificates::StoreLocation System::Security::Cryptography::X509Certificates::StoreLocation::_get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_get_CurrentUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreLocation>("System.Security.Cryptography.X509Certificates", "StoreLocation", "CurrentUser"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreLocation CurrentUser
void System::Security::Cryptography::X509Certificates::StoreLocation::_set_CurrentUser(::System::Security::Cryptography::X509Certificates::StoreLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_set_CurrentUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreLocation", "CurrentUser", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreLocation LocalMachine
::System::Security::Cryptography::X509Certificates::StoreLocation System::Security::Cryptography::X509Certificates::StoreLocation::_get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_get_LocalMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreLocation>("System.Security.Cryptography.X509Certificates", "StoreLocation", "LocalMachine"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreLocation LocalMachine
void System::Security::Cryptography::X509Certificates::StoreLocation::_set_LocalMachine(::System::Security::Cryptography::X509Certificates::StoreLocation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::_set_LocalMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreLocation", "LocalMachine", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::StoreLocation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreLocation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.StoreName
#include "System/Security/Cryptography/X509Certificates/StoreName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName AddressBook
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_AddressBook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_AddressBook");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "AddressBook"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName AddressBook
void System::Security::Cryptography::X509Certificates::StoreName::_set_AddressBook(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_AddressBook");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "AddressBook", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName AuthRoot
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_AuthRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_AuthRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "AuthRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName AuthRoot
void System::Security::Cryptography::X509Certificates::StoreName::_set_AuthRoot(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_AuthRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "AuthRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName CertificateAuthority
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_CertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_CertificateAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "CertificateAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName CertificateAuthority
void System::Security::Cryptography::X509Certificates::StoreName::_set_CertificateAuthority(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_CertificateAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "CertificateAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName Disallowed
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_Disallowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_Disallowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "Disallowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName Disallowed
void System::Security::Cryptography::X509Certificates::StoreName::_set_Disallowed(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_Disallowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "Disallowed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName My
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_My() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_My");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "My"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName My
void System::Security::Cryptography::X509Certificates::StoreName::_set_My(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_My");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "My", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName Root
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_Root");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "Root"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName Root
void System::Security::Cryptography::X509Certificates::StoreName::_set_Root(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_Root");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "Root", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPeople
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPeople() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPeople");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPeople"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPeople
void System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPeople(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPeople");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPeople", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPublisher
::System::Security::Cryptography::X509Certificates::StoreName System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPublisher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_get_TrustedPublisher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::StoreName>("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPublisher"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.StoreName TrustedPublisher
void System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPublisher(::System::Security::Cryptography::X509Certificates::StoreName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::_set_TrustedPublisher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "StoreName", "TrustedPublisher", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::StoreName::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::StoreName::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedNameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags None
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags None
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_None(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags Reversed
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_Reversed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_Reversed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "Reversed"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags Reversed
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_Reversed(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_Reversed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "Reversed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseSemicolons
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseSemicolons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseSemicolons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseSemicolons"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseSemicolons
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseSemicolons(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseSemicolons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseSemicolons", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUsePlusSign
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUsePlusSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUsePlusSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUsePlusSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUsePlusSign
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUsePlusSign(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUsePlusSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUsePlusSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUseQuotes
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUseQuotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_DoNotUseQuotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUseQuotes"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags DoNotUseQuotes
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUseQuotes(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_DoNotUseQuotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "DoNotUseQuotes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseCommas
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseCommas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseCommas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseCommas"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseCommas
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseCommas(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseCommas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseCommas", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseNewLines
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseNewLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseNewLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseNewLines"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseNewLines
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseNewLines(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseNewLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseNewLines", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseUTF8Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseUTF8Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseUTF8Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseUTF8Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseUTF8Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseUTF8Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseUTF8Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseUTF8Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseT61Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseT61Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_UseT61Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseT61Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags UseT61Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseT61Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_UseT61Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "UseT61Encoding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags ForceUTF8Encoding
::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_ForceUTF8Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_get_ForceUTF8Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags>("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "ForceUTF8Encoding"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags ForceUTF8Encoding
void System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_ForceUTF8Encoding(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::_set_ForceUTF8Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X500DistinguishedNameFlags", "ForceUTF8Encoding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags
#include "System/Security/Cryptography/X509Certificates/X509ChainStatusFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoError
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoError"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoError
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoError(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeNested
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotTimeNested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeNested"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotTimeNested
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeNested(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotTimeNested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotTimeNested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Revoked
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Revoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Revoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Revoked"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Revoked
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Revoked(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Revoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Revoked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotSignatureValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotSignatureValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotSignatureValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotSignatureValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotSignatureValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotSignatureValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotSignatureValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotSignatureValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotValidForUsage
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotValidForUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NotValidForUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotValidForUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NotValidForUsage
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotValidForUsage(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NotValidForUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NotValidForUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags UntrustedRoot
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_UntrustedRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_UntrustedRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "UntrustedRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags UntrustedRoot
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_UntrustedRoot(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_UntrustedRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "UntrustedRoot", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags RevocationStatusUnknown
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_RevocationStatusUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_RevocationStatusUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "RevocationStatusUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags RevocationStatusUnknown
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_RevocationStatusUnknown(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_RevocationStatusUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "RevocationStatusUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Cyclic
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Cyclic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_Cyclic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Cyclic"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Cyclic
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Cyclic(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_Cyclic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "Cyclic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidExtension
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidExtension
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidExtension(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidPolicyConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidPolicyConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidPolicyConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidPolicyConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidPolicyConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidPolicyConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidPolicyConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidPolicyConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidBasicConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidBasicConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidBasicConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidBasicConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidBasicConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidBasicConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidBasicConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidBasicConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidNameConstraints
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidNameConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_InvalidNameConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidNameConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags InvalidNameConstraints
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidNameConstraints(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_InvalidNameConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "InvalidNameConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotDefinedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotDefinedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotDefinedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotDefinedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotDefinedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotDefinedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotDefinedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotDefinedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotPermittedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotPermittedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotPermittedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotPermittedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotPermittedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotPermittedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotPermittedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotPermittedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasExcludedNameConstraint
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasExcludedNameConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasExcludedNameConstraint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasExcludedNameConstraint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasExcludedNameConstraint
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasExcludedNameConstraint(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasExcludedNameConstraint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasExcludedNameConstraint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags PartialChain
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_PartialChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_PartialChain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "PartialChain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags PartialChain
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_PartialChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_PartialChain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "PartialChain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotTimeValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotTimeValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotTimeValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotSignatureValid
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotSignatureValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotSignatureValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotSignatureValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotSignatureValid
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotSignatureValid(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotSignatureValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotSignatureValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotValidForUsage
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotValidForUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_CtlNotValidForUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotValidForUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags CtlNotValidForUsage
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotValidForUsage(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_CtlNotValidForUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "CtlNotValidForUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags OfflineRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_OfflineRevocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_OfflineRevocation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "OfflineRevocation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags OfflineRevocation
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_OfflineRevocation(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_OfflineRevocation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "OfflineRevocation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoIssuanceChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoIssuanceChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_NoIssuanceChainPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoIssuanceChainPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags NoIssuanceChainPolicy
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoIssuanceChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_NoIssuanceChainPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "NoIssuanceChainPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags ExplicitDistrust
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_ExplicitDistrust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_ExplicitDistrust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "ExplicitDistrust"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags ExplicitDistrust
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_ExplicitDistrust(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_ExplicitDistrust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "ExplicitDistrust", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedCriticalExtension
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedCriticalExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasNotSupportedCriticalExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedCriticalExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasNotSupportedCriticalExtension
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedCriticalExtension(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasNotSupportedCriticalExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasNotSupportedCriticalExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasWeakSignature
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasWeakSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_get_HasWeakSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags>("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasWeakSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags HasWeakSignature
void System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasWeakSignature(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::_set_HasWeakSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainStatusFlags", "HasWeakSignature", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509FindType
#include "System/Security/Cryptography/X509Certificates/X509FindType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByThumbprint
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByThumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByThumbprint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByThumbprint"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByThumbprint
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByThumbprint(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByThumbprint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByThumbprint", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectDistinguishedName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectDistinguishedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectDistinguishedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectDistinguishedName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectDistinguishedName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectDistinguishedName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectDistinguishedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectDistinguishedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerDistinguishedName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerDistinguishedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByIssuerDistinguishedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerDistinguishedName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByIssuerDistinguishedName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerDistinguishedName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByIssuerDistinguishedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByIssuerDistinguishedName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySerialNumber
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySerialNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySerialNumber"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySerialNumber
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySerialNumber(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySerialNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySerialNumber", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeValid
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeValid
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeValid(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeNotYetValid
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeNotYetValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeNotYetValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeNotYetValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeNotYetValid
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeNotYetValid(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeNotYetValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeNotYetValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeExpired
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTimeExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeExpired"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTimeExpired
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeExpired(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTimeExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTimeExpired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTemplateName
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTemplateName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByTemplateName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTemplateName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByTemplateName
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTemplateName(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByTemplateName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByTemplateName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByApplicationPolicy
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByApplicationPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByApplicationPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByApplicationPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByApplicationPolicy
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByApplicationPolicy(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByApplicationPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByApplicationPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByCertificatePolicy
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByCertificatePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByCertificatePolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByCertificatePolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByCertificatePolicy
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByCertificatePolicy(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByCertificatePolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByCertificatePolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByExtension
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByExtension"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByExtension
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByExtension(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByExtension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByKeyUsage
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindByKeyUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByKeyUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindByKeyUsage
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByKeyUsage(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindByKeyUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindByKeyUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectKeyIdentifier
::System::Security::Cryptography::X509Certificates::X509FindType System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_get_FindBySubjectKeyIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509FindType>("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectKeyIdentifier"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509FindType FindBySubjectKeyIdentifier
void System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509FindType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::_set_FindBySubjectKeyIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509FindType", "FindBySubjectKeyIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509FindType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509FindType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyUsageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyUsageFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags None
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags None
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_None(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags EncipherOnly
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_EncipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_EncipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "EncipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags EncipherOnly
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_EncipherOnly(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_EncipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "EncipherOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags CrlSign
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_CrlSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_CrlSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "CrlSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags CrlSign
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_CrlSign(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_CrlSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "CrlSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyCertSign
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyCertSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyCertSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyCertSign"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyCertSign
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyCertSign(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyCertSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyCertSign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyAgreement
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyAgreement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyAgreement"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyAgreement
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyAgreement(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyAgreement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyAgreement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DataEncipherment
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DataEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DataEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DataEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DataEncipherment
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DataEncipherment(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DataEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DataEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyEncipherment
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyEncipherment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_KeyEncipherment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyEncipherment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags KeyEncipherment
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyEncipherment(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_KeyEncipherment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "KeyEncipherment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags NonRepudiation
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_NonRepudiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_NonRepudiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "NonRepudiation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags NonRepudiation
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_NonRepudiation(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_NonRepudiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "NonRepudiation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DigitalSignature
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DigitalSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DigitalSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DigitalSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DigitalSignature
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DigitalSignature(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DigitalSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DigitalSignature", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DecipherOnly
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DecipherOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_get_DecipherOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DecipherOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyUsageFlags DecipherOnly
void System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DecipherOnly(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::_set_DecipherOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageFlags", "DecipherOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType SimpleName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_SimpleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_SimpleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "SimpleName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType SimpleName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_SimpleName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_SimpleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "SimpleName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType EmailName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_EmailName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_EmailName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "EmailName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType EmailName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_EmailName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_EmailName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "EmailName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType UpnName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_UpnName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_UpnName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "UpnName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType UpnName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_UpnName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_UpnName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "UpnName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsFromAlternativeName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsFromAlternativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_DnsFromAlternativeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsFromAlternativeName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType DnsFromAlternativeName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsFromAlternativeName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_DnsFromAlternativeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "DnsFromAlternativeName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509NameType UrlName
::System::Security::Cryptography::X509Certificates::X509NameType System::Security::Cryptography::X509Certificates::X509NameType::_get_UrlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_get_UrlName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509NameType>("System.Security.Cryptography.X509Certificates", "X509NameType", "UrlName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509NameType UrlName
void System::Security::Cryptography::X509Certificates::X509NameType::_set_UrlName(::System::Security::Cryptography::X509Certificates::X509NameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::_set_UrlName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509NameType", "UrlName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509NameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509NameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationFlag
#include "System/Security/Cryptography/X509Certificates/X509RevocationFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EndCertificateOnly
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EndCertificateOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EndCertificateOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EndCertificateOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EndCertificateOnly
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EndCertificateOnly(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EndCertificateOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EndCertificateOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EntireChain
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EntireChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_EntireChain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EntireChain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag EntireChain
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EntireChain(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_EntireChain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "EntireChain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag ExcludeRoot
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_ExcludeRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_get_ExcludeRoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationFlag>("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "ExcludeRoot"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationFlag ExcludeRoot
void System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_ExcludeRoot(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::_set_ExcludeRoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationFlag", "ExcludeRoot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509RevocationFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509RevocationMode
#include "System/Security/Cryptography/X509Certificates/X509RevocationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode NoCheck
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_NoCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_NoCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "NoCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode NoCheck
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_NoCheck(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_NoCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "NoCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Online
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Online() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Online");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Online"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Online
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Online(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Online");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Online", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Offline
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509RevocationMode>("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509RevocationMode Offline
void System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Offline(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509RevocationMode", "Offline", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509RevocationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509RevocationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm
#include "System/Security/Cryptography/X509Certificates/X509SubjectKeyIdentifierHashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm Sha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_Sha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_Sha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "Sha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm Sha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_Sha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_Sha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "Sha1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm ShortSha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_ShortSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_ShortSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "ShortSha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm ShortSha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_ShortSha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_ShortSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "ShortSha1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm CapiSha1
::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_CapiSha1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_get_CapiSha1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "CapiSha1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm CapiSha1
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_CapiSha1(::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::_set_CapiSha1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierHashAlgorithm", "CapiSha1", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierHashAlgorithm::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509VerificationFlags
#include "System/Security/Cryptography/X509Certificates/X509VerificationFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags NoFlag
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_NoFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_NoFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "NoFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags NoFlag
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_NoFlag(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_NoFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "NoFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeValid
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeValid
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeValid(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlNotTimeValid
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlNotTimeValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlNotTimeValid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlNotTimeValid"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlNotTimeValid
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlNotTimeValid(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlNotTimeValid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlNotTimeValid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeNested
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreNotTimeNested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeNested"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreNotTimeNested
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeNested(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreNotTimeNested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreNotTimeNested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidBasicConstraints
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidBasicConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidBasicConstraints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidBasicConstraints"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidBasicConstraints
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidBasicConstraints(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidBasicConstraints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidBasicConstraints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllowUnknownCertificateAuthority
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllowUnknownCertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllowUnknownCertificateAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllowUnknownCertificateAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllowUnknownCertificateAuthority
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllowUnknownCertificateAuthority(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllowUnknownCertificateAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllowUnknownCertificateAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreWrongUsage
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreWrongUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreWrongUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreWrongUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreWrongUsage
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreWrongUsage(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreWrongUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreWrongUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidName
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidName"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidName
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidName(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidPolicy
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreInvalidPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreInvalidPolicy
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidPolicy(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreInvalidPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreInvalidPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreEndRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreEndRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreEndRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreEndRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreEndRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreEndRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreEndRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreEndRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlSignerRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlSignerRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCtlSignerRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlSignerRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCtlSignerRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlSignerRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCtlSignerRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCtlSignerRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCertificateAuthorityRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreCertificateAuthorityRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCertificateAuthorityRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreCertificateAuthorityRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCertificateAuthorityRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreCertificateAuthorityRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreCertificateAuthorityRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreRootRevocationUnknown
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreRootRevocationUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_IgnoreRootRevocationUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreRootRevocationUnknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags IgnoreRootRevocationUnknown
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreRootRevocationUnknown(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_IgnoreRootRevocationUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "IgnoreRootRevocationUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllFlags
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_get_AllFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509VerificationFlags>("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509VerificationFlags AllFlags
void System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllFlags(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::_set_AllFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509VerificationFlags", "AllFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509VerificationFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509VerificationFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Utils
#include "System/Security/Cryptography/X509Certificates/X509Utils.hpp"
// Including type: System.Security.Cryptography.OidGroup
#include "System/Security/Cryptography/OidGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Utils.FindOidInfo
::StringW System::Security::Cryptography::X509Certificates::X509Utils::FindOidInfo(uint keyType, ::StringW keyValue, ::System::Security::Cryptography::OidGroup oidGroup) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Utils::FindOidInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Utils", "FindOidInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyType), ::il2cpp_utils::ExtractType(keyValue), ::il2cpp_utils::ExtractType(oidGroup)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyType, keyValue, oidGroup);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Utils.FindOidInfoWithFallback
::StringW System::Security::Cryptography::X509Certificates::X509Utils::FindOidInfoWithFallback(uint key, ::StringW value, ::System::Security::Cryptography::OidGroup group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Utils::FindOidInfoWithFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Utils", "FindOidInfoWithFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(group)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.AsnEncodedData
#include "System/Security/Cryptography/AsnEncodedData.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Empty
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::PublicKey::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Empty
void System::Security::Cryptography::X509Certificates::PublicKey::_set_Empty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "PublicKey", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsymmetricAlgorithm _key
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsymmetricAlgorithm*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnEncodedData _keyValue
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnEncodedData*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__keyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__keyValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyValue"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnEncodedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnEncodedData _params
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnEncodedData*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnEncodedData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.Oid _oid
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::X509Certificates::PublicKey::dyn__oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::dyn__oid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oid"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedKeyValue
::System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedKeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedKeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedKeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnEncodedData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_EncodedParameters
::System::Security::Cryptography::AsnEncodedData* System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_EncodedParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnEncodedData*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Key
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::PublicKey::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.get_Oid
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::PublicKey::get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::get_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey..cctor
void System::Security::Cryptography::X509Certificates::PublicKey::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.GetUnsignedBigInteger
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::PublicKey::GetUnsignedBigInteger(::ArrayW<uint8_t> integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::GetUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "GetUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, integer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeDSA
::System::Security::Cryptography::DSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeDSA(::ArrayW<uint8_t> rawPublicKey, ::ArrayW<uint8_t> rawParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawPublicKey), ::il2cpp_utils::ExtractType(rawParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawPublicKey, rawParameters);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.PublicKey.DecodeRSA
::System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::PublicKey::DecodeRSA(::ArrayW<uint8_t> rawPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::PublicKey::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "PublicKey", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawPublicKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedNameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] canonEncoding
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_canonEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::dyn_canonEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canonEncoding"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Decode(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.GetSeparator
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::GetSeparator(::System::Security::Cryptography::X509Certificates::X500DistinguishedNameFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::GetSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "GetSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.DecodeRawData
void System::Security::Cryptography::X509Certificates::X500DistinguishedName::DecodeRawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::DecodeRawData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeRawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Canonize
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Canonize(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Canonize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "Canonize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.AreEqual
bool System::Security::Cryptography::X509Certificates::X500DistinguishedName::AreEqual(::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name1, ::System::Security::Cryptography::X509Certificates::X500DistinguishedName* name2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X500DistinguishedName", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name1), ::il2cpp_utils::ExtractType(name2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name1, name2);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X500DistinguishedName.Format
::StringW System::Security::Cryptography::X509Certificates::X500DistinguishedName::Format(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X500DistinguishedName::Format");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
#include "System/Security/Cryptography/X509Certificates/X509BasicConstraintsExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509BasicConstraintsExtension", "friendlyName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _certificateAuthority
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__certificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__certificateAuthority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certificateAuthority"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasPathLengthConstraint
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__hasPathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__hasPathLengthConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasPathLengthConstraint"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pathLengthConstraint
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__pathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__pathLengthConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pathLengthConstraint"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_CertificateAuthority
bool System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_CertificateAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_CertificateAuthority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateAuthority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_HasPathLengthConstraint
bool System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_HasPathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_HasPathLengthConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPathLengthConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.get_PathLengthConstraint
int System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_PathLengthConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::get_PathLengthConstraint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PathLengthConstraint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509BasicConstraintsExtension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Impl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] signedData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2::_get_signedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::_get_signedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509Certificate2", "signedData"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] signedData
void System::Security::Cryptography::X509Certificates::X509Certificate2::_set_signedData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::_set_signedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2", "signedData", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String friendlyName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::dyn_friendlyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "friendlyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Impl
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Certificate2::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Extensions
::System::Security::Cryptography::X509Certificates::X509ExtensionCollection* System::Security::Cryptography::X509Certificates::X509Certificate2::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_IssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_NotAfter
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_NotBefore
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_NotBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NotBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2::set_PrivateKey(::System::Security::Cryptography::AsymmetricAlgorithm* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::set_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_PublicKey
::System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::X509Certificate2::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_PublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::PublicKey*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SerialNumber
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SignatureAlgorithm
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::X509Certificate2::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SignatureAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_SubjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Thumbprint
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::get_Thumbprint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Thumbprint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Thumbprint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.get_MonoCertificate
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2::get_MonoCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::get_MonoCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::GetNameInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameType), ::il2cpp_utils::ExtractType(forIssuer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.AppendBuffer
void System::Security::Cryptography::X509Certificates::X509Certificate2::AppendBuffer(::System::Text::StringBuilder* sb, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::AppendBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2", "AppendBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, buffer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2::Verify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Verify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Verify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
void System::Security::Cryptography::X509Certificates::X509Certificate2::Import(::ArrayW<uint8_t> rawData, ::StringW password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Import
void System::Security::Cryptography::X509Certificates::X509Certificate2::Import(::StringW fileName, ::StringW password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fileName, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2::ToString(bool verbose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verbose)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, verbose);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509FindType
#include "System/Security/Cryptography/X509Certificates/X509FindType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String[] newline_split
::ArrayW<::StringW> System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_get_newline_split() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_get_newline_split");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", "newline_split"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] newline_split
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_set_newline_split(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_set_newline_split");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", "newline_split", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.get_Item
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2Collection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add
int System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Add(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange
void System::Security::Cryptography::X509Certificates::X509Certificate2Collection::AddRange(::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificates)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificates);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains
bool System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Contains(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Find(::System::Security::Cryptography::X509Certificates::X509FindType findType, ::Il2CppObject* findValue, bool validOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(findType), ::il2cpp_utils::ExtractType(findValue), ::il2cpp_utils::ExtractType(validOnly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method, findType, findValue, validOnly);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator* System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Collection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Enumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System.Collections.IEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Enumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Impl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_Extensions
::System::Security::Cryptography::X509Certificates::X509ExtensionCollection* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PrivateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2Impl::set_PrivateKey(::System::Security::Cryptography::AsymmetricAlgorithm* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::set_PrivateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_PublicKey
::System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::PublicKey*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_SignatureAlgorithm
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_IntermediateCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IntermediateCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_IntermediateCertificates");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IntermediateCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.get_FallbackImpl
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_FallbackImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::get_FallbackImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FallbackImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2Impl::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::GetNameInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameType), ::il2cpp_utils::ExtractType(forIssuer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.Import
void System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Import(::ArrayW<uint8_t> rawData, ::StringW password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Verify(::System::Security::Cryptography::X509Certificates::X509Certificate2* thisCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Verify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Verify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisCertificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisCertificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2Impl.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2Impl::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono
#include "System/Security/Cryptography/X509Certificates/X509Certificate2ImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.Oid
#include "System/Security/Cryptography/Oid.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ContentType
#include "System/Security/Cryptography/X509Certificates/X509ContentType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509NameType
#include "System/Security/Cryptography/X509Certificates/X509NameType.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String empty_error
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_empty_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_empty_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String empty_error
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_empty_error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_empty_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "empty_error", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] commonName
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_commonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_commonName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "commonName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] commonName
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_commonName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_commonName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "commonName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] email
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "email"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] email
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_email(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "email", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] signedData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_signedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_get_signedData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] signedData
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_signedData(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_set_signedData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "signedData", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _archived
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__archived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__archived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_archived"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ExtensionCollection _extensions
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extensions"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.PublicKey _publicKey
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::PublicKey*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicKey"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::PublicKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName issuer_name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_issuer_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_issuer_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issuer_name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName subject_name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_subject_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_subject_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subject_name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.Oid signature_algorithm
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::Oid*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_signature_algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_signature_algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature_algorithm"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::Oid**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateImplCollection intermediateCerts
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_intermediateCerts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn_intermediateCerts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intermediateCerts"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Certificate _cert
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Certificate*& System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::dyn__cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cert"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Certificate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_MonoCertificate
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_MonoCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_MonoCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonoCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Find
::Mono::Security::ASN1* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Find(::ArrayW<uint8_t> oid, ::Mono::Security::ASN1* dn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(dn)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1*, false>(this, ___internal__method, oid, dn);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValueAsString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValueAsString(::Mono::Security::ASN1* pair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValueAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pair)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pair);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ImportPkcs12
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12(::ArrayW<uint8_t> rawData, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ImportPkcs12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportPkcs12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, rawData, password);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.AppendBuffer
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::AppendBuffer(::System::Text::StringBuilder* sb, ::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::AppendBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Certificate2ImplMono", "AppendBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, buffer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_Extensions
::System::Security::Cryptography::X509Certificates::X509ExtensionCollection* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Extensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IssuerName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_PrivateKey
::System::Security::Cryptography::AsymmetricAlgorithm* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PrivateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsymmetricAlgorithm*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.set_PrivateKey
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::set_PrivateKey(::System::Security::Cryptography::AsymmetricAlgorithm* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::set_PrivateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_PublicKey
::System::Security::Cryptography::X509Certificates::PublicKey* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::PublicKey*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_SignatureAlgorithm
::System::Security::Cryptography::Oid* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::Oid*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_SubjectName
::System::Security::Cryptography::X509Certificates::X500DistinguishedName* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X500DistinguishedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_Version
int System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_IntermediateCertificates
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IntermediateCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_IntermediateCertificates");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IntermediateCertificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.get_FallbackImpl
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_FallbackImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::get_FallbackImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FallbackImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Clone
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetIssuerName
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetIssuerName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetIssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetSubjectName
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSubjectName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetRawCertData
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawCertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetCertHash
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetCertHash(bool lazy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetCertHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, lazy);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValidFrom
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetValidUntil
::System::DateTime System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Equals(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* other, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other, byref(result));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetSerialNumber
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetSerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Export
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Export(::System::Security::Cryptography::X509Certificates::X509ContentType contentType, ::ArrayW<uint8_t> password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Export");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Export", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, contentType, password);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.GetNameInfo
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetNameInfo(::System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::GetNameInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameType), ::il2cpp_utils::ExtractType(forIssuer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nameType, forIssuer);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Import
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Import(::ArrayW<uint8_t> rawData, ::StringW password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.ToString
::StringW System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString(bool verbose) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verbose)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, verbose);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate2ImplMono.Verify
bool System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Verify(::System::Security::Cryptography::X509Certificates::X509Certificate2* thisCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Certificate2ImplMono::Verify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Verify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thisCertificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, thisCertificate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Security::Cryptography::X509Certificates::X509CertificateCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add
int System::Security::Cryptography::X509Certificates::X509CertificateCollection::Add(::System::Security::Cryptography::X509Certificates::X509Certificate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange
void System::Security::Cryptography::X509Certificates::X509CertificateCollection::AddRange(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::AddRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator* System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetHashCode
int System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Certificate* System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator.System.Collections.IEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateCollection/System.Security.Cryptography.X509Certificates.X509CertificateEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateCollection::X509CertificateEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplCollection.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Cryptography.X509Certificates.X509CertificateImpl> list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*>*& System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Add
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Add(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl, bool takeOwnership) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl), ::il2cpp_utils::ExtractType(takeOwnership)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, impl, takeOwnership);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Clone
::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection* System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplCollection.Finalize
void System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509CertificateImplCollection::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainImpl impl
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainImpl*& System::Security::Cryptography::X509Certificates::X509Chain::dyn_impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::dyn_impl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "impl"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_Impl
::System::Security::Cryptography::X509Certificates::X509ChainImpl* System::Security::Cryptography::X509Certificates::X509Chain::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509Chain::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_ChainElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509Chain::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_ChainPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.set_ChainPolicy
void System::Security::Cryptography::X509Certificates::X509Chain::set_ChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::set_ChainPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.get_ChainStatus
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509Chain::get_ChainStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::get_ChainStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Build
bool System::Security::Cryptography::X509Certificates::X509Chain::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Create
::System::Security::Cryptography::X509Certificates::X509Chain* System::Security::Cryptography::X509Certificates::X509Chain::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Chain", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
void System::Security::Cryptography::X509Certificates::X509Chain::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
void System::Security::Cryptography::X509Certificates::X509Chain::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Chain.Finalize
void System::Security::Cryptography::X509Certificates::X509Chain::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Chain::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2 certificate
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2*& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_certificate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificate"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatus[] status
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String info
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatusFlags compressed_status_flags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags& System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_compressed_status_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::dyn_compressed_status_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "compressed_status_flags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_Certificate
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainElement::get_Certificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_Certificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_ChainElementStatus
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainElement::get_ChainElementStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_ChainElementStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElementStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.get_StatusFlags
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainElement::get_StatusFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::get_StatusFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.set_StatusFlags
void System::Security::Cryptography::X509Certificates::X509ChainElement::set_StatusFlags(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::set_StatusFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.Count
int System::Security::Cryptography::X509Certificates::X509ChainElement::Count(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.Set
void System::Security::Cryptography::X509Certificates::X509ChainElement::Set(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> status, ByRef<int> position, ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags, ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(status), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(mask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, status, byref(position), flags, mask);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElement.UncompressFlags
void System::Security::Cryptography::X509Certificates::X509ChainElement::UncompressFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElement::UncompressFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UncompressFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ChainElementEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Cryptography::X509Certificates::X509ChainElementCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509ChainElement* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElement*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Add
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Add(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Clear
void System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementCollection.Contains
bool System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Contains(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ChainElementEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509ChainElement* System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainElementEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509ChainImpl::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.set_ChainPolicy
void System::Security::Cryptography::X509Certificates::X509ChainImpl::set_ChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::set_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.get_ChainStatus
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::get_ChainStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Build
bool System::Security::Cryptography::X509Certificates::X509ChainImpl::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Build");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Reset
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImpl.Finalize
void System::Security::Cryptography::X509Certificates::X509ChainImpl::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImpl::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImplMono
#include "System/Security/Cryptography/X509Certificates/X509ChainImplMono.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
#include "System/Security/Cryptography/X509Certificates/X509ChainElementCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
#include "System/Security/Cryptography/X509Certificates/X500DistinguishedName.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainElement
#include "System/Security/Cryptography/X509Certificates/X509ChainElement.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Store
#include "System/Security/Cryptography/X509Certificates/X509Store.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: Mono.Security.X509.X509Crl/Mono.Security.X509.X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainImplMono::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>>("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509ChainStatus[] Empty
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_set_Empty(::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.StoreLocation location
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::StoreLocation& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "location"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::StoreLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainElementCollection elements
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elements"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainPolicy policy
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainPolicy*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_policy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "policy"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainPolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatus[] status
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 max_path_length
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_max_path_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_max_path_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max_path_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X500DistinguishedName working_issuer_name
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X500DistinguishedName*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_issuer_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_issuer_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working_issuer_name"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X500DistinguishedName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsymmetricAlgorithm working_public_key
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsymmetricAlgorithm*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_public_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_working_public_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working_public_key"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsymmetricAlgorithm**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainElement bce_restriction
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainElement*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_bce_restriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_bce_restriction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bce_restriction"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection roots
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_roots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_roots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roots"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection cas
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_cas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_cas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cas"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store root_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_root_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_root_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store ca_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_ca_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_ca_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ca_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store user_root_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_root_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_root_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user_root_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Store user_ca_store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Store*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_ca_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_user_ca_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "user_ca_store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection collection
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::dyn_collection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collection"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_Roots
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_Roots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_Roots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Roots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateAuthorities
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateAuthorities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateAuthorities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateAuthorities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMRootStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMRootStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMRootStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LMRootStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserRootStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserRootStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserRootStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserRootStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_LMCAStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMCAStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_LMCAStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LMCAStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_UserCAStore
::System::Security::Cryptography::X509Certificates::X509Store* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserCAStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_UserCAStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserCAStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_CertificateCollection
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_CertificateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono..cctor
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.BuildChainFrom
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::BuildChainFrom(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::BuildChainFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildChainFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.SelectBestFromCollection
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::SelectBestFromCollection(::System::Security::Cryptography::X509Certificates::X509Certificate2* child, ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::SelectBestFromCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectBestFromCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, child, c);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindParent
::System::Security::Cryptography::X509Certificates::X509Certificate2* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindParent(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2*, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsChainComplete
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsChainComplete(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsChainComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsChainComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSelfIssued
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSelfIssued(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSelfIssued");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSelfIssued", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ValidateChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ValidateChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ValidateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Process
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Process(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.PrepareForNextCertificate
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::PrepareForNextCertificate(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::PrepareForNextCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareForNextCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, n);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.WrapUp
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::WrapUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::WrapUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCertificateExtensions
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCertificateExtensions(::System::Security::Cryptography::X509Certificates::X509ChainElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCertificateExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCertificateExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.IsSignedWith
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSignedWith(::System::Security::Cryptography::X509Certificates::X509Certificate2* _signed, ::System::Security::Cryptography::AsymmetricAlgorithm* pubkey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::IsSignedWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSignedWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_signed), ::il2cpp_utils::ExtractType(pubkey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, _signed, pubkey);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetSubjectKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetSubjectKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetSubjectKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::Mono::Security::X509::X509Crl* crl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crl)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, crl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.GetAuthorityKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier(::Mono::Security::X509::X509Extension* ext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::GetAuthorityKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "GetAuthorityKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ext)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ext);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocationOnChain
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocationOnChain(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocationOnChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocationOnChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, int ca, bool online) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(ca), ::il2cpp_utils::ExtractType(online)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate, ca, online);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckRevocation
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::System::Security::Cryptography::X509Certificates::X509Certificate2* ca_cert, bool online) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckRevocation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckRevocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(ca_cert), ::il2cpp_utils::ExtractType(online)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method, certificate, ca_cert, online);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.CheckCrls
::Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckCrls(::StringW subject, ::StringW ski, ::Mono::Security::X509::X509Store* store) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::CheckCrls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainImplMono", "CheckCrls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subject), ::il2cpp_utils::ExtractType(ski), ::il2cpp_utils::ExtractType(store)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Crl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, subject, ski, store);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.FindCrl
::Mono::Security::X509::X509Crl* System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindCrl(::System::Security::Cryptography::X509Certificates::X509Certificate2* caCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::FindCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(caCertificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Crl*, false>(this, ___internal__method, caCertificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlExtensions(::Mono::Security::X509::X509Crl* crl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCrlExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, crl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.ProcessCrlEntryExtensions
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlEntryExtensions(::Mono::Security::X509::X509Crl::X509CrlEntry* entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::ProcessCrlEntryExtensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessCrlEntryExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entry);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainElements
::System::Security::Cryptography::X509Certificates::X509ChainElementCollection* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainElements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainElementCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainPolicy
::System::Security::Cryptography::X509Certificates::X509ChainPolicy* System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainPolicy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.set_ChainPolicy
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::set_ChainPolicy(::System::Security::Cryptography::X509Certificates::X509ChainPolicy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::set_ChainPolicy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChainPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.get_ChainStatus
::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus> System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::get_ChainStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChainStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Security::Cryptography::X509Certificates::X509ChainStatus>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Build
bool System::Security::Cryptography::X509Certificates::X509ChainImplMono::Build(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Build");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainImplMono.Reset
void System::Security::Cryptography::X509Certificates::X509ChainImplMono::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainImplMono::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
#include "System/Security/Cryptography/X509Certificates/X509ChainPolicy.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection apps
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_apps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_apps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "apps"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection cert
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_cert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cert"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection store
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection store2
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_store2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store2"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationFlag rflag
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationFlag& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_rflag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_rflag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rflag"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationFlag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509RevocationMode mode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509RevocationMode& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509RevocationMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.TimeSpan timeout
[[deprecated("Use field access instead!")]] ::System::TimeSpan& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_timeout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeout"))->offset;
  return *reinterpret_cast<::System::TimeSpan*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509VerificationFlags vflags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509VerificationFlags& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vflags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vflags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vflags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509VerificationFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime vtime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::dyn_vtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vtime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_ExtraStore
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_ExtraStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_ExtraStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExtraStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_RevocationFlag
::System::Security::Cryptography::X509Certificates::X509RevocationFlag System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509RevocationFlag, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_RevocationFlag
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationFlag(::System::Security::Cryptography::X509Certificates::X509RevocationFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RevocationFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_RevocationMode
::System::Security::Cryptography::X509Certificates::X509RevocationMode System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_RevocationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509RevocationMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_RevocationMode
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationMode(::System::Security::Cryptography::X509Certificates::X509RevocationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_RevocationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RevocationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_UrlRetrievalTimeout
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_UrlRetrievalTimeout(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_UrlRetrievalTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UrlRetrievalTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_VerificationFlags
::System::Security::Cryptography::X509Certificates::X509VerificationFlags System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerificationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509VerificationFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_VerificationFlags
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationFlags(::System::Security::Cryptography::X509Certificates::X509VerificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VerificationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.get_VerificationTime
::System::DateTime System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::get_VerificationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VerificationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.set_VerificationTime
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::set_VerificationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VerificationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainPolicy.Reset
void System::Security::Cryptography::X509Certificates::X509ChainPolicy::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainPolicy::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509ChainStatus
#include "System/Security/Cryptography/X509Certificates/X509ChainStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509ChainStatusFlags status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags& System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_status");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String info
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::dyn_info");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "info"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.get_Status
::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags System::Security::Cryptography::X509Certificates::X509ChainStatus::get_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::get_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.set_Status
void System::Security::Cryptography::X509Certificates::X509ChainStatus::set_Status(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::set_Status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.set_StatusInformation
void System::Security::Cryptography::X509Certificates::X509ChainStatus::set_StatusInformation(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::set_StatusInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StatusInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus..ctor
System::Security::Cryptography::X509Certificates::X509ChainStatus::X509ChainStatus(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flag);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ChainStatus.GetInformation
::StringW System::Security::Cryptography::X509Certificates::X509ChainStatus::GetInformation(::System::Security::Cryptography::X509Certificates::X509ChainStatusFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ChainStatus::GetInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ChainStatus", "GetInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
#include "System/Security/Cryptography/X509Certificates/X509EnhancedKeyUsageExtension.hpp"
// Including type: System.Security.Cryptography.OidCollection
#include "System/Security/Cryptography/OidCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.OidCollection _enhKeyUsage
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::OidCollection*& System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__enhKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__enhKeyUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enhKeyUsage"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::OidCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509EnhancedKeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _critical
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::X509Certificates::X509Extension::dyn__critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::dyn__critical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_critical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.get_Critical
bool System::Security::Cryptography::X509Certificates::X509Extension::get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::get_Critical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Critical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.set_Critical
void System::Security::Cryptography::X509Certificates::X509Extension::set_Critical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::set_Critical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Critical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.FormatUnkownData
::StringW System::Security::Cryptography::X509Certificates::X509Extension::FormatUnkownData(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::FormatUnkownData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormatUnkownData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Extension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509Extension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Extension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
#include "System/Security/Cryptography/X509Certificates/X509ExtensionCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ExtensionEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] Empty
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", "Empty"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] Empty
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_set_Empty(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", "Empty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Cryptography::X509Certificates::X509ExtensionCollection::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_Count
int System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_SyncRoot
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.get_Item
::System::Security::Cryptography::X509Certificates::X509Extension* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Item(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Extension*, false>(this, ___internal__method, oid);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection..cctor
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509ExtensionCollection", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System.Collections.ICollection.CopyTo
void System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator
::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
#include "System/Security/Cryptography/X509Certificates/X509ExtensionEnumerator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Extension
#include "System/Security/Cryptography/X509Certificates/X509Extension.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.get_Current
::System::Security::Cryptography::X509Certificates::X509Extension* System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Extension*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.MoveNext
bool System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.Reset
void System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509ExtensionEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Helper2
#include "System/Security/Cryptography/X509Certificates/X509Helper2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Helper2/System.Security.Cryptography.X509Certificates.MyNativeHelper
#include "System/Security/Cryptography/X509Certificates/X509Helper2_MyNativeHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Impl
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Impl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509ChainImpl
#include "System/Security/Cryptography/X509Certificates/X509ChainImpl.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.Initialize
void System::Security::Cryptography::X509Certificates::X509Helper2::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid(::System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.Import
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Helper2::Import(::ArrayW<uint8_t> rawData, ::StringW password, ::System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags, bool disableProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags), ::il2cpp_utils::ExtractType(disableProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rawData, password, keyStorageFlags, disableProvider);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.Import
::System::Security::Cryptography::X509Certificates::X509Certificate2Impl* System::Security::Cryptography::X509Certificates::X509Helper2::Import(::System::Security::Cryptography::X509Certificates::X509Certificate* cert, bool disableProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(disableProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Impl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cert, disableProvider);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.GetMonoCertificate
::Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Helper2::GetMonoCertificate(::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::GetMonoCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "GetMonoCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.CreateChainImpl
::System::Security::Cryptography::X509Certificates::X509ChainImpl* System::Security::Cryptography::X509Certificates::X509Helper2::CreateChainImpl(bool useMachineContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::CreateChainImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "CreateChainImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useMachineContext)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509ChainImpl*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, useMachineContext);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.IsValid
bool System::Security::Cryptography::X509Certificates::X509Helper2::IsValid(::System::Security::Cryptography::X509Certificates::X509ChainImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid(::System::Security::Cryptography::X509Certificates::X509ChainImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2.GetInvalidChainContextException
::System::Exception* System::Security::Cryptography::X509Certificates::X509Helper2::GetInvalidChainContextException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::GetInvalidChainContextException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper2", "GetInvalidChainContextException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Helper2/System.Security.Cryptography.X509Certificates.MyNativeHelper
#include "System/Security/Cryptography/X509Certificates/X509Helper2_MyNativeHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper2/System.Security.Cryptography.X509Certificates.MyNativeHelper.Import
::System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper2::MyNativeHelper::Import(::System::Security::Cryptography::X509Certificates::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Helper2::MyNativeHelper::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, cert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
#include "System/Security/Cryptography/X509Certificates/X509KeyUsageExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "friendlyName", value));
}
// Autogenerated static field getter
// Get static field: static System.Security.Cryptography.X509Certificates.X509KeyUsageFlags all
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_get_all");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "all"));
}
// Autogenerated static field setter
// Set static field: static System.Security.Cryptography.X509Certificates.X509KeyUsageFlags all
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_all(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::_set_all");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyUsageExtension", "all", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags _keyUsages
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags& System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__keyUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__keyUsages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyUsages"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.get_KeyUsages
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::get_KeyUsages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::get_KeyUsages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyUsages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.GetValidFlags
::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::GetValidFlags(::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::GetValidFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509KeyUsageFlags, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509KeyUsageExtension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509Store
#include "System/Security/Cryptography/X509Certificates/X509Store.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#include "System/Security/Cryptography/X509Certificates/X509Certificate2Collection.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
// Including type: Mono.Security.X509.X509Stores
#include "Mono/Security/X509/X509Stores.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509Store::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.StoreLocation _location
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::StoreLocation& System::Security::Cryptography::X509Certificates::X509Store::dyn__location() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__location");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_location"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::StoreLocation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509Certificate2Collection list
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*& System::Security::Cryptography::X509Certificates::X509Store::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.OpenFlags _flags
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::OpenFlags& System::Security::Cryptography::X509Certificates::X509Store::dyn__flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn__flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flags"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::OpenFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509Store store
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509Store*& System::Security::Cryptography::X509Certificates::X509Store::dyn_store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::dyn_store");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "store"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509Store**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Certificates
::System::Security::Cryptography::X509Certificates::X509Certificate2Collection* System::Security::Cryptography::X509Certificates::X509Store::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate2Collection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Factory
::Mono::Security::X509::X509Stores* System::Security::Cryptography::X509Certificates::X509Store::get_Factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Factory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Factory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Stores*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.get_Store
::Mono::Security::X509::X509Store* System::Security::Cryptography::X509Certificates::X509Store::get_Store() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::get_Store");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Store", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Store*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Close
void System::Security::Cryptography::X509Certificates::X509Store::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Dispose
void System::Security::Cryptography::X509Certificates::X509Store::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Store.Open
void System::Security::Cryptography::X509Certificates::X509Store::Open(::System::Security::Cryptography::X509Certificates::OpenFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509Store::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
#include "System/Security/Cryptography/X509Certificates/X509SubjectKeyIdentifierExtension.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Security.Cryptography.X509Certificates.PublicKey
#include "System/Security/Cryptography/X509Certificates/PublicKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String oid
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "oid"));
}
// Autogenerated static field setter
// Set static field: static System.String oid
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_oid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "oid", value));
}
// Autogenerated static field getter
// Get static field: static System.String friendlyName
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_friendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_get_friendlyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "friendlyName"));
}
// Autogenerated static field setter
// Set static field: static System.String friendlyName
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_friendlyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::_set_friendlyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "friendlyName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _subjectKeyIdentifier
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__subjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__subjectKeyIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subjectKeyIdentifier"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _ski
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__ski() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__ski");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ski"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.AsnDecodeStatus _status
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::AsnDecodeStatus& System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::dyn__status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_status"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::AsnDecodeStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.get_SubjectKeyIdentifier
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::get_SubjectKeyIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::get_SubjectKeyIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectKeyIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHexChar
uint8_t System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHexChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHexChars
uint8_t System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChars(::Il2CppChar c1, ::Il2CppChar c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHexChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHexChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.FromHex
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHex(::StringW hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509SubjectKeyIdentifierExtension", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.Decode
::System::Security::Cryptography::AsnDecodeStatus System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Decode(::ArrayW<uint8_t> extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::AsnDecodeStatus, false>(this, ___internal__method, extension);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.Encode
::ArrayW<uint8_t> System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.CopyFrom
void System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::CopyFrom(::System::Security::Cryptography::AsnEncodedData* asnEncodedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::CopyFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asnEncodedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asnEncodedData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.ToString
::StringW System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::ToString(bool multiLine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::X509Certificates::X509SubjectKeyIdentifierExtension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiLine)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, multiLine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.DefaultWatcherData
#include "System/IO/DefaultWatcherData.hpp"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IO.FileSystemWatcher FSW
[[deprecated("Use field access instead!")]] ::System::IO::FileSystemWatcher*& System::IO::DefaultWatcherData::dyn_FSW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_FSW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FSW"))->offset;
  return *reinterpret_cast<::System::IO::FileSystemWatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Directory
[[deprecated("Use field access instead!")]] ::StringW& System::IO::DefaultWatcherData::dyn_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_Directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileMask
[[deprecated("Use field access instead!")]] ::StringW& System::IO::DefaultWatcherData::dyn_FileMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_FileMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileMask"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IncludeSubdirs
[[deprecated("Use field access instead!")]] bool& System::IO::DefaultWatcherData::dyn_IncludeSubdirs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_IncludeSubdirs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IncludeSubdirs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean Enabled
[[deprecated("Use field access instead!")]] bool& System::IO::DefaultWatcherData::dyn_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_Enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean NoWildcards
[[deprecated("Use field access instead!")]] bool& System::IO::DefaultWatcherData::dyn_NoWildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_NoWildcards");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NoWildcards"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime DisabledTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::IO::DefaultWatcherData::dyn_DisabledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_DisabledTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DisabledTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object FilesLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::IO::DefaultWatcherData::dyn_FilesLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_FilesLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FilesLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Hashtable Files
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::IO::DefaultWatcherData::dyn_Files() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcherData::dyn_Files");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Files"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileData
#include "System/IO/FileData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Directory
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileData::dyn_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileData::dyn_Directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.FileAttributes Attributes
[[deprecated("Use field access instead!")]] ::System::IO::FileAttributes& System::IO::FileData::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileData::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::System::IO::FileAttributes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean NotExists
[[deprecated("Use field access instead!")]] bool& System::IO::FileData::dyn_NotExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileData::dyn_NotExists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NotExists"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime CreationTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::IO::FileData::dyn_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileData::dyn_CreationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime LastWriteTime
[[deprecated("Use field access instead!")]] ::System::DateTime& System::IO::FileData::dyn_LastWriteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileData::dyn_LastWriteTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastWriteTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.DefaultWatcher
#include "System/IO/DefaultWatcher.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
// Including type: System.IO.DefaultWatcherData
#include "System/IO/DefaultWatcherData.hpp"
// Including type: System.IO.FileAction
#include "System/IO/FileAction.hpp"
// Including type: System.IO.FileData
#include "System/IO/FileData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IO.DefaultWatcher instance
::System::IO::DefaultWatcher* System::IO::DefaultWatcher::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::DefaultWatcher*>("System.IO", "DefaultWatcher", "instance"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.DefaultWatcher instance
void System::IO::DefaultWatcher::_set_instance(::System::IO::DefaultWatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "DefaultWatcher", "instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.Thread thread
::System::Threading::Thread* System::IO::DefaultWatcher::_get_thread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_get_thread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Thread*>("System.IO", "DefaultWatcher", "thread"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Thread thread
void System::IO::DefaultWatcher::_set_thread(::System::Threading::Thread* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_set_thread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "DefaultWatcher", "thread", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable watches
::System::Collections::Hashtable* System::IO::DefaultWatcher::_get_watches() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_get_watches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Hashtable*>("System.IO", "DefaultWatcher", "watches"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable watches
void System::IO::DefaultWatcher::_set_watches(::System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_set_watches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "DefaultWatcher", "watches", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] NoStringsArray
::ArrayW<::StringW> System::IO::DefaultWatcher::_get_NoStringsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_get_NoStringsArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.IO", "DefaultWatcher", "NoStringsArray"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] NoStringsArray
void System::IO::DefaultWatcher::_set_NoStringsArray(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::_set_NoStringsArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "DefaultWatcher", "NoStringsArray", value));
}
// Autogenerated method: System.IO.DefaultWatcher..cctor
void System::IO::DefaultWatcher::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "DefaultWatcher", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.DefaultWatcher.GetInstance
bool System::IO::DefaultWatcher::GetInstance(ByRef<::System::IO::IFileWatcher*> watcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "DefaultWatcher", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IO::IFileWatcher*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(watcher));
}
// Autogenerated method: System.IO.DefaultWatcher.StartDispatching
void System::IO::DefaultWatcher::StartDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::StartDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated method: System.IO.DefaultWatcher.StopDispatching
void System::IO::DefaultWatcher::StopDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::StopDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated method: System.IO.DefaultWatcher.Monitor
void System::IO::DefaultWatcher::Monitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::Monitor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Monitor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.DefaultWatcher.UpdateDataAndDispatch
bool System::IO::DefaultWatcher::UpdateDataAndDispatch(::System::IO::DefaultWatcherData* data, bool dispatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::UpdateDataAndDispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDataAndDispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(dispatch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, dispatch);
}
// Autogenerated method: System.IO.DefaultWatcher.DispatchEvents
void System::IO::DefaultWatcher::DispatchEvents(::System::IO::FileSystemWatcher* fsw, ::System::IO::FileAction action, ::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::DispatchEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "DefaultWatcher", "DispatchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw), ::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(filename)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fsw, action, filename);
}
// Autogenerated method: System.IO.DefaultWatcher.DoFiles
void System::IO::DefaultWatcher::DoFiles(::System::IO::DefaultWatcherData* data, ::StringW directory, bool dispatch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::DoFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(dispatch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, directory, dispatch);
}
// Autogenerated method: System.IO.DefaultWatcher.IterateAndModifyFilesData
void System::IO::DefaultWatcher::IterateAndModifyFilesData(::System::IO::DefaultWatcherData* data, ::StringW directory, bool dispatch, ::ArrayW<::StringW> files) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::IterateAndModifyFilesData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IterateAndModifyFilesData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(dispatch), ::il2cpp_utils::ExtractType(files)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, directory, dispatch, files);
}
// Autogenerated method: System.IO.DefaultWatcher.CreateFileData
::System::IO::FileData* System::IO::DefaultWatcher::CreateFileData(::StringW directory, ::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::DefaultWatcher::CreateFileData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "DefaultWatcher", "CreateFileData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::FileData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directory, filename);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.ErrorEventHandler
#include "System/IO/ErrorEventHandler.hpp"
// Including type: System.IO.ErrorEventArgs
#include "System/IO/ErrorEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.ErrorEventHandler.Invoke
void System::IO::ErrorEventHandler::Invoke(::Il2CppObject* sender, ::System::IO::ErrorEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::ErrorEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.IO.ErrorEventHandler.BeginInvoke
::System::IAsyncResult* System::IO::ErrorEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::IO::ErrorEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::ErrorEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.IO.ErrorEventHandler.EndInvoke
void System::IO::ErrorEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::ErrorEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAction
#include "System/IO/FileAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAction Added
::System::IO::FileAction System::IO::FileAction::_get_Added() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_get_Added");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAction>("System.IO", "FileAction", "Added"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAction Added
void System::IO::FileAction::_set_Added(::System::IO::FileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_set_Added");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAction", "Added", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAction Removed
::System::IO::FileAction System::IO::FileAction::_get_Removed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_get_Removed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAction>("System.IO", "FileAction", "Removed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAction Removed
void System::IO::FileAction::_set_Removed(::System::IO::FileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_set_Removed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAction", "Removed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAction Modified
::System::IO::FileAction System::IO::FileAction::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAction>("System.IO", "FileAction", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAction Modified
void System::IO::FileAction::_set_Modified(::System::IO::FileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAction", "Modified", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAction RenamedOldName
::System::IO::FileAction System::IO::FileAction::_get_RenamedOldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_get_RenamedOldName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAction>("System.IO", "FileAction", "RenamedOldName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAction RenamedOldName
void System::IO::FileAction::_set_RenamedOldName(::System::IO::FileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_set_RenamedOldName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAction", "RenamedOldName", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAction RenamedNewName
::System::IO::FileAction System::IO::FileAction::_get_RenamedNewName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_get_RenamedNewName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileAction>("System.IO", "FileAction", "RenamedNewName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAction RenamedNewName
void System::IO::FileAction::_set_RenamedNewName(::System::IO::FileAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::_set_RenamedNewName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAction", "RenamedNewName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::FileAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemEventArgs
#include "System/IO/FileSystemEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.WatcherChangeTypes changeType
[[deprecated("Use field access instead!")]] ::System::IO::WatcherChangeTypes& System::IO::FileSystemEventArgs::dyn_changeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventArgs::dyn_changeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changeType"))->offset;
  return *reinterpret_cast<::System::IO::WatcherChangeTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String directory
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemEventArgs::dyn_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventArgs::dyn_directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemEventArgs::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventArgs::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileSystemEventHandler
#include "System/IO/FileSystemEventHandler.hpp"
// Including type: System.IO.FileSystemEventArgs
#include "System/IO/FileSystemEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystemEventHandler.Invoke
void System::IO::FileSystemEventHandler::Invoke(::Il2CppObject* sender, ::System::IO::FileSystemEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.IO.FileSystemEventHandler.BeginInvoke
::System::IAsyncResult* System::IO::FileSystemEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::IO::FileSystemEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.IO.FileSystemEventHandler.EndInvoke
void System::IO::FileSystemEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
// Including type: System.IO.FileSystemWatcher/System.IO.EventType
#include "System/IO/FileSystemWatcher_EventType.hpp"
// Including type: System.ComponentModel.ISynchronizeInvoke
#include "System/ComponentModel/ISynchronizeInvoke.hpp"
// Including type: System.IO.SearchPattern2
#include "System/IO/SearchPattern2.hpp"
// Including type: System.IO.FileSystemEventHandler
#include "System/IO/FileSystemEventHandler.hpp"
// Including type: System.IO.ErrorEventHandler
#include "System/IO/ErrorEventHandler.hpp"
// Including type: System.IO.RenamedEventHandler
#include "System/IO/RenamedEventHandler.hpp"
// Including type: System.IO.IFileWatcher
#include "System/IO/IFileWatcher.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IO.FileSystemEventArgs
#include "System/IO/FileSystemEventArgs.hpp"
// Including type: System.IO.RenamedEventArgs
#include "System/IO/RenamedEventArgs.hpp"
// Including type: System.IO.FileAction
#include "System/IO/FileAction.hpp"
// Including type: System.ComponentModel.ISite
#include "System/ComponentModel/ISite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IO.IFileWatcher watcher
::System::IO::IFileWatcher* System::IO::FileSystemWatcher::_get_watcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::_get_watcher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::IFileWatcher*>("System.IO", "FileSystemWatcher", "watcher"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.IFileWatcher watcher
void System::IO::FileSystemWatcher::_set_watcher(::System::IO::IFileWatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::_set_watcher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileSystemWatcher", "watcher", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object lockobj
::Il2CppObject* System::IO::FileSystemWatcher::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.IO", "FileSystemWatcher", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lockobj
void System::IO::FileSystemWatcher::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileSystemWatcher", "lockobj", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableRaisingEvents
[[deprecated("Use field access instead!")]] bool& System::IO::FileSystemWatcher::dyn_enableRaisingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_enableRaisingEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableRaisingEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String filter
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemWatcher::dyn_filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_filter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean includeSubdirectories
[[deprecated("Use field access instead!")]] bool& System::IO::FileSystemWatcher::dyn_includeSubdirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_includeSubdirectories");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeSubdirectories"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 internalBufferSize
[[deprecated("Use field access instead!")]] int& System::IO::FileSystemWatcher::dyn_internalBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_internalBufferSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalBufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.NotifyFilters notifyFilter
[[deprecated("Use field access instead!")]] ::System::IO::NotifyFilters& System::IO::FileSystemWatcher::dyn_notifyFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_notifyFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notifyFilter"))->offset;
  return *reinterpret_cast<::System::IO::NotifyFilters*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String path
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemWatcher::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fullpath
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemWatcher::dyn_fullpath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_fullpath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullpath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.ComponentModel.ISynchronizeInvoke synchronizingObject
[[deprecated("Use field access instead!")]] ::System::ComponentModel::ISynchronizeInvoke*& System::IO::FileSystemWatcher::dyn_synchronizingObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_synchronizingObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "synchronizingObject"))->offset;
  return *reinterpret_cast<::System::ComponentModel::ISynchronizeInvoke**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.WaitForChangedResult lastData
[[deprecated("Use field access instead!")]] ::System::IO::WaitForChangedResult& System::IO::FileSystemWatcher::dyn_lastData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_lastData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastData"))->offset;
  return *reinterpret_cast<::System::IO::WaitForChangedResult*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean waiting
[[deprecated("Use field access instead!")]] bool& System::IO::FileSystemWatcher::dyn_waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_waiting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waiting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.SearchPattern2 pattern
[[deprecated("Use field access instead!")]] ::System::IO::SearchPattern2*& System::IO::FileSystemWatcher::dyn_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern"))->offset;
  return *reinterpret_cast<::System::IO::SearchPattern2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::IO::FileSystemWatcher::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mangledFilter
[[deprecated("Use field access instead!")]] ::StringW& System::IO::FileSystemWatcher::dyn_mangledFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_mangledFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mangledFilter"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileSystemEventHandler Changed
[[deprecated("Use field access instead!")]] ::System::IO::FileSystemEventHandler*& System::IO::FileSystemWatcher::dyn_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_Changed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Changed"))->offset;
  return *reinterpret_cast<::System::IO::FileSystemEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileSystemEventHandler Created
[[deprecated("Use field access instead!")]] ::System::IO::FileSystemEventHandler*& System::IO::FileSystemWatcher::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::IO::FileSystemEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileSystemEventHandler Deleted
[[deprecated("Use field access instead!")]] ::System::IO::FileSystemEventHandler*& System::IO::FileSystemWatcher::dyn_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_Deleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Deleted"))->offset;
  return *reinterpret_cast<::System::IO::FileSystemEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.ErrorEventHandler Error
[[deprecated("Use field access instead!")]] ::System::IO::ErrorEventHandler*& System::IO::FileSystemWatcher::dyn_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_Error");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Error"))->offset;
  return *reinterpret_cast<::System::IO::ErrorEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.RenamedEventHandler Renamed
[[deprecated("Use field access instead!")]] ::System::IO::RenamedEventHandler*& System::IO::FileSystemWatcher::dyn_Renamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::dyn_Renamed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Renamed"))->offset;
  return *reinterpret_cast<::System::IO::RenamedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_Waiting
bool System::IO::FileSystemWatcher::get_Waiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_Waiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Waiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.set_Waiting
void System::IO::FileSystemWatcher::set_Waiting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::set_Waiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Waiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_MangledFilter
::StringW System::IO::FileSystemWatcher::get_MangledFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_MangledFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MangledFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_Pattern
::System::IO::SearchPattern2* System::IO::FileSystemWatcher::get_Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::SearchPattern2*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_FullPath
::StringW System::IO::FileSystemWatcher::get_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_FullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.set_EnableRaisingEvents
void System::IO::FileSystemWatcher::set_EnableRaisingEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::set_EnableRaisingEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableRaisingEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_IncludeSubdirectories
bool System::IO::FileSystemWatcher::get_IncludeSubdirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_IncludeSubdirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IncludeSubdirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.set_NotifyFilter
void System::IO::FileSystemWatcher::set_NotifyFilter(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::set_NotifyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NotifyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemWatcher.add_Changed
void System::IO::FileSystemWatcher::add_Changed(::System::IO::FileSystemEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::add_Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemWatcher.remove_Changed
void System::IO::FileSystemWatcher::remove_Changed(::System::IO::FileSystemEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::remove_Changed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Changed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemWatcher.InitWatcher
void System::IO::FileSystemWatcher::InitWatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::InitWatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitWatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.RaiseEvent
void System::IO::FileSystemWatcher::RaiseEvent(::System::Delegate* ev, ::System::EventArgs* arg, ::System::IO::FileSystemWatcher::EventType evtype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::RaiseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ev), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(evtype)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ev, arg, evtype);
}
// Autogenerated method: System.IO.FileSystemWatcher.OnChanged
void System::IO::FileSystemWatcher::OnChanged(::System::IO::FileSystemEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::OnChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.IO.FileSystemWatcher.OnCreated
void System::IO::FileSystemWatcher::OnCreated(::System::IO::FileSystemEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::OnCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.IO.FileSystemWatcher.OnDeleted
void System::IO::FileSystemWatcher::OnDeleted(::System::IO::FileSystemEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::OnDeleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.IO.FileSystemWatcher.OnRenamed
void System::IO::FileSystemWatcher::OnRenamed(::System::IO::RenamedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::OnRenamed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenamed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.IO.FileSystemWatcher.DispatchEvents
void System::IO::FileSystemWatcher::DispatchEvents(::System::IO::FileAction act, ::StringW filename, ByRef<::System::IO::RenamedEventArgs*> renamed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::DispatchEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(act), ::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(renamed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, act, filename, byref(renamed));
}
// Autogenerated method: System.IO.FileSystemWatcher.Start
void System::IO::FileSystemWatcher::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.Stop
void System::IO::FileSystemWatcher::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.InternalSupportsFSW
int System::IO::FileSystemWatcher::InternalSupportsFSW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::InternalSupportsFSW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemWatcher", "InternalSupportsFSW", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.get_Site
::System::ComponentModel::ISite* System::IO::FileSystemWatcher::get_Site() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::get_Site");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Site", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ComponentModel::ISite*, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher..cctor
void System::IO::FileSystemWatcher::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemWatcher", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.FileSystemWatcher.Dispose
void System::IO::FileSystemWatcher::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.FileSystemWatcher.Finalize
void System::IO::FileSystemWatcher::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemWatcher/System.IO.EventType
#include "System/IO/FileSystemWatcher_EventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileSystemWatcher/System.IO.EventType FileSystemEvent
::System::IO::FileSystemWatcher::EventType System::IO::FileSystemWatcher::EventType::_get_FileSystemEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_get_FileSystemEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileSystemWatcher::EventType>("System.IO", "FileSystemWatcher/EventType", "FileSystemEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileSystemWatcher/System.IO.EventType FileSystemEvent
void System::IO::FileSystemWatcher::EventType::_set_FileSystemEvent(::System::IO::FileSystemWatcher::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_set_FileSystemEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileSystemWatcher/EventType", "FileSystemEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileSystemWatcher/System.IO.EventType ErrorEvent
::System::IO::FileSystemWatcher::EventType System::IO::FileSystemWatcher::EventType::_get_ErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_get_ErrorEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileSystemWatcher::EventType>("System.IO", "FileSystemWatcher/EventType", "ErrorEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileSystemWatcher/System.IO.EventType ErrorEvent
void System::IO::FileSystemWatcher::EventType::_set_ErrorEvent(::System::IO::FileSystemWatcher::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_set_ErrorEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileSystemWatcher/EventType", "ErrorEvent", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileSystemWatcher/System.IO.EventType RenameEvent
::System::IO::FileSystemWatcher::EventType System::IO::FileSystemWatcher::EventType::_get_RenameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_get_RenameEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::FileSystemWatcher::EventType>("System.IO", "FileSystemWatcher/EventType", "RenameEvent"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileSystemWatcher/System.IO.EventType RenameEvent
void System::IO::FileSystemWatcher::EventType::_set_RenameEvent(::System::IO::FileSystemWatcher::EventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::_set_RenameEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileSystemWatcher/EventType", "RenameEvent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::FileSystemWatcher::EventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::FileSystemWatcher::EventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.IFileWatcher
#include "System/IO/IFileWatcher.hpp"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.IFileWatcher.StartDispatching
void System::IO::IFileWatcher::StartDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::IFileWatcher::StartDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated method: System.IO.IFileWatcher.StopDispatching
void System::IO::IFileWatcher::StopDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::IFileWatcher::StopDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.IODescriptionAttribute
#include "System/IO/IODescriptionAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.IODescriptionAttribute.get_Description
::StringW System::IO::IODescriptionAttribute::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::IODescriptionAttribute::get_Description");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.NotifyFilters
#include "System/IO/NotifyFilters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters Attributes
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_Attributes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "Attributes"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters Attributes
void System::IO::NotifyFilters::_set_Attributes(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_Attributes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "Attributes", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters CreationTime
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_CreationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "CreationTime"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters CreationTime
void System::IO::NotifyFilters::_set_CreationTime(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_CreationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "CreationTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters DirectoryName
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_DirectoryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_DirectoryName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "DirectoryName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters DirectoryName
void System::IO::NotifyFilters::_set_DirectoryName(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_DirectoryName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "DirectoryName", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters FileName
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_FileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "FileName"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters FileName
void System::IO::NotifyFilters::_set_FileName(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_FileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "FileName", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters LastAccess
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_LastAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_LastAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "LastAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters LastAccess
void System::IO::NotifyFilters::_set_LastAccess(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_LastAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "LastAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters LastWrite
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_LastWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_LastWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "LastWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters LastWrite
void System::IO::NotifyFilters::_set_LastWrite(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_LastWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "LastWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters Security
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_Security() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_Security");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "Security"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters Security
void System::IO::NotifyFilters::_set_Security(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_Security");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "Security", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.NotifyFilters Size
::System::IO::NotifyFilters System::IO::NotifyFilters::_get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_get_Size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::NotifyFilters>("System.IO", "NotifyFilters", "Size"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.NotifyFilters Size
void System::IO::NotifyFilters::_set_Size(::System::IO::NotifyFilters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::_set_Size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NotifyFilters", "Size", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::NotifyFilters::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NotifyFilters::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.NullFileWatcher
#include "System/IO/NullFileWatcher.hpp"
// Including type: System.IO.FileSystemWatcher
#include "System/IO/FileSystemWatcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IO.IFileWatcher instance
::System::IO::IFileWatcher* System::IO::NullFileWatcher::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NullFileWatcher::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::IFileWatcher*>("System.IO", "NullFileWatcher", "instance"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.IFileWatcher instance
void System::IO::NullFileWatcher::_set_instance(::System::IO::IFileWatcher* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NullFileWatcher::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "NullFileWatcher", "instance", value));
}
// Autogenerated method: System.IO.NullFileWatcher.StartDispatching
void System::IO::NullFileWatcher::StartDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NullFileWatcher::StartDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated method: System.IO.NullFileWatcher.StopDispatching
void System::IO::NullFileWatcher::StopDispatching(::System::IO::FileSystemWatcher* fsw) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NullFileWatcher::StopDispatching");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopDispatching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fsw)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fsw);
}
// Autogenerated method: System.IO.NullFileWatcher.GetInstance
bool System::IO::NullFileWatcher::GetInstance(ByRef<::System::IO::IFileWatcher*> watcher) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::NullFileWatcher::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "NullFileWatcher", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::IO::IFileWatcher*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(watcher));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.RenamedEventArgs
#include "System/IO/RenamedEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String oldName
[[deprecated("Use field access instead!")]] ::StringW& System::IO::RenamedEventArgs::dyn_oldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::RenamedEventArgs::dyn_oldName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String oldFullPath
[[deprecated("Use field access instead!")]] ::StringW& System::IO::RenamedEventArgs::dyn_oldFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::RenamedEventArgs::dyn_oldFullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldFullPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.RenamedEventHandler
#include "System/IO/RenamedEventHandler.hpp"
// Including type: System.IO.RenamedEventArgs
#include "System/IO/RenamedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.RenamedEventHandler.Invoke
void System::IO::RenamedEventHandler::Invoke(::Il2CppObject* sender, ::System::IO::RenamedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::RenamedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.IO.RenamedEventHandler.BeginInvoke
::System::IAsyncResult* System::IO::RenamedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::IO::RenamedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::RenamedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.IO.RenamedEventHandler.EndInvoke
void System::IO::RenamedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::RenamedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchPattern2
#include "System/IO/SearchPattern2.hpp"
// Including type: System.IO.SearchPattern2/System.IO.Op
#include "System/IO/SearchPattern2_Op.hpp"
// Including type: System.IO.SearchPattern2/System.IO.OpCode
#include "System/IO/SearchPattern2_OpCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Char[] WildcardChars
::ArrayW<::Il2CppChar> System::IO::SearchPattern2::_get_WildcardChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::_get_WildcardChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "SearchPattern2", "WildcardChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] WildcardChars
void System::IO::SearchPattern2::_set_WildcardChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::_set_WildcardChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2", "WildcardChars", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] InvalidChars
::ArrayW<::Il2CppChar> System::IO::SearchPattern2::_get_InvalidChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::_get_InvalidChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "SearchPattern2", "InvalidChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] InvalidChars
void System::IO::SearchPattern2::_set_InvalidChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::_set_InvalidChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2", "InvalidChars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.SearchPattern2/System.IO.Op ops
[[deprecated("Use field access instead!")]] ::System::IO::SearchPattern2::Op*& System::IO::SearchPattern2::dyn_ops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::dyn_ops");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ops"))->offset;
  return *reinterpret_cast<::System::IO::SearchPattern2::Op**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignore
[[deprecated("Use field access instead!")]] bool& System::IO::SearchPattern2::dyn_ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::dyn_ignore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignore"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasWildcard
[[deprecated("Use field access instead!")]] bool& System::IO::SearchPattern2::dyn_hasWildcard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::dyn_hasWildcard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasWildcard"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String pattern
[[deprecated("Use field access instead!")]] ::StringW& System::IO::SearchPattern2::dyn_pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::dyn_pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.SearchPattern2.get_HasWildcard
bool System::IO::SearchPattern2::get_HasWildcard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::get_HasWildcard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasWildcard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.SearchPattern2..cctor
void System::IO::SearchPattern2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "SearchPattern2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.SearchPattern2.Compile
void System::IO::SearchPattern2::Compile(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchPattern2/System.IO.Op
#include "System/IO/SearchPattern2_Op.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IO.SearchPattern2/System.IO.OpCode Code
[[deprecated("Use field access instead!")]] ::System::IO::SearchPattern2::OpCode& System::IO::SearchPattern2::Op::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::Op::dyn_Code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<::System::IO::SearchPattern2::OpCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Argument
[[deprecated("Use field access instead!")]] ::StringW& System::IO::SearchPattern2::Op::dyn_Argument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::Op::dyn_Argument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Argument"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.SearchPattern2/System.IO.Op Next
[[deprecated("Use field access instead!")]] ::System::IO::SearchPattern2::Op*& System::IO::SearchPattern2::Op::dyn_Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::Op::dyn_Next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Next"))->offset;
  return *reinterpret_cast<::System::IO::SearchPattern2::Op**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchPattern2/System.IO.OpCode
#include "System/IO/SearchPattern2_OpCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchPattern2/System.IO.OpCode ExactString
::System::IO::SearchPattern2::OpCode System::IO::SearchPattern2::OpCode::_get_ExactString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_get_ExactString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchPattern2::OpCode>("System.IO", "SearchPattern2/OpCode", "ExactString"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchPattern2/System.IO.OpCode ExactString
void System::IO::SearchPattern2::OpCode::_set_ExactString(::System::IO::SearchPattern2::OpCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_set_ExactString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2/OpCode", "ExactString", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchPattern2/System.IO.OpCode AnyChar
::System::IO::SearchPattern2::OpCode System::IO::SearchPattern2::OpCode::_get_AnyChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_get_AnyChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchPattern2::OpCode>("System.IO", "SearchPattern2/OpCode", "AnyChar"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchPattern2/System.IO.OpCode AnyChar
void System::IO::SearchPattern2::OpCode::_set_AnyChar(::System::IO::SearchPattern2::OpCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_set_AnyChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2/OpCode", "AnyChar", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchPattern2/System.IO.OpCode AnyString
::System::IO::SearchPattern2::OpCode System::IO::SearchPattern2::OpCode::_get_AnyString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_get_AnyString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchPattern2::OpCode>("System.IO", "SearchPattern2/OpCode", "AnyString"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchPattern2/System.IO.OpCode AnyString
void System::IO::SearchPattern2::OpCode::_set_AnyString(::System::IO::SearchPattern2::OpCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_set_AnyString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2/OpCode", "AnyString", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchPattern2/System.IO.OpCode End
::System::IO::SearchPattern2::OpCode System::IO::SearchPattern2::OpCode::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchPattern2::OpCode>("System.IO", "SearchPattern2/OpCode", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchPattern2/System.IO.OpCode End
void System::IO::SearchPattern2::OpCode::_set_End(::System::IO::SearchPattern2::OpCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2/OpCode", "End", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchPattern2/System.IO.OpCode True
::System::IO::SearchPattern2::OpCode System::IO::SearchPattern2::OpCode::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::SearchPattern2::OpCode>("System.IO", "SearchPattern2/OpCode", "True"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchPattern2/System.IO.OpCode True
void System::IO::SearchPattern2::OpCode::_set_True(::System::IO::SearchPattern2::OpCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchPattern2/OpCode", "True", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::SearchPattern2::OpCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::SearchPattern2::OpCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.WaitForChangedResult
#include "System/IO/WaitForChangedResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.WatcherChangeTypes changeType
[[deprecated("Use field access instead!")]] ::System::IO::WatcherChangeTypes& System::IO::WaitForChangedResult::dyn_changeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::dyn_changeType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "changeType"))->offset;
  return *reinterpret_cast<::System::IO::WatcherChangeTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::IO::WaitForChangedResult::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String oldName
[[deprecated("Use field access instead!")]] ::StringW& System::IO::WaitForChangedResult::dyn_oldName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::dyn_oldName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean timedOut
[[deprecated("Use field access instead!")]] bool& System::IO::WaitForChangedResult::dyn_timedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::dyn_timedOut");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timedOut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.WaitForChangedResult.set_ChangeType
void System::IO::WaitForChangedResult::set_ChangeType(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::set_ChangeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ChangeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.WaitForChangedResult.set_Name
void System::IO::WaitForChangedResult::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.WaitForChangedResult.set_OldName
void System::IO::WaitForChangedResult::set_OldName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WaitForChangedResult::set_OldName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_OldName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.WatcherChangeTypes
#include "System/IO/WatcherChangeTypes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.WatcherChangeTypes All
::System::IO::WatcherChangeTypes System::IO::WatcherChangeTypes::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::WatcherChangeTypes>("System.IO", "WatcherChangeTypes", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.WatcherChangeTypes All
void System::IO::WatcherChangeTypes::_set_All(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "WatcherChangeTypes", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.WatcherChangeTypes Changed
::System::IO::WatcherChangeTypes System::IO::WatcherChangeTypes::_get_Changed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_get_Changed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::WatcherChangeTypes>("System.IO", "WatcherChangeTypes", "Changed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.WatcherChangeTypes Changed
void System::IO::WatcherChangeTypes::_set_Changed(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_set_Changed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "WatcherChangeTypes", "Changed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.WatcherChangeTypes Created
::System::IO::WatcherChangeTypes System::IO::WatcherChangeTypes::_get_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_get_Created");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::WatcherChangeTypes>("System.IO", "WatcherChangeTypes", "Created"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.WatcherChangeTypes Created
void System::IO::WatcherChangeTypes::_set_Created(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_set_Created");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "WatcherChangeTypes", "Created", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.WatcherChangeTypes Deleted
::System::IO::WatcherChangeTypes System::IO::WatcherChangeTypes::_get_Deleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_get_Deleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::WatcherChangeTypes>("System.IO", "WatcherChangeTypes", "Deleted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.WatcherChangeTypes Deleted
void System::IO::WatcherChangeTypes::_set_Deleted(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_set_Deleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "WatcherChangeTypes", "Deleted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.WatcherChangeTypes Renamed
::System::IO::WatcherChangeTypes System::IO::WatcherChangeTypes::_get_Renamed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_get_Renamed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::WatcherChangeTypes>("System.IO", "WatcherChangeTypes", "Renamed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.WatcherChangeTypes Renamed
void System::IO::WatcherChangeTypes::_set_Renamed(::System::IO::WatcherChangeTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::_set_Renamed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "WatcherChangeTypes", "Renamed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::WatcherChangeTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::WatcherChangeTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.CompressionMode
#include "System/IO/Compression/CompressionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.CompressionMode Decompress
::System::IO::Compression::CompressionMode System::IO::Compression::CompressionMode::_get_Decompress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CompressionMode::_get_Decompress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::CompressionMode>("System.IO.Compression", "CompressionMode", "Decompress"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.CompressionMode Decompress
void System::IO::Compression::CompressionMode::_set_Decompress(::System::IO::Compression::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CompressionMode::_set_Decompress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "CompressionMode", "Decompress", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.Compression.CompressionMode Compress
::System::IO::Compression::CompressionMode System::IO::Compression::CompressionMode::_get_Compress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CompressionMode::_get_Compress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::Compression::CompressionMode>("System.IO.Compression", "CompressionMode", "Compress"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.Compression.CompressionMode Compress
void System::IO::Compression::CompressionMode::_set_Compress(::System::IO::Compression::CompressionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CompressionMode::_set_Compress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO.Compression", "CompressionMode", "Compress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::IO::Compression::CompressionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::CompressionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.GZipStream
#include "System/IO/Compression/GZipStream.hpp"
// Including type: System.IO.Compression.DeflateStream
#include "System/IO/Compression/DeflateStream.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateStream _deflateStream
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateStream*& System::IO::Compression::GZipStream::dyn__deflateStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::dyn__deflateStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deflateStream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.GZipStream.CheckDeflateStream
void System::IO::Compression::GZipStream::CheckDeflateStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::CheckDeflateStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDeflateStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.ThrowStreamClosedException
void System::IO::Compression::GZipStream::ThrowStreamClosedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::ThrowStreamClosedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "GZipStream", "ThrowStreamClosedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanRead
bool System::IO::Compression::GZipStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanWrite
bool System::IO::Compression::GZipStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_CanSeek
bool System::IO::Compression::GZipStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Length
int64_t System::IO::Compression::GZipStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.get_Position
int64_t System::IO::Compression::GZipStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.set_Position
void System::IO::Compression::GZipStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.GZipStream.Flush
void System::IO::Compression::GZipStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.Seek
int64_t System::IO::Compression::GZipStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.GZipStream.SetLength
void System::IO::Compression::GZipStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadByte
int System::IO::Compression::GZipStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginRead
::System::IAsyncResult* System::IO::Compression::GZipStream::BeginRead(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.GZipStream.EndRead
int System::IO::Compression::GZipStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.GZipStream.Read
int System::IO::Compression::GZipStream::Read(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.GZipStream.BeginWrite
::System::IAsyncResult* System::IO::Compression::GZipStream::BeginWrite(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.GZipStream.EndWrite
void System::IO::Compression::GZipStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.GZipStream.Write
void System::IO::Compression::GZipStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.GZipStream.Dispose
void System::IO::Compression::GZipStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.GZipStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::IO::Compression::GZipStream::ReadAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.GZipStream.WriteAsync
::System::Threading::Tasks::Task* System::IO::Compression::GZipStream::WriteAsync(::ArrayW<uint8_t> array, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, array, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Compression.GZipStream.CopyToAsync
::System::Threading::Tasks::Task* System::IO::Compression::GZipStream::CopyToAsync(::System::IO::Stream* destination, int bufferSize, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::GZipStream::CopyToAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, destination, bufferSize, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateStream
#include "System/IO/Compression/DeflateStream.hpp"
// Including type: System.IO.Compression.DeflateStream/System.IO.Compression.ReadMethod
#include "System/IO/Compression/DeflateStream_ReadMethod.hpp"
// Including type: System.IO.Compression.DeflateStream/System.IO.Compression.WriteMethod
#include "System/IO/Compression/DeflateStream_WriteMethod.hpp"
// Including type: System.IO.Compression.DeflateStreamNative
#include "System/IO/Compression/DeflateStreamNative.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream base_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::DeflateStream::dyn_base_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::dyn_base_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.CompressionMode mode
[[deprecated("Use field access instead!")]] ::System::IO::Compression::CompressionMode& System::IO::Compression::DeflateStream::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::System::IO::Compression::CompressionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leaveOpen
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateStream::dyn_leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::dyn_leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateStream::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateStreamNative native
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateStreamNative*& System::IO::Compression::DeflateStream::dyn_native() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::dyn_native");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "native"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateStreamNative**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateStream.ReadInternal
int System::IO::Compression::DeflateStream::ReadInternal(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream.WriteInternal
void System::IO::Compression::DeflateStream::WriteInternal(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream.get_CanRead
bool System::IO::Compression::DeflateStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.get_CanSeek
bool System::IO::Compression::DeflateStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.get_CanWrite
bool System::IO::Compression::DeflateStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.get_Length
int64_t System::IO::Compression::DeflateStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.get_Position
int64_t System::IO::Compression::DeflateStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.set_Position
void System::IO::Compression::DeflateStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.IO.Compression.DeflateStream.Dispose
void System::IO::Compression::DeflateStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateStream.Read
int System::IO::Compression::DeflateStream::Read(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream.Write
void System::IO::Compression::DeflateStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream.Flush
void System::IO::Compression::DeflateStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStream.BeginRead
::System::IAsyncResult* System::IO::Compression::DeflateStream::BeginRead(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateStream.BeginWrite
::System::IAsyncResult* System::IO::Compression::DeflateStream::BeginWrite(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.IO.Compression.DeflateStream.EndRead
int System::IO::Compression::DeflateStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.DeflateStream.EndWrite
void System::IO::Compression::DeflateStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Compression.DeflateStream.Seek
int64_t System::IO::Compression::DeflateStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Compression.DeflateStream.SetLength
void System::IO::Compression::DeflateStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateStream/System.IO.Compression.ReadMethod
#include "System/IO/Compression/DeflateStream_ReadMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.ReadMethod.Invoke
int System::IO::Compression::DeflateStream::ReadMethod::Invoke(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::ReadMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.ReadMethod.BeginInvoke
::System::IAsyncResult* System::IO::Compression::DeflateStream::ReadMethod::BeginInvoke(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::ReadMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, callback, object);
}
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.ReadMethod.EndInvoke
int System::IO::Compression::DeflateStream::ReadMethod::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::ReadMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateStream/System.IO.Compression.WriteMethod
#include "System/IO/Compression/DeflateStream_WriteMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.WriteMethod.Invoke
void System::IO::Compression::DeflateStream::WriteMethod::Invoke(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::WriteMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.WriteMethod.BeginInvoke
::System::IAsyncResult* System::IO::Compression::DeflateStream::WriteMethod::BeginInvoke(::ArrayW<uint8_t> array, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::WriteMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, array, offset, count, callback, object);
}
// Autogenerated method: System.IO.Compression.DeflateStream/System.IO.Compression.WriteMethod.EndInvoke
void System::IO::Compression::DeflateStream::WriteMethod::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStream::WriteMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateStreamNative
#include "System/IO/Compression/DeflateStreamNative.hpp"
// Including type: System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite
#include "System/IO/Compression/DeflateStreamNative_UnmanagedReadOrWrite.hpp"
// Including type: System.IO.Compression.DeflateStreamNative/System.IO.Compression.SafeDeflateStreamHandle
#include "System/IO/Compression/DeflateStreamNative_SafeDeflateStreamHandle.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Compression.CompressionMode
#include "System/IO/Compression/CompressionMode.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite feeder
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite*& System::IO::Compression::DeflateStreamNative::dyn_feeder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_feeder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feeder"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream base_stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::IO::Compression::DeflateStreamNative::dyn_base_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_base_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "base_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Compression.DeflateStreamNative/System.IO.Compression.SafeDeflateStreamHandle z_stream
[[deprecated("Use field access instead!")]] ::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle*& System::IO::Compression::DeflateStreamNative::dyn_z_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_z_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z_stream"))->offset;
  return *reinterpret_cast<::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle data
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& System::IO::Compression::DeflateStreamNative::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::IO::Compression::DeflateStreamNative::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] io_buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::IO::Compression::DeflateStreamNative::dyn_io_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::dyn_io_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "io_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.Create
::System::IO::Compression::DeflateStreamNative* System::IO::Compression::DeflateStreamNative::Create(::System::IO::Stream* compressedStream, ::System::IO::Compression::CompressionMode mode, bool gzip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compressedStream), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(gzip)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateStreamNative*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compressedStream, mode, gzip);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.Dispose
void System::IO::Compression::DeflateStreamNative::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.Flush
void System::IO::Compression::DeflateStreamNative::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.ReadZStream
int System::IO::Compression::DeflateStreamNative::ReadZStream(::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::ReadZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.WriteZStream
void System::IO::Compression::DeflateStreamNative::WriteZStream(::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::WriteZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.UnmanagedRead
int System::IO::Compression::DeflateStreamNative::UnmanagedRead(::System::IntPtr buffer, int length, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "UnmanagedRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, data);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.UnmanagedRead
int System::IO::Compression::DeflateStreamNative::UnmanagedRead(::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmanagedRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.UnmanagedWrite
int System::IO::Compression::DeflateStreamNative::UnmanagedWrite(::System::IntPtr buffer, int length, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "UnmanagedWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, length, data);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.UnmanagedWrite
int System::IO::Compression::DeflateStreamNative::UnmanagedWrite(::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmanagedWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.CheckResult
void System::IO::Compression::DeflateStreamNative::CheckResult(int result, ::StringW where) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::CheckResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "CheckResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(where)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, result, where);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.CreateZStream
::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle* System::IO::Compression::DeflateStreamNative::CreateZStream(::System::IO::Compression::CompressionMode compress, bool gzip, ::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite* feeder, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::CreateZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "CreateZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(compress), ::il2cpp_utils::ExtractType(gzip), ::il2cpp_utils::ExtractType(feeder), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, compress, gzip, feeder, data);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.CloseZStream
int System::IO::Compression::DeflateStreamNative::CloseZStream(::System::IntPtr stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::CloseZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "CloseZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.Flush
int System::IO::Compression::DeflateStreamNative::Flush(::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.ReadZStream
int System::IO::Compression::DeflateStreamNative::ReadZStream(::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle* stream, ::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::ReadZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "ReadZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.WriteZStream
int System::IO::Compression::DeflateStreamNative::WriteZStream(::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle* stream, ::System::IntPtr buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::WriteZStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO.Compression", "DeflateStreamNative", "WriteZStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, buffer, length);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative.Finalize
void System::IO::Compression::DeflateStreamNative::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite
#include "System/IO/Compression/DeflateStreamNative_UnmanagedReadOrWrite.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite.Invoke
int System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::Invoke(::System::IntPtr buffer, int length, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, length, data);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite.BeginInvoke
::System::IAsyncResult* System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::BeginInvoke(::System::IntPtr buffer, int length, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, length, data, callback, object);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative/System.IO.Compression.UnmanagedReadOrWrite.EndInvoke
int System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::UnmanagedReadOrWrite::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Compression.DeflateStreamNative/System.IO.Compression.SafeDeflateStreamHandle
#include "System/IO/Compression/DeflateStreamNative_SafeDeflateStreamHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Compression.DeflateStreamNative/System.IO.Compression.SafeDeflateStreamHandle.get_IsInvalid
bool System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::get_IsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::get_IsInvalid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.IO.Compression.DeflateStreamNative/System.IO.Compression.SafeDeflateStreamHandle.ReleaseHandle
bool System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::IO::Compression::DeflateStreamNative::SafeDeflateStreamHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.HttpStatusDescription
#include "System/Net/HttpStatusDescription.hpp"
// Including type: System.Net.HttpStatusCode
#include "System/Net/HttpStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.HttpStatusDescription.Get
::StringW System::Net::HttpStatusDescription::Get(::System::Net::HttpStatusCode code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStatusDescription::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpStatusDescription", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Net.HttpStatusDescription.Get
::StringW System::Net::HttpStatusDescription::Get(int code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::HttpStatusDescription::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "HttpStatusDescription", "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, code);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.SecurityProtocolType
#include "System/Net/SecurityProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.SecurityProtocolType SystemDefault
::System::Net::SecurityProtocolType System::Net::SecurityProtocolType::_get_SystemDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_get_SystemDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SecurityProtocolType>("System.Net", "SecurityProtocolType", "SystemDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.SecurityProtocolType SystemDefault
void System::Net::SecurityProtocolType::_set_SystemDefault(::System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_set_SystemDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SecurityProtocolType", "SystemDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.SecurityProtocolType Ssl3
::System::Net::SecurityProtocolType System::Net::SecurityProtocolType::_get_Ssl3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_get_Ssl3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SecurityProtocolType>("System.Net", "SecurityProtocolType", "Ssl3"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.SecurityProtocolType Ssl3
void System::Net::SecurityProtocolType::_set_Ssl3(::System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_set_Ssl3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SecurityProtocolType", "Ssl3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.SecurityProtocolType Tls
::System::Net::SecurityProtocolType System::Net::SecurityProtocolType::_get_Tls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_get_Tls");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SecurityProtocolType>("System.Net", "SecurityProtocolType", "Tls"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.SecurityProtocolType Tls
void System::Net::SecurityProtocolType::_set_Tls(::System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_set_Tls");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SecurityProtocolType", "Tls", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.SecurityProtocolType Tls11
::System::Net::SecurityProtocolType System::Net::SecurityProtocolType::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SecurityProtocolType>("System.Net", "SecurityProtocolType", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.SecurityProtocolType Tls11
void System::Net::SecurityProtocolType::_set_Tls11(::System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SecurityProtocolType", "Tls11", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.SecurityProtocolType Tls12
::System::Net::SecurityProtocolType System::Net::SecurityProtocolType::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SecurityProtocolType>("System.Net", "SecurityProtocolType", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.SecurityProtocolType Tls12
void System::Net::SecurityProtocolType::_set_Tls12(::System::Net::SecurityProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SecurityProtocolType", "Tls12", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::SecurityProtocolType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SecurityProtocolType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.AuthenticationSchemes
#include "System/Net/AuthenticationSchemes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes None
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes None
void System::Net::AuthenticationSchemes::_set_None(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes Digest
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_Digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_Digest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "Digest"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes Digest
void System::Net::AuthenticationSchemes::_set_Digest(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_Digest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "Digest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes Negotiate
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_Negotiate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_Negotiate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "Negotiate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes Negotiate
void System::Net::AuthenticationSchemes::_set_Negotiate(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_Negotiate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "Negotiate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes Ntlm
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_Ntlm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_Ntlm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "Ntlm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes Ntlm
void System::Net::AuthenticationSchemes::_set_Ntlm(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_Ntlm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "Ntlm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes Basic
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes Basic
void System::Net::AuthenticationSchemes::_set_Basic(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes Anonymous
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes Anonymous
void System::Net::AuthenticationSchemes::_set_Anonymous(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "Anonymous", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.AuthenticationSchemes IntegratedWindowsAuthentication
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemes::_get_IntegratedWindowsAuthentication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_get_IntegratedWindowsAuthentication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::AuthenticationSchemes>("System.Net", "AuthenticationSchemes", "IntegratedWindowsAuthentication"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.AuthenticationSchemes IntegratedWindowsAuthentication
void System::Net::AuthenticationSchemes::_set_IntegratedWindowsAuthentication(::System::Net::AuthenticationSchemes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::_set_IntegratedWindowsAuthentication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "AuthenticationSchemes", "IntegratedWindowsAuthentication", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::AuthenticationSchemes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.AuthenticationSchemeSelector
#include "System/Net/AuthenticationSchemeSelector.hpp"
// Including type: System.Net.AuthenticationSchemes
#include "System/Net/AuthenticationSchemes.hpp"
// Including type: System.Net.HttpListenerRequest
#include "System/Net/HttpListenerRequest.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.AuthenticationSchemeSelector.Invoke
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemeSelector::Invoke(::System::Net::HttpListenerRequest* httpRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemeSelector::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(httpRequest)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AuthenticationSchemes, false>(this, ___internal__method, httpRequest);
}
// Autogenerated method: System.Net.AuthenticationSchemeSelector.BeginInvoke
::System::IAsyncResult* System::Net::AuthenticationSchemeSelector::BeginInvoke(::System::Net::HttpListenerRequest* httpRequest, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemeSelector::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(httpRequest), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, httpRequest, callback, object);
}
// Autogenerated method: System.Net.AuthenticationSchemeSelector.EndInvoke
::System::Net::AuthenticationSchemes System::Net::AuthenticationSchemeSelector::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::AuthenticationSchemeSelector::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::AuthenticationSchemes, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_Message
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Authorization::dyn_m_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::dyn_m_Message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Complete
[[deprecated("Use field access instead!")]] bool& System::Net::Authorization::dyn_m_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::dyn_m_Complete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Complete"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String ModuleAuthenticationType
[[deprecated("Use field access instead!")]] ::StringW& System::Net::Authorization::dyn_ModuleAuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::dyn_ModuleAuthenticationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ModuleAuthenticationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Net.Authorization.get_Message
::StringW System::Net::Authorization::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Authorization.get_Complete
bool System::Net::Authorization::get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::Authorization::get_Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.CredentialCache
#include "System/Net/CredentialCache.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.CredentialCache.get_DefaultCredentials
::System::Net::ICredentials* System::Net::CredentialCache::get_DefaultCredentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::CredentialCache::get_DefaultCredentials");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "CredentialCache", "get_DefaultCredentials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::ICredentials*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.SystemNetworkCredential
#include "System/Net/SystemNetworkCredential.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Net.SystemNetworkCredential defaultCredential
::System::Net::SystemNetworkCredential* System::Net::SystemNetworkCredential::_get_defaultCredential() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SystemNetworkCredential::_get_defaultCredential");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::SystemNetworkCredential*>("System.Net", "SystemNetworkCredential", "defaultCredential"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Net.SystemNetworkCredential defaultCredential
void System::Net::SystemNetworkCredential::_set_defaultCredential(::System::Net::SystemNetworkCredential* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SystemNetworkCredential::_set_defaultCredential");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "SystemNetworkCredential", "defaultCredential", value));
}
// Autogenerated method: System.Net.SystemNetworkCredential..cctor
void System::Net::SystemNetworkCredential::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::SystemNetworkCredential::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net", "SystemNetworkCredential", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
// Including type: System.Net.SocketAddress
#include "System/Net/SocketAddress.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.EndPoint.get_AddressFamily
::System::Net::Sockets::AddressFamily System::Net::EndPoint::get_AddressFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPoint::get_AddressFamily");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddressFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::Sockets::AddressFamily, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPoint.Serialize
::System::Net::SocketAddress* System::Net::EndPoint::Serialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPoint::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::SocketAddress*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.EndPoint.Create
::System::Net::EndPoint* System::Net::EndPoint::Create(::System::Net::SocketAddress* socketAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::EndPoint::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socketAddress)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::EndPoint*, false>(this, ___internal__method, socketAddress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.FtpStatusCode
#include "System/Net/FtpStatusCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode Undefined
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode Undefined
void System::Net::FtpStatusCode::_set_Undefined(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode RestartMarker
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_RestartMarker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_RestartMarker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "RestartMarker"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode RestartMarker
void System::Net::FtpStatusCode::_set_RestartMarker(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_RestartMarker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "RestartMarker", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ServiceTemporarilyNotAvailable
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ServiceTemporarilyNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ServiceTemporarilyNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ServiceTemporarilyNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ServiceTemporarilyNotAvailable
void System::Net::FtpStatusCode::_set_ServiceTemporarilyNotAvailable(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ServiceTemporarilyNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ServiceTemporarilyNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode DataAlreadyOpen
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_DataAlreadyOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_DataAlreadyOpen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "DataAlreadyOpen"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode DataAlreadyOpen
void System::Net::FtpStatusCode::_set_DataAlreadyOpen(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_DataAlreadyOpen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "DataAlreadyOpen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode OpeningData
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_OpeningData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_OpeningData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "OpeningData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode OpeningData
void System::Net::FtpStatusCode::_set_OpeningData(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_OpeningData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "OpeningData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode CommandOK
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_CommandOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_CommandOK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "CommandOK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode CommandOK
void System::Net::FtpStatusCode::_set_CommandOK(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_CommandOK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "CommandOK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode CommandExtraneous
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_CommandExtraneous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_CommandExtraneous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "CommandExtraneous"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode CommandExtraneous
void System::Net::FtpStatusCode::_set_CommandExtraneous(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_CommandExtraneous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "CommandExtraneous", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode DirectoryStatus
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_DirectoryStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_DirectoryStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "DirectoryStatus"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode DirectoryStatus
void System::Net::FtpStatusCode::_set_DirectoryStatus(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_DirectoryStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "DirectoryStatus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode FileStatus
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_FileStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_FileStatus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "FileStatus"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode FileStatus
void System::Net::FtpStatusCode::_set_FileStatus(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_FileStatus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "FileStatus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode SystemType
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_SystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_SystemType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "SystemType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode SystemType
void System::Net::FtpStatusCode::_set_SystemType(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_SystemType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "SystemType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode SendUserCommand
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_SendUserCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_SendUserCommand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "SendUserCommand"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode SendUserCommand
void System::Net::FtpStatusCode::_set_SendUserCommand(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_SendUserCommand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "SendUserCommand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ClosingControl
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ClosingControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ClosingControl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ClosingControl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ClosingControl
void System::Net::FtpStatusCode::_set_ClosingControl(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ClosingControl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ClosingControl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ClosingData
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ClosingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ClosingData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ClosingData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ClosingData
void System::Net::FtpStatusCode::_set_ClosingData(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ClosingData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ClosingData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode EnteringPassive
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_EnteringPassive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_EnteringPassive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "EnteringPassive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode EnteringPassive
void System::Net::FtpStatusCode::_set_EnteringPassive(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_EnteringPassive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "EnteringPassive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode LoggedInProceed
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_LoggedInProceed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_LoggedInProceed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "LoggedInProceed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode LoggedInProceed
void System::Net::FtpStatusCode::_set_LoggedInProceed(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_LoggedInProceed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "LoggedInProceed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ServerWantsSecureSession
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ServerWantsSecureSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ServerWantsSecureSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ServerWantsSecureSession"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ServerWantsSecureSession
void System::Net::FtpStatusCode::_set_ServerWantsSecureSession(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ServerWantsSecureSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ServerWantsSecureSession", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode FileActionOK
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_FileActionOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_FileActionOK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "FileActionOK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode FileActionOK
void System::Net::FtpStatusCode::_set_FileActionOK(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_FileActionOK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "FileActionOK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode PathnameCreated
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_PathnameCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_PathnameCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "PathnameCreated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode PathnameCreated
void System::Net::FtpStatusCode::_set_PathnameCreated(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_PathnameCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "PathnameCreated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode SendPasswordCommand
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_SendPasswordCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_SendPasswordCommand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "SendPasswordCommand"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode SendPasswordCommand
void System::Net::FtpStatusCode::_set_SendPasswordCommand(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_SendPasswordCommand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "SendPasswordCommand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode NeedLoginAccount
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_NeedLoginAccount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_NeedLoginAccount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "NeedLoginAccount"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode NeedLoginAccount
void System::Net::FtpStatusCode::_set_NeedLoginAccount(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_NeedLoginAccount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "NeedLoginAccount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode FileCommandPending
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_FileCommandPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_FileCommandPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "FileCommandPending"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode FileCommandPending
void System::Net::FtpStatusCode::_set_FileCommandPending(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_FileCommandPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "FileCommandPending", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ServiceNotAvailable
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ServiceNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ServiceNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ServiceNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ServiceNotAvailable
void System::Net::FtpStatusCode::_set_ServiceNotAvailable(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ServiceNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ServiceNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode CantOpenData
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_CantOpenData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_CantOpenData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "CantOpenData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode CantOpenData
void System::Net::FtpStatusCode::_set_CantOpenData(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_CantOpenData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "CantOpenData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ConnectionClosed
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ConnectionClosed
void System::Net::FtpStatusCode::_set_ConnectionClosed(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ConnectionClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionNotTakenFileUnavailableOrBusy
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionNotTakenFileUnavailableOrBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionNotTakenFileUnavailableOrBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionNotTakenFileUnavailableOrBusy"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionNotTakenFileUnavailableOrBusy
void System::Net::FtpStatusCode::_set_ActionNotTakenFileUnavailableOrBusy(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionNotTakenFileUnavailableOrBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionNotTakenFileUnavailableOrBusy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionAbortedLocalProcessingError
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionAbortedLocalProcessingError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionAbortedLocalProcessingError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionAbortedLocalProcessingError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionAbortedLocalProcessingError
void System::Net::FtpStatusCode::_set_ActionAbortedLocalProcessingError(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionAbortedLocalProcessingError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionAbortedLocalProcessingError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionNotTakenInsufficientSpace
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionNotTakenInsufficientSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionNotTakenInsufficientSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionNotTakenInsufficientSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionNotTakenInsufficientSpace
void System::Net::FtpStatusCode::_set_ActionNotTakenInsufficientSpace(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionNotTakenInsufficientSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionNotTakenInsufficientSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode CommandSyntaxError
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_CommandSyntaxError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_CommandSyntaxError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "CommandSyntaxError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode CommandSyntaxError
void System::Net::FtpStatusCode::_set_CommandSyntaxError(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_CommandSyntaxError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "CommandSyntaxError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ArgumentSyntaxError
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ArgumentSyntaxError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ArgumentSyntaxError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ArgumentSyntaxError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ArgumentSyntaxError
void System::Net::FtpStatusCode::_set_ArgumentSyntaxError(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ArgumentSyntaxError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ArgumentSyntaxError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode CommandNotImplemented
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_CommandNotImplemented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_CommandNotImplemented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "CommandNotImplemented"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode CommandNotImplemented
void System::Net::FtpStatusCode::_set_CommandNotImplemented(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_CommandNotImplemented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "CommandNotImplemented", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode BadCommandSequence
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_BadCommandSequence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_BadCommandSequence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "BadCommandSequence"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode BadCommandSequence
void System::Net::FtpStatusCode::_set_BadCommandSequence(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_BadCommandSequence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "BadCommandSequence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode NotLoggedIn
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_NotLoggedIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_NotLoggedIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "NotLoggedIn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode NotLoggedIn
void System::Net::FtpStatusCode::_set_NotLoggedIn(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_NotLoggedIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "NotLoggedIn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode AccountNeeded
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_AccountNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_AccountNeeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "AccountNeeded"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode AccountNeeded
void System::Net::FtpStatusCode::_set_AccountNeeded(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_AccountNeeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "AccountNeeded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionNotTakenFileUnavailable
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionNotTakenFileUnavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionNotTakenFileUnavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionNotTakenFileUnavailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionNotTakenFileUnavailable
void System::Net::FtpStatusCode::_set_ActionNotTakenFileUnavailable(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionNotTakenFileUnavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionNotTakenFileUnavailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionAbortedUnknownPageType
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionAbortedUnknownPageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionAbortedUnknownPageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionAbortedUnknownPageType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionAbortedUnknownPageType
void System::Net::FtpStatusCode::_set_ActionAbortedUnknownPageType(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionAbortedUnknownPageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionAbortedUnknownPageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode FileActionAborted
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_FileActionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_FileActionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "FileActionAborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode FileActionAborted
void System::Net::FtpStatusCode::_set_FileActionAborted(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_FileActionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "FileActionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.FtpStatusCode ActionNotTakenFilenameNotAllowed
::System::Net::FtpStatusCode System::Net::FtpStatusCode::_get_ActionNotTakenFilenameNotAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_get_ActionNotTakenFilenameNotAllowed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Net::FtpStatusCode>("System.Net", "FtpStatusCode", "ActionNotTakenFilenameNotAllowed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.FtpStatusCode ActionNotTakenFilenameNotAllowed
void System::Net::FtpStatusCode::_set_ActionNotTakenFilenameNotAllowed(::System::Net::FtpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::_set_ActionNotTakenFilenameNotAllowed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net", "FtpStatusCode", "ActionNotTakenFilenameNotAllowed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Net::FtpStatusCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Net::FtpStatusCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
