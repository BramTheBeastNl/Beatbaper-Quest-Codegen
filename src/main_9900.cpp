// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.InitInputType
#include "System/Xml/XmlTextReaderImpl_InitInputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType UriString
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_UriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_UriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "UriString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType UriString
void System::Xml::XmlTextReaderImpl::InitInputType::_set_UriString(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_UriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "UriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType Stream
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType Stream
void System::Xml::XmlTextReaderImpl::InitInputType::_set_Stream(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "Stream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType TextReader
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_TextReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_TextReader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "TextReader"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType TextReader
void System::Xml::XmlTextReaderImpl::InitInputType::_set_TextReader(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_TextReader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "TextReader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType Invalid
::System::Xml::XmlTextReaderImpl::InitInputType System::Xml::XmlTextReaderImpl::InitInputType::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::InitInputType>("System.Xml", "XmlTextReaderImpl/InitInputType", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTextReaderImpl/System.Xml.InitInputType Invalid
void System::Xml::XmlTextReaderImpl::InitInputType::_set_Invalid(::System::Xml::XmlTextReaderImpl::InitInputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/InitInputType", "Invalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::InitInputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::InitInputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.ParsingState
#include "System/Xml/XmlTextReaderImpl.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlTextReaderImpl::ParsingState::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_chars");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 charPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_charPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 charsUsed
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_charsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_charsUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_encoding");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean appendMode
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_appendMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_appendMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appendMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_stream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Text.Decoder decoder
[[deprecated("Use field access instead!")]] ::System::Text::Decoder*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_decoder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] bytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bytePos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytePos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 bytesUsed
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytesUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_bytesUsed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytesUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.TextReader textReader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_textReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_textReader");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textReader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineNo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_lineStartPos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String baseUriStr
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUriStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUriStr");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUriStr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Uri baseUri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_baseUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseUri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isEof
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_isEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_isEof");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isStreamEof
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_isStreamEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_isStreamEof");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isStreamEof"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.IDtdEntityInfo entity
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdEntityInfo*& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entity");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entity"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdEntityInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 entityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean eolNormalized
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_eolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_eolNormalized");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eolNormalized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean entityResolvedManually
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityResolvedManually() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::dyn_entityResolvedManually");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityResolvedManually"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.ParsingState.get_LineNo
int System::Xml::XmlTextReaderImpl::ParsingState::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.ParsingState.get_LinePos
int System::Xml::XmlTextReaderImpl::ParsingState::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.ParsingState.Clear
void System::Xml::XmlTextReaderImpl::ParsingState::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.ParsingState.Close
void System::Xml::XmlTextReaderImpl::ParsingState::Close(bool closeInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::ParsingState::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(closeInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, closeInput);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.XmlContext
#include "System/Xml/XmlTextReaderImpl_XmlContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlSpace xmlSpace
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSpace& System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String xmlLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_xmlLang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String defaultNamespace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::XmlContext::dyn_defaultNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_defaultNamespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultNamespace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlTextReaderImpl/System.Xml.XmlContext previousContext
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::XmlContext*& System::Xml::XmlTextReaderImpl::XmlContext::dyn_previousContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::XmlContext::dyn_previousContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previousContext"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::XmlContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager
#include "System/Xml/XmlTextReaderImpl_NoNamespaceManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.get_DefaultNamespace
::StringW System::Xml::XmlTextReaderImpl::NoNamespaceManager::get_DefaultNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::get_DefaultNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.PushScope
void System::Xml::XmlTextReaderImpl::NoNamespaceManager::PushScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::PushScope");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.PopScope
bool System::Xml::XmlTextReaderImpl::NoNamespaceManager::PopScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::PopScope");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.AddNamespace
void System::Xml::XmlTextReaderImpl::NoNamespaceManager::AddNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::AddNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.RemoveNamespace
void System::Xml::XmlTextReaderImpl::NoNamespaceManager::RemoveNamespace(::StringW prefix, ::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::RemoveNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(uri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, uri);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlTextReaderImpl::NoNamespaceManager::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.LookupNamespace
::StringW System::Xml::XmlTextReaderImpl::NoNamespaceManager::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NoNamespaceManager.LookupPrefix
::StringW System::Xml::XmlTextReaderImpl::NoNamespaceManager::LookupPrefix(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NoNamespaceManager::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, uri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy
#include "System/Xml/XmlTextReaderImpl_DtdParserProxy.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Xml.IValidationEventHandling
#include "System/Xml/IValidationEventHandling.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.IDtdEntityInfo
#include "System/Xml/IDtdEntityInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlTextReaderImpl reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl*& System::Xml::XmlTextReaderImpl::DtdParserProxy::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_NameTable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_NamespaceResolver
::System::Xml::IXmlNamespaceResolver* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_NamespaceResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_NamespaceResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_NamespaceResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IXmlNamespaceResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_BaseUri
::System::Uri* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_BaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_BaseUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_BaseUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_IsEof
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_IsEof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_IsEof");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_IsEof", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_ParsingBuffer
::ArrayW<::Il2CppChar> System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_ParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_ParsingBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_ParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppChar>, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_ParsingBufferLength
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_ParsingBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_ParsingBufferLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_ParsingBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_CurrentPosition
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_CurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.set_CurrentPosition
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_set_CurrentPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.set_CurrentPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.set_CurrentPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_EntityStackLength
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_EntityStackLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_EntityStackLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_EntityStackLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_IsEntityEolNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_IsEntityEolNormalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_LineNo
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_LineNo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.get_LineStartPosition
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_get_LineStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.get_LineStartPosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.get_LineStartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterWithValidation_get_DtdValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapterWithValidation.get_DtdValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling
::System::Xml::IValidationEventHandling* System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterWithValidation_get_ValidationEventHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapterWithValidation.get_ValidationEventHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IValidationEventHandling*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_Normalization
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_Normalization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_Normalization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapterV1.get_Normalization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_Namespaces
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_Namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_Namespaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapterV1.get_Namespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapterV1_get_V1CompatibilityMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapterV1.get_V1CompatibilityMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.OnNewLine
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnNewLine(int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnNewLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.OnNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.ReadData
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ReadData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.ParseNumericCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseNumericCharRef(::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseNumericCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.ParseNumericCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.ParseNamedCharRef
int System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseNamedCharRef(bool expand, ::System::Text::StringBuilder* internalSubsetBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseNamedCharRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.ParseNamedCharRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expand), ::il2cpp_utils::ExtractType(internalSubsetBuilder)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, expand, internalSubsetBuilder);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.ParsePI
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParsePI(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParsePI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.ParseComment
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_ParseComment(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.ParseComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.PushEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushEntity(::System::Xml::IDtdEntityInfo* entity, ByRef<int> entityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.PushEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entity), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entity, byref(entityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.PopEntity
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PopEntity(ByRef<::System::Xml::IDtdEntityInfo*> oldEntity, ByRef<int> newEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PopEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.PopEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::System::Xml::IDtdEntityInfo*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(oldEntity), byref(newEntityId));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.PushExternalSubset
bool System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushExternalSubset(::StringW systemId, ::StringW publicId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushExternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.PushExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(publicId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, systemId, publicId);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.PushInternalDtd
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_PushInternalDtd(::StringW baseUri, ::StringW internalDtd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.PushInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.PushInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(internalDtd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, internalDtd);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.Throw
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_Throw(::System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.Throw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.OnSystemId
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnSystemId(::StringW systemId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo systemLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnSystemId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.OnSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(systemLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, systemId, keywordLineInfo, systemLiteralLineInfo);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdParserProxy.System.Xml.IDtdParserAdapter.OnPublicId
void System::Xml::XmlTextReaderImpl::DtdParserProxy::System_Xml_IDtdParserAdapter_OnPublicId(::StringW publicId, ::System::Xml::LineInfo keywordLineInfo, ::System::Xml::LineInfo publicLiteralLineInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdParserProxy::System.Xml.IDtdParserAdapter.OnPublicId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParserAdapter.OnPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(keywordLineInfo), ::il2cpp_utils::ExtractType(publicLiteralLineInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, publicId, keywordLineInfo, publicLiteralLineInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.NodeData
#include "System/Xml/XmlTextReaderImpl_NodeData.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlTextReaderImpl/System.Xml.NodeData s_None
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::NodeData::_get_s_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::_get_s_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTextReaderImpl::NodeData*>("System.Xml", "XmlTextReaderImpl/NodeData", "s_None"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlTextReaderImpl/System.Xml.NodeData s_None
void System::Xml::XmlTextReaderImpl::NodeData::_set_s_None(::System::Xml::XmlTextReaderImpl::NodeData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::_set_s_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/NodeData", "s_None", value));
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNodeType type
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeType& System::Xml::XmlTextReaderImpl::NodeData::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String nameWPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_nameWPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_nameWPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameWPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlTextReaderImpl::NodeData::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlTextReaderImpl::NodeData::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_valueStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_valueStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 valueLength
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_valueLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_valueLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "valueLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.LineInfo lineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.LineInfo lineInfo2
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_lineInfo2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineInfo2"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Char quoteChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Xml::XmlTextReaderImpl::NodeData::dyn_quoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_quoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 depth
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_depth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "depth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isEmptyOrDefault
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::NodeData::dyn_isEmptyOrDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_isEmptyOrDefault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isEmptyOrDefault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 entityId
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTextReaderImpl::NodeData::dyn_entityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_entityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean xmlContextPushed
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlTextReaderImpl::NodeData::dyn_xmlContextPushed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_xmlContextPushed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlContextPushed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlTextReaderImpl/System.Xml.NodeData nextAttrValueChunk
[[deprecated("Use field access instead!")]] ::System::Xml::XmlTextReaderImpl::NodeData*& System::Xml::XmlTextReaderImpl::NodeData::dyn_nextAttrValueChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_nextAttrValueChunk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextAttrValueChunk"))->offset;
  return *reinterpret_cast<::System::Xml::XmlTextReaderImpl::NodeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object schemaType
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlTextReaderImpl::NodeData::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object typedValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlTextReaderImpl::NodeData::dyn_typedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::dyn_typedValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typedValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_None
::System::Xml::XmlTextReaderImpl::NodeData* System::Xml::XmlTextReaderImpl::NodeData::get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_None");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/NodeData", "get_None", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReaderImpl::NodeData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_LineNo
int System::Xml::XmlTextReaderImpl::NodeData::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_LinePos
int System::Xml::XmlTextReaderImpl::NodeData::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_IsEmptyElement
bool System::Xml::XmlTextReaderImpl::NodeData::get_IsEmptyElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_IsEmptyElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.set_IsEmptyElement
void System::Xml::XmlTextReaderImpl::NodeData::set_IsEmptyElement(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::set_IsEmptyElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsEmptyElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_IsDefaultAttribute
bool System::Xml::XmlTextReaderImpl::NodeData::get_IsDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_IsDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.set_IsDefaultAttribute
void System::Xml::XmlTextReaderImpl::NodeData::set_IsDefaultAttribute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::set_IsDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_ValueBuffered
bool System::Xml::XmlTextReaderImpl::NodeData::get_ValueBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_ValueBuffered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueBuffered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.get_StringValue
::StringW System::Xml::XmlTextReaderImpl::NodeData::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.TrimSpacesInValue
void System::Xml::XmlTextReaderImpl::NodeData::TrimSpacesInValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::TrimSpacesInValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrimSpacesInValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.Clear
void System::Xml::XmlTextReaderImpl::NodeData::Clear(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.ClearName
void System::Xml::XmlTextReaderImpl::NodeData::ClearName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::ClearName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetLineInfo
void System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetLineInfo2
void System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo2(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetLineInfo2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLineInfo2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetValueNode
void System::Xml::XmlTextReaderImpl::NodeData::SetValueNode(::System::Xml::XmlNodeType type, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValueNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetValueNode
void System::Xml::XmlTextReaderImpl::NodeData::SetValueNode(::System::Xml::XmlNodeType type, ::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValueNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, chars, startPos, len);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetNamedNode
void System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode(::System::Xml::XmlNodeType type, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(localName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, localName);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetNamedNode
void System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode(::System::Xml::XmlNodeType type, ::StringW localName, ::StringW prefix, ::StringW nameWPrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetNamedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(nameWPrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, localName, prefix, nameWPrefix);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetValue
void System::Xml::XmlTextReaderImpl::NodeData::SetValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.SetValue
void System::Xml::XmlTextReaderImpl::NodeData::SetValue(::ArrayW<::Il2CppChar> chars, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, startPos, len);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.OnBufferInvalidated
void System::Xml::XmlTextReaderImpl::NodeData::OnBufferInvalidated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::OnBufferInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBufferInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.CopyTo
void System::Xml::XmlTextReaderImpl::NodeData::CopyTo(int valueOffset, ::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueOffset), ::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, valueOffset, sb);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.GetNameWPrefix
::StringW System::Xml::XmlTextReaderImpl::NodeData::GetNameWPrefix(::System::Xml::XmlNameTable* nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::GetNameWPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameWPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nt);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.CreateNameWPrefix
::StringW System::Xml::XmlTextReaderImpl::NodeData::CreateNameWPrefix(::System::Xml::XmlNameTable* nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::CreateNameWPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNameWPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, nt);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.NodeData.System.IComparable.CompareTo
int System::Xml::XmlTextReaderImpl::NodeData::System_IComparable_CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::NodeData::System.IComparable.CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IComparable.CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.DtdDefaultAttributeInfoToNodeDataComparer
#include "System/Xml/XmlTextReaderImpl_DtdDefaultAttributeInfoToNodeDataComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IComparer`1<System.Object> s_instance
::System::Collections::Generic::IComparer_1<::Il2CppObject*>* System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_get_s_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_get_s_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::IComparer_1<::Il2CppObject*>*>("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "s_instance"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IComparer`1<System.Object> s_instance
void System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_set_s_instance(::System::Collections::Generic::IComparer_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_set_s_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "s_instance", value));
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdDefaultAttributeInfoToNodeDataComparer.get_Instance
::System::Collections::Generic::IComparer_1<::Il2CppObject*>* System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IComparer_1<::Il2CppObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdDefaultAttributeInfoToNodeDataComparer..cctor
void System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlTextReaderImpl/DtdDefaultAttributeInfoToNodeDataComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.DtdDefaultAttributeInfoToNodeDataComparer.Compare
int System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::DtdDefaultAttributeInfoToNodeDataComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate
#include "System/Xml/XmlTextReaderImpl_OnDefaultAttributeUseDelegate.hpp"
// Including type: System.Xml.IDtdDefaultAttributeInfo
#include "System/Xml/IDtdDefaultAttributeInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate.Invoke
void System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::Invoke(::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ::System::Xml::XmlTextReaderImpl* coreReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultAttribute), ::il2cpp_utils::ExtractType(coreReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, defaultAttribute, coreReader);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate.BeginInvoke
::System::IAsyncResult* System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::BeginInvoke(::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ::System::Xml::XmlTextReaderImpl* coreReader, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultAttribute), ::il2cpp_utils::ExtractType(coreReader), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, defaultAttribute, coreReader, callback, object);
}
// Autogenerated method: System.Xml.XmlTextReaderImpl/System.Xml.OnDefaultAttributeUseDelegate.EndInvoke
void System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTextReaderImpl::OnDefaultAttributeUseDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlUtf8RawTextWriter
#include "System/Xml/XmlUtf8RawTextWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_useAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Byte[] bufBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlUtf8RawTextWriter::dyn_bufBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_bufBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlUtf8RawTextWriter::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlUtf8RawTextWriter::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlUtf8RawTextWriter::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 bufPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_bufPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_bufPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 textPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_textPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_textPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 contentPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_contentPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_contentPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 cdataPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_cdataPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_cdataPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cdataPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 attrEndPos
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_attrEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_attrEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrEndPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 bufLen
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriter::dyn_bufLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_bufLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean writeToNull
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_writeToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_writeToNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeToNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean hadDoubleBracket
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_hadDoubleBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_hadDoubleBracket");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hadDoubleBracket"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean inAttributeValue
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_inAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_inAttributeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inAttributeValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.NewLineHandling newLineHandling
[[deprecated("Use field access instead!")]] ::System::Xml::NewLineHandling& System::Xml::XmlUtf8RawTextWriter::dyn_newLineHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_newLineHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineHandling"))->offset;
  return *reinterpret_cast<::System::Xml::NewLineHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean closeOutput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_closeOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_closeOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean omitXmlDeclaration
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_omitXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_omitXmlDeclaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "omitXmlDeclaration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String newLineChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlUtf8RawTextWriter::dyn_newLineChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_newLineChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlStandalone standalone
[[deprecated("Use field access instead!")]] ::System::Xml::XmlStandalone& System::Xml::XmlUtf8RawTextWriter::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<::System::Xml::XmlStandalone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.XmlOutputMethod outputMethod
[[deprecated("Use field access instead!")]] ::System::Xml::XmlOutputMethod& System::Xml::XmlUtf8RawTextWriter::dyn_outputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_outputMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputMethod"))->offset;
  return *reinterpret_cast<::System::Xml::XmlOutputMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean autoXmlDeclaration
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_autoXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_autoXmlDeclaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoXmlDeclaration"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean mergeCDataSections
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriter::dyn_mergeCDataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::dyn_mergeCDataSections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergeCDataSections"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.FlushBuffer
void System::Xml::XmlUtf8RawTextWriter::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::FlushBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.FlushEncoder
void System::Xml::XmlUtf8RawTextWriter::FlushEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::FlushEncoder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteAttributeTextBlock
void System::Xml::XmlUtf8RawTextWriter::WriteAttributeTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteAttributeTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteElementTextBlock
void System::Xml::XmlUtf8RawTextWriter::WriteElementTextBlock(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteElementTextBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteElementTextBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrc, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawText
void System::Xml::XmlUtf8RawTextWriter::RawText(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawText
void System::Xml::XmlUtf8RawTextWriter::RawText(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::RawText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RawText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRawWithCharChecking
void System::Xml::XmlUtf8RawTextWriter::WriteRawWithCharChecking(::Il2CppChar* pSrcBegin, ::Il2CppChar* pSrcEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteRawWithCharChecking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRawWithCharChecking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrcBegin), ::il2cpp_utils::ExtractType(pSrcEnd)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pSrcBegin, pSrcEnd);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCommentOrPi
void System::Xml::XmlUtf8RawTextWriter::WriteCommentOrPi(::StringW text, int stopChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteCommentOrPi");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCommentOrPi", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(stopChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, stopChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCDataSection
void System::Xml::XmlUtf8RawTextWriter::WriteCDataSection(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteCDataSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.IsSurrogateByte
bool System::Xml::XmlUtf8RawTextWriter::IsSurrogateByte(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::IsSurrogateByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "IsSurrogateByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeSurrogate
uint8_t* System::Xml::XmlUtf8RawTextWriter::EncodeSurrogate(::Il2CppChar* pSrc, ::Il2CppChar* pSrcEnd, uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::EncodeSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "EncodeSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pSrc, pSrcEnd, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.InvalidXmlChar
uint8_t* System::Xml::XmlUtf8RawTextWriter::InvalidXmlChar(int ch, uint8_t* pDst, bool entitize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::InvalidXmlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidXmlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(entitize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method, ch, pDst, entitize);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeChar
void System::Xml::XmlUtf8RawTextWriter::EncodeChar(ByRef<::Il2CppChar*> pSrc, ::Il2CppChar* pSrcEnd, ByRef<uint8_t*> pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::EncodeChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pSrc), pSrcEnd, byref(pDst));
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.EncodeMultibyteUTF8
uint8_t* System::Xml::XmlUtf8RawTextWriter::EncodeMultibyteUTF8(int ch, uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::EncodeMultibyteUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "EncodeMultibyteUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CharToUTF8
void System::Xml::XmlUtf8RawTextWriter::CharToUTF8(ByRef<::Il2CppChar*> pSrc, ::Il2CppChar* pSrcEnd, ByRef<uint8_t*> pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::CharToUTF8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CharToUTF8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSrc), ::il2cpp_utils::ExtractType(pSrcEnd), ::il2cpp_utils::ExtractType(pDst)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pSrc), pSrcEnd, byref(pDst));
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteNewLine
uint8_t* System::Xml::XmlUtf8RawTextWriter::WriteNewLine(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(this, ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.LtEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::LtEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::LtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "LtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.GtEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::GtEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::GtEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "GtEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.AmpEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::AmpEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::AmpEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "AmpEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.QuoteEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::QuoteEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::QuoteEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "QuoteEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.TabEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::TabEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::TabEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "TabEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.LineFeedEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::LineFeedEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::LineFeedEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "LineFeedEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CarriageReturnEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::CarriageReturnEntity(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::CarriageReturnEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CarriageReturnEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.CharEntity
uint8_t* System::Xml::XmlUtf8RawTextWriter::CharEntity(uint8_t* pDst, ::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::CharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "CharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst), ::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawStartCData
uint8_t* System::Xml::XmlUtf8RawTextWriter::RawStartCData(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::RawStartCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "RawStartCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.RawEndCData
uint8_t* System::Xml::XmlUtf8RawTextWriter::RawEndCData(uint8_t* pDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::RawEndCData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlUtf8RawTextWriter", "RawEndCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pDst)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pDst);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.ValidateContentChars
void System::Xml::XmlUtf8RawTextWriter::ValidateContentChars(::StringW chars, ::StringW propertyName, bool allowOnlyWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::ValidateContentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateContentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(allowOnlyWhitespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, chars, propertyName, allowOnlyWhitespace);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.get_SupportsNamespaceDeclarationInChunks
bool System::Xml::XmlUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::get_SupportsNamespaceDeclarationInChunks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsNamespaceDeclarationInChunks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteXmlDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration(::StringW xmldecl) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmldecl)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmldecl);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteDocType
void System::Xml::XmlUtf8RawTextWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartElement
void System::Xml::XmlUtf8RawTextWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.StartElementContent
void System::Xml::XmlUtf8RawTextWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndElement
void System::Xml::XmlUtf8RawTextWriter::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteFullEndElement
void System::Xml::XmlUtf8RawTextWriter::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartAttribute
void System::Xml::XmlUtf8RawTextWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndAttribute
void System::Xml::XmlUtf8RawTextWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteNamespaceDeclaration(::StringW prefix, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, namespaceName);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteStartNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteStartNamespaceDeclaration(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteStartNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEndNamespaceDeclaration
void System::Xml::XmlUtf8RawTextWriter::WriteEndNamespaceDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteEndNamespaceDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndNamespaceDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCData
void System::Xml::XmlUtf8RawTextWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteComment
void System::Xml::XmlUtf8RawTextWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteProcessingInstruction
void System::Xml::XmlUtf8RawTextWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteEntityRef
void System::Xml::XmlUtf8RawTextWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteCharEntity
void System::Xml::XmlUtf8RawTextWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteWhitespace
void System::Xml::XmlUtf8RawTextWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteString
void System::Xml::XmlUtf8RawTextWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteSurrogateCharEntity
void System::Xml::XmlUtf8RawTextWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteChars
void System::Xml::XmlUtf8RawTextWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRaw
void System::Xml::XmlUtf8RawTextWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.WriteRaw
void System::Xml::XmlUtf8RawTextWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.Close
void System::Xml::XmlUtf8RawTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriter.Flush
void System::Xml::XmlUtf8RawTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlUtf8RawTextWriterIndent
#include "System/Xml/XmlUtf8RawTextWriterIndent.hpp"
// Including type: System.Xml.BitStack
#include "System/Xml/BitStack.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 indentLevel
[[deprecated("Use field access instead!")]] int& System::Xml::XmlUtf8RawTextWriterIndent::dyn_indentLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_indentLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlUtf8RawTextWriterIndent::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean mixedContent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUtf8RawTextWriterIndent::dyn_mixedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_mixedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedContent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.BitStack mixedContentStack
[[deprecated("Use field access instead!")]] ::System::Xml::BitStack*& System::Xml::XmlUtf8RawTextWriterIndent::dyn_mixedContentStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_mixedContentStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedContentStack"))->offset;
  return *reinterpret_cast<::System::Xml::BitStack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Xml.ConformanceLevel conformanceLevel
[[deprecated("Use field access instead!")]] ::System::Xml::ConformanceLevel& System::Xml::XmlUtf8RawTextWriterIndent::dyn_conformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::dyn_conformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conformanceLevel"))->offset;
  return *reinterpret_cast<::System::Xml::ConformanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.Init
void System::Xml::XmlUtf8RawTextWriterIndent::Init(::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteIndent
void System::Xml::XmlUtf8RawTextWriterIndent::WriteIndent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteIndent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteIndent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteDocType
void System::Xml::XmlUtf8RawTextWriterIndent::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteStartElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.StartElementContent
void System::Xml::XmlUtf8RawTextWriterIndent::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::StartElementContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.OnRootElement
void System::Xml::XmlUtf8RawTextWriterIndent::OnRootElement(::System::Xml::ConformanceLevel currentConformanceLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::OnRootElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentConformanceLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentConformanceLevel);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteEndElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteFullEndElement
void System::Xml::XmlUtf8RawTextWriterIndent::WriteFullEndElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteStartAttribute
void System::Xml::XmlUtf8RawTextWriterIndent::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteCData
void System::Xml::XmlUtf8RawTextWriterIndent::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteComment
void System::Xml::XmlUtf8RawTextWriterIndent::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteProcessingInstruction
void System::Xml::XmlUtf8RawTextWriterIndent::WriteProcessingInstruction(::StringW target, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteEntityRef
void System::Xml::XmlUtf8RawTextWriterIndent::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteCharEntity
void System::Xml::XmlUtf8RawTextWriterIndent::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteSurrogateCharEntity
void System::Xml::XmlUtf8RawTextWriterIndent::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteWhitespace
void System::Xml::XmlUtf8RawTextWriterIndent::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteString
void System::Xml::XmlUtf8RawTextWriterIndent::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteChars
void System::Xml::XmlUtf8RawTextWriterIndent::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteRaw
void System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteRaw
void System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlUtf8RawTextWriterIndent.WriteBase64
void System::Xml::XmlUtf8RawTextWriterIndent::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUtf8RawTextWriterIndent::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.SecureStringHasher
#include "System/Xml/SecureStringHasher.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.Token
#include "System/Xml/XmlWellFormedWriter_Token.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceResolverProxy
#include "System/Xml/XmlWellFormedWriter_NamespaceResolverProxy.hpp"
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
// Including type: System.Xml.XmlException
#include "System/Xml/XmlException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.String[] stateName
::ArrayW<::StringW> System::Xml::XmlWellFormedWriter::_get_stateName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_get_stateName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml", "XmlWellFormedWriter", "stateName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] stateName
void System::Xml::XmlWellFormedWriter::_set_stateName(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_set_stateName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "stateName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String[] tokenName
::ArrayW<::StringW> System::Xml::XmlWellFormedWriter::_get_tokenName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_get_tokenName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::StringW>>("System.Xml", "XmlWellFormedWriter", "tokenName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String[] tokenName
void System::Xml::XmlWellFormedWriter::_set_tokenName(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_set_tokenName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "tokenName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Xml.WriteState[] state2WriteState
::ArrayW<::System::Xml::WriteState> System::Xml::XmlWellFormedWriter::_get_state2WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_get_state2WriteState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::WriteState>>("System.Xml", "XmlWellFormedWriter", "state2WriteState"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.WriteState[] state2WriteState
void System::Xml::XmlWellFormedWriter::_set_state2WriteState(::ArrayW<::System::Xml::WriteState> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_set_state2WriteState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "state2WriteState", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlWellFormedWriter/System.Xml.State[] StateTableDocument
::ArrayW<::System::Xml::XmlWellFormedWriter::State> System::Xml::XmlWellFormedWriter::_get_StateTableDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_get_StateTableDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XmlWellFormedWriter::State>>("System.Xml", "XmlWellFormedWriter", "StateTableDocument"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlWellFormedWriter/System.Xml.State[] StateTableDocument
void System::Xml::XmlWellFormedWriter::_set_StateTableDocument(::ArrayW<::System::Xml::XmlWellFormedWriter::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_set_StateTableDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "StateTableDocument", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Xml.XmlWellFormedWriter/System.Xml.State[] StateTableAuto
::ArrayW<::System::Xml::XmlWellFormedWriter::State> System::Xml::XmlWellFormedWriter::_get_StateTableAuto() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_get_StateTableAuto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Xml::XmlWellFormedWriter::State>>("System.Xml", "XmlWellFormedWriter", "StateTableAuto"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Xml.XmlWellFormedWriter/System.Xml.State[] StateTableAuto
void System::Xml::XmlWellFormedWriter::_set_StateTableAuto(::ArrayW<::System::Xml::XmlWellFormedWriter::State> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::_set_StateTableAuto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter", "StateTableAuto", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWriter writer
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWriter*& System::Xml::XmlWellFormedWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlRawWriter rawWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlRawWriter*& System::Xml::XmlWellFormedWriter::dyn_rawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_rawWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rawWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlRawWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IXmlNamespaceResolver predefinedNamespaces
[[deprecated("Use field access instead!")]] ::System::Xml::IXmlNamespaceResolver*& System::Xml::XmlWellFormedWriter::dyn_predefinedNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_predefinedNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predefinedNamespaces"))->offset;
  return *reinterpret_cast<::System::Xml::IXmlNamespaceResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.Namespace[] nsStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlWellFormedWriter::Namespace>& System::Xml::XmlWellFormedWriter::dyn_nsStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_nsStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlWellFormedWriter::Namespace>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nsTop
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::dyn_nsTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_nsTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> nsHashtable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Xml::XmlWellFormedWriter::dyn_nsHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_nsHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nsHashtable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useNsHashtable
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_useNsHashtable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_useNsHashtable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNsHashtable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.ElementScope[] elemScopeStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlWellFormedWriter::ElementScope>& System::Xml::XmlWellFormedWriter::dyn_elemScopeStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_elemScopeStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elemScopeStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlWellFormedWriter::ElementScope>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 elemTop
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::dyn_elemTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_elemTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elemTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.AttrName[] attrStack
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlWellFormedWriter::AttrName>& System::Xml::XmlWellFormedWriter::dyn_attrStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_attrStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrStack"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlWellFormedWriter::AttrName>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attrCount
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::dyn_attrCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_attrCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Int32> attrHashTable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, int>*& System::Xml::XmlWellFormedWriter::dyn_attrHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_attrHashTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrHashTable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute specAttr
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter::SpecialAttribute& System::Xml::XmlWellFormedWriter::dyn_specAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_specAttr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "specAttr"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter::SpecialAttribute*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache attrValueCache
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter::AttributeValueCache*& System::Xml::XmlWellFormedWriter::dyn_attrValueCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_attrValueCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrValueCache"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter::AttributeValueCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String curDeclPrefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::dyn_curDeclPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_curDeclPrefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curDeclPrefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.State[] stateTable
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlWellFormedWriter::State>& System::Xml::XmlWellFormedWriter::dyn_stateTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_stateTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateTable"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlWellFormedWriter::State>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.State currentState
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter::State& System::Xml::XmlWellFormedWriter::dyn_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_currentState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentState"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean omitDuplNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_omitDuplNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_omitDuplNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "omitDuplNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean writeEndDocumentOnClose
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_writeEndDocumentOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_writeEndDocumentOnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeEndDocumentOnClose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ConformanceLevel conformanceLevel
[[deprecated("Use field access instead!")]] ::System::Xml::ConformanceLevel& System::Xml::XmlWellFormedWriter::dyn_conformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_conformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conformanceLevel"))->offset;
  return *reinterpret_cast<::System::Xml::ConformanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean dtdWritten
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_dtdWritten() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_dtdWritten");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dtdWritten"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean xmlDeclFollows
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWellFormedWriter::dyn_xmlDeclFollows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_xmlDeclFollows");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlDeclFollows"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::XmlWellFormedWriter::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.SecureStringHasher hasher
[[deprecated("Use field access instead!")]] ::System::Xml::SecureStringHasher*& System::Xml::XmlWellFormedWriter::dyn_hasher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::dyn_hasher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasher"))->offset;
  return *reinterpret_cast<::System::Xml::SecureStringHasher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_RawWriter
::System::Xml::XmlRawWriter* System::Xml::XmlWellFormedWriter::get_RawWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::get_RawWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlRawWriter*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_SaveAttrValue
bool System::Xml::XmlWellFormedWriter::get_SaveAttrValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::get_SaveAttrValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SaveAttrValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_InBase64
bool System::Xml::XmlWellFormedWriter::get_InBase64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::get_InBase64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_IsClosedOrErrorState
bool System::Xml::XmlWellFormedWriter::get_IsClosedOrErrorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::get_IsClosedOrErrorState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClosedOrErrorState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter..cctor
void System::Xml::XmlWellFormedWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.SetSpecialAttribute
void System::Xml::XmlWellFormedWriter::SetSpecialAttribute(::System::Xml::XmlWellFormedWriter::SpecialAttribute special) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SetSpecialAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpecialAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(special)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, special);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartDocumentImpl
void System::Xml::XmlWellFormedWriter::WriteStartDocumentImpl(::System::Xml::XmlStandalone standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteStartDocumentImpl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocumentImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.StartFragment
void System::Xml::XmlWellFormedWriter::StartFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::StartFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PushNamespaceImplicit
void System::Xml::XmlWellFormedWriter::PushNamespaceImplicit(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::PushNamespaceImplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespaceImplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PushNamespaceExplicit
bool System::Xml::XmlWellFormedWriter::PushNamespaceExplicit(::StringW prefix, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::PushNamespaceExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushNamespaceExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddNamespace
void System::Xml::XmlWellFormedWriter::AddNamespace(::StringW prefix, ::StringW ns, ::System::Xml::XmlWellFormedWriter::NamespaceKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AddNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, ns, kind);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddToNamespaceHashtable
void System::Xml::XmlWellFormedWriter::AddToNamespaceHashtable(int namespaceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AddToNamespaceHashtable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToNamespaceHashtable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, namespaceIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupNamespaceIndex
int System::Xml::XmlWellFormedWriter::LookupNamespaceIndex(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::LookupNamespaceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespaceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.PopNamespaces
void System::Xml::XmlWellFormedWriter::PopNamespaces(int indexFrom, int indexTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::PopNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexFrom), ::il2cpp_utils::ExtractType(indexTo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indexFrom, indexTo);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.DupAttrException
::System::Xml::XmlException* System::Xml::XmlWellFormedWriter::DupAttrException(::StringW prefix, ::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::DupAttrException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "DupAttrException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, localName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AdvanceState
void System::Xml::XmlWellFormedWriter::AdvanceState(::System::Xml::XmlWellFormedWriter::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AdvanceState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdvanceState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.StartElementContent
void System::Xml::XmlWellFormedWriter::StartElementContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::StartElementContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartElementContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.GetStateName
::StringW System::Xml::XmlWellFormedWriter::GetStateName(::System::Xml::XmlWellFormedWriter::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::GetStateName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "GetStateName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupNamespace
::StringW System::Xml::XmlWellFormedWriter::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::LookupNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupLocalNamespace
::StringW System::Xml::XmlWellFormedWriter::LookupLocalNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::LookupLocalNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupLocalNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.GeneratePrefix
::StringW System::Xml::XmlWellFormedWriter::GeneratePrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::GeneratePrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GeneratePrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.CheckNCName
void System::Xml::XmlWellFormedWriter::CheckNCName(::StringW ncname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::CheckNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ncname)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ncname);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.InvalidCharsException
::System::Exception* System::Xml::XmlWellFormedWriter::InvalidCharsException(::StringW name, int badCharIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::InvalidCharsException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWellFormedWriter", "InvalidCharsException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(badCharIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, badCharIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.ThrowInvalidStateTransition
void System::Xml::XmlWellFormedWriter::ThrowInvalidStateTransition(::System::Xml::XmlWellFormedWriter::Token token, ::System::Xml::XmlWellFormedWriter::State currentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ThrowInvalidStateTransition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token), ::il2cpp_utils::ExtractType(currentState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token, currentState);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddAttribute
void System::Xml::XmlWellFormedWriter::AddAttribute(::StringW prefix, ::StringW localName, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, namespaceName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.AddToAttrHashTable
void System::Xml::XmlWellFormedWriter::AddToAttrHashTable(int attributeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AddToAttrHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToAttrHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attributeIndex);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.get_WriteState
::System::Xml::WriteState System::Xml::XmlWellFormedWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartDocument
void System::Xml::XmlWellFormedWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartDocument
void System::Xml::XmlWellFormedWriter::WriteStartDocument(bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEndDocument
void System::Xml::XmlWellFormedWriter::WriteEndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteEndDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteDocType
void System::Xml::XmlWellFormedWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartElement
void System::Xml::XmlWellFormedWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEndElement
void System::Xml::XmlWellFormedWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteFullEndElement
void System::Xml::XmlWellFormedWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteStartAttribute
void System::Xml::XmlWellFormedWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, namespaceName);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEndAttribute
void System::Xml::XmlWellFormedWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteCData
void System::Xml::XmlWellFormedWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteComment
void System::Xml::XmlWellFormedWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteProcessingInstruction
void System::Xml::XmlWellFormedWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteEntityRef
void System::Xml::XmlWellFormedWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteCharEntity
void System::Xml::XmlWellFormedWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteSurrogateCharEntity
void System::Xml::XmlWellFormedWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteWhitespace
void System::Xml::XmlWellFormedWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteString
void System::Xml::XmlWellFormedWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteChars
void System::Xml::XmlWellFormedWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteRaw
void System::Xml::XmlWellFormedWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteRaw
void System::Xml::XmlWellFormedWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteBase64
void System::Xml::XmlWellFormedWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.Close
void System::Xml::XmlWellFormedWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.Flush
void System::Xml::XmlWellFormedWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.LookupPrefix
::StringW System::Xml::XmlWellFormedWriter::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteValue
void System::Xml::XmlWellFormedWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter.WriteBinHex
void System::Xml::XmlWellFormedWriter::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.State
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Start
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Start
void System::Xml::XmlWellFormedWriter::State::_set_Start(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State TopLevel
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_TopLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_TopLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "TopLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State TopLevel
void System::Xml::XmlWellFormedWriter::State::_set_TopLevel(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_TopLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "TopLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Document
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Document");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Document"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Document
void System::Xml::XmlWellFormedWriter::State::_set_Document(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Document");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Document", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Element
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Element
void System::Xml::XmlWellFormedWriter::State::_set_Element(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Content
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Content
void System::Xml::XmlWellFormedWriter::State::_set_Content(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State B64Content
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_B64Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_B64Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "B64Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State B64Content
void System::Xml::XmlWellFormedWriter::State::_set_B64Content(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_B64Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "B64Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State B64Attribute
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_B64Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_B64Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "B64Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State B64Attribute
void System::Xml::XmlWellFormedWriter::State::_set_B64Attribute(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_B64Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "B64Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State AfterRootEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_AfterRootEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_AfterRootEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "AfterRootEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State AfterRootEle
void System::Xml::XmlWellFormedWriter::State::_set_AfterRootEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_AfterRootEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "AfterRootEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Attribute
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Attribute
void System::Xml::XmlWellFormedWriter::State::_set_Attribute(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State SpecialAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_SpecialAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_SpecialAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "SpecialAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State SpecialAttr
void System::Xml::XmlWellFormedWriter::State::_set_SpecialAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_SpecialAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "SpecialAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndDocument
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_EndDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndDocument
void System::Xml::XmlWellFormedWriter::State::_set_EndDocument(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_EndDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_RootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_RootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelSpecAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelSpecAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_RootLevelSpecAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelSpecAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelSpecAttr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelSpecAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_RootLevelSpecAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelSpecAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelB64Attr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_RootLevelB64Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_RootLevelB64Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "RootLevelB64Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State RootLevelB64Attr
void System::Xml::XmlWellFormedWriter::State::_set_RootLevelB64Attr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_RootLevelB64Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "RootLevelB64Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State AfterRootLevelAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_AfterRootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_AfterRootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "AfterRootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State AfterRootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_AfterRootLevelAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_AfterRootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "AfterRootLevelAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Closed
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Closed
void System::Xml::XmlWellFormedWriter::State::_set_Closed(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Error
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State Error
void System::Xml::XmlWellFormedWriter::State::_set_Error(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContent
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContent
void System::Xml::XmlWellFormedWriter::State::_set_StartContent(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContentEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContentEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartContentEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContentEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContentEle
void System::Xml::XmlWellFormedWriter::State::_set_StartContentEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartContentEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContentEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContentB64
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartContentB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartContentB64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartContentB64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartContentB64
void System::Xml::XmlWellFormedWriter::State::_set_StartContentB64(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartContentB64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartContentB64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartDoc
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartDoc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartDoc"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartDoc
void System::Xml::XmlWellFormedWriter::State::_set_StartDoc(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartDoc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartDoc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartDocEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartDocEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartDocEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartDocEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartDocEle
void System::Xml::XmlWellFormedWriter::State::_set_StartDocEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartDocEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartDocEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_EndAttrSEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSEle
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_EndAttrSEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrEEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrEEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_EndAttrEEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrEEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrEEle
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrEEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_EndAttrEEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrEEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSCont
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSCont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_EndAttrSCont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSCont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSCont
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSCont(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_EndAttrSCont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSCont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_EndAttrSAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_EndAttrSAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "EndAttrSAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State EndAttrSAttr
void System::Xml::XmlWellFormedWriter::State::_set_EndAttrSAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_EndAttrSAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "EndAttrSAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64Cont
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64Cont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_PostB64Cont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64Cont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64Cont
void System::Xml::XmlWellFormedWriter::State::_set_PostB64Cont(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_PostB64Cont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64Cont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64Attr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64Attr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_PostB64Attr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64Attr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64Attr
void System::Xml::XmlWellFormedWriter::State::_set_PostB64Attr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_PostB64Attr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64Attr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64RootAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_PostB64RootAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_PostB64RootAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "PostB64RootAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State PostB64RootAttr
void System::Xml::XmlWellFormedWriter::State::_set_PostB64RootAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_PostB64RootAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "PostB64RootAttr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragEle
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragEle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartFragEle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragEle"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragEle
void System::Xml::XmlWellFormedWriter::State::_set_StartFragEle(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartFragEle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragEle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragCont
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragCont() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartFragCont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragCont"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragCont
void System::Xml::XmlWellFormedWriter::State::_set_StartFragCont(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartFragCont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragCont", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragB64
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartFragB64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartFragB64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartFragB64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartFragB64
void System::Xml::XmlWellFormedWriter::State::_set_StartFragB64(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartFragB64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartFragB64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartRootLevelAttr
::System::Xml::XmlWellFormedWriter::State System::Xml::XmlWellFormedWriter::State::_get_StartRootLevelAttr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_get_StartRootLevelAttr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::State>("System.Xml", "XmlWellFormedWriter/State", "StartRootLevelAttr"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.State StartRootLevelAttr
void System::Xml::XmlWellFormedWriter::State::_set_StartRootLevelAttr(::System::Xml::XmlWellFormedWriter::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::_set_StartRootLevelAttr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/State", "StartRootLevelAttr", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.Token
#include "System/Xml/XmlWellFormedWriter_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartDocument
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_StartDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartDocument
void System::Xml::XmlWellFormedWriter::Token::_set_StartDocument(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_StartDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndDocument
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_EndDocument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndDocument"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndDocument
void System::Xml::XmlWellFormedWriter::Token::_set_EndDocument(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_EndDocument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndDocument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token PI
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token PI
void System::Xml::XmlWellFormedWriter::Token::_set_PI(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Comment
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Comment
void System::Xml::XmlWellFormedWriter::Token::_set_Comment(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Dtd
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Dtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_Dtd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Dtd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Dtd
void System::Xml::XmlWellFormedWriter::Token::_set_Dtd(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_Dtd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Dtd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartElement
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_StartElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartElement
void System::Xml::XmlWellFormedWriter::Token::_set_StartElement(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_StartElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndElement
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_EndElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndElement"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndElement
void System::Xml::XmlWellFormedWriter::Token::_set_EndElement(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_EndElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndElement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartAttribute
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_StartAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_StartAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "StartAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token StartAttribute
void System::Xml::XmlWellFormedWriter::Token::_set_StartAttribute(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_StartAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "StartAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndAttribute
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_EndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_EndAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "EndAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token EndAttribute
void System::Xml::XmlWellFormedWriter::Token::_set_EndAttribute(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_EndAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "EndAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Text
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Text
void System::Xml::XmlWellFormedWriter::Token::_set_Text(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token CData
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_CData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_CData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "CData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token CData
void System::Xml::XmlWellFormedWriter::Token::_set_CData(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_CData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "CData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token AtomicValue
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_AtomicValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_AtomicValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "AtomicValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token AtomicValue
void System::Xml::XmlWellFormedWriter::Token::_set_AtomicValue(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_AtomicValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "AtomicValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Base64
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Base64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_Base64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Base64"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Base64
void System::Xml::XmlWellFormedWriter::Token::_set_Base64(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_Base64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Base64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token RawData
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_RawData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "RawData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token RawData
void System::Xml::XmlWellFormedWriter::Token::_set_RawData(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_RawData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "RawData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Whitespace
::System::Xml::XmlWellFormedWriter::Token System::Xml::XmlWellFormedWriter::Token::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::Token>("System.Xml", "XmlWellFormedWriter/Token", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.Token Whitespace
void System::Xml::XmlWellFormedWriter::Token::_set_Whitespace(::System::Xml::XmlWellFormedWriter::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/Token", "Whitespace", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::Token::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Token::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceResolverProxy
#include "System/Xml/XmlWellFormedWriter_NamespaceResolverProxy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter wfWriter
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter*& System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::dyn_wfWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::dyn_wfWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wfWriter"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System.Xml.IXmlNamespaceResolver.LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceResolverProxy.System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System_Xml_IXmlNamespaceResolver_LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceResolverProxy::System.Xml.IXmlNamespaceResolver.LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IXmlNamespaceResolver.LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.ElementScope
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 prevNSTop
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::ElementScope::dyn_prevNSTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_prevNSTop");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNSTop"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::ElementScope::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::ElementScope::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_localName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::ElementScope::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_namespaceUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlSpace xmlSpace
[[deprecated("Use field access instead!")]] ::System::Xml::XmlSpace& System::Xml::XmlWellFormedWriter::ElementScope::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_xmlSpace");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::System::Xml::XmlSpace*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String xmlLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::ElementScope::dyn_xmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::dyn_xmlLang");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.ElementScope.Set
void System::Xml::XmlWellFormedWriter::ElementScope::Set(::StringW prefix, ::StringW localName, ::StringW namespaceUri, int prevNSTop) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(prevNSTop)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, namespaceUri, prevNSTop);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.ElementScope.WriteEndElement
void System::Xml::XmlWellFormedWriter::ElementScope::WriteEndElement(::System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::WriteEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawWriter);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.ElementScope.WriteFullEndElement
void System::Xml::XmlWellFormedWriter::ElementScope::WriteFullEndElement(::System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::ElementScope::WriteFullEndElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rawWriter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Written
::System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Written() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Written");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Written"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Written
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Written(::System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Written");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Written", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind NeedToWrite
::System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_NeedToWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_get_NeedToWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "NeedToWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind NeedToWrite
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_NeedToWrite(::System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_set_NeedToWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "NeedToWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Implied
::System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Implied() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Implied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Implied"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Implied
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Implied(::System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Implied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Implied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Special
::System::Xml::XmlWellFormedWriter::NamespaceKind System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Special() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_get_Special");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::NamespaceKind>("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Special"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind Special
void System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Special(::System::Xml::XmlWellFormedWriter::NamespaceKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::_set_Special");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/NamespaceKind", "Special", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::NamespaceKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::NamespaceKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.Namespace
#include "System/Xml/XmlWellFormedWriter.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind
// Already included the same include: System/Xml/XmlWellFormedWriter.hpp
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.XmlRawWriter
#include "System/Xml/XmlRawWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::Namespace::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::Namespace::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::dyn_namespaceUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlWellFormedWriter/System.Xml.NamespaceKind kind
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter::NamespaceKind& System::Xml::XmlWellFormedWriter::Namespace::dyn_kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::dyn_kind");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kind"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter::NamespaceKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prevNsIndex
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::Namespace::dyn_prevNsIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::dyn_prevNsIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevNsIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.Namespace.Set
void System::Xml::XmlWellFormedWriter::Namespace::Set(::StringW prefix, ::StringW namespaceUri, ::System::Xml::XmlWellFormedWriter::NamespaceKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(kind)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, namespaceUri, kind);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.Namespace.WriteDecl
void System::Xml::XmlWellFormedWriter::Namespace::WriteDecl(::System::Xml::XmlWriter* writer, ::System::Xml::XmlRawWriter* rawWriter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::Namespace::WriteDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(rawWriter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, rawWriter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttrName
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::AttrName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::dyn_prefix");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String namespaceUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::AttrName::dyn_namespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::dyn_namespaceUri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::AttrName::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::dyn_localName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 prev
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttrName::dyn_prev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::dyn_prev");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prev"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttrName.Set
void System::Xml::XmlWellFormedWriter::AttrName::Set(::StringW prefix, ::StringW localName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, namespaceUri);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttrName.IsDuplicate
bool System::Xml::XmlWellFormedWriter::AttrName::IsDuplicate(::StringW prefix, ::StringW localName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttrName::IsDuplicate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsDuplicate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, prefix, localName, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute
#include "System/Xml/XmlWellFormedWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute No
::System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute No
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_No(::System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "No", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute DefaultXmlns
::System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_DefaultXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_DefaultXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "DefaultXmlns"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute DefaultXmlns
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_DefaultXmlns(::System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_DefaultXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "DefaultXmlns", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute PrefixedXmlns
::System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_PrefixedXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_PrefixedXmlns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "PrefixedXmlns"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute PrefixedXmlns
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_PrefixedXmlns(::System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_PrefixedXmlns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "PrefixedXmlns", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute XmlSpace
::System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute XmlSpace
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlSpace(::System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute XmlLang
::System::Xml::XmlWellFormedWriter::SpecialAttribute System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_get_XmlLang");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::SpecialAttribute>("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlLang"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.SpecialAttribute XmlLang
void System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlLang(::System::Xml::XmlWellFormedWriter::SpecialAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::_set_XmlLang");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/SpecialAttribute", "XmlLang", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::SpecialAttribute::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::SpecialAttribute::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_ItemType.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.Item
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_Item.hpp"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.BufferChunk
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_BufferChunk.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringValue
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_stringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_stringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringValue"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String singleStringValue
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_singleStringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_singleStringValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "singleStringValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.Item[] items
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlWellFormedWriter::AttributeValueCache::Item*>& System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlWellFormedWriter::AttributeValueCache::Item*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 firstItem
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_firstItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_firstItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastItem
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_lastItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::dyn_lastItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.get_StringValue
::StringW System::Xml::XmlWellFormedWriter::AttributeValueCache::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteEntityRef
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteEntityRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteCharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteSurrogateCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteSurrogateCharEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteWhitespace
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteString
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteRaw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteRaw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.WriteValue
void System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::WriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.Replay
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Replay(::System::Xml::XmlWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Replay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Replay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.Trim
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.Clear
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.StartComplexValue
void System::Xml::XmlWellFormedWriter::AttributeValueCache::StartComplexValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::StartComplexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartComplexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache.AddItem
void System::Xml::XmlWellFormedWriter::AttributeValueCache::AddItem(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType type, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::AddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_ItemType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType EntityRef
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_EntityRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_EntityRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "EntityRef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType EntityRef
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_EntityRef(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_EntityRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "EntityRef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType CharEntity
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_CharEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_CharEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "CharEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType CharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_CharEntity(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_CharEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "CharEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType SurrogateCharEntity
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_SurrogateCharEntity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_SurrogateCharEntity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "SurrogateCharEntity"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType SurrogateCharEntity
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_SurrogateCharEntity(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_SurrogateCharEntity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "SurrogateCharEntity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType Whitespace
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Whitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Whitespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Whitespace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType Whitespace
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Whitespace(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Whitespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Whitespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType String
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType String
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_String(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType StringChars
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_StringChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_StringChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "StringChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType StringChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_StringChars(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_StringChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "StringChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType Raw
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType Raw
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Raw(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType RawChars
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_RawChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_RawChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "RawChars"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType RawChars
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_RawChars(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_RawChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "RawChars", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType ValueString
::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_ValueString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_get_ValueString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType>("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "ValueString"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType ValueString
void System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_ValueString(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::_set_ValueString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlWellFormedWriter/AttributeValueCache/ItemType", "ValueString", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.Item
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_Item.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.ItemType type
[[deprecated("Use field access instead!")]] ::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType& System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object data
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.Item.Set
void System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::Set(::System::Xml::XmlWellFormedWriter::AttributeValueCache::ItemType type, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::Item::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWellFormedWriter/System.Xml.AttributeValueCache/System.Xml.BufferChunk
#include "System/Xml/XmlWellFormedWriter_AttributeValueCache_BufferChunk.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Char[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 index
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWellFormedWriter::AttributeValueCache::BufferChunk::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Start
::System::Xml::WriteState System::Xml::WriteState::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Start"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Start
void System::Xml::WriteState::_set_Start(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Prolog
::System::Xml::WriteState System::Xml::WriteState::_get_Prolog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Prolog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Prolog"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Prolog
void System::Xml::WriteState::_set_Prolog(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Prolog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Prolog", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Element
::System::Xml::WriteState System::Xml::WriteState::_get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Element");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Element"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Element
void System::Xml::WriteState::_set_Element(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Element");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Element", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Attribute
::System::Xml::WriteState System::Xml::WriteState::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Attribute
void System::Xml::WriteState::_set_Attribute(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Content
::System::Xml::WriteState System::Xml::WriteState::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Content
void System::Xml::WriteState::_set_Content(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Content", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Closed
::System::Xml::WriteState System::Xml::WriteState::_get_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Closed"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Closed
void System::Xml::WriteState::_set_Closed(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Closed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.WriteState Error
::System::Xml::WriteState System::Xml::WriteState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::WriteState>("System.Xml", "WriteState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.WriteState Error
void System::Xml::WriteState::_set_Error(::System::Xml::WriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "WriteState", "Error", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::WriteState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::WriteState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.Xml.WriteState
#include "System/Xml/WriteState.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWriter.get_WriteState
::System::Xml::WriteState System::Xml::XmlWriter::get_WriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::get_WriteState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::WriteState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartDocument
void System::Xml::XmlWriter::WriteStartDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartDocument
void System::Xml::XmlWriter::WriteStartDocument(bool standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteStartDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standalone)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standalone);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEndDocument
void System::Xml::XmlWriter::WriteEndDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteEndDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteDocType
void System::Xml::XmlWriter::WriteDocType(::StringW name, ::StringW pubid, ::StringW sysid, ::StringW subset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteDocType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDocType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(pubid), ::il2cpp_utils::ExtractType(sysid), ::il2cpp_utils::ExtractType(subset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, pubid, sysid, subset);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartElement
void System::Xml::XmlWriter::WriteStartElement(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartElement
void System::Xml::XmlWriter::WriteStartElement(::StringW localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteStartElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEndElement
void System::Xml::XmlWriter::WriteEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteFullEndElement
void System::Xml::XmlWriter::WriteFullEndElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteFullEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFullEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteAttributeString
void System::Xml::XmlWriter::WriteAttributeString(::StringW localName, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteAttributeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localName, value);
}
// Autogenerated method: System.Xml.XmlWriter.WriteAttributeString
void System::Xml::XmlWriter::WriteAttributeString(::StringW prefix, ::StringW localName, ::StringW ns, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteAttributeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAttributeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns, value);
}
// Autogenerated method: System.Xml.XmlWriter.WriteStartAttribute
void System::Xml::XmlWriter::WriteStartAttribute(::StringW prefix, ::StringW localName, ::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteStartAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteStartAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEndAttribute
void System::Xml::XmlWriter::WriteEndAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteEndAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEndAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.WriteCData
void System::Xml::XmlWriter::WriteCData(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteCData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteComment
void System::Xml::XmlWriter::WriteComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteProcessingInstruction
void System::Xml::XmlWriter::WriteProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteEntityRef
void System::Xml::XmlWriter::WriteEntityRef(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteEntityRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteEntityRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlWriter.WriteCharEntity
void System::Xml::XmlWriter::WriteCharEntity(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlWriter.WriteWhitespace
void System::Xml::XmlWriter::WriteWhitespace(::StringW ws) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ws)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ws);
}
// Autogenerated method: System.Xml.XmlWriter.WriteString
void System::Xml::XmlWriter::WriteString(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlWriter.WriteSurrogateCharEntity
void System::Xml::XmlWriter::WriteSurrogateCharEntity(::Il2CppChar lowChar, ::Il2CppChar highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteSurrogateCharEntity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSurrogateCharEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlWriter.WriteChars
void System::Xml::XmlWriter::WriteChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteRaw
void System::Xml::XmlWriter::WriteRaw(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteRaw
void System::Xml::XmlWriter::WriteRaw(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlWriter.WriteBase64
void System::Xml::XmlWriter::WriteBase64(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteBase64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBase64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.WriteBinHex
void System::Xml::XmlWriter::WriteBinHex(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteBinHex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBinHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.Xml.XmlWriter.Close
void System::Xml::XmlWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.Flush
void System::Xml::XmlWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.LookupPrefix
::StringW System::Xml::XmlWriter::LookupPrefix(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ns);
}
// Autogenerated method: System.Xml.XmlWriter.WriteValue
void System::Xml::XmlWriter::WriteValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::WriteValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriter.Dispose
void System::Xml::XmlWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriter.Dispose
void System::Xml::XmlWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlWriter.Create
::System::Xml::XmlWriter* System::Xml::XmlWriter::Create(::System::IO::Stream* output, ::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWriter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, settings);
}
// Autogenerated method: System.Xml.XmlWriter.Create
::System::Xml::XmlWriter* System::Xml::XmlWriter::Create(::System::IO::TextWriter* output, ::System::Xml::XmlWriterSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriter::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlWriter", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, output, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlOutputMethod
#include "System/Xml/XmlOutputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Xml
::System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_get_Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Xml
void System::Xml::XmlOutputMethod::_set_Xml(::System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_set_Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Html
::System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Html() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_get_Html");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Html"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Html
void System::Xml::XmlOutputMethod::_set_Html(::System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_set_Html");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Html", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod Text
::System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "Text"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod Text
void System::Xml::XmlOutputMethod::_set_Text(::System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlOutputMethod AutoDetect
::System::Xml::XmlOutputMethod System::Xml::XmlOutputMethod::_get_AutoDetect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_get_AutoDetect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlOutputMethod>("System.Xml", "XmlOutputMethod", "AutoDetect"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlOutputMethod AutoDetect
void System::Xml::XmlOutputMethod::_set_AutoDetect(::System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::_set_AutoDetect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlOutputMethod", "AutoDetect", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlOutputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlOutputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.TriState
#include "System/Xml/TriState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState Unknown
::System::Xml::TriState System::Xml::TriState::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TriState>("System.Xml", "TriState", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState Unknown
void System::Xml::TriState::_set_Unknown(::System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState False
::System::Xml::TriState System::Xml::TriState::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TriState>("System.Xml", "TriState", "False"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState False
void System::Xml::TriState::_set_False(::System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "False", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.TriState True
::System::Xml::TriState System::Xml::TriState::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::TriState>("System.Xml", "TriState", "True"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.TriState True
void System::Xml::TriState::_set_True(::System::Xml::TriState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "TriState", "True", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::TriState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::TriState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlStandalone
#include "System/Xml/XmlStandalone.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Omit
::System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Omit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_get_Omit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Omit"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Omit
void System::Xml::XmlStandalone::_set_Omit(::System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_set_Omit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Omit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone Yes
::System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_Yes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_get_Yes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "Yes"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone Yes
void System::Xml::XmlStandalone::_set_Yes(::System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_set_Yes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "Yes", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlStandalone No
::System::Xml::XmlStandalone System::Xml::XmlStandalone::_get_No() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_get_No");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlStandalone>("System.Xml", "XmlStandalone", "No"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlStandalone No
void System::Xml::XmlStandalone::_set_No(::System::Xml::XmlStandalone value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::_set_No");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlStandalone", "No", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlStandalone::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlStandalone::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWriterSettings
#include "System/Xml/XmlWriterSettings.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.XmlWriter
#include "System/Xml/XmlWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean useAsync
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_useAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_useAsync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useAsync"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
[[deprecated("Use field access instead!")]] ::System::Text::Encoding*& System::Xml::XmlWriterSettings::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean omitXmlDecl
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_omitXmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_omitXmlDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "omitXmlDecl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.NewLineHandling newLineHandling
[[deprecated("Use field access instead!")]] ::System::Xml::NewLineHandling& System::Xml::XmlWriterSettings::dyn_newLineHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_newLineHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineHandling"))->offset;
  return *reinterpret_cast<::System::Xml::NewLineHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String newLineChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWriterSettings::dyn_newLineChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_newLineChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.TriState indent
[[deprecated("Use field access instead!")]] ::System::Xml::TriState& System::Xml::XmlWriterSettings::dyn_indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_indent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indent"))->offset;
  return *reinterpret_cast<::System::Xml::TriState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String indentChars
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWriterSettings::dyn_indentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_indentChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentChars"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean newLineOnAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_newLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_newLineOnAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newLineOnAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closeOutput
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_closeOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_closeOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closeOutput"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.NamespaceHandling namespaceHandling
[[deprecated("Use field access instead!")]] ::System::Xml::NamespaceHandling& System::Xml::XmlWriterSettings::dyn_namespaceHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_namespaceHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaceHandling"))->offset;
  return *reinterpret_cast<::System::Xml::NamespaceHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.ConformanceLevel conformanceLevel
[[deprecated("Use field access instead!")]] ::System::Xml::ConformanceLevel& System::Xml::XmlWriterSettings::dyn_conformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_conformanceLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "conformanceLevel"))->offset;
  return *reinterpret_cast<::System::Xml::ConformanceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCharacters
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_checkCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_checkCharacters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCharacters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean writeEndDocumentOnClose
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_writeEndDocumentOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_writeEndDocumentOnClose");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeEndDocumentOnClose"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlOutputMethod outputMethod
[[deprecated("Use field access instead!")]] ::System::Xml::XmlOutputMethod& System::Xml::XmlWriterSettings::dyn_outputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_outputMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputMethod"))->offset;
  return *reinterpret_cast<::System::Xml::XmlOutputMethod*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Xml.XmlQualifiedName> cdataSections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Xml::XmlQualifiedName*>*& System::Xml::XmlWriterSettings::dyn_cdataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_cdataSections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cdataSections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Xml::XmlQualifiedName*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean doNotEscapeUriAttributes
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_doNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_doNotEscapeUriAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEscapeUriAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergeCDataSections
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_mergeCDataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_mergeCDataSections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergeCDataSections"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String mediaType
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWriterSettings::dyn_mediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_mediaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mediaType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String docTypeSystem
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWriterSettings::dyn_docTypeSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_docTypeSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docTypeSystem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String docTypePublic
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlWriterSettings::dyn_docTypePublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_docTypePublic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "docTypePublic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlStandalone standalone
[[deprecated("Use field access instead!")]] ::System::Xml::XmlStandalone& System::Xml::XmlWriterSettings::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<::System::Xml::XmlStandalone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoXmlDecl
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_autoXmlDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_autoXmlDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoXmlDecl"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isReadOnly
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlWriterSettings::dyn_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::dyn_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Async
bool System::Xml::XmlWriterSettings::get_Async() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Encoding
::System::Text::Encoding* System::Xml::XmlWriterSettings::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_OmitXmlDeclaration
bool System::Xml::XmlWriterSettings::get_OmitXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_OmitXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_OmitXmlDeclaration
void System::Xml::XmlWriterSettings::set_OmitXmlDeclaration(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_OmitXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OmitXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineHandling
::System::Xml::NewLineHandling System::Xml::XmlWriterSettings::get_NewLineHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_NewLineHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::NewLineHandling, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineChars
::StringW System::Xml::XmlWriterSettings::get_NewLineChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_NewLineChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Indent
bool System::Xml::XmlWriterSettings::get_Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_Indent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Indent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_Indent
void System::Xml::XmlWriterSettings::set_Indent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_Indent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Indent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IndentChars
::StringW System::Xml::XmlWriterSettings::get_IndentChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_IndentChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NewLineOnAttributes
bool System::Xml::XmlWriterSettings::get_NewLineOnAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_NewLineOnAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewLineOnAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CloseOutput
bool System::Xml::XmlWriterSettings::get_CloseOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_CloseOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CloseOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_ConformanceLevel
::System::Xml::ConformanceLevel System::Xml::XmlWriterSettings::get_ConformanceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_ConformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::ConformanceLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_ConformanceLevel
void System::Xml::XmlWriterSettings::set_ConformanceLevel(::System::Xml::ConformanceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_ConformanceLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ConformanceLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CheckCharacters
bool System::Xml::XmlWriterSettings::get_CheckCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_CheckCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CheckCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_NamespaceHandling
::System::Xml::NamespaceHandling System::Xml::XmlWriterSettings::get_NamespaceHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_NamespaceHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::NamespaceHandling, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_NamespaceHandling
void System::Xml::XmlWriterSettings::set_NamespaceHandling(::System::Xml::NamespaceHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_NamespaceHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NamespaceHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_WriteEndDocumentOnClose
bool System::Xml::XmlWriterSettings::get_WriteEndDocumentOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_WriteEndDocumentOnClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteEndDocumentOnClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_OutputMethod
::System::Xml::XmlOutputMethod System::Xml::XmlWriterSettings::get_OutputMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_OutputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlOutputMethod, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_OutputMethod
void System::Xml::XmlWriterSettings::set_OutputMethod(::System::Xml::XmlOutputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_OutputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OutputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_CDataSectionElements
::System::Collections::Generic::List_1<::System::Xml::XmlQualifiedName*>* System::Xml::XmlWriterSettings::get_CDataSectionElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_CDataSectionElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CDataSectionElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Xml::XmlQualifiedName*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DoNotEscapeUriAttributes
bool System::Xml::XmlWriterSettings::get_DoNotEscapeUriAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_DoNotEscapeUriAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DoNotEscapeUriAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_MergeCDataSections
bool System::Xml::XmlWriterSettings::get_MergeCDataSections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_MergeCDataSections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MergeCDataSections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_MediaType
::StringW System::Xml::XmlWriterSettings::get_MediaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_MediaType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MediaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DocTypeSystem
::StringW System::Xml::XmlWriterSettings::get_DocTypeSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_DocTypeSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypeSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_DocTypePublic
::StringW System::Xml::XmlWriterSettings::get_DocTypePublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_DocTypePublic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocTypePublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_Standalone
::System::Xml::XmlStandalone System::Xml::XmlWriterSettings::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_Standalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlStandalone, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_AutoXmlDeclaration
bool System::Xml::XmlWriterSettings::get_AutoXmlDeclaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_AutoXmlDeclaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IndentInternal
::System::Xml::TriState System::Xml::XmlWriterSettings::get_IndentInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_IndentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::TriState, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.get_IsQuerySpecific
bool System::Xml::XmlWriterSettings::get_IsQuerySpecific() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::get_IsQuerySpecific");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsQuerySpecific", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.set_ReadOnly
void System::Xml::XmlWriterSettings::set_ReadOnly(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::set_ReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWriterSettings.Clone
::System::Xml::XmlWriterSettings* System::Xml::XmlWriterSettings::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriterSettings*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CreateWriter
::System::Xml::XmlWriter* System::Xml::XmlWriterSettings::CreateWriter(::System::IO::Stream* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(this, ___internal__method, output);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CreateWriter
::System::Xml::XmlWriter* System::Xml::XmlWriterSettings::CreateWriter(::System::IO::TextWriter* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::CreateWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWriter*, false>(this, ___internal__method, output);
}
// Autogenerated method: System.Xml.XmlWriterSettings.CheckReadOnly
void System::Xml::XmlWriterSettings::CheckReadOnly(::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::CheckReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, propertyName);
}
// Autogenerated method: System.Xml.XmlWriterSettings.Initialize
void System::Xml::XmlWriterSettings::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWriterSettings::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DomNameTable
#include "System/Xml/DomNameTable.hpp"
// Including type: System.Xml.XmlName
#include "System/Xml/XmlName.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlName[] entries
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::XmlName*>& System::Xml::DomNameTable::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::XmlName*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::DomNameTable::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mask
[[deprecated("Use field access instead!")]] int& System::Xml::DomNameTable::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDocument ownerDocument
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Xml::DomNameTable::dyn_ownerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::dyn_ownerDocument");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerDocument"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::DomNameTable::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.DomNameTable.GetName
::System::Xml::XmlName* System::Xml::DomNameTable::GetName(::StringW prefix, ::StringW localName, ::StringW ns, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, prefix, localName, ns, schemaInfo);
}
// Autogenerated method: System.Xml.DomNameTable.AddName
::System::Xml::XmlName* System::Xml::DomNameTable::AddName(::StringW prefix, ::StringW localName, ::StringW ns, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::AddName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, prefix, localName, ns, schemaInfo);
}
// Autogenerated method: System.Xml.DomNameTable.Grow
void System::Xml::DomNameTable::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DomNameTable::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.XmlName
#include "System/Xml/XmlName.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlName*& System::Xml::XmlAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlAttribute::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlAttribute.get_XmlName
::System::Xml::XmlName* System::Xml::XmlAttribute::get_XmlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_XmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.set_XmlName
void System::Xml::XmlAttribute::set_XmlName(::System::Xml::XmlName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::set_XmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAttribute.get_Specified
bool System::Xml::XmlAttribute::get_Specified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_Specified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Specified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_OwnerElement
::System::Xml::XmlElement* System::Xml::XmlAttribute::get_OwnerElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_OwnerElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.PrepareOwnerElementInElementIdAttrMap
bool System::Xml::XmlAttribute::PrepareOwnerElementInElementIdAttrMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::PrepareOwnerElementInElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareOwnerElementInElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.ResetOwnerElementInElementIdAttrMap
void System::Xml::XmlAttribute::ResetOwnerElementInElementIdAttrMap(::StringW oldInnerText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::ResetOwnerElementInElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOwnerElementInElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldInnerText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldInnerText);
}
// Autogenerated method: System.Xml.XmlAttribute.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlAttribute::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_Name
::StringW System::Xml::XmlAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_LocalName
::StringW System::Xml::XmlAttribute::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_NamespaceURI
::StringW System::Xml::XmlAttribute::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_Prefix
::StringW System::Xml::XmlAttribute::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlAttribute::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlAttribute::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_OwnerDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_Value
::StringW System::Xml::XmlAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.set_Value
void System::Xml::XmlAttribute::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAttribute.set_InnerText
void System::Xml::XmlAttribute::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAttribute.get_IsContainer
bool System::Xml::XmlAttribute::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlAttribute::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.set_LastNode
void System::Xml::XmlAttribute::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAttribute.set_InnerXml
void System::Xml::XmlAttribute::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlAttribute.get_BaseURI
::StringW System::Xml::XmlAttribute::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttribute.CloneNode
::System::Xml::XmlNode* System::Xml::XmlAttribute::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlAttribute.AppendChildForLoad
::System::Xml::XmlNode* System::Xml::XmlAttribute::AppendChildForLoad(::System::Xml::XmlNode* newChild, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::AppendChildForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild, doc);
}
// Autogenerated method: System.Xml.XmlAttribute.IsValidChildType
bool System::Xml::XmlAttribute::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlAttribute.RemoveChild
::System::Xml::XmlNode* System::Xml::XmlAttribute::RemoveChild(::System::Xml::XmlNode* oldChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::RemoveChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, oldChild);
}
// Autogenerated method: System.Xml.XmlAttribute.AppendChild
::System::Xml::XmlNode* System::Xml::XmlAttribute::AppendChild(::System::Xml::XmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Xml.XmlAttribute.SetParent
void System::Xml::XmlAttribute::SetParent(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttribute::SetParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlAttributeCollection
#include "System/Xml/XmlAttributeCollection.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlAttributeCollection.get_ItemOf
::System::Xml::XmlAttribute* System::Xml::XmlAttributeCollection::get_ItemOf(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::get_ItemOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* System::Xml::XmlAttributeCollection::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.System.Collections.ICollection.get_Count
int System::Xml::XmlAttributeCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.Append
::System::Xml::XmlAttribute* System::Xml::XmlAttributeCollection::Append(::System::Xml::XmlAttribute* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::Append");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.Remove
::System::Xml::XmlAttribute* System::Xml::XmlAttributeCollection::Remove(::System::Xml::XmlAttribute* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.RemoveAt
::System::Xml::XmlAttribute* System::Xml::XmlAttributeCollection::RemoveAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.RemoveAll
void System::Xml::XmlAttributeCollection::RemoveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::RemoveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo
void System::Xml::XmlAttributeCollection::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.Detach
void System::Xml::XmlAttributeCollection::Detach(::System::Xml::XmlAttribute* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::Detach");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Detach", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.InsertParentIntoElementIdAttrMap
void System::Xml::XmlAttributeCollection::InsertParentIntoElementIdAttrMap(::System::Xml::XmlAttribute* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::InsertParentIntoElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertParentIntoElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.RemoveParentFromElementIdAttrMap
void System::Xml::XmlAttributeCollection::RemoveParentFromElementIdAttrMap(::System::Xml::XmlAttribute* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::RemoveParentFromElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveParentFromElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.RemoveDuplicateAttribute
int System::Xml::XmlAttributeCollection::RemoveDuplicateAttribute(::System::Xml::XmlAttribute* attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::RemoveDuplicateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDuplicateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, attr);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.PrepareParentInElementIdAttrMap
bool System::Xml::XmlAttributeCollection::PrepareParentInElementIdAttrMap(::StringW attrPrefix, ::StringW attrLocalName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::PrepareParentInElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareParentInElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrPrefix), ::il2cpp_utils::ExtractType(attrLocalName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attrPrefix, attrLocalName);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.ResetParentInElementIdAttrMap
void System::Xml::XmlAttributeCollection::ResetParentInElementIdAttrMap(::StringW oldVal, ::StringW newVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::ResetParentInElementIdAttrMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetParentInElementIdAttrMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldVal), ::il2cpp_utils::ExtractType(newVal)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldVal, newVal);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.InternalAppendAttribute
::System::Xml::XmlAttribute* System::Xml::XmlAttributeCollection::InternalAppendAttribute(::System::Xml::XmlAttribute* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::InternalAppendAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAppendAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.SetNamedItem
::System::Xml::XmlNode* System::Xml::XmlAttributeCollection::SetNamedItem(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::SetNamedItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.AddNode
::System::Xml::XmlNode* System::Xml::XmlAttributeCollection::AddNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::AddNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.InsertNodeAt
::System::Xml::XmlNode* System::Xml::XmlAttributeCollection::InsertNodeAt(int i, ::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::InsertNodeAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertNodeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, i, node);
}
// Autogenerated method: System.Xml.XmlAttributeCollection.RemoveNodeAt
::System::Xml::XmlNode* System::Xml::XmlAttributeCollection::RemoveNodeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlAttributeCollection::RemoveNodeAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNodeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlCDataSection
#include "System/Xml/XmlCDataSection.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlCDataSection.get_Name
::StringW System::Xml::XmlCDataSection::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCDataSection.get_LocalName
::StringW System::Xml::XmlCDataSection::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCDataSection.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlCDataSection::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCDataSection.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlCDataSection::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCDataSection.get_IsText
bool System::Xml::XmlCDataSection::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::get_IsText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCDataSection.CloneNode
::System::Xml::XmlNode* System::Xml::XmlCDataSection::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCDataSection::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlCharacterData
#include "System/Xml/XmlCharacterData.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String data
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlCharacterData::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlCharacterData.get_Data
::StringW System::Xml::XmlCharacterData::get_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::get_Data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharacterData.set_Data
void System::Xml::XmlCharacterData::set_Data(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::set_Data");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlCharacterData.CheckOnData
bool System::Xml::XmlCharacterData::CheckOnData(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::CheckOnData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOnData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlCharacterData.get_Value
::StringW System::Xml::XmlCharacterData::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharacterData.set_Value
void System::Xml::XmlCharacterData::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlCharacterData.get_InnerText
::StringW System::Xml::XmlCharacterData::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharacterData.set_InnerText
void System::Xml::XmlCharacterData::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharacterData::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlChildEnumerator
#include "System/Xml/XmlChildEnumerator.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode container
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlChildEnumerator::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode child
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlChildEnumerator::dyn_child() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_child");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "child"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean isFirst
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlChildEnumerator::dyn_isFirst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::dyn_isFirst");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isFirst"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.get_Current
::System::Xml::XmlNode* System::Xml::XmlChildEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.MoveNext
bool System::Xml::XmlChildEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildEnumerator.System.Collections.IEnumerator.Reset
void System::Xml::XmlChildEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlChildNodes
#include "System/Xml/XmlChildNodes.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode container
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlChildNodes::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildNodes::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlChildNodes.get_Count
int System::Xml::XmlChildNodes::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildNodes::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlChildNodes.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlChildNodes::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlChildNodes::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlComment
#include "System/Xml/XmlComment.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlComment.get_Name
::StringW System::Xml::XmlComment::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComment::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlComment.get_LocalName
::StringW System::Xml::XmlComment::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComment::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlComment.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlComment::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComment::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlComment.CloneNode
::System::Xml::XmlNode* System::Xml::XmlComment::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComment::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String version
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDeclaration::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String encoding
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDeclaration::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String standalone
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDeclaration::dyn_standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::dyn_standalone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "standalone"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_Version
::StringW System::Xml::XmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.set_Version
void System::Xml::XmlDeclaration::set_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::set_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_Encoding
::StringW System::Xml::XmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.set_Encoding
void System::Xml::XmlDeclaration::set_Encoding(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::set_Encoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_Standalone
::StringW System::Xml::XmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_Standalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.set_Standalone
void System::Xml::XmlDeclaration::set_Standalone(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::set_Standalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDeclaration.IsValidXmlVersion
bool System::Xml::XmlDeclaration::IsValidXmlVersion(::StringW ver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::IsValidXmlVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidXmlVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ver)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ver);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_Value
::StringW System::Xml::XmlDeclaration::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.set_Value
void System::Xml::XmlDeclaration::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_InnerText
::StringW System::Xml::XmlDeclaration::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.set_InnerText
void System::Xml::XmlDeclaration::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_Name
::StringW System::Xml::XmlDeclaration::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_LocalName
::StringW System::Xml::XmlDeclaration::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlDeclaration::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDeclaration.CloneNode
::System::Xml::XmlNode* System::Xml::XmlDeclaration::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDeclaration::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlImplementation
#include "System/Xml/XmlImplementation.hpp"
// Including type: System.Xml.DomNameTable
#include "System/Xml/DomNameTable.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Xml.XmlNamedNodeMap
#include "System/Xml/XmlNamedNodeMap.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.Schema.XmlSchemaSet
#include "System/Xml/Schema/XmlSchemaSet.hpp"
// Including type: System.Xml.XmlNodeChangedEventHandler
#include "System/Xml/XmlNodeChangedEventHandler.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.EmptyEnumerator
#include "System/Xml/EmptyEnumerator.hpp"
// Including type: System.Xml.Schema.IXmlSchemaInfo
#include "System/Xml/Schema/IXmlSchemaInfo.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlName
#include "System/Xml/XmlName.hpp"
// Including type: System.WeakReference
#include "System/WeakReference.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.XmlCDataSection
#include "System/Xml/XmlCDataSection.hpp"
// Including type: System.Xml.XmlComment
#include "System/Xml/XmlComment.hpp"
// Including type: System.Xml.XmlDocumentFragment
#include "System/Xml/XmlDocumentFragment.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.XmlEntityReference
#include "System/Xml/XmlEntityReference.hpp"
// Including type: System.Xml.XmlProcessingInstruction
#include "System/Xml/XmlProcessingInstruction.hpp"
// Including type: System.Xml.XmlText
#include "System/Xml/XmlText.hpp"
// Including type: System.Xml.XmlSignificantWhitespace
#include "System/Xml/XmlSignificantWhitespace.hpp"
// Including type: System.Xml.XmlWhitespace
#include "System/Xml/XmlWhitespace.hpp"
// Including type: System.Xml.XmlTextReader
#include "System/Xml/XmlTextReader.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlNodeChangedEventArgs
#include "System/Xml/XmlNodeChangedEventArgs.hpp"
// Including type: System.Xml.XmlEntity
#include "System/Xml/XmlEntity.hpp"
// Including type: System.Xml.XmlNodeChangedAction
#include "System/Xml/XmlNodeChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Xml.EmptyEnumerator EmptyEnumerator
::System::Xml::EmptyEnumerator* System::Xml::XmlDocument::_get_EmptyEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_get_EmptyEnumerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::EmptyEnumerator*>("System.Xml", "XmlDocument", "EmptyEnumerator"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.EmptyEnumerator EmptyEnumerator
void System::Xml::XmlDocument::_set_EmptyEnumerator(::System::Xml::EmptyEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_set_EmptyEnumerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDocument", "EmptyEnumerator", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.IXmlSchemaInfo NotKnownSchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XmlDocument::_get_NotKnownSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_get_NotKnownSchemaInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::IXmlSchemaInfo*>("System.Xml", "XmlDocument", "NotKnownSchemaInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.IXmlSchemaInfo NotKnownSchemaInfo
void System::Xml::XmlDocument::_set_NotKnownSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_set_NotKnownSchemaInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDocument", "NotKnownSchemaInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.IXmlSchemaInfo ValidSchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XmlDocument::_get_ValidSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_get_ValidSchemaInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::IXmlSchemaInfo*>("System.Xml", "XmlDocument", "ValidSchemaInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.IXmlSchemaInfo ValidSchemaInfo
void System::Xml::XmlDocument::_set_ValidSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_set_ValidSchemaInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDocument", "ValidSchemaInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.Xml.Schema.IXmlSchemaInfo InvalidSchemaInfo
::System::Xml::Schema::IXmlSchemaInfo* System::Xml::XmlDocument::_get_InvalidSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_get_InvalidSchemaInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::Schema::IXmlSchemaInfo*>("System.Xml", "XmlDocument", "InvalidSchemaInfo"));
}
// Autogenerated static field setter
// Set static field: static System.Xml.Schema.IXmlSchemaInfo InvalidSchemaInfo
void System::Xml::XmlDocument::_set_InvalidSchemaInfo(::System::Xml::Schema::IXmlSchemaInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::_set_InvalidSchemaInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDocument", "InvalidSchemaInfo", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlImplementation implementation
[[deprecated("Use field access instead!")]] ::System::Xml::XmlImplementation*& System::Xml::XmlDocument::dyn_implementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_implementation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "implementation"))->offset;
  return *reinterpret_cast<::System::Xml::XmlImplementation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DomNameTable domNameTable
[[deprecated("Use field access instead!")]] ::System::Xml::DomNameTable*& System::Xml::XmlDocument::dyn_domNameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_domNameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "domNameTable"))->offset;
  return *reinterpret_cast<::System::Xml::DomNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlDocument::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamedNodeMap entities
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamedNodeMap*& System::Xml::XmlDocument::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamedNodeMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable htElementIdMap
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::XmlDocument::dyn_htElementIdMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_htElementIdMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "htElementIdMap"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable htElementIDAttrDecl
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::XmlDocument::dyn_htElementIDAttrDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_htElementIDAttrDecl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "htElementIDAttrDecl"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo schemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::XmlDocument::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSet schemas
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSet*& System::Xml::XmlDocument::dyn_schemas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_schemas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemas"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSet**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reportValidity
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_reportValidity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_reportValidity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reportValidity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean actualLoadingStatus
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_actualLoadingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_actualLoadingStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualLoadingStatus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeInsertingDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeInsertingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeInsertingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeInsertingDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeInsertedDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeInsertedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeInsertedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeInsertedDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeRemovingDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeRemovingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeRemovingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeRemovingDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeRemovedDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeRemovedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeRemovedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeRemovedDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeChangingDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeChangingDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeChangingDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeChangingDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedEventHandler onNodeChangedDelegate
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedEventHandler*& System::Xml::XmlDocument::dyn_onNodeChangedDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_onNodeChangedDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onNodeChangedDelegate"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fEntRefNodesPresent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_fEntRefNodesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_fEntRefNodesPresent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fEntRefNodesPresent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean fCDataNodesPresent
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_fCDataNodesPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_fCDataNodesPresent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fCDataNodesPresent"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preserveWhitespace
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_preserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_preserveWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preserveWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isLoading
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_isLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_isLoading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLoading"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strDocumentName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strDocumentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strDocumentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strDocumentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strDocumentFragmentName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strDocumentFragmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strDocumentFragmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strDocumentFragmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strCommentName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strCommentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strCommentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strCommentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strTextName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strTextName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strTextName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strTextName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strCDataSectionName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strCDataSectionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strCDataSectionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strCDataSectionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strEntityName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strEntityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strEntityName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strEntityName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strID
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strXmlns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strXmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strXmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strXml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strSpace
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strSpace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strLang
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strLang() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strLang");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strLang"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strEmpty
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strEmpty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strEmpty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strNonSignificantWhitespaceName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strNonSignificantWhitespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strNonSignificantWhitespaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strNonSignificantWhitespaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strSignificantWhitespaceName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strSignificantWhitespaceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strSignificantWhitespaceName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strSignificantWhitespaceName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strReservedXmlns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strReservedXmlns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strReservedXmlns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strReservedXmlns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String strReservedXml
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_strReservedXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_strReservedXml");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strReservedXml"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String baseURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocument::dyn_baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlResolver resolver
[[deprecated("Use field access instead!")]] ::System::Xml::XmlResolver*& System::Xml::XmlDocument::dyn_resolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_resolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resolver"))->offset;
  return *reinterpret_cast<::System::Xml::XmlResolver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean bSetResolver
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocument::dyn_bSetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_bSetResolver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bSetResolver"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Object objLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlDocument::dyn_objLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::dyn_objLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDocument.get_DtdSchemaInfo
::System::Xml::Schema::SchemaInfo* System::Xml::XmlDocument::get_DtdSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_DtdSchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdSchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_DtdSchemaInfo
void System::Xml::XmlDocument::set_DtdSchemaInfo(::System::Xml::Schema::SchemaInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_DtdSchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdSchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_DocumentType
::System::Xml::XmlDocumentType* System::Xml::XmlDocument::get_DocumentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_DocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocumentType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_Declaration
::System::Xml::XmlDeclaration* System::Xml::XmlDocument::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_Declaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_Implementation
::System::Xml::XmlImplementation* System::Xml::XmlDocument::get_Implementation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_Implementation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Implementation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlImplementation*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_DocumentElement
::System::Xml::XmlElement* System::Xml::XmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_DocumentElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_Schemas
void System::Xml::XmlDocument::set_Schemas(::System::Xml::Schema::XmlSchemaSet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_Schemas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Schemas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_CanReportValidity
bool System::Xml::XmlDocument::get_CanReportValidity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_CanReportValidity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanReportValidity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_HasSetResolver
bool System::Xml::XmlDocument::get_HasSetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_HasSetResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSetResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_XmlResolver
void System::Xml::XmlDocument::set_XmlResolver(::System::Xml::XmlResolver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_XmlResolver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlDocument::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_Entities
::System::Xml::XmlNamedNodeMap* System::Xml::XmlDocument::get_Entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_Entities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNamedNodeMap*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_Entities
void System::Xml::XmlDocument::set_Entities(::System::Xml::XmlNamedNodeMap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_Entities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Entities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_IsLoading
bool System::Xml::XmlDocument::get_IsLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_IsLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_IsLoading
void System::Xml::XmlDocument::set_IsLoading(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_IsLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_ActualLoadingStatus
bool System::Xml::XmlDocument::get_ActualLoadingStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_ActualLoadingStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActualLoadingStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument..cctor
void System::Xml::XmlDocument::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlDocument", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.CheckName
void System::Xml::XmlDocument::CheckName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlDocument", "CheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlDocument.AddXmlName
::System::Xml::XmlName* System::Xml::XmlDocument::AddXmlName(::StringW prefix, ::StringW localName, ::StringW namespaceURI, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AddXmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddXmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, prefix, localName, namespaceURI, schemaInfo);
}
// Autogenerated method: System.Xml.XmlDocument.GetXmlName
::System::Xml::XmlName* System::Xml::XmlDocument::GetXmlName(::StringW prefix, ::StringW localName, ::StringW namespaceURI, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetXmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetXmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, prefix, localName, namespaceURI, schemaInfo);
}
// Autogenerated method: System.Xml.XmlDocument.AddAttrXmlName
::System::Xml::XmlName* System::Xml::XmlDocument::AddAttrXmlName(::StringW prefix, ::StringW localName, ::StringW namespaceURI, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AddAttrXmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttrXmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, prefix, localName, namespaceURI, schemaInfo);
}
// Autogenerated method: System.Xml.XmlDocument.AddIdInfo
bool System::Xml::XmlDocument::AddIdInfo(::System::Xml::XmlName* eleName, ::System::Xml::XmlName* attrName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AddIdInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIdInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eleName), ::il2cpp_utils::ExtractType(attrName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eleName, attrName);
}
// Autogenerated method: System.Xml.XmlDocument.GetIDInfoByElement_
::System::Xml::XmlName* System::Xml::XmlDocument::GetIDInfoByElement_(::System::Xml::XmlName* eleName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetIDInfoByElement_");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIDInfoByElement_", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eleName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, eleName);
}
// Autogenerated method: System.Xml.XmlDocument.GetIDInfoByElement
::System::Xml::XmlName* System::Xml::XmlDocument::GetIDInfoByElement(::System::Xml::XmlName* eleName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetIDInfoByElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIDInfoByElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eleName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method, eleName);
}
// Autogenerated method: System.Xml.XmlDocument.GetElement
::System::WeakReference* System::Xml::XmlDocument::GetElement(::System::Collections::ArrayList* elementList, ::System::Xml::XmlElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementList), ::il2cpp_utils::ExtractType(elem)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::WeakReference*, false>(this, ___internal__method, elementList, elem);
}
// Autogenerated method: System.Xml.XmlDocument.AddElementWithId
void System::Xml::XmlDocument::AddElementWithId(::StringW id, ::System::Xml::XmlElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AddElementWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddElementWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(elem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, elem);
}
// Autogenerated method: System.Xml.XmlDocument.RemoveElementWithId
void System::Xml::XmlDocument::RemoveElementWithId(::StringW id, ::System::Xml::XmlElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::RemoveElementWithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveElementWithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(elem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, elem);
}
// Autogenerated method: System.Xml.XmlDocument.GetResolver
::System::Xml::XmlResolver* System::Xml::XmlDocument::GetResolver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetResolver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResolver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlResolver*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.HasNodeTypeInPrevSiblings
bool System::Xml::XmlDocument::HasNodeTypeInPrevSiblings(::System::Xml::XmlNodeType nt, ::System::Xml::XmlNode* refNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::HasNodeTypeInPrevSiblings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeTypeInPrevSiblings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt), ::il2cpp_utils::ExtractType(refNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nt, refNode);
}
// Autogenerated method: System.Xml.XmlDocument.HasNodeTypeInNextSiblings
bool System::Xml::XmlDocument::HasNodeTypeInNextSiblings(::System::Xml::XmlNodeType nt, ::System::Xml::XmlNode* refNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::HasNodeTypeInNextSiblings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasNodeTypeInNextSiblings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nt), ::il2cpp_utils::ExtractType(refNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nt, refNode);
}
// Autogenerated method: System.Xml.XmlDocument.CreateAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::CreateAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlDocument.SetDefaultNamespace
void System::Xml::XmlDocument::SetDefaultNamespace(::StringW prefix, ::StringW localName, ByRef<::StringW> namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::SetDefaultNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prefix, localName, byref(namespaceURI));
}
// Autogenerated method: System.Xml.XmlDocument.CreateCDataSection
::System::Xml::XmlCDataSection* System::Xml::XmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlCDataSection*, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlDocument.CreateComment
::System::Xml::XmlComment* System::Xml::XmlDocument::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlComment*, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Xml.XmlDocument.CreateDocumentType
::System::Xml::XmlDocumentType* System::Xml::XmlDocument::CreateDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocumentType*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: System.Xml.XmlDocument.CreateDocumentFragment
::System::Xml::XmlDocumentFragment* System::Xml::XmlDocument::CreateDocumentFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateDocumentFragment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocumentFragment*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.CreateElement
::System::Xml::XmlElement* System::Xml::XmlDocument::CreateElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlDocument.AddDefaultAttributes
void System::Xml::XmlDocument::AddDefaultAttributes(::System::Xml::XmlElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AddDefaultAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDefaultAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elem);
}
// Autogenerated method: System.Xml.XmlDocument.GetSchemaElementDecl
::System::Xml::Schema::SchemaElementDecl* System::Xml::XmlDocument::GetSchemaElementDecl(::System::Xml::XmlElement* elem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetSchemaElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSchemaElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaElementDecl*, false>(this, ___internal__method, elem);
}
// Autogenerated method: System.Xml.XmlDocument.PrepareDefaultAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::PrepareDefaultAttribute(::System::Xml::Schema::SchemaAttDef* attdef, ::StringW attrPrefix, ::StringW attrLocalname, ::StringW attrNamespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::PrepareDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attdef), ::il2cpp_utils::ExtractType(attrPrefix), ::il2cpp_utils::ExtractType(attrLocalname), ::il2cpp_utils::ExtractType(attrNamespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, attdef, attrPrefix, attrLocalname, attrNamespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.CreateEntityReference
::System::Xml::XmlEntityReference* System::Xml::XmlDocument::CreateEntityReference(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateEntityReference");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlEntityReference*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlDocument.CreateProcessingInstruction
::System::Xml::XmlProcessingInstruction* System::Xml::XmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlProcessingInstruction*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: System.Xml.XmlDocument.CreateXmlDeclaration
::System::Xml::XmlDeclaration* System::Xml::XmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDeclaration*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: System.Xml.XmlDocument.CreateTextNode
::System::Xml::XmlText* System::Xml::XmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlText*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlDocument.CreateSignificantWhitespace
::System::Xml::XmlSignificantWhitespace* System::Xml::XmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlSignificantWhitespace*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlDocument.CreateWhitespace
::System::Xml::XmlWhitespace* System::Xml::XmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlWhitespace*, false>(this, ___internal__method, text);
}
// Autogenerated method: System.Xml.XmlDocument.CreateAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, qualifiedName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.CreateElement
::System::Xml::XmlElement* System::Xml::XmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, qualifiedName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.ImportNodeInternal
::System::Xml::XmlNode* System::Xml::XmlDocument::ImportNodeInternal(::System::Xml::XmlNode* node, bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::ImportNodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportNodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node, deep);
}
// Autogenerated method: System.Xml.XmlDocument.ImportAttributes
void System::Xml::XmlDocument::ImportAttributes(::System::Xml::XmlNode* fromElem, ::System::Xml::XmlNode* toElem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::ImportAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromElem), ::il2cpp_utils::ExtractType(toElem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromElem, toElem);
}
// Autogenerated method: System.Xml.XmlDocument.ImportChildren
void System::Xml::XmlDocument::ImportChildren(::System::Xml::XmlNode* fromNode, ::System::Xml::XmlNode* toNode, bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::ImportChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromNode), ::il2cpp_utils::ExtractType(toNode), ::il2cpp_utils::ExtractType(deep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromNode, toNode, deep);
}
// Autogenerated method: System.Xml.XmlDocument.CreateAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::CreateAttribute(::StringW prefix, ::StringW localName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, prefix, localName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.CreateDefaultAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::CreateDefaultAttribute(::StringW prefix, ::StringW localName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateDefaultAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, prefix, localName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.CreateElement
::System::Xml::XmlElement* System::Xml::XmlDocument::CreateElement(::StringW prefix, ::StringW localName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlElement*, false>(this, ___internal__method, prefix, localName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.SetupReader
::System::Xml::XmlTextReader* System::Xml::XmlDocument::SetupReader(::System::Xml::XmlTextReader* tr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::SetupReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlTextReader*, false>(this, ___internal__method, tr);
}
// Autogenerated method: System.Xml.XmlDocument.Load
void System::Xml::XmlDocument::Load(::System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Xml.XmlDocument.LoadXml
void System::Xml::XmlDocument::LoadXml(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::LoadXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: System.Xml.XmlDocument.GetInsertEventArgsForLoad
::System::Xml::XmlNodeChangedEventArgs* System::Xml::XmlDocument::GetInsertEventArgsForLoad(::System::Xml::XmlNode* node, ::System::Xml::XmlNode* newParent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetInsertEventArgsForLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInsertEventArgsForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(newParent)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeChangedEventArgs*, false>(this, ___internal__method, node, newParent);
}
// Autogenerated method: System.Xml.XmlDocument.GetDefaultAttribute
::System::Xml::XmlAttribute* System::Xml::XmlDocument::GetDefaultAttribute(::System::Xml::XmlElement* elem, ::StringW attrPrefix, ::StringW attrLocalname, ::StringW attrNamespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(attrPrefix), ::il2cpp_utils::ExtractType(attrLocalname), ::il2cpp_utils::ExtractType(attrNamespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, elem, attrPrefix, attrLocalname, attrNamespaceURI);
}
// Autogenerated method: System.Xml.XmlDocument.GetEntityNode
::System::Xml::XmlEntity* System::Xml::XmlDocument::GetEntityNode(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetEntityNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntityNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlEntity*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlDocument.SetBaseURI
void System::Xml::XmlDocument::SetBaseURI(::StringW inBaseURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::SetBaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBaseURI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inBaseURI);
}
// Autogenerated method: System.Xml.XmlDocument.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlDocument::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlDocument::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_Name
::StringW System::Xml::XmlDocument::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_LocalName
::StringW System::Xml::XmlDocument::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_IsContainer
bool System::Xml::XmlDocument::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlDocument::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_LastNode
void System::Xml::XmlDocument::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlDocument::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_OwnerDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.get_IsReadOnly
bool System::Xml::XmlDocument::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.set_InnerText
void System::Xml::XmlDocument::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.set_InnerXml
void System::Xml::XmlDocument::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocument.get_BaseURI
::StringW System::Xml::XmlDocument::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocument.CloneNode
::System::Xml::XmlNode* System::Xml::XmlDocument::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlDocument.IsValidChildType
bool System::Xml::XmlDocument::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlDocument.CanInsertAfter
bool System::Xml::XmlDocument::CanInsertAfter(::System::Xml::XmlNode* newChild, ::System::Xml::XmlNode* refChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::CanInsertAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanInsertAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(refChild)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newChild, refChild);
}
// Autogenerated method: System.Xml.XmlDocument.GetEventArgs
::System::Xml::XmlNodeChangedEventArgs* System::Xml::XmlDocument::GetEventArgs(::System::Xml::XmlNode* node, ::System::Xml::XmlNode* oldParent, ::System::Xml::XmlNode* newParent, ::StringW oldValue, ::StringW newValue, ::System::Xml::XmlNodeChangedAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::GetEventArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(oldParent), ::il2cpp_utils::ExtractType(newParent), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeChangedEventArgs*, false>(this, ___internal__method, node, oldParent, newParent, oldValue, newValue, action);
}
// Autogenerated method: System.Xml.XmlDocument.BeforeEvent
void System::Xml::XmlDocument::BeforeEvent(::System::Xml::XmlNodeChangedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::BeforeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Xml.XmlDocument.AfterEvent
void System::Xml::XmlDocument::AfterEvent(::System::Xml::XmlNodeChangedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AfterEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Xml.XmlDocument.AppendChildForLoad
::System::Xml::XmlNode* System::Xml::XmlDocument::AppendChildForLoad(::System::Xml::XmlNode* newChild, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocument::AppendChildForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild, doc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDocumentFragment
#include "System/Xml/XmlDocumentFragment.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlDocumentFragment::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_Name
::StringW System::Xml::XmlDocumentFragment::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_LocalName
::StringW System::Xml::XmlDocumentFragment::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlDocumentFragment::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlDocumentFragment::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlDocumentFragment::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_OwnerDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.set_InnerXml
void System::Xml::XmlDocumentFragment::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_IsContainer
bool System::Xml::XmlDocumentFragment::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlDocumentFragment::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.set_LastNode
void System::Xml::XmlDocumentFragment::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.CloneNode
::System::Xml::XmlNode* System::Xml::XmlDocumentFragment::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.IsValidChildType
bool System::Xml::XmlDocumentFragment::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlDocumentFragment.CanInsertAfter
bool System::Xml::XmlDocumentFragment::CanInsertAfter(::System::Xml::XmlNode* newChild, ::System::Xml::XmlNode* refChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentFragment::CanInsertAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanInsertAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(refChild)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newChild, refChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
// Including type: System.Xml.XmlNamedNodeMap
#include "System/Xml/XmlNamedNodeMap.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocumentType::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocumentType::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocumentType::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalSubset
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlDocumentType::dyn_internalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_internalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalSubset"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean namespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlDocumentType::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamedNodeMap entities
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamedNodeMap*& System::Xml::XmlDocumentType::dyn_entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_entities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entities"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamedNodeMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNamedNodeMap notations
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamedNodeMap*& System::Xml::XmlDocumentType::dyn_notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_notations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notations"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamedNodeMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo schemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::XmlDocumentType::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_Entities
::System::Xml::XmlNamedNodeMap* System::Xml::XmlDocumentType::get_Entities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_Entities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNamedNodeMap*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_Notations
::System::Xml::XmlNamedNodeMap* System::Xml::XmlDocumentType::get_Notations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_Notations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Notations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNamedNodeMap*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_PublicId
::StringW System::Xml::XmlDocumentType::get_PublicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_PublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_SystemId
::StringW System::Xml::XmlDocumentType::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_SystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_InternalSubset
::StringW System::Xml::XmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_InternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_ParseWithNamespaces
bool System::Xml::XmlDocumentType::get_ParseWithNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_ParseWithNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParseWithNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_DtdSchemaInfo
::System::Xml::Schema::SchemaInfo* System::Xml::XmlDocumentType::get_DtdSchemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_DtdSchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DtdSchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.set_DtdSchemaInfo
void System::Xml::XmlDocumentType::set_DtdSchemaInfo(::System::Xml::Schema::SchemaInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::set_DtdSchemaInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DtdSchemaInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_Name
::StringW System::Xml::XmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_LocalName
::StringW System::Xml::XmlDocumentType::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlDocumentType::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.get_IsReadOnly
bool System::Xml::XmlDocumentType::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDocumentType.CloneNode
::System::Xml::XmlNode* System::Xml::XmlDocumentType::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDocumentType::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.XmlName
#include "System/Xml/XmlName.hpp"
// Including type: System.Xml.XmlAttributeCollection
#include "System/Xml/XmlAttributeCollection.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlName name
[[deprecated("Use field access instead!")]] ::System::Xml::XmlName*& System::Xml::XmlElement::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::System::Xml::XmlName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlAttributeCollection attributes
[[deprecated("Use field access instead!")]] ::System::Xml::XmlAttributeCollection*& System::Xml::XmlElement::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Xml::XmlAttributeCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlElement::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlElement.get_XmlName
::System::Xml::XmlName* System::Xml::XmlElement::get_XmlName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_XmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.set_XmlName
void System::Xml::XmlElement::set_XmlName(::System::Xml::XmlName* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::set_XmlName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_XmlName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlElement.get_IsEmpty
bool System::Xml::XmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.set_IsEmpty
void System::Xml::XmlElement::set_IsEmpty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::set_IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlElement.get_HasAttributes
bool System::Xml::XmlElement::get_HasAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_HasAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.SetAttributeNode
::System::Xml::XmlAttribute* System::Xml::XmlElement::SetAttributeNode(::System::Xml::XmlAttribute* newAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newAttr)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method, newAttr);
}
// Autogenerated method: System.Xml.XmlElement.RemoveAllAttributes
void System::Xml::XmlElement::RemoveAllAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::RemoveAllAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.RemoveAllChildren
void System::Xml::XmlElement::RemoveAllChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::RemoveAllChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_Name
::StringW System::Xml::XmlElement::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_LocalName
::StringW System::Xml::XmlElement::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_NamespaceURI
::StringW System::Xml::XmlElement::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_Prefix
::StringW System::Xml::XmlElement::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlElement::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlElement::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlElement::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_OwnerDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_IsContainer
bool System::Xml::XmlElement::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlElement::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.set_LastNode
void System::Xml::XmlElement::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlElement.get_Attributes
::System::Xml::XmlAttributeCollection* System::Xml::XmlElement::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.set_InnerXml
void System::Xml::XmlElement::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlElement.get_InnerText
::StringW System::Xml::XmlElement::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.set_InnerText
void System::Xml::XmlElement::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlElement.get_NextSibling
::System::Xml::XmlNode* System::Xml::XmlElement::get_NextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::get_NextSibling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.CloneNode
::System::Xml::XmlNode* System::Xml::XmlElement::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlElement.AppendChildForLoad
::System::Xml::XmlNode* System::Xml::XmlElement::AppendChildForLoad(::System::Xml::XmlNode* newChild, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::AppendChildForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild, doc);
}
// Autogenerated method: System.Xml.XmlElement.IsValidChildType
bool System::Xml::XmlElement::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlElement.RemoveAll
void System::Xml::XmlElement::RemoveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::RemoveAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlElement.SetParent
void System::Xml::XmlElement::SetParent(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlElement::SetParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEntity
#include "System/Xml/XmlEntity.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String notationName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_notationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_notationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String unparsedReplacementStr
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_unparsedReplacementStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_unparsedReplacementStr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unparsedReplacementStr"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String baseURI
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntity::dyn_baseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_baseURI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseURI"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlEntity::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean childrenFoliating
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlEntity::dyn_childrenFoliating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::dyn_childrenFoliating");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "childrenFoliating"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEntity.get_SystemId
::StringW System::Xml::XmlEntity::get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_SystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.SetBaseURI
void System::Xml::XmlEntity::SetBaseURI(::StringW inBaseURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::SetBaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inBaseURI)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inBaseURI);
}
// Autogenerated method: System.Xml.XmlEntity.get_IsReadOnly
bool System::Xml::XmlEntity::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.get_Name
::StringW System::Xml::XmlEntity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.get_LocalName
::StringW System::Xml::XmlEntity::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.get_InnerText
::StringW System::Xml::XmlEntity::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.set_InnerText
void System::Xml::XmlEntity::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEntity.get_IsContainer
bool System::Xml::XmlEntity::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlEntity::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.set_LastNode
void System::Xml::XmlEntity::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEntity.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlEntity::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.set_InnerXml
void System::Xml::XmlEntity::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEntity.get_BaseURI
::StringW System::Xml::XmlEntity::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntity.CloneNode
::System::Xml::XmlNode* System::Xml::XmlEntity::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlEntity.IsValidChildType
bool System::Xml::XmlEntity::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntity::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlEntityReference
#include "System/Xml/XmlEntityReference.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlEntityReference::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlLinkedNode lastChild
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlEntityReference::dyn_lastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::dyn_lastChild");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastChild"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_ChildBaseURI
::StringW System::Xml::XmlEntityReference::get_ChildBaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_ChildBaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildBaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.ConstructBaseURI
::StringW System::Xml::XmlEntityReference::ConstructBaseURI(::StringW baseURI, ::StringW systemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::ConstructBaseURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConstructBaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseURI), ::il2cpp_utils::ExtractType(systemId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, baseURI, systemId);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_Name
::StringW System::Xml::XmlEntityReference::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_LocalName
::StringW System::Xml::XmlEntityReference::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_Value
::StringW System::Xml::XmlEntityReference::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.set_Value
void System::Xml::XmlEntityReference::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlEntityReference::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_IsReadOnly
bool System::Xml::XmlEntityReference::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_IsContainer
bool System::Xml::XmlEntityReference::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlEntityReference::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.set_LastNode
void System::Xml::XmlEntityReference::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlEntityReference.get_BaseURI
::StringW System::Xml::XmlEntityReference::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlEntityReference.CloneNode
::System::Xml::XmlNode* System::Xml::XmlEntityReference::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlEntityReference.SetParent
void System::Xml::XmlEntityReference::SetParent(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::SetParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlEntityReference.SetParentForLoad
void System::Xml::XmlEntityReference::SetParentForLoad(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::SetParentForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlEntityReference.IsValidChildType
bool System::Xml::XmlEntityReference::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlEntityReference::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNodeChangedAction
#include "System/Xml/XmlNodeChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeChangedAction Insert
::System::Xml::XmlNodeChangedAction System::Xml::XmlNodeChangedAction::_get_Insert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_get_Insert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeChangedAction>("System.Xml", "XmlNodeChangedAction", "Insert"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeChangedAction Insert
void System::Xml::XmlNodeChangedAction::_set_Insert(::System::Xml::XmlNodeChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_set_Insert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeChangedAction", "Insert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeChangedAction Remove
::System::Xml::XmlNodeChangedAction System::Xml::XmlNodeChangedAction::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeChangedAction>("System.Xml", "XmlNodeChangedAction", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeChangedAction Remove
void System::Xml::XmlNodeChangedAction::_set_Remove(::System::Xml::XmlNodeChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeChangedAction", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlNodeChangedAction Change
::System::Xml::XmlNodeChangedAction System::Xml::XmlNodeChangedAction::_get_Change() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_get_Change");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlNodeChangedAction>("System.Xml", "XmlNodeChangedAction", "Change"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlNodeChangedAction Change
void System::Xml::XmlNodeChangedAction::_set_Change(::System::Xml::XmlNodeChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::_set_Change");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlNodeChangedAction", "Change", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNodeChangedAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlImplementation
#include "System/Xml/XmlImplementation.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::XmlImplementation::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlImplementation::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlImplementation.get_NameTable
::System::Xml::XmlNameTable* System::Xml::XmlImplementation::get_NameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlImplementation::get_NameTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNameTable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlImplementation.CreateDocument
::System::Xml::XmlDocument* System::Xml::XmlImplementation::CreateDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlImplementation::CreateDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlLinkedNode next
[[deprecated("Use field access instead!")]] ::System::Xml::XmlLinkedNode*& System::Xml::XmlLinkedNode::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLinkedNode::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::XmlLinkedNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlLinkedNode.get_PreviousSibling
::System::Xml::XmlNode* System::Xml::XmlLinkedNode::get_PreviousSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLinkedNode::get_PreviousSibling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreviousSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLinkedNode.get_NextSibling
::System::Xml::XmlNode* System::Xml::XmlLinkedNode::get_NextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLinkedNode::get_NextSibling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlLoader
#include "System/Xml/XmlLoader.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlAttribute
#include "System/Xml/XmlAttribute.hpp"
// Including type: System.Xml.XmlEntityReference
#include "System/Xml/XmlEntityReference.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
// Including type: System.Xml.XmlResolver
#include "System/Xml/XmlResolver.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.XmlParserContext
#include "System/Xml/XmlParserContext.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
// Including type: System.Xml.XmlEntity
#include "System/Xml/XmlEntity.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDocument doc
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Xml::XmlLoader::dyn_doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::dyn_doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doc"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlReader reader
[[deprecated("Use field access instead!")]] ::System::Xml::XmlReader*& System::Xml::XmlLoader::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::Xml::XmlReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean preserveWhitespace
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlLoader::dyn_preserveWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::dyn_preserveWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preserveWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlLoader.Load
void System::Xml::XmlLoader::Load(::System::Xml::XmlDocument* doc, ::System::Xml::XmlReader* reader, bool preserveWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(preserveWhitespace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doc, reader, preserveWhitespace);
}
// Autogenerated method: System.Xml.XmlLoader.LoadDocSequence
void System::Xml::XmlLoader::LoadDocSequence(::System::Xml::XmlDocument* parentDoc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadDocSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDocSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentDoc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentDoc);
}
// Autogenerated method: System.Xml.XmlLoader.LoadNode
::System::Xml::XmlNode* System::Xml::XmlLoader::LoadNode(bool skipOverWhitespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipOverWhitespace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, skipOverWhitespace);
}
// Autogenerated method: System.Xml.XmlLoader.LoadAttributeNode
::System::Xml::XmlAttribute* System::Xml::XmlLoader::LoadAttributeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadAttributeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.LoadDefaultAttribute
::System::Xml::XmlAttribute* System::Xml::XmlLoader::LoadDefaultAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadDefaultAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDefaultAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.LoadAttributeValue
void System::Xml::XmlLoader::LoadAttributeValue(::System::Xml::XmlNode* parent, bool direct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(direct)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parent, direct);
}
// Autogenerated method: System.Xml.XmlLoader.LoadEntityReferenceNode
::System::Xml::XmlEntityReference* System::Xml::XmlLoader::LoadEntityReferenceNode(bool direct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadEntityReferenceNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadEntityReferenceNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direct)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlEntityReference*, false>(this, ___internal__method, direct);
}
// Autogenerated method: System.Xml.XmlLoader.LoadDeclarationNode
::System::Xml::XmlDeclaration* System::Xml::XmlLoader::LoadDeclarationNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadDeclarationNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDeclarationNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.LoadDocumentTypeNode
::System::Xml::XmlDocumentType* System::Xml::XmlLoader::LoadDocumentTypeNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadDocumentTypeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDocumentTypeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocumentType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.LoadNodeDirect
::System::Xml::XmlNode* System::Xml::XmlLoader::LoadNodeDirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadNodeDirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadNodeDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.LoadAttributeNodeDirect
::System::Xml::XmlAttribute* System::Xml::XmlLoader::LoadAttributeNodeDirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadAttributeNodeDirect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAttributeNodeDirect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlLoader.ParseDocumentType
void System::Xml::XmlLoader::ParseDocumentType(::System::Xml::XmlDocumentType* dtNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ParseDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtNode);
}
// Autogenerated method: System.Xml.XmlLoader.ParseDocumentType
void System::Xml::XmlLoader::ParseDocumentType(::System::Xml::XmlDocumentType* dtNode, bool bUseResolver, ::System::Xml::XmlResolver* resolver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ParseDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtNode), ::il2cpp_utils::ExtractType(bUseResolver), ::il2cpp_utils::ExtractType(resolver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtNode, bUseResolver, resolver);
}
// Autogenerated method: System.Xml.XmlLoader.LoadDocumentType
void System::Xml::XmlLoader::LoadDocumentType(::System::Xml::IDtdInfo* dtdInfo, ::System::Xml::XmlDocumentType* dtNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtdInfo), ::il2cpp_utils::ExtractType(dtNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dtdInfo, dtNode);
}
// Autogenerated method: System.Xml.XmlLoader.GetContext
::System::Xml::XmlParserContext* System::Xml::XmlLoader::GetContext(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::GetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlParserContext*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlLoader.ParsePartialContent
::System::Xml::XmlNamespaceManager* System::Xml::XmlLoader::ParsePartialContent(::System::Xml::XmlNode* parentNode, ::StringW innerxmltext, ::System::Xml::XmlNodeType nt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ParsePartialContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePartialContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(innerxmltext), ::il2cpp_utils::ExtractType(nt)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNamespaceManager*, false>(this, ___internal__method, parentNode, innerxmltext, nt);
}
// Autogenerated method: System.Xml.XmlLoader.LoadInnerXmlElement
void System::Xml::XmlLoader::LoadInnerXmlElement(::System::Xml::XmlElement* node, ::StringW innerxmltext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadInnerXmlElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadInnerXmlElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(innerxmltext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, innerxmltext);
}
// Autogenerated method: System.Xml.XmlLoader.LoadInnerXmlAttribute
void System::Xml::XmlLoader::LoadInnerXmlAttribute(::System::Xml::XmlAttribute* node, ::StringW innerxmltext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::LoadInnerXmlAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadInnerXmlAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(innerxmltext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, innerxmltext);
}
// Autogenerated method: System.Xml.XmlLoader.RemoveDuplicateNamespace
void System::Xml::XmlLoader::RemoveDuplicateNamespace(::System::Xml::XmlElement* elem, ::System::Xml::XmlNamespaceManager* mgr, bool fCheckElemAttrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::RemoveDuplicateNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDuplicateNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elem), ::il2cpp_utils::ExtractType(mgr), ::il2cpp_utils::ExtractType(fCheckElemAttrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, elem, mgr, fCheckElemAttrs);
}
// Autogenerated method: System.Xml.XmlLoader.EntitizeName
::StringW System::Xml::XmlLoader::EntitizeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::EntitizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EntitizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlLoader.ExpandEntity
void System::Xml::XmlLoader::ExpandEntity(::System::Xml::XmlEntity* ent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ExpandEntity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandEntity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ent);
}
// Autogenerated method: System.Xml.XmlLoader.ExpandEntityReference
void System::Xml::XmlLoader::ExpandEntityReference(::System::Xml::XmlEntityReference* eref) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ExpandEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eref)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eref);
}
// Autogenerated method: System.Xml.XmlLoader.CreateInnerXmlReader
::System::Xml::XmlReader* System::Xml::XmlLoader::CreateInnerXmlReader(::StringW xmlFragment, ::System::Xml::XmlNodeType nt, ::System::Xml::XmlParserContext* context, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::CreateInnerXmlReader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInnerXmlReader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlFragment), ::il2cpp_utils::ExtractType(nt), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlReader*, false>(this, ___internal__method, xmlFragment, nt, context, doc);
}
// Autogenerated method: System.Xml.XmlLoader.ParseXmlDeclarationValue
void System::Xml::XmlLoader::ParseXmlDeclarationValue(::StringW strValue, ByRef<::StringW> version, ByRef<::StringW> encoding, ByRef<::StringW> standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::ParseXmlDeclarationValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlLoader", "ParseXmlDeclarationValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strValue), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strValue, byref(version), byref(encoding), byref(standalone));
}
// Autogenerated method: System.Xml.XmlLoader.UnexpectedNodeType
::System::Exception* System::Xml::XmlLoader::UnexpectedNodeType(::System::Xml::XmlNodeType nodetype) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlLoader::UnexpectedNodeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlLoader", "UnexpectedNodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodetype)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodetype);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlName
#include "System/Xml/XmlName.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlName::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String localName
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlName::dyn_localName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_localName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String ns
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlName::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlName::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::XmlName::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlDocument ownerDoc
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& System::Xml::XmlName::dyn_ownerDoc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_ownerDoc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ownerDoc"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlName next
[[deprecated("Use field access instead!")]] ::System::Xml::XmlName*& System::Xml::XmlName::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::XmlName**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlName.get_LocalName
::StringW System::Xml::XmlName::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_LocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_NamespaceURI
::StringW System::Xml::XmlName::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_NamespaceURI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_Prefix
::StringW System::Xml::XmlName::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_Prefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_HashCode
int System::Xml::XmlName::get_HashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_HashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlName::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_OwnerDocument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_Name
::StringW System::Xml::XmlName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::XmlName::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_Validity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_IsDefault
bool System::Xml::XmlName::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_IsNil
bool System::Xml::XmlName::get_IsNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_IsNil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::XmlName::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::XmlName::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::XmlName::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_SchemaElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::XmlName::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::get_SchemaAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlName.Create
::System::Xml::XmlName* System::Xml::XmlName::Create(::StringW prefix, ::StringW localName, ::StringW ns, int hashCode, ::System::Xml::XmlDocument* ownerDoc, ::System::Xml::XmlName* next, ::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlName", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(ns), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(ownerDoc), ::il2cpp_utils::ExtractType(next), ::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlName*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefix, localName, ns, hashCode, ownerDoc, next, schemaInfo);
}
// Autogenerated method: System.Xml.XmlName.Equals
bool System::Xml::XmlName::Equals(::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated method: System.Xml.XmlName.GetHashCode
int System::Xml::XmlName::GetHashCode(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlName::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlName", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNameEx
#include "System/Xml/XmlNameEx.hpp"
// Including type: System.Xml.Schema.XmlSchemaSimpleType
#include "System/Xml/Schema/XmlSchemaSimpleType.hpp"
// Including type: System.Xml.Schema.XmlSchemaType
#include "System/Xml/Schema/XmlSchemaType.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.Schema.XmlSchemaValidity
#include "System/Xml/Schema/XmlSchemaValidity.hpp"
// Including type: System.Xml.Schema.XmlSchemaElement
#include "System/Xml/Schema/XmlSchemaElement.hpp"
// Including type: System.Xml.Schema.XmlSchemaAttribute
#include "System/Xml/Schema/XmlSchemaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte flags
[[deprecated("Use field access instead!")]] uint8_t& System::Xml::XmlNameEx::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaSimpleType memberType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaSimpleType*& System::Xml::XmlNameEx::dyn_memberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::dyn_memberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "memberType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaSimpleType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.XmlSchemaType schemaType
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::XmlSchemaType*& System::Xml::XmlNameEx::dyn_schemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::dyn_schemaType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaType"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::XmlSchemaType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object decl
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlNameEx::dyn_decl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::dyn_decl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decl"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNameEx.SetValidity
void System::Xml::XmlNameEx::SetValidity(::System::Xml::Schema::XmlSchemaValidity value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::SetValidity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValidity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNameEx.SetIsDefault
void System::Xml::XmlNameEx::SetIsDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::SetIsDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNameEx.SetIsNil
void System::Xml::XmlNameEx::SetIsNil(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::SetIsNil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNameEx.get_Validity
::System::Xml::Schema::XmlSchemaValidity System::Xml::XmlNameEx::get_Validity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_Validity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaValidity, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_IsDefault
bool System::Xml::XmlNameEx::get_IsDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_IsDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_IsNil
bool System::Xml::XmlNameEx::get_IsNil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_IsNil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsNil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_MemberType
::System::Xml::Schema::XmlSchemaSimpleType* System::Xml::XmlNameEx::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaSimpleType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_SchemaType
::System::Xml::Schema::XmlSchemaType* System::Xml::XmlNameEx::get_SchemaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_SchemaType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_SchemaElement
::System::Xml::Schema::XmlSchemaElement* System::Xml::XmlNameEx::get_SchemaElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_SchemaElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.get_SchemaAttribute
::System::Xml::Schema::XmlSchemaAttribute* System::Xml::XmlNameEx::get_SchemaAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::get_SchemaAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SchemaAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::XmlSchemaAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNameEx.Equals
bool System::Xml::XmlNameEx::Equals(::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNameEx::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(schemaInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, schemaInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNamedNodeMap
#include "System/Xml/XmlNamedNodeMap.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode parent
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNamedNodeMap::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList nodes
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNamedNodeMap::SmallXmlNodeList& System::Xml::XmlNamedNodeMap::dyn_nodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::dyn_nodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodes"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNamedNodeMap::SmallXmlNodeList*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.get_Count
int System::Xml::XmlNamedNodeMap::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.GetNamedItem
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::GetNamedItem(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::GetNamedItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNamedItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.SetNamedItem
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::SetNamedItem(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SetNamedItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNamedItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNamedNodeMap::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.FindNodeOffset
int System::Xml::XmlNamedNodeMap::FindNodeOffset(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::FindNodeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNodeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.FindNodeOffset
int System::Xml::XmlNamedNodeMap::FindNodeOffset(::StringW localName, ::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::FindNodeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindNodeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localName), ::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, localName, namespaceURI);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.AddNode
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::AddNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::AddNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.AddNodeForLoad
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::AddNodeForLoad(::System::Xml::XmlNode* node, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::AddNodeForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNodeForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, node, doc);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.RemoveNodeAt
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::RemoveNodeAt(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::RemoveNodeAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNodeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.ReplaceNodeAt
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::ReplaceNodeAt(int i, ::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::ReplaceNodeAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceNodeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, i, node);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap.InsertNodeAt
::System::Xml::XmlNode* System::Xml::XmlNamedNodeMap::InsertNodeAt(int i, ::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::InsertNodeAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertNodeAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, i, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList
#include "System/Xml/XmlNamedNodeMap.hpp"
// Including type: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList/System.Xml.SingleObjectEnumerator
#include "System/Xml/XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object field
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlNamedNodeMap::SmallXmlNodeList::dyn_field() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::dyn_field");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "field"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.get_Count
int System::Xml::XmlNamedNodeMap::SmallXmlNodeList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.get_Item
::Il2CppObject* System::Xml::XmlNamedNodeMap::SmallXmlNodeList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.Add
void System::Xml::XmlNamedNodeMap::SmallXmlNodeList::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.RemoveAt
void System::Xml::XmlNamedNodeMap::SmallXmlNodeList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.Insert
void System::Xml::XmlNamedNodeMap::SmallXmlNodeList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNamedNodeMap::SmallXmlNodeList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList/System.Xml.SingleObjectEnumerator
#include "System/Xml/XmlNamedNodeMap_SmallXmlNodeList_SingleObjectEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object loneValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::dyn_loneValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::dyn_loneValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loneValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 position
[[deprecated("Use field access instead!")]] int& System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList/System.Xml.SingleObjectEnumerator.get_Current
::Il2CppObject* System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList/System.Xml.SingleObjectEnumerator.MoveNext
bool System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNamedNodeMap/System.Xml.SmallXmlNodeList/System.Xml.SingleObjectEnumerator.Reset
void System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNamedNodeMap::SmallXmlNodeList::SingleObjectEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNodeList
#include "System/Xml/XmlNodeList.hpp"
// Including type: System.Xml.XmlAttributeCollection
#include "System/Xml/XmlAttributeCollection.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlLinkedNode
#include "System/Xml/XmlLinkedNode.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.XmlNodeChangedEventArgs
#include "System/Xml/XmlNodeChangedEventArgs.hpp"
// Including type: System.Xml.XmlNodeChangedAction
#include "System/Xml/XmlNodeChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.XmlNode parentNode
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNode::dyn_parentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::dyn_parentNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentNode"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNode.get_Name
::StringW System::Xml::XmlNode::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_Value
::StringW System::Xml::XmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.set_Value
void System::Xml::XmlNode::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNode.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_ChildNodes
::System::Xml::XmlNodeList* System::Xml::XmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_PreviousSibling
::System::Xml::XmlNode* System::Xml::XmlNode::get_PreviousSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_PreviousSibling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PreviousSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_NextSibling
::System::Xml::XmlNode* System::Xml::XmlNode::get_NextSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_NextSibling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_Attributes
::System::Xml::XmlAttributeCollection* System::Xml::XmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlAttributeCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_OwnerDocument
::System::Xml::XmlDocument* System::Xml::XmlNode::get_OwnerDocument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_OwnerDocument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OwnerDocument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_FirstChild
::System::Xml::XmlNode* System::Xml::XmlNode::get_FirstChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_FirstChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FirstChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_LastChild
::System::Xml::XmlNode* System::Xml::XmlNode::get_LastChild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_LastChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_IsContainer
bool System::Xml::XmlNode::get_IsContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_IsContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_LastNode
::System::Xml::XmlLinkedNode* System::Xml::XmlNode::get_LastNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlLinkedNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.set_LastNode
void System::Xml::XmlNode::set_LastNode(::System::Xml::XmlLinkedNode* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::set_LastNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNode.get_HasChildNodes
bool System::Xml::XmlNode::get_HasChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_HasChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_NamespaceURI
::StringW System::Xml::XmlNode::get_NamespaceURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_NamespaceURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_Prefix
::StringW System::Xml::XmlNode::get_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_Prefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Prefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_LocalName
::StringW System::Xml::XmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_IsReadOnly
bool System::Xml::XmlNode::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_InnerText
::StringW System::Xml::XmlNode::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.set_InnerText
void System::Xml::XmlNode::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNode.set_InnerXml
void System::Xml::XmlNode::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNode.get_BaseURI
::StringW System::Xml::XmlNode::get_BaseURI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_BaseURI");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseURI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_Document
::System::Xml::XmlDocument* System::Xml::XmlNode::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlDocument*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.get_IsText
bool System::Xml::XmlNode::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::get_IsText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.AncestorNode
bool System::Xml::XmlNode::AncestorNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::AncestorNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AncestorNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlNode.RemoveChild
::System::Xml::XmlNode* System::Xml::XmlNode::RemoveChild(::System::Xml::XmlNode* oldChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::RemoveChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, oldChild);
}
// Autogenerated method: System.Xml.XmlNode.AppendChild
::System::Xml::XmlNode* System::Xml::XmlNode::AppendChild(::System::Xml::XmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated method: System.Xml.XmlNode.AppendChildForLoad
::System::Xml::XmlNode* System::Xml::XmlNode::AppendChildForLoad(::System::Xml::XmlNode* newChild, ::System::Xml::XmlDocument* doc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::AppendChildForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(doc)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild, doc);
}
// Autogenerated method: System.Xml.XmlNode.IsValidChildType
bool System::Xml::XmlNode::IsValidChildType(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::IsValidChildType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlNode.CanInsertAfter
bool System::Xml::XmlNode::CanInsertAfter(::System::Xml::XmlNode* newChild, ::System::Xml::XmlNode* refChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::CanInsertAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanInsertAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild), ::il2cpp_utils::ExtractType(refChild)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, newChild, refChild);
}
// Autogenerated method: System.Xml.XmlNode.CloneNode
::System::Xml::XmlNode* System::Xml::XmlNode::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlNode.CopyChildren
void System::Xml::XmlNode::CopyChildren(::System::Xml::XmlDocument* doc, ::System::Xml::XmlNode* container, bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::CopyChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doc), ::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(deep)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, doc, container, deep);
}
// Autogenerated method: System.Xml.XmlNode.HasReadOnlyParent
bool System::Xml::XmlNode::HasReadOnlyParent(::System::Xml::XmlNode* n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::HasReadOnlyParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlNode", "HasReadOnlyParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Xml.XmlNode.System.ICloneable.Clone
::Il2CppObject* System::Xml::XmlNode::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNode::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.AppendChildText
void System::Xml::XmlNode::AppendChildText(::System::Text::StringBuilder* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::AppendChildText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChildText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, builder);
}
// Autogenerated method: System.Xml.XmlNode.RemoveAll
void System::Xml::XmlNode::RemoveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::RemoveAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNode.GetPrefixOfNamespace
::StringW System::Xml::XmlNode::GetPrefixOfNamespace(::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceURI);
}
// Autogenerated method: System.Xml.XmlNode.GetPrefixOfNamespaceStrict
::StringW System::Xml::XmlNode::GetPrefixOfNamespaceStrict(::StringW namespaceURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::GetPrefixOfNamespaceStrict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespaceStrict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceURI)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceURI);
}
// Autogenerated method: System.Xml.XmlNode.SetParent
void System::Xml::XmlNode::SetParent(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::SetParent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlNode.SetParentForLoad
void System::Xml::XmlNode::SetParentForLoad(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::SetParentForLoad");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetParentForLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Xml.XmlNode.SplitName
void System::Xml::XmlNode::SplitName(::StringW name, ByRef<::StringW> prefix, ByRef<::StringW> localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::SplitName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlNode", "SplitName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(prefix), byref(localName));
}
// Autogenerated method: System.Xml.XmlNode.FindChild
::System::Xml::XmlNode* System::Xml::XmlNode::FindChild(::System::Xml::XmlNodeType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::FindChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Xml.XmlNode.GetEventArgs
::System::Xml::XmlNodeChangedEventArgs* System::Xml::XmlNode::GetEventArgs(::System::Xml::XmlNode* node, ::System::Xml::XmlNode* oldParent, ::System::Xml::XmlNode* newParent, ::StringW oldValue, ::StringW newValue, ::System::Xml::XmlNodeChangedAction action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::GetEventArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(oldParent), ::il2cpp_utils::ExtractType(newParent), ::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue), ::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeChangedEventArgs*, false>(this, ___internal__method, node, oldParent, newParent, oldValue, newValue, action);
}
// Autogenerated method: System.Xml.XmlNode.BeforeEvent
void System::Xml::XmlNode::BeforeEvent(::System::Xml::XmlNodeChangedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::BeforeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Xml.XmlNode.AfterEvent
void System::Xml::XmlNode::AfterEvent(::System::Xml::XmlNodeChangedEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::AfterEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Xml.XmlNode.NestTextNodes
void System::Xml::XmlNode::NestTextNodes(::System::Xml::XmlNode* prevNode, ::System::Xml::XmlNode* nextNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::NestTextNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlNode", "NestTextNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevNode), ::il2cpp_utils::ExtractType(nextNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prevNode, nextNode);
}
// Autogenerated method: System.Xml.XmlNode.UnnestTextNodes
void System::Xml::XmlNode::UnnestTextNodes(::System::Xml::XmlNode* prevNode, ::System::Xml::XmlNode* nextNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNode::UnnestTextNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlNode", "UnnestTextNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevNode), ::il2cpp_utils::ExtractType(nextNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prevNode, nextNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNodeChangedEventArgs
#include "System/Xml/XmlNodeChangedEventArgs.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNodeChangedAction action
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNodeChangedAction& System::Xml::XmlNodeChangedEventArgs::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNodeChangedAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode node
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNodeChangedEventArgs::dyn_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode oldParent
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNodeChangedEventArgs::dyn_oldParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_oldParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldParent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNode newParent
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& System::Xml::XmlNodeChangedEventArgs::dyn_newParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_newParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newParent"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String oldValue
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNodeChangedEventArgs::dyn_oldValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_oldValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oldValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String newValue
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNodeChangedEventArgs::dyn_newValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::dyn_newValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "newValue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNodeChangedEventArgs.get_Action
::System::Xml::XmlNodeChangedAction System::Xml::XmlNodeChangedEventArgs::get_Action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventArgs::get_Action");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Action", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeChangedAction, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlNodeChangedEventHandler
#include "System/Xml/XmlNodeChangedEventHandler.hpp"
// Including type: System.Xml.XmlNodeChangedEventArgs
#include "System/Xml/XmlNodeChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlNodeChangedEventHandler.Invoke
void System::Xml::XmlNodeChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::Xml::XmlNodeChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Xml.XmlNodeChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::Xml::XmlNodeChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::Xml::XmlNodeChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.Xml.XmlNodeChangedEventHandler.EndInvoke
void System::Xml::XmlNodeChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNodeList
#include "System/Xml/XmlNodeList.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlNodeList.get_Count
int System::Xml::XmlNodeList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNodeList.GetEnumerator
::System::Collections::IEnumerator* System::Xml::XmlNodeList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNodeList.System.IDisposable.Dispose
void System::Xml::XmlNodeList::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeList::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNodeList.PrivateDisposeNodeList
void System::Xml::XmlNodeList::PrivateDisposeNodeList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNodeList::PrivateDisposeNodeList");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrivateDisposeNodeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlNotation
#include "System/Xml/XmlNotation.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNotation::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNotation::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlNotation.get_Name
::StringW System::Xml::XmlNotation::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNotation.get_LocalName
::StringW System::Xml::XmlNotation::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNotation.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlNotation::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNotation.get_IsReadOnly
bool System::Xml::XmlNotation::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlNotation.set_InnerXml
void System::Xml::XmlNotation::set_InnerXml(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::set_InnerXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlNotation.CloneNode
::System::Xml::XmlNode* System::Xml::XmlNotation::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlNotation::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlProcessingInstruction
#include "System/Xml/XmlProcessingInstruction.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String target
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlProcessingInstruction::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::dyn_target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String data
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlProcessingInstruction::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.set_Data
void System::Xml::XmlProcessingInstruction::set_Data(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::set_Data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.get_Name
::StringW System::Xml::XmlProcessingInstruction::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.get_LocalName
::StringW System::Xml::XmlProcessingInstruction::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.get_Value
::StringW System::Xml::XmlProcessingInstruction::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.set_Value
void System::Xml::XmlProcessingInstruction::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.get_InnerText
::StringW System::Xml::XmlProcessingInstruction::get_InnerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::get_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.set_InnerText
void System::Xml::XmlProcessingInstruction::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlProcessingInstruction::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlProcessingInstruction.CloneNode
::System::Xml::XmlNode* System::Xml::XmlProcessingInstruction::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlProcessingInstruction::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlSignificantWhitespace
#include "System/Xml/XmlSignificantWhitespace.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_Name
::StringW System::Xml::XmlSignificantWhitespace::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_LocalName
::StringW System::Xml::XmlSignificantWhitespace::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlSignificantWhitespace::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlSignificantWhitespace::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_Value
::StringW System::Xml::XmlSignificantWhitespace::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.set_Value
void System::Xml::XmlSignificantWhitespace::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.get_IsText
bool System::Xml::XmlSignificantWhitespace::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::get_IsText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlSignificantWhitespace.CloneNode
::System::Xml::XmlNode* System::Xml::XmlSignificantWhitespace::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlSignificantWhitespace::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlText
#include "System/Xml/XmlText.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlText.get_Name
::StringW System::Xml::XmlText::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.get_LocalName
::StringW System::Xml::XmlText::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlText::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlText::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.get_Value
::StringW System::Xml::XmlText::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.set_Value
void System::Xml::XmlText::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlText.get_IsText
bool System::Xml::XmlText::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::get_IsText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlText.CloneNode
::System::Xml::XmlNode* System::Xml::XmlText::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlText::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlUnspecifiedAttribute
#include "System/Xml/XmlUnspecifiedAttribute.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean fSpecified
[[deprecated("Use field access instead!")]] bool& System::Xml::XmlUnspecifiedAttribute::dyn_fSpecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::dyn_fSpecified");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fSpecified"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.SetSpecified
void System::Xml::XmlUnspecifiedAttribute::SetSpecified(bool f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::SetSpecified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpecified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, f);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.get_Specified
bool System::Xml::XmlUnspecifiedAttribute::get_Specified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::get_Specified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Specified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.set_InnerText
void System::Xml::XmlUnspecifiedAttribute::set_InnerText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::set_InnerText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InnerText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.CloneNode
::System::Xml::XmlNode* System::Xml::XmlUnspecifiedAttribute::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.RemoveChild
::System::Xml::XmlNode* System::Xml::XmlUnspecifiedAttribute::RemoveChild(::System::Xml::XmlNode* oldChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::RemoveChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, oldChild);
}
// Autogenerated method: System.Xml.XmlUnspecifiedAttribute.AppendChild
::System::Xml::XmlNode* System::Xml::XmlUnspecifiedAttribute::AppendChild(::System::Xml::XmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlUnspecifiedAttribute::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlWhitespace
#include "System/Xml/XmlWhitespace.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlWhitespace.get_Name
::StringW System::Xml::XmlWhitespace::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.get_LocalName
::StringW System::Xml::XmlWhitespace::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.get_NodeType
::System::Xml::XmlNodeType System::Xml::XmlWhitespace::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.get_ParentNode
::System::Xml::XmlNode* System::Xml::XmlWhitespace::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.get_Value
::StringW System::Xml::XmlWhitespace::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.set_Value
void System::Xml::XmlWhitespace::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlWhitespace.get_IsText
bool System::Xml::XmlWhitespace::get_IsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::get_IsText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlWhitespace.CloneNode
::System::Xml::XmlNode* System::Xml::XmlWhitespace::CloneNode(bool deep) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlWhitespace::CloneNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deep)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNode*, false>(this, ___internal__method, deep);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.EmptyEnumerator
#include "System/Xml/EmptyEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.EmptyEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Xml::EmptyEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EmptyEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.EmptyEnumerator.System.Collections.IEnumerator.MoveNext
bool System::Xml::EmptyEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EmptyEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.EmptyEnumerator.System.Collections.IEnumerator.Reset
void System::Xml::EmptyEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::EmptyEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.IXmlNamespaceResolver
#include "System/Xml/IXmlNamespaceResolver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupNamespace
::StringW System::Xml::IXmlNamespaceResolver::LookupNamespace(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IXmlNamespaceResolver::LookupNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, prefix);
}
// Autogenerated method: System.Xml.IXmlNamespaceResolver.LookupPrefix
::StringW System::Xml::IXmlNamespaceResolver::LookupPrefix(::StringW namespaceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::IXmlNamespaceResolver::LookupPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookupPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.LineInfo
#include "System/Xml/LineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::LineInfo::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::dyn_lineNo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::LineInfo::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::dyn_linePos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.LineInfo..ctor
// ABORTED elsewhere.  System::Xml::LineInfo::LineInfo(int lineNo, int linePos)
// Autogenerated method: System.Xml.LineInfo.Set
void System::Xml::LineInfo::Set(int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::LineInfo::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineNo, linePos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NameTable
#include "System/Xml/NameTable.hpp"
// Including type: System.Xml.NameTable/System.Xml.Entry
#include "System/Xml/NameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.NameTable/System.Xml.Entry[] entries
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Xml::NameTable::Entry*>& System::Xml::NameTable::dyn_entries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_entries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "entries"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Xml::NameTable::Entry*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 mask
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_mask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 hashCodeRandomizer
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::dyn_hashCodeRandomizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::dyn_hashCodeRandomizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCodeRandomizer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.NameTable.AddEntry
::StringW System::Xml::NameTable::AddEntry(::StringW str, int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::AddEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, str, hashCode);
}
// Autogenerated method: System.Xml.NameTable.Grow
void System::Xml::NameTable::Grow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Grow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Grow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.NameTable.TextEquals
bool System::Xml::NameTable::TextEquals(::StringW str1, ::ArrayW<::Il2CppChar> str2, int str2Start, int str2Length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::TextEquals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "NameTable", "TextEquals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(str2Start), ::il2cpp_utils::ExtractType(str2Length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str1, str2, str2Start, str2Length);
}
// Autogenerated method: System.Xml.NameTable.Add
::StringW System::Xml::NameTable::Add(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Xml.NameTable.Add
::StringW System::Xml::NameTable::Add(::ArrayW<::Il2CppChar> key, int start, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, key, start, len);
}
// Autogenerated method: System.Xml.NameTable.Get
::StringW System::Xml::NameTable::Get(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.NameTable/System.Xml.Entry
#include "System/Xml/NameTable_Entry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String str
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::NameTable::Entry::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_str");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 hashCode
[[deprecated("Use field access instead!")]] int& System::Xml::NameTable::Entry::dyn_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_hashCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hashCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.NameTable/System.Xml.Entry next
[[deprecated("Use field access instead!")]] ::System::Xml::NameTable::Entry*& System::Xml::NameTable::Entry::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::NameTable::Entry::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::NameTable::Entry**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ref
#include "System/Xml/Ref.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ref.Equal
bool System::Xml::Ref::Equal(::StringW strA, ::StringW strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ref::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ref", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strA), ::il2cpp_utils::ExtractType(strB)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser
#include "System/Xml/DtdParser.hpp"
// Including type: System.Xml.DtdParser/System.Xml.Token
#include "System/Xml/DtdParser_Token.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Xml.DtdParser/System.Xml.LiteralType
#include "System/Xml/DtdParser_LiteralType.hpp"
// Including type: System.Xml.DtdParser/System.Xml.UndeclaredNotation
#include "System/Xml/DtdParser_UndeclaredNotation.hpp"
// Including type: System.Xml.DtdParser/System.Xml.ParseElementOnlyContent_LocalFrame
#include "System/Xml/DtdParser_ParseElementOnlyContent_LocalFrame.hpp"
// Including type: System.Xml.IDtdParserAdapter
#include "System/Xml/IDtdParserAdapter.hpp"
// Including type: System.Xml.IDtdParserAdapterWithValidation
#include "System/Xml/IDtdParserAdapterWithValidation.hpp"
// Including type: System.Xml.XmlNameTable
#include "System/Xml/XmlNameTable.hpp"
// Including type: System.Xml.Schema.SchemaInfo
#include "System/Xml/Schema/SchemaInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Xml.IDtdInfo
#include "System/Xml/IDtdInfo.hpp"
// Including type: System.Xml.Schema.SchemaAttDef
#include "System/Xml/Schema/SchemaAttDef.hpp"
// Including type: System.Xml.Schema.SchemaElementDecl
#include "System/Xml/Schema/SchemaElementDecl.hpp"
// Including type: System.Xml.Schema.ParticleContentValidator
#include "System/Xml/Schema/ParticleContentValidator.hpp"
// Including type: System.Xml.XmlQualifiedName
#include "System/Xml/XmlQualifiedName.hpp"
// Including type: System.Xml.Schema.SchemaEntity
#include "System/Xml/Schema/SchemaEntity.hpp"
// Including type: System.Xml.Schema.XmlSeverityType
#include "System/Xml/Schema/XmlSeverityType.hpp"
// Including type: System.Xml.Schema.XmlSchemaException
#include "System/Xml/Schema/XmlSchemaException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdParserAdapter readerAdapter
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdParserAdapter*& System::Xml::DtdParser::dyn_readerAdapter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_readerAdapter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerAdapter"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdParserAdapter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.IDtdParserAdapterWithValidation readerAdapterWithValidation
[[deprecated("Use field access instead!")]] ::System::Xml::IDtdParserAdapterWithValidation*& System::Xml::DtdParser::dyn_readerAdapterWithValidation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_readerAdapterWithValidation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readerAdapterWithValidation"))->offset;
  return *reinterpret_cast<::System::Xml::IDtdParserAdapterWithValidation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlNameTable nameTable
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNameTable*& System::Xml::DtdParser::dyn_nameTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_nameTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameTable"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNameTable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.Schema.SchemaInfo schemaInfo
[[deprecated("Use field access instead!")]] ::System::Xml::Schema::SchemaInfo*& System::Xml::DtdParser::dyn_schemaInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_schemaInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "schemaInfo"))->offset;
  return *reinterpret_cast<::System::Xml::Schema::SchemaInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlCharType xmlCharType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlCharType& System::Xml::DtdParser::dyn_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_xmlCharType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlCharType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlCharType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String systemId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_systemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_systemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "systemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String publicId
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_publicId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_publicId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean normalize
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_normalize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normalize"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validate
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_validate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean supportNamespaces
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_supportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_supportNamespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportNamespaces"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean v1Compat
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_v1Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_v1Compat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v1Compat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] chars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Xml::DtdParser::dyn_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_chars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charsUsed
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_charsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_charsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charsUsed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 curPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_curPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_curPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "curPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/System.Xml.ScanningFunction scanningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_scanningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_scanningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scanningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/System.Xml.ScanningFunction nextScaningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_nextScaningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_nextScaningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextScaningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.DtdParser/System.Xml.ScanningFunction savedScanningFunction
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::ScanningFunction& System::Xml::DtdParser::dyn_savedScanningFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_savedScanningFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "savedScanningFunction"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::ScanningFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean whitespaceSeen
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_whitespaceSeen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_whitespaceSeen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "whitespaceSeen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tokenStartPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_tokenStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_tokenStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenStartPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 colonPos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_colonPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_colonPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colonPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder internalSubsetValueSb
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::DtdParser::dyn_internalSubsetValueSb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_internalSubsetValueSb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalSubsetValueSb"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 externalEntitiesDepth
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_externalEntitiesDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_externalEntitiesDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalEntitiesDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 currentEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_currentEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_currentEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean freeFloatingDtd
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_freeFloatingDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_freeFloatingDtd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "freeFloatingDtd"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasFreeFloatingInternalSubset
[[deprecated("Use field access instead!")]] bool& System::Xml::DtdParser::dyn_hasFreeFloatingInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_hasFreeFloatingInternalSubset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasFreeFloatingInternalSubset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Xml::DtdParser::dyn_stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 condSectionDepth
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::dyn_condSectionDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_condSectionDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condSectionDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.LineInfo literalLineInfo
[[deprecated("Use field access instead!")]] ::System::Xml::LineInfo& System::Xml::DtdParser::dyn_literalLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_literalLineInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literalLineInfo"))->offset;
  return *reinterpret_cast<::System::Xml::LineInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char literalQuoteChar
[[deprecated("Use field access instead!")]] ::Il2CppChar& System::Xml::DtdParser::dyn_literalQuoteChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_literalQuoteChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "literalQuoteChar"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String documentBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_documentBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_documentBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "documentBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String externalDtdBaseUri
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::dyn_externalDtdBaseUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_externalDtdBaseUri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalDtdBaseUri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.Xml.DtdParser/System.Xml.UndeclaredNotation> undeclaredNotations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::DtdParser::UndeclaredNotation*>*& System::Xml::DtdParser::dyn_undeclaredNotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_undeclaredNotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undeclaredNotations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::System::Xml::DtdParser::UndeclaredNotation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] condSectionEntityIds
[[deprecated("Use field access instead!")]] ::ArrayW<int>& System::Xml::DtdParser::dyn_condSectionEntityIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::dyn_condSectionEntityIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "condSectionEntityIds"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.DtdParser.get_ParsingInternalSubset
bool System::Xml::DtdParser::get_ParsingInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_ParsingInternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingInternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_IgnoreEntityReferences
bool System::Xml::DtdParser::get_IgnoreEntityReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_IgnoreEntityReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreEntityReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_SaveInternalSubsetValue
bool System::Xml::DtdParser::get_SaveInternalSubsetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_SaveInternalSubsetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SaveInternalSubsetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_ParsingTopLevelMarkup
bool System::Xml::DtdParser::get_ParsingTopLevelMarkup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_ParsingTopLevelMarkup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParsingTopLevelMarkup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_SupportNamespaces
bool System::Xml::DtdParser::get_SupportNamespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_SupportNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_Normalize
bool System::Xml::DtdParser::get_Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_LineNo
int System::Xml::DtdParser::get_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_LineNo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_LinePos
int System::Xml::DtdParser::get_LinePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_LinePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.get_BaseUriStr
::StringW System::Xml::DtdParser::get_BaseUriStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::get_BaseUriStr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseUriStr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Create
::System::Xml::IDtdParser* System::Xml::DtdParser::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "DtdParser", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdParser*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Initialize
void System::Xml::DtdParser::Initialize(::System::Xml::IDtdParserAdapter* readerAdapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readerAdapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, readerAdapter);
}
// Autogenerated method: System.Xml.DtdParser.InitializeFreeFloatingDtd
void System::Xml::DtdParser::InitializeFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::InitializeFreeFloatingDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(docTypeName), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset), ::il2cpp_utils::ExtractType(adapter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated method: System.Xml.DtdParser.System.Xml.IDtdParser.ParseInternalDtd
::System::Xml::IDtdInfo* System::Xml::DtdParser::System_Xml_IDtdParser_ParseInternalDtd(::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::System.Xml.IDtdParser.ParseInternalDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParser.ParseInternalDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(adapter), ::il2cpp_utils::ExtractType(saveInternalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, adapter, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.System.Xml.IDtdParser.ParseFreeFloatingDtd
::System::Xml::IDtdInfo* System::Xml::DtdParser::System_Xml_IDtdParser_ParseFreeFloatingDtd(::StringW baseUri, ::StringW docTypeName, ::StringW publicId, ::StringW systemId, ::StringW internalSubset, ::System::Xml::IDtdParserAdapter* adapter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::System.Xml.IDtdParser.ParseFreeFloatingDtd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Xml.IDtdParser.ParseFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseUri), ::il2cpp_utils::ExtractType(docTypeName), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset), ::il2cpp_utils::ExtractType(adapter)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::IDtdInfo*, false>(this, ___internal__method, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
}
// Autogenerated method: System.Xml.DtdParser.Parse
void System::Xml::DtdParser::Parse(bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveInternalSubset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.ParseInDocumentDtd
void System::Xml::DtdParser::ParseInDocumentDtd(bool saveInternalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseInDocumentDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInDocumentDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saveInternalSubset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saveInternalSubset);
}
// Autogenerated method: System.Xml.DtdParser.ParseFreeFloatingDtd
void System::Xml::DtdParser::ParseFreeFloatingDtd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseFreeFloatingDtd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseFreeFloatingDtd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseInternalSubset
void System::Xml::DtdParser::ParseInternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseInternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseExternalSubset
void System::Xml::DtdParser::ParseExternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseExternalSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseSubset
void System::Xml::DtdParser::ParseSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseSubset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistDecl
void System::Xml::DtdParser::ParseAttlistDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistType
void System::Xml::DtdParser::ParseAttlistType(::System::Xml::Schema::SchemaAttDef* attrDef, ::System::Xml::Schema::SchemaElementDecl* elementDecl, bool ignoreErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrDef), ::il2cpp_utils::ExtractType(elementDecl), ::il2cpp_utils::ExtractType(ignoreErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrDef, elementDecl, ignoreErrors);
}
// Autogenerated method: System.Xml.DtdParser.ParseAttlistDefault
void System::Xml::DtdParser::ParseAttlistDefault(::System::Xml::Schema::SchemaAttDef* attrDef, bool ignoreErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseAttlistDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAttlistDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attrDef), ::il2cpp_utils::ExtractType(ignoreErrors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attrDef, ignoreErrors);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementDecl
void System::Xml::DtdParser::ParseElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementOnlyContent
void System::Xml::DtdParser::ParseElementOnlyContent(::System::Xml::Schema::ParticleContentValidator* pcv, int startParenEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementOnlyContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv), ::il2cpp_utils::ExtractType(startParenEntityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv, startParenEntityId);
}
// Autogenerated method: System.Xml.DtdParser.ParseHowMany
void System::Xml::DtdParser::ParseHowMany(::System::Xml::Schema::ParticleContentValidator* pcv) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseHowMany");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseHowMany", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv);
}
// Autogenerated method: System.Xml.DtdParser.ParseElementMixedContent
void System::Xml::DtdParser::ParseElementMixedContent(::System::Xml::Schema::ParticleContentValidator* pcv, int startParenEntityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementMixedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseElementMixedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pcv), ::il2cpp_utils::ExtractType(startParenEntityId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pcv, startParenEntityId);
}
// Autogenerated method: System.Xml.DtdParser.ParseEntityDecl
void System::Xml::DtdParser::ParseEntityDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseEntityDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseEntityDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseNotationDecl
void System::Xml::DtdParser::ParseNotationDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseNotationDecl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseNotationDecl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.AddUndeclaredNotation
void System::Xml::DtdParser::AddUndeclaredNotation(::StringW notationName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::AddUndeclaredNotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUndeclaredNotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notationName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, notationName);
}
// Autogenerated method: System.Xml.DtdParser.ParseComment
void System::Xml::DtdParser::ParseComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParsePI
void System::Xml::DtdParser::ParsePI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParsePI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsePI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseCondSection
void System::Xml::DtdParser::ParseCondSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseCondSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseCondSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ParseExternalId
void System::Xml::DtdParser::ParseExternalId(::System::Xml::DtdParser::Token idTokenType, ::System::Xml::DtdParser::Token declType, ByRef<::StringW> publicId, ByRef<::StringW> systemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseExternalId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseExternalId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idTokenType), ::il2cpp_utils::ExtractType(declType), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idTokenType, declType, byref(publicId), byref(systemId));
}
// Autogenerated method: System.Xml.DtdParser.GetToken
::System::Xml::DtdParser::Token System::Xml::DtdParser::GetToken(bool needWhiteSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(needWhiteSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method, needWhiteSpace);
}
// Autogenerated method: System.Xml.DtdParser.ScanSubsetContent
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanSubsetContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanSubsetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanSubsetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNameExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNameExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNameExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNameExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQNameExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanQNameExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQNameExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQNameExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNmtokenExpected
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNmtokenExpected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNmtokenExpected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNmtokenExpected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanDoctype1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanDoctype1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanDoctype1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDoctype1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanDoctype2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanDoctype2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanDoctype2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDoctype2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanClosingTag
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanClosingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanClosingTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanClosingTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement4
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement5
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement6
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanElement7
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanElement7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanElement7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanElement7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist4
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist5
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist6
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanAttlist7
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanAttlist7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanAttlist7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanAttlist7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanLiteral
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanLiteral(::System::Xml::DtdParser::LiteralType literalType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanLiteral");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanLiteral", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(literalType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method, literalType);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntityName
::System::Xml::XmlQualifiedName* System::Xml::DtdParser::ScanEntityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntityName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntityName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNotation1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanNotation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNotation1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNotation1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanSystemId
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanSystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanSystemId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanSystemId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanEntity3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanEntity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanEntity3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanEntity3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanPublicId1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanPublicId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanPublicId1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanPublicId1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanPublicId2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanPublicId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanPublicId2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanPublicId2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection1
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection2
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanCondSection3
::System::Xml::DtdParser::Token System::Xml::DtdParser::ScanCondSection3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanCondSection3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanCondSection3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::DtdParser::Token, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanName
void System::Xml::DtdParser::ScanName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQName
void System::Xml::DtdParser::ScanQName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanQName
void System::Xml::DtdParser::ScanQName(bool isQName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isQName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isQName);
}
// Autogenerated method: System.Xml.DtdParser.ReadDataInName
bool System::Xml::DtdParser::ReadDataInName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ReadDataInName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDataInName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ScanNmtoken
void System::Xml::DtdParser::ScanNmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanNmtoken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanNmtoken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.EatPublicKeyword
bool System::Xml::DtdParser::EatPublicKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::EatPublicKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatPublicKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.EatSystemKeyword
bool System::Xml::DtdParser::EatSystemKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::EatSystemKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EatSystemKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetNameQualified
::System::Xml::XmlQualifiedName* System::Xml::DtdParser::GetNameQualified(bool canHavePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNameQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canHavePrefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlQualifiedName*, false>(this, ___internal__method, canHavePrefix);
}
// Autogenerated method: System.Xml.DtdParser.GetNameString
::StringW System::Xml::DtdParser::GetNameString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNameString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNameString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetNmtokenString
::StringW System::Xml::DtdParser::GetNmtokenString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetNmtokenString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNmtokenString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetValue
::StringW System::Xml::DtdParser::GetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.GetValueWithStrippedSpaces
::StringW System::Xml::DtdParser::GetValueWithStrippedSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::GetValueWithStrippedSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueWithStrippedSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.ReadData
int System::Xml::DtdParser::ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.LoadParsingBuffer
void System::Xml::DtdParser::LoadParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LoadParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.SaveParsingBuffer
void System::Xml::DtdParser::SaveParsingBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SaveParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.SaveParsingBuffer
void System::Xml::DtdParser::SaveParsingBuffer(int internalSubsetValueEndPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SaveParsingBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveParsingBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(internalSubsetValueEndPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, internalSubsetValueEndPos);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityReference
bool System::Xml::DtdParser::HandleEntityReference(bool paramEntity, bool inLiteral, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(inLiteral), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, paramEntity, inLiteral, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityReference
bool System::Xml::DtdParser::HandleEntityReference(::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool inLiteral, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(inLiteral), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, entityName, paramEntity, inLiteral, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.HandleEntityEnd
bool System::Xml::DtdParser::HandleEntityEnd(bool inLiteral) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::HandleEntityEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEntityEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inLiteral)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, inLiteral);
}
// Autogenerated method: System.Xml.DtdParser.VerifyEntityReference
::System::Xml::Schema::SchemaEntity* System::Xml::DtdParser::VerifyEntityReference(::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool mustBeDeclared, bool inAttribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::VerifyEntityReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyEntityReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(entityName), ::il2cpp_utils::ExtractType(paramEntity), ::il2cpp_utils::ExtractType(mustBeDeclared), ::il2cpp_utils::ExtractType(inAttribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Schema::SchemaEntity*, false>(this, ___internal__method, entityName, paramEntity, mustBeDeclared, inAttribute);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(int pos, ::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, severity, code, arg);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::StringW code, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, code, arg);
}
// Autogenerated method: System.Xml.DtdParser.SendValidationEvent
void System::Xml::DtdParser::SendValidationEvent(::System::Xml::Schema::XmlSeverityType severity, ::System::Xml::Schema::XmlSchemaException* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::SendValidationEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendValidationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(severity), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, severity, e);
}
// Autogenerated method: System.Xml.DtdParser.IsAttributeValueType
bool System::Xml::DtdParser::IsAttributeValueType(::System::Xml::DtdParser::Token token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::IsAttributeValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAttributeValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Xml.DtdParser.OnUnexpectedError
void System::Xml::DtdParser::OnUnexpectedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::OnUnexpectedError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUnexpectedError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res, ::StringW arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res, arg);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(int curPos, ::StringW res, ::ArrayW<::StringW> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curPos), ::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, curPos, res, args);
}
// Autogenerated method: System.Xml.DtdParser.Throw
void System::Xml::DtdParser::Throw(::StringW res, ::StringW arg, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, res, arg, lineNo, linePos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowInvalidChar
void System::Xml::DtdParser::ThrowInvalidChar(int pos, ::StringW data, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, data, invCharPos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowInvalidChar
void System::Xml::DtdParser::ThrowInvalidChar(::ArrayW<::Il2CppChar> data, int length, int invCharPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowInvalidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowInvalidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(invCharPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, length, invCharPos);
}
// Autogenerated method: System.Xml.DtdParser.ThrowUnexpectedToken
void System::Xml::DtdParser::ThrowUnexpectedToken(int pos, ::StringW expectedToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken);
}
// Autogenerated method: System.Xml.DtdParser.ThrowUnexpectedToken
void System::Xml::DtdParser::ThrowUnexpectedToken(int pos, ::StringW expectedToken1, ::StringW expectedToken2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ThrowUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(expectedToken1), ::il2cpp_utils::ExtractType(expectedToken2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, expectedToken1, expectedToken2);
}
// Autogenerated method: System.Xml.DtdParser.ParseUnexpectedToken
::StringW System::Xml::DtdParser::ParseUnexpectedToken(int startPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseUnexpectedToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseUnexpectedToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, startPos);
}
// Autogenerated method: System.Xml.DtdParser.StripSpaces
::StringW System::Xml::DtdParser::StripSpaces(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::StripSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "DtdParser", "StripSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/System.Xml.Token
#include "System/Xml/DtdParser_Token.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token CDATA
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token CDATA
void System::Xml::DtdParser::Token::_set_CDATA(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token ID
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token ID
void System::Xml::DtdParser::Token::_set_ID(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token IDREF
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IDREF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token IDREF
void System::Xml::DtdParser::Token::_set_IDREF(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IDREF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token IDREFS
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IDREFS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token IDREFS
void System::Xml::DtdParser::Token::_set_IDREFS(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token ENTITY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ENTITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token ENTITY
void System::Xml::DtdParser::Token::_set_ENTITY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token ENTITIES
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token ENTITIES
void System::Xml::DtdParser::Token::_set_ENTITIES(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token NMTOKEN
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token NMTOKEN
void System::Xml::DtdParser::Token::_set_NMTOKEN(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token NMTOKENS
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token NMTOKENS
void System::Xml::DtdParser::Token::_set_NMTOKENS(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token NOTATION
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NOTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token NOTATION
void System::Xml::DtdParser::Token::_set_NOTATION(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token None
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token None
void System::Xml::DtdParser::Token::_set_None(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token PERef
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PERef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PERef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PERef"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token PERef
void System::Xml::DtdParser::Token::_set_PERef(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PERef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PERef", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token AttlistDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_AttlistDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_AttlistDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "AttlistDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token AttlistDecl
void System::Xml::DtdParser::Token::_set_AttlistDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_AttlistDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "AttlistDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token ElementDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ElementDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ElementDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ElementDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token ElementDecl
void System::Xml::DtdParser::Token::_set_ElementDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ElementDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ElementDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token EntityDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_EntityDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_EntityDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "EntityDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token EntityDecl
void System::Xml::DtdParser::Token::_set_EntityDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_EntityDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "EntityDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token NotationDecl
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NotationDecl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NotationDecl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NotationDecl"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token NotationDecl
void System::Xml::DtdParser::Token::_set_NotationDecl(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NotationDecl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NotationDecl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Comment
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Comment
void System::Xml::DtdParser::Token::_set_Comment(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Comment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token PI
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PI"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token PI
void System::Xml::DtdParser::Token::_set_PI(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token CondSectionStart
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CondSectionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CondSectionStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CondSectionStart"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token CondSectionStart
void System::Xml::DtdParser::Token::_set_CondSectionStart(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CondSectionStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CondSectionStart", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token CondSectionEnd
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_CondSectionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_CondSectionEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "CondSectionEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token CondSectionEnd
void System::Xml::DtdParser::Token::_set_CondSectionEnd(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_CondSectionEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "CondSectionEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Eof
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Eof() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Eof");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Eof"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Eof
void System::Xml::DtdParser::Token::_set_Eof(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Eof");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Eof", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token REQUIRED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_REQUIRED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_REQUIRED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "REQUIRED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token REQUIRED
void System::Xml::DtdParser::Token::_set_REQUIRED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_REQUIRED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "REQUIRED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token IMPLIED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IMPLIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IMPLIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IMPLIED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token IMPLIED
void System::Xml::DtdParser::Token::_set_IMPLIED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IMPLIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IMPLIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token FIXED
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_FIXED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_FIXED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "FIXED"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token FIXED
void System::Xml::DtdParser::Token::_set_FIXED(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_FIXED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "FIXED", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token QName
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token QName
void System::Xml::DtdParser::Token::_set_QName(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Name
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Name
void System::Xml::DtdParser::Token::_set_Name(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Nmtoken
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Nmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Nmtoken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Nmtoken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Nmtoken
void System::Xml::DtdParser::Token::_set_Nmtoken(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Nmtoken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Nmtoken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Quote
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Quote
void System::Xml::DtdParser::Token::_set_Quote(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token LeftParen
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_LeftParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_LeftParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "LeftParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token LeftParen
void System::Xml::DtdParser::Token::_set_LeftParen(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_LeftParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "LeftParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token RightParen
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_RightParen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_RightParen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "RightParen"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token RightParen
void System::Xml::DtdParser::Token::_set_RightParen(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_RightParen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "RightParen", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token GreaterThan
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_GreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_GreaterThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "GreaterThan"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token GreaterThan
void System::Xml::DtdParser::Token::_set_GreaterThan(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_GreaterThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "GreaterThan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Or
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Or"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Or
void System::Xml::DtdParser::Token::_set_Or(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token LeftBracket
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_LeftBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_LeftBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "LeftBracket"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token LeftBracket
void System::Xml::DtdParser::Token::_set_LeftBracket(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_LeftBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "LeftBracket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token RightBracket
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_RightBracket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_RightBracket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "RightBracket"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token RightBracket
void System::Xml::DtdParser::Token::_set_RightBracket(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_RightBracket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "RightBracket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token PUBLIC
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PUBLIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PUBLIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PUBLIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token PUBLIC
void System::Xml::DtdParser::Token::_set_PUBLIC(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PUBLIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PUBLIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token SYSTEM
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_SYSTEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_SYSTEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "SYSTEM"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token SYSTEM
void System::Xml::DtdParser::Token::_set_SYSTEM(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_SYSTEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "SYSTEM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Literal
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Literal
void System::Xml::DtdParser::Token::_set_Literal(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token DOCTYPE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_DOCTYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_DOCTYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "DOCTYPE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token DOCTYPE
void System::Xml::DtdParser::Token::_set_DOCTYPE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_DOCTYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "DOCTYPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token NData
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_NData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_NData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "NData"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token NData
void System::Xml::DtdParser::Token::_set_NData(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_NData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "NData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Percent
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Percent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Percent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Percent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Percent
void System::Xml::DtdParser::Token::_set_Percent(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Percent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Percent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Star
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Star() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Star");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Star"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Star
void System::Xml::DtdParser::Token::_set_Star(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Star");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Star", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token QMark
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_QMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_QMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "QMark"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token QMark
void System::Xml::DtdParser::Token::_set_QMark(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_QMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "QMark", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Plus
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Plus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Plus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Plus"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Plus
void System::Xml::DtdParser::Token::_set_Plus(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Plus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Plus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token PCDATA
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_PCDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_PCDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "PCDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token PCDATA
void System::Xml::DtdParser::Token::_set_PCDATA(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_PCDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "PCDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token Comma
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_Comma() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_Comma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "Comma"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token Comma
void System::Xml::DtdParser::Token::_set_Comma(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_Comma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "Comma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token ANY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_ANY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_ANY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "ANY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token ANY
void System::Xml::DtdParser::Token::_set_ANY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_ANY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "ANY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token EMPTY
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token EMPTY
void System::Xml::DtdParser::Token::_set_EMPTY(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token IGNORE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_IGNORE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_IGNORE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "IGNORE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token IGNORE
void System::Xml::DtdParser::Token::_set_IGNORE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_IGNORE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "IGNORE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.Token INCLUDE
::System::Xml::DtdParser::Token System::Xml::DtdParser::Token::_get_INCLUDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_get_INCLUDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::Token>("System.Xml", "DtdParser/Token", "INCLUDE"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.Token INCLUDE
void System::Xml::DtdParser::Token::_set_INCLUDE(::System::Xml::DtdParser::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::_set_INCLUDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/Token", "INCLUDE", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::Token::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::Token::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/System.Xml.ScanningFunction
#include "System/Xml/DtdParser.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction SubsetContent
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_SubsetContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_SubsetContent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "SubsetContent"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction SubsetContent
void System::Xml::DtdParser::ScanningFunction::_set_SubsetContent(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_SubsetContent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "SubsetContent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Name
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Name
void System::Xml::DtdParser::ScanningFunction::_set_Name(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction QName
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction QName
void System::Xml::DtdParser::ScanningFunction::_set_QName(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Nmtoken
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Nmtoken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Nmtoken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Nmtoken"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Nmtoken
void System::Xml::DtdParser::ScanningFunction::_set_Nmtoken(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Nmtoken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Nmtoken", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Doctype1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Doctype1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Doctype1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Doctype1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Doctype1
void System::Xml::DtdParser::ScanningFunction::_set_Doctype1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Doctype1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Doctype1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Doctype2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Doctype2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Doctype2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Doctype2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Doctype2
void System::Xml::DtdParser::ScanningFunction::_set_Doctype2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Doctype2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Doctype2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element1
void System::Xml::DtdParser::ScanningFunction::_set_Element1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element2
void System::Xml::DtdParser::ScanningFunction::_set_Element2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element3
void System::Xml::DtdParser::ScanningFunction::_set_Element3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element4
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element4"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element4
void System::Xml::DtdParser::ScanningFunction::_set_Element4(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element5
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element5"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element5
void System::Xml::DtdParser::ScanningFunction::_set_Element5(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element6
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element6"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element6
void System::Xml::DtdParser::ScanningFunction::_set_Element6(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element7
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Element7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Element7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Element7"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Element7
void System::Xml::DtdParser::ScanningFunction::_set_Element7(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Element7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Element7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist1
void System::Xml::DtdParser::ScanningFunction::_set_Attlist1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist2
void System::Xml::DtdParser::ScanningFunction::_set_Attlist2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist3
void System::Xml::DtdParser::ScanningFunction::_set_Attlist3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist4
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist4"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist4
void System::Xml::DtdParser::ScanningFunction::_set_Attlist4(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist5
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist5"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist5
void System::Xml::DtdParser::ScanningFunction::_set_Attlist5(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist5", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist6
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist6"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist6
void System::Xml::DtdParser::ScanningFunction::_set_Attlist6(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist7
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Attlist7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Attlist7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Attlist7"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Attlist7
void System::Xml::DtdParser::ScanningFunction::_set_Attlist7(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Attlist7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Attlist7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity1
void System::Xml::DtdParser::ScanningFunction::_set_Entity1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity2
void System::Xml::DtdParser::ScanningFunction::_set_Entity2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Entity3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Entity3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Entity3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Entity3
void System::Xml::DtdParser::ScanningFunction::_set_Entity3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Entity3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Entity3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Notation1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Notation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Notation1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Notation1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Notation1
void System::Xml::DtdParser::ScanningFunction::_set_Notation1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Notation1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Notation1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection1
void System::Xml::DtdParser::ScanningFunction::_set_CondSection1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection2
void System::Xml::DtdParser::ScanningFunction::_set_CondSection2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection3
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_CondSection3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_CondSection3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "CondSection3"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction CondSection3
void System::Xml::DtdParser::ScanningFunction::_set_CondSection3(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_CondSection3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "CondSection3", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Literal
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_Literal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_Literal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "Literal"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction Literal
void System::Xml::DtdParser::ScanningFunction::_set_Literal(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_Literal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "Literal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction SystemId
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_SystemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_SystemId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "SystemId"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction SystemId
void System::Xml::DtdParser::ScanningFunction::_set_SystemId(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_SystemId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "SystemId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction PublicId1
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_PublicId1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_PublicId1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "PublicId1"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction PublicId1
void System::Xml::DtdParser::ScanningFunction::_set_PublicId1(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_PublicId1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "PublicId1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction PublicId2
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_PublicId2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_PublicId2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "PublicId2"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction PublicId2
void System::Xml::DtdParser::ScanningFunction::_set_PublicId2(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_PublicId2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "PublicId2", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction ClosingTag
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_ClosingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_ClosingTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "ClosingTag"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction ClosingTag
void System::Xml::DtdParser::ScanningFunction::_set_ClosingTag(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_ClosingTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "ClosingTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction ParamEntitySpace
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_ParamEntitySpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_ParamEntitySpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "ParamEntitySpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction ParamEntitySpace
void System::Xml::DtdParser::ScanningFunction::_set_ParamEntitySpace(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_ParamEntitySpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "ParamEntitySpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction None
::System::Xml::DtdParser::ScanningFunction System::Xml::DtdParser::ScanningFunction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::ScanningFunction>("System.Xml", "DtdParser/ScanningFunction", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.ScanningFunction None
void System::Xml::DtdParser::ScanningFunction::_set_None(::System::Xml::DtdParser::ScanningFunction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/ScanningFunction", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::ScanningFunction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ScanningFunction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/System.Xml.LiteralType
#include "System/Xml/DtdParser_LiteralType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.LiteralType AttributeValue
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_AttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_AttributeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "AttributeValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.LiteralType AttributeValue
void System::Xml::DtdParser::LiteralType::_set_AttributeValue(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_AttributeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "AttributeValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.LiteralType EntityReplText
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_EntityReplText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_EntityReplText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "EntityReplText"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.LiteralType EntityReplText
void System::Xml::DtdParser::LiteralType::_set_EntityReplText(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_EntityReplText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "EntityReplText", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.DtdParser/System.Xml.LiteralType SystemOrPublicID
::System::Xml::DtdParser::LiteralType System::Xml::DtdParser::LiteralType::_get_SystemOrPublicID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_get_SystemOrPublicID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::DtdParser::LiteralType>("System.Xml", "DtdParser/LiteralType", "SystemOrPublicID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.DtdParser/System.Xml.LiteralType SystemOrPublicID
void System::Xml::DtdParser::LiteralType::_set_SystemOrPublicID(::System::Xml::DtdParser::LiteralType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::_set_SystemOrPublicID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "DtdParser/LiteralType", "SystemOrPublicID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::LiteralType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::LiteralType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/System.Xml.UndeclaredNotation
#include "System/Xml/DtdParser_UndeclaredNotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::DtdParser::UndeclaredNotation::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lineNo
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::UndeclaredNotation::dyn_lineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_lineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 linePos
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::UndeclaredNotation::dyn_linePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_linePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Xml.DtdParser/System.Xml.UndeclaredNotation next
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::UndeclaredNotation*& System::Xml::DtdParser::UndeclaredNotation::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::UndeclaredNotation::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::UndeclaredNotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.DtdParser/System.Xml.ParseElementOnlyContent_LocalFrame
#include "System/Xml/DtdParser_ParseElementOnlyContent_LocalFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 startParenEntityId
[[deprecated("Use field access instead!")]] int& System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_startParenEntityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_startParenEntityId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startParenEntityId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.DtdParser/System.Xml.Token parsingSchema
[[deprecated("Use field access instead!")]] ::System::Xml::DtdParser::Token& System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_parsingSchema() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::DtdParser::ParseElementOnlyContent_LocalFrame::dyn_parsingSchema");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parsingSchema"))->offset;
  return *reinterpret_cast<::System::Xml::DtdParser::Token*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlTokenizedType
#include "System/Xml/XmlTokenizedType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType CDATA
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_CDATA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_CDATA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "CDATA"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType CDATA
void System::Xml::XmlTokenizedType::_set_CDATA(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_CDATA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "CDATA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ID
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ID"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ID
void System::Xml::XmlTokenizedType::_set_ID(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType IDREF
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_IDREF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_IDREF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "IDREF"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType IDREF
void System::Xml::XmlTokenizedType::_set_IDREF(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_IDREF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "IDREF", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType IDREFS
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_IDREFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_IDREFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "IDREFS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType IDREFS
void System::Xml::XmlTokenizedType::_set_IDREFS(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_IDREFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "IDREFS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENTITY
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENTITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENTITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENTITY"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENTITY
void System::Xml::XmlTokenizedType::_set_ENTITY(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENTITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENTITY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENTITIES
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENTITIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENTITIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENTITIES"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENTITIES
void System::Xml::XmlTokenizedType::_set_ENTITIES(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENTITIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENTITIES", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NMTOKEN
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NMTOKEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NMTOKEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NMTOKEN"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NMTOKEN
void System::Xml::XmlTokenizedType::_set_NMTOKEN(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NMTOKEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NMTOKEN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NMTOKENS
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NMTOKENS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NMTOKENS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NMTOKENS"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NMTOKENS
void System::Xml::XmlTokenizedType::_set_NMTOKENS(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NMTOKENS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NMTOKENS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NOTATION
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NOTATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NOTATION
void System::Xml::XmlTokenizedType::_set_NOTATION(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType ENUMERATION
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_ENUMERATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_ENUMERATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "ENUMERATION"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType ENUMERATION
void System::Xml::XmlTokenizedType::_set_ENUMERATION(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_ENUMERATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "ENUMERATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType QName
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_QName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_QName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "QName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType QName
void System::Xml::XmlTokenizedType::_set_QName(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_QName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "QName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType NCName
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_NCName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_NCName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "NCName"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType NCName
void System::Xml::XmlTokenizedType::_set_NCName(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_NCName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "NCName", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlTokenizedType None
::System::Xml::XmlTokenizedType System::Xml::XmlTokenizedType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlTokenizedType>("System.Xml", "XmlTokenizedType", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlTokenizedType None
void System::Xml::XmlTokenizedType::_set_None(::System::Xml::XmlTokenizedType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlTokenizedType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlTokenizedType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlTokenizedType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ValidateNames
#include "System/Xml/ValidateNames.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
::System::Xml::XmlCharType System::Xml::ValidateNames::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlCharType>("System.Xml", "ValidateNames", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::ValidateNames::_set_xmlCharType(::System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ValidateNames", "xmlCharType", value));
}
// Autogenerated method: System.Xml.ValidateNames..cctor
void System::Xml::ValidateNames::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNmtoken
int System::Xml::ValidateNames::ParseNmtoken(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNmtoken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNmtoken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNmtokenNoNamespaces
int System::Xml::ValidateNames::ParseNmtokenNoNamespaces(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNmtokenNoNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNmtokenNoNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNameNoNamespaces
int System::Xml::ValidateNames::ParseNameNoNamespaces(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNameNoNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNameNoNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNCName
int System::Xml::ValidateNames::ParseNCName(::StringW s, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset);
}
// Autogenerated method: System.Xml.ValidateNames.ParseNCName
int System::Xml::ValidateNames::ParseNCName(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.ValidateNames.ParseQName
int System::Xml::ValidateNames::ParseQName(::StringW s, int offset, ByRef<int> colonOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offset, byref(colonOffset));
}
// Autogenerated method: System.Xml.ValidateNames.ParseQNameThrow
void System::Xml::ValidateNames::ParseQNameThrow(::StringW s, ByRef<::StringW> prefix, ByRef<::StringW> localName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ParseQNameThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ParseQNameThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(prefix), byref(localName));
}
// Autogenerated method: System.Xml.ValidateNames.ThrowInvalidName
void System::Xml::ValidateNames::ThrowInvalidName(::StringW s, int offsetStartChar, int offsetBadChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::ThrowInvalidName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "ThrowInvalidName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offsetStartChar), ::il2cpp_utils::ExtractType(offsetBadChar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offsetStartChar, offsetBadChar);
}
// Autogenerated method: System.Xml.ValidateNames.GetInvalidNameException
::System::Exception* System::Xml::ValidateNames::GetInvalidNameException(::StringW s, int offsetStartChar, int offsetBadChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ValidateNames::GetInvalidNameException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "ValidateNames", "GetInvalidNameException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(offsetStartChar), ::il2cpp_utils::ExtractType(offsetBadChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, offsetStartChar, offsetBadChar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlCharType
#include "System/Xml/XmlCharType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_Lock
::Il2CppObject* System::Xml::XmlCharType::_get_s_Lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_get_s_Lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Xml", "XmlCharType", "s_Lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_Lock
void System::Xml::XmlCharType::_set_s_Lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_set_s_Lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_Lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_CharProperties
::ArrayW<uint8_t> System::Xml::XmlCharType::_get_s_CharProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_get_s_CharProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Xml", "XmlCharType", "s_CharProperties"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_CharProperties
void System::Xml::XmlCharType::_set_s_CharProperties(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::_set_s_CharProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlCharType", "s_CharProperties", value));
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] charProperties
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::XmlCharType::dyn_charProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::dyn_charProperties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charProperties"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlCharType.get_StaticLock
::Il2CppObject* System::Xml::XmlCharType::get_StaticLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::get_StaticLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_StaticLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.get_Instance
::System::Xml::XmlCharType System::Xml::XmlCharType::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlCharType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType..ctor
// ABORTED elsewhere.  System::Xml::XmlCharType::XmlCharType(::ArrayW<uint8_t> charProperties)
// Autogenerated method: System.Xml.XmlCharType.InitInstance
void System::Xml::XmlCharType::InitInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::InitInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InitInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlCharType.SetProperties
void System::Xml::XmlCharType::SetProperties(::StringW ranges, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::SetProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "SetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ranges), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ranges, value);
}
// Autogenerated method: System.Xml.XmlCharType.IsWhiteSpace
bool System::Xml::XmlCharType::IsWhiteSpace(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNCNameSingleChar
bool System::Xml::XmlCharType::IsNCNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNCNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNCNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsStartNCNameSingleChar
bool System::Xml::XmlCharType::IsStartNCNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsStartNCNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsStartNCNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNameSingleChar
bool System::Xml::XmlCharType::IsNameSingleChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNameSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNameSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsCharData
bool System::Xml::XmlCharType::IsCharData(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsPubidChar
bool System::Xml::XmlCharType::IsPubidChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsPubidChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPubidChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsTextChar
bool System::Xml::XmlCharType::IsTextChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsTextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsTextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsLetter
bool System::Xml::XmlCharType::IsLetter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNCNameCharXml4e
bool System::Xml::XmlCharType::IsNCNameCharXml4e(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNCNameCharXml4e");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNCNameCharXml4e", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsStartNCNameCharXml4e
bool System::Xml::XmlCharType::IsStartNCNameCharXml4e(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsStartNCNameCharXml4e");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsStartNCNameCharXml4e", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsNameCharXml4e
bool System::Xml::XmlCharType::IsNameCharXml4e(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsNameCharXml4e");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsNameCharXml4e", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsDigit
bool System::Xml::XmlCharType::IsDigit(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsHighSurrogate
bool System::Xml::XmlCharType::IsHighSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsLowSurrogate
bool System::Xml::XmlCharType::IsLowSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.IsSurrogate
bool System::Xml::XmlCharType::IsSurrogate(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Xml.XmlCharType.CombineSurrogateChar
int System::Xml::XmlCharType::CombineSurrogateChar(int lowChar, int highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::CombineSurrogateChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "CombineSurrogateChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lowChar), ::il2cpp_utils::ExtractType(highChar)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lowChar, highChar);
}
// Autogenerated method: System.Xml.XmlCharType.SplitSurrogateChar
void System::Xml::XmlCharType::SplitSurrogateChar(int combinedChar, ByRef<::Il2CppChar> lowChar, ByRef<::Il2CppChar> highChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::SplitSurrogateChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "SplitSurrogateChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(combinedChar), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, combinedChar, byref(lowChar), byref(highChar));
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyWhitespace
bool System::Xml::XmlCharType::IsOnlyWhitespace(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsOnlyWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyWhitespaceWithPos
int System::Xml::XmlCharType::IsOnlyWhitespaceWithPos(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsOnlyWhitespaceWithPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyWhitespaceWithPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyCharData
int System::Xml::XmlCharType::IsOnlyCharData(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsOnlyCharData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsOnlyCharData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.IsOnlyDigits
bool System::Xml::XmlCharType::IsOnlyDigits(::StringW str, int startPos, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsOnlyDigits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "IsOnlyDigits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str, startPos, len);
}
// Autogenerated method: System.Xml.XmlCharType.IsPublicId
int System::Xml::XmlCharType::IsPublicId(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::IsPublicId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsPublicId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlCharType.InRange
bool System::Xml::XmlCharType::InRange(int value, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCharType::InRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlCharType", "InRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, start, end);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlComplianceUtil
#include "System/Xml/XmlComplianceUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.XmlComplianceUtil.NonCDataNormalize
::StringW System::Xml::XmlComplianceUtil::NonCDataNormalize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComplianceUtil::NonCDataNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlComplianceUtil", "NonCDataNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlComplianceUtil.CDataNormalize
::StringW System::Xml::XmlComplianceUtil::CDataNormalize(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlComplianceUtil::CDataNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlComplianceUtil", "CDataNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType ArgumentException
::System::Xml::ExceptionType System::Xml::ExceptionType::_get_ArgumentException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_get_ArgumentException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ExceptionType>("System.Xml", "ExceptionType", "ArgumentException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType ArgumentException
void System::Xml::ExceptionType::_set_ArgumentException(::System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_set_ArgumentException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "ArgumentException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.ExceptionType XmlException
::System::Xml::ExceptionType System::Xml::ExceptionType::_get_XmlException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_get_XmlException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::ExceptionType>("System.Xml", "ExceptionType", "XmlException"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.ExceptionType XmlException
void System::Xml::ExceptionType::_set_XmlException(::System::Xml::ExceptionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::_set_XmlException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "ExceptionType", "XmlException", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::ExceptionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::ExceptionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDateTimeSerializationMode
#include "System/Xml/XmlDateTimeSerializationMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlDateTimeSerializationMode Local
::System::Xml::XmlDateTimeSerializationMode System::Xml::XmlDateTimeSerializationMode::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlDateTimeSerializationMode>("System.Xml", "XmlDateTimeSerializationMode", "Local"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlDateTimeSerializationMode Local
void System::Xml::XmlDateTimeSerializationMode::_set_Local(::System::Xml::XmlDateTimeSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDateTimeSerializationMode", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlDateTimeSerializationMode Utc
::System::Xml::XmlDateTimeSerializationMode System::Xml::XmlDateTimeSerializationMode::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlDateTimeSerializationMode>("System.Xml", "XmlDateTimeSerializationMode", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlDateTimeSerializationMode Utc
void System::Xml::XmlDateTimeSerializationMode::_set_Utc(::System::Xml::XmlDateTimeSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDateTimeSerializationMode", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlDateTimeSerializationMode Unspecified
::System::Xml::XmlDateTimeSerializationMode System::Xml::XmlDateTimeSerializationMode::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlDateTimeSerializationMode>("System.Xml", "XmlDateTimeSerializationMode", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlDateTimeSerializationMode Unspecified
void System::Xml::XmlDateTimeSerializationMode::_set_Unspecified(::System::Xml::XmlDateTimeSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDateTimeSerializationMode", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Xml.XmlDateTimeSerializationMode RoundtripKind
::System::Xml::XmlDateTimeSerializationMode System::Xml::XmlDateTimeSerializationMode::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlDateTimeSerializationMode>("System.Xml", "XmlDateTimeSerializationMode", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public System.Xml.XmlDateTimeSerializationMode RoundtripKind
void System::Xml::XmlDateTimeSerializationMode::_set_RoundtripKind(::System::Xml::XmlDateTimeSerializationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlDateTimeSerializationMode", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Xml::XmlDateTimeSerializationMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDateTimeSerializationMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlConvert
#include "System/Xml/XmlConvert.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Xml.ExceptionType
#include "System/Xml/ExceptionType.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Xml.XmlDateTimeSerializationMode
#include "System/Xml/XmlDateTimeSerializationMode.hpp"
// Including type: System.DateTimeOffset
#include "System/DateTimeOffset.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.ArgumentException
#include "System/ArgumentException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Xml.XmlCharType xmlCharType
::System::Xml::XmlCharType System::Xml::XmlConvert::_get_xmlCharType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_xmlCharType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Xml::XmlCharType>("System.Xml", "XmlConvert", "xmlCharType"));
}
// Autogenerated static field setter
// Set static field: static private System.Xml.XmlCharType xmlCharType
void System::Xml::XmlConvert::_set_xmlCharType(::System::Xml::XmlCharType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_xmlCharType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "xmlCharType", value));
}
// Autogenerated static field getter
// Get static field: static System.Char[] crt
::ArrayW<::Il2CppChar> System::Xml::XmlConvert::_get_crt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_crt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml", "XmlConvert", "crt"));
}
// Autogenerated static field setter
// Set static field: static System.Char[] crt
void System::Xml::XmlConvert::_set_crt(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_crt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "crt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 c_EncodedCharLength
int System::Xml::XmlConvert::_get_c_EncodedCharLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_c_EncodedCharLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Xml", "XmlConvert", "c_EncodedCharLength"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 c_EncodedCharLength
void System::Xml::XmlConvert::_set_c_EncodedCharLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_c_EncodedCharLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "c_EncodedCharLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex c_EncodeCharPattern
::System::Text::RegularExpressions::Regex* System::Xml::XmlConvert::_get_c_EncodeCharPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_c_EncodeCharPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Xml", "XmlConvert", "c_EncodeCharPattern"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex c_EncodeCharPattern
void System::Xml::XmlConvert::_set_c_EncodeCharPattern(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_c_EncodeCharPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "c_EncodeCharPattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex c_DecodeCharPattern
::System::Text::RegularExpressions::Regex* System::Xml::XmlConvert::_get_c_DecodeCharPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_c_DecodeCharPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::RegularExpressions::Regex*>("System.Xml", "XmlConvert", "c_DecodeCharPattern"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex c_DecodeCharPattern
void System::Xml::XmlConvert::_set_c_DecodeCharPattern(::System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_c_DecodeCharPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "c_DecodeCharPattern", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] WhitespaceChars
::ArrayW<::Il2CppChar> System::Xml::XmlConvert::_get_WhitespaceChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_get_WhitespaceChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Xml", "XmlConvert", "WhitespaceChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] WhitespaceChars
void System::Xml::XmlConvert::_set_WhitespaceChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::_set_WhitespaceChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Xml", "XmlConvert", "WhitespaceChars", value));
}
// Autogenerated method: System.Xml.XmlConvert..cctor
void System::Xml::XmlConvert::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.XmlConvert.EncodeName
::StringW System::Xml::XmlConvert::EncodeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::EncodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "EncodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.DecodeName
::StringW System::Xml::XmlConvert::DecodeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::DecodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "DecodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.EncodeName
::StringW System::Xml::XmlConvert::EncodeName(::StringW name, bool first, bool local) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::EncodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "EncodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(local)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, first, local);
}
// Autogenerated method: System.Xml.XmlConvert.FromHex
int System::Xml::XmlConvert::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Xml.XmlConvert.FromBinHexString
::ArrayW<uint8_t> System::Xml::XmlConvert::FromBinHexString(::StringW s, bool allowOddCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::FromBinHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "FromBinHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(allowOddCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, allowOddCount);
}
// Autogenerated method: System.Xml.XmlConvert.ToBinHexString
::StringW System::Xml::XmlConvert::ToBinHexString(::ArrayW<uint8_t> inArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToBinHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToBinHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArray)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArray);
}
// Autogenerated method: System.Xml.XmlConvert.VerifyName
::StringW System::Xml::XmlConvert::VerifyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::VerifyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyName
::System::Exception* System::Xml::XmlConvert::TryVerifyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.VerifyQName
::StringW System::Xml::XmlConvert::VerifyQName(::StringW name, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::VerifyQName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyQName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.VerifyNCName
::StringW System::Xml::XmlConvert::VerifyNCName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::VerifyNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.VerifyNCName
::StringW System::Xml::XmlConvert::VerifyNCName(::StringW name, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::VerifyNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "VerifyNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNCName
::System::Exception* System::Xml::XmlConvert::TryVerifyNCName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNCName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNCName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyTOKEN
::System::Exception* System::Xml::XmlConvert::TryVerifyTOKEN(::StringW token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyTOKEN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyTOKEN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNMTOKEN
::System::Exception* System::Xml::XmlConvert::TryVerifyNMTOKEN(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNMTOKEN");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNMTOKEN", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Xml.XmlConvert.TryVerifyNormalizedString
::System::Exception* System::Xml::XmlConvert::TryVerifyNormalizedString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryVerifyNormalizedString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryVerifyNormalizedString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(::System::Decimal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(::System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(::System::DateTime value, ::System::Xml::XmlDateTimeSerializationMode dateTimeOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(dateTimeOption)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, dateTimeOption);
}
// Autogenerated method: System.Xml.XmlConvert.ToString
::StringW System::Xml::XmlConvert::ToString(::System::DateTimeOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToBoolean
bool System::Xml::XmlConvert::ToBoolean(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToBoolean
::System::Exception* System::Xml::XmlConvert::TryToBoolean(::StringW s, ByRef<bool> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToChar
::Il2CppChar System::Xml::XmlConvert::ToChar(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToChar
::System::Exception* System::Xml::XmlConvert::TryToChar(::StringW s, ByRef<::Il2CppChar> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToDecimal
::System::Decimal System::Xml::XmlConvert::ToDecimal(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToDecimal
::System::Exception* System::Xml::XmlConvert::TryToDecimal(::StringW s, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToDecimal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInteger
::System::Decimal System::Xml::XmlConvert::ToInteger(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Decimal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInteger
::System::Exception* System::Xml::XmlConvert::TryToInteger(::StringW s, ByRef<::System::Decimal> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Decimal&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToSByte
::System::Exception* System::Xml::XmlConvert::TryToSByte(::StringW s, ByRef<int8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToSByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt16
::System::Exception* System::Xml::XmlConvert::TryToInt16(::StringW s, ByRef<int16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInt32
int System::Xml::XmlConvert::ToInt32(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt32
::System::Exception* System::Xml::XmlConvert::TryToInt32(::StringW s, ByRef<int> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToInt64
int64_t System::Xml::XmlConvert::ToInt64(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToInt64
::System::Exception* System::Xml::XmlConvert::TryToInt64(::StringW s, ByRef<int64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToByte
::System::Exception* System::Xml::XmlConvert::TryToByte(::StringW s, ByRef<uint8_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint8_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt16
::System::Exception* System::Xml::XmlConvert::TryToUInt16(::StringW s, ByRef<uint16_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint16_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt32
::System::Exception* System::Xml::XmlConvert::TryToUInt32(::StringW s, ByRef<uint> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToUInt64
::System::Exception* System::Xml::XmlConvert::TryToUInt64(::StringW s, ByRef<uint64_t> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToSingle
float System::Xml::XmlConvert::ToSingle(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToSingle
::System::Exception* System::Xml::XmlConvert::TryToSingle(::StringW s, ByRef<float> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToDouble
double System::Xml::XmlConvert::ToDouble(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToDouble
::System::Exception* System::Xml::XmlConvert::TryToDouble(::StringW s, ByRef<double> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.TryToTimeSpan
::System::Exception* System::Xml::XmlConvert::TryToTimeSpan(::StringW s, ByRef<::System::TimeSpan> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToTimeSpan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToTimeSpan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::TimeSpan&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.ToGuid
::System::Guid System::Xml::XmlConvert::ToGuid(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToGuid
::System::Exception* System::Xml::XmlConvert::TryToGuid(::StringW s, ByRef<::System::Guid> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToGuid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToGuid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Guid&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.SwitchToLocalTime
::System::DateTime System::Xml::XmlConvert::SwitchToLocalTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::SwitchToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "SwitchToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.SwitchToUtcTime
::System::DateTime System::Xml::XmlConvert::SwitchToUtcTime(::System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::SwitchToUtcTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "SwitchToUtcTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.ToUri
::System::Uri* System::Xml::XmlConvert::ToUri(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::ToUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "ToUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Uri*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Xml.XmlConvert.TryToUri
::System::Exception* System::Xml::XmlConvert::TryToUri(::StringW s, ByRef<::System::Uri*> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TryToUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TryToUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::System::Uri*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s, byref(result));
}
// Autogenerated method: System.Xml.XmlConvert.StrEqual
bool System::Xml::XmlConvert::StrEqual(::ArrayW<::Il2CppChar> chars, int strPos1, int strLen1, ::StringW str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::StrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "StrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(strPos1), ::il2cpp_utils::ExtractType(strLen1), ::il2cpp_utils::ExtractType(str2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, chars, strPos1, strLen1, str2);
}
// Autogenerated method: System.Xml.XmlConvert.TrimString
::StringW System::Xml::XmlConvert::TrimString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TrimString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.TrimStringStart
::StringW System::Xml::XmlConvert::TrimStringStart(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TrimStringStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimStringStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.TrimStringEnd
::StringW System::Xml::XmlConvert::TrimStringEnd(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::TrimStringEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "TrimStringEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.SplitString
::ArrayW<::StringW> System::Xml::XmlConvert::SplitString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::SplitString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "SplitString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.IsNegativeZero
bool System::Xml::XmlConvert::IsNegativeZero(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::IsNegativeZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "IsNegativeZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.DoubleToInt64Bits
int64_t System::Xml::XmlConvert::DoubleToInt64Bits(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::DoubleToInt64Bits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "DoubleToInt64Bits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
::System::Exception* System::Xml::XmlConvert::CreateException(::StringW res, ::StringW arg, ::System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, arg, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
::System::Exception* System::Xml::XmlConvert::CreateException(::StringW res, ::ArrayW<::StringW> args, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateException
::System::Exception* System::Xml::XmlConvert::CreateException(::StringW res, ::ArrayW<::StringW> args, ::System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(res), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, res, args, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
::System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, low, hi);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
::System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, low, hi, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidSurrogatePairException
::System::Exception* System::Xml::XmlConvert::CreateInvalidSurrogatePairException(::Il2CppChar low, ::Il2CppChar hi, ::System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidSurrogatePairException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidSurrogatePairException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, low, hi, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hi);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hi, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException(::Il2CppChar hi, ::System::Xml::ExceptionType exceptionType, int lineNo, int linePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidHighSurrogateCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidHighSurrogateCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hi), ::il2cpp_utils::ExtractType(exceptionType), ::il2cpp_utils::ExtractType(lineNo), ::il2cpp_utils::ExtractType(linePos)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hi, exceptionType, lineNo, linePos);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidCharException(::Il2CppChar invChar, ::Il2CppChar nextChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invChar, nextChar);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidCharException(::Il2CppChar invChar, ::Il2CppChar nextChar, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invChar), ::il2cpp_utils::ExtractType(nextChar), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, invChar, nextChar, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidNameCharException
::System::Exception* System::Xml::XmlConvert::CreateInvalidNameCharException(::StringW name, int index, ::System::Xml::ExceptionType exceptionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidNameCharException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidNameCharException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(exceptionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, index, exceptionType);
}
// Autogenerated method: System.Xml.XmlConvert.CreateInvalidNameArgumentException
::System::ArgumentException* System::Xml::XmlConvert::CreateInvalidNameArgumentException(::StringW name, ::StringW argumentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlConvert::CreateInvalidNameArgumentException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "XmlConvert", "CreateInvalidNameArgumentException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(argumentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArgumentException*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, argumentName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.Xml.XmlDownloadManager/System.Xml.<>c__DisplayClass4_0
#include "System/Xml/XmlDownloadManager_--c__DisplayClass4_0.hpp"
// Including type: System.Xml.XmlDownloadManager/System.Xml.<GetNonFileStreamAsync>d__5
#include "System/Xml/XmlDownloadManager_-GetNonFileStreamAsync-d__5.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Hashtable connections
[[deprecated("Use field access instead!")]] ::System::Collections::Hashtable*& System::Xml::XmlDownloadManager::dyn_connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::dyn_connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connections"))->offset;
  return *reinterpret_cast<::System::Collections::Hashtable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetStream
::System::IO::Stream* System::Xml::XmlDownloadManager::GetStream(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetNonFileStream
::System::IO::Stream* System::Xml::XmlDownloadManager::GetNonFileStream(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetNonFileStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNonFileStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.Remove
void System::Xml::XmlDownloadManager::Remove(::StringW host) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, host);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Xml::XmlDownloadManager::GetStreamAsync(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetStreamAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated method: System.Xml.XmlDownloadManager.GetNonFileStreamAsync
::System::Threading::Tasks::Task_1<::System::IO::Stream*>* System::Xml::XmlDownloadManager::GetNonFileStreamAsync(::System::Uri* uri, ::System::Net::ICredentials* credentials, ::System::Net::IWebProxy* proxy, ::System::Net::Cache::RequestCachePolicy* cachePolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::GetNonFileStreamAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNonFileStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(credentials), ::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(cachePolicy)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::IO::Stream*>*, false>(this, ___internal__method, uri, credentials, proxy, cachePolicy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager/System.Xml.<>c__DisplayClass4_0
#include "System/Xml/XmlDownloadManager_--c__DisplayClass4_0.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager/System.Xml.<>c__DisplayClass4_0.<GetStreamAsync>b__0
::System::IO::Stream* System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::$GetStreamAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$$c__DisplayClass4_0::<GetStreamAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetStreamAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlDownloadManager/System.Xml.<GetNonFileStreamAsync>d__5
#include "System/Xml/XmlDownloadManager_-GetNonFileStreamAsync-d__5.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.Cache.RequestCachePolicy
#include "System/Net/Cache/RequestCachePolicy.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.IO.Stream> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::System::IO::Stream*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.ICredentials credentials
[[deprecated("Use field access instead!")]] ::System::Net::ICredentials*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_credentials");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "credentials"))->offset;
  return *reinterpret_cast<::System::Net::ICredentials**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IWebProxy proxy
[[deprecated("Use field access instead!")]] ::System::Net::IWebProxy*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_proxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_proxy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proxy"))->offset;
  return *reinterpret_cast<::System::Net::IWebProxy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.Cache.RequestCachePolicy cachePolicy
[[deprecated("Use field access instead!")]] ::System::Net::Cache::RequestCachePolicy*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_cachePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_cachePolicy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachePolicy"))->offset;
  return *reinterpret_cast<::System::Net::Cache::RequestCachePolicy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.WebRequest <req>5__1
[[deprecated("Use field access instead!")]] ::System::Net::WebRequest*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$req$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$req$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<req>5__1"))->offset;
  return *reinterpret_cast<::System::Net::WebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Xml.XmlDownloadManager <>4__this
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDownloadManager*& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDownloadManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Net.WebResponse> <>u__1
[[deprecated("Use field access instead!")]] typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter& System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<typename ::System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<::System::Net::WebResponse*>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlDownloadManager/System.Xml.<GetNonFileStreamAsync>d__5.MoveNext
void System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlDownloadManager/System.Xml.<GetNonFileStreamAsync>d__5.SetStateMachine
void System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlDownloadManager::$GetNonFileStreamAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.OpenedHost
#include "System/Xml/OpenedHost.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 nonCachedConnectionsCount
[[deprecated("Use field access instead!")]] int& System::Xml::OpenedHost::dyn_nonCachedConnectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::OpenedHost::dyn_nonCachedConnectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nonCachedConnectionsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Xml.XmlRegisteredNonCachedStream
#include "System/Xml/XmlRegisteredNonCachedStream.hpp"
// Including type: System.Xml.XmlDownloadManager
#include "System/Xml/XmlDownloadManager.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Xml::XmlRegisteredNonCachedStream::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Xml.XmlDownloadManager downloadManager
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDownloadManager*& System::Xml::XmlRegisteredNonCachedStream::dyn_downloadManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_downloadManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "downloadManager"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDownloadManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String host
[[deprecated("Use field access instead!")]] ::StringW& System::Xml::XmlRegisteredNonCachedStream::dyn_host() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::dyn_host");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "host"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanRead
bool System::Xml::XmlRegisteredNonCachedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanSeek
bool System::Xml::XmlRegisteredNonCachedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_CanWrite
bool System::Xml::XmlRegisteredNonCachedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_Length
int64_t System::Xml::XmlRegisteredNonCachedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.get_Position
int64_t System::Xml::XmlRegisteredNonCachedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.set_Position
void System::Xml::XmlRegisteredNonCachedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Finalize
void System::Xml::XmlRegisteredNonCachedStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Dispose
void System::Xml::XmlRegisteredNonCachedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.BeginRead
::System::IAsyncResult* System::Xml::XmlRegisteredNonCachedStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.BeginWrite
::System::IAsyncResult* System::Xml::XmlRegisteredNonCachedStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.EndRead
int System::Xml::XmlRegisteredNonCachedStream::EndRead(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.EndWrite
void System::Xml::XmlRegisteredNonCachedStream::EndWrite(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Flush
void System::Xml::XmlRegisteredNonCachedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Read
int System::Xml::XmlRegisteredNonCachedStream::Read(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.ReadByte
int System::Xml::XmlRegisteredNonCachedStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Seek
int64_t System::Xml::XmlRegisteredNonCachedStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.SetLength
void System::Xml::XmlRegisteredNonCachedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.Write
void System::Xml::XmlRegisteredNonCachedStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Xml.XmlRegisteredNonCachedStream.WriteByte
void System::Xml::XmlRegisteredNonCachedStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlRegisteredNonCachedStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.XmlCachedStream
#include "System/Xml/XmlCachedStream.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Uri uri
[[deprecated("Use field access instead!")]] ::System::Uri*& System::Xml::XmlCachedStream::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::XmlCachedStream::dyn_uri");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::System::Uri**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.UTF16Decoder
#include "System/Xml/UTF16Decoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean bigEndian
[[deprecated("Use field access instead!")]] bool& System::Xml::UTF16Decoder::dyn_bigEndian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::dyn_bigEndian");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bigEndian"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastByte
[[deprecated("Use field access instead!")]] int& System::Xml::UTF16Decoder::dyn_lastByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::dyn_lastByte");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastByte"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetCharCount
int System::Xml::UTF16Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetCharCount
int System::Xml::UTF16Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flush)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count, flush);
}
// Autogenerated method: System.Xml.UTF16Decoder.GetChars
int System::Xml::UTF16Decoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.UTF16Decoder.Convert
void System::Xml::UTF16Decoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::UTF16Decoder::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(flush), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.SafeAsciiDecoder
#include "System/Xml/SafeAsciiDecoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.SafeAsciiDecoder.GetCharCount
int System::Xml::SafeAsciiDecoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.SafeAsciiDecoder.GetChars
int System::Xml::SafeAsciiDecoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.SafeAsciiDecoder.Convert
void System::Xml::SafeAsciiDecoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::SafeAsciiDecoder::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(flush), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding
#include "System/Xml/Ucs4Encoding.hpp"
// Including type: System.Xml.Ucs4Decoder
#include "System/Xml/Ucs4Decoder.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Xml.Ucs4Decoder ucs4Decoder
[[deprecated("Use field access instead!")]] ::System::Xml::Ucs4Decoder*& System::Xml::Ucs4Encoding::dyn_ucs4Decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::dyn_ucs4Decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ucs4Decoder"))->offset;
  return *reinterpret_cast<::System::Xml::Ucs4Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_Littleendian
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_Littleendian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_Littleendian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_Littleendian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_Bigendian
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_Bigendian() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_Bigendian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_Bigendian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_2143
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_2143() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_2143");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_2143", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_UCS4_3412
::System::Text::Encoding* System::Xml::Ucs4Encoding::get_UCS4_3412() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_UCS4_3412");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Xml", "Ucs4Encoding", "get_UCS4_3412", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_WebName
::StringW System::Xml::Ucs4Encoding::get_WebName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_WebName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.get_CodePage
int System::Xml::Ucs4Encoding::get_CodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::get_CodePage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CodePage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetDecoder
::System::Text::Decoder* System::Xml::Ucs4Encoding::GetDecoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetDecoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDecoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Decoder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetByteCount
int System::Xml::Ucs4Encoding::GetByteCount(::ArrayW<::Il2CppChar> chars, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, index, count);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetBytes
::ArrayW<uint8_t> System::Xml::Ucs4Encoding::GetBytes(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetBytes
int System::Xml::Ucs4Encoding::GetBytes(::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, ::ArrayW<uint8_t> bytes, int byteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, chars, charIndex, charCount, bytes, byteIndex);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetMaxByteCount
int System::Xml::Ucs4Encoding::GetMaxByteCount(int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetMaxByteCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxByteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(charCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, charCount);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetCharCount
int System::Xml::Ucs4Encoding::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetChars
int System::Xml::Ucs4Encoding::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetMaxCharCount
int System::Xml::Ucs4Encoding::GetMaxCharCount(int byteCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetMaxCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaxCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteCount)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byteCount);
}
// Autogenerated method: System.Xml.Ucs4Encoding.GetEncoder
::System::Text::Encoder* System::Xml::Ucs4Encoding::GetEncoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding::GetEncoder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEncoder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding1234
#include "System/Xml/Ucs4Encoding1234.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding1234.get_EncodingName
::StringW System::Xml::Ucs4Encoding1234::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding1234::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding1234.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding1234::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding1234::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding4321
#include "System/Xml/Ucs4Encoding4321.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding4321.get_EncodingName
::StringW System::Xml::Ucs4Encoding4321::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding4321::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding4321.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding4321::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding4321::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding2143
#include "System/Xml/Ucs4Encoding2143.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding2143.get_EncodingName
::StringW System::Xml::Ucs4Encoding2143::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding2143::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding2143.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding2143::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding2143::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Encoding3412
#include "System/Xml/Ucs4Encoding3412.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Encoding3412.get_EncodingName
::StringW System::Xml::Ucs4Encoding3412::get_EncodingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding3412::get_EncodingName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncodingName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Xml.Ucs4Encoding3412.GetPreamble
::ArrayW<uint8_t> System::Xml::Ucs4Encoding3412::GetPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Encoding3412::GetPreamble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder
#include "System/Xml/Ucs4Decoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] lastBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Xml::Ucs4Decoder::dyn_lastBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::dyn_lastBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 lastBytesCount
[[deprecated("Use field access instead!")]] int& System::Xml::Ucs4Decoder::dyn_lastBytesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::dyn_lastBytesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBytesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetFullChars
int System::Xml::Ucs4Decoder::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetFullChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.Ucs4ToUTF16
void System::Xml::Ucs4Decoder::Ucs4ToUTF16(uint code, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::Ucs4ToUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ucs4ToUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetCharCount
int System::Xml::Ucs4Decoder::GetCharCount(::ArrayW<uint8_t> bytes, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetCharCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, index, count);
}
// Autogenerated method: System.Xml.Ucs4Decoder.GetChars
int System::Xml::Ucs4Decoder::GetChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::GetChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated method: System.Xml.Ucs4Decoder.Convert
void System::Xml::Ucs4Decoder::Convert(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex, int charCount, bool flush, ByRef<int> bytesUsed, ByRef<int> charsUsed, ByRef<bool> completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex), ::il2cpp_utils::ExtractType(charCount), ::il2cpp_utils::ExtractType(flush), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex, charCount, flush, byref(bytesUsed), byref(charsUsed), byref(completed));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder4321
#include "System/Xml/Ucs4Decoder4321.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder4321.GetFullChars
int System::Xml::Ucs4Decoder4321::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder4321::GetFullChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder1234
#include "System/Xml/Ucs4Decoder1234.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder1234.GetFullChars
int System::Xml::Ucs4Decoder1234::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder1234::GetFullChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder2143
#include "System/Xml/Ucs4Decoder2143.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder2143.GetFullChars
int System::Xml::Ucs4Decoder2143::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder2143::GetFullChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Xml.Ucs4Decoder3412
#include "System/Xml/Ucs4Decoder3412.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Xml.Ucs4Decoder3412.GetFullChars
int System::Xml::Ucs4Decoder3412::GetFullChars(::ArrayW<uint8_t> bytes, int byteIndex, int byteCount, ::ArrayW<::Il2CppChar> chars, int charIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Xml::Ucs4Decoder3412::GetFullChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(byteIndex), ::il2cpp_utils::ExtractType(byteCount), ::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(charIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, bytes, byteIndex, byteCount, chars, charIndex);
}
