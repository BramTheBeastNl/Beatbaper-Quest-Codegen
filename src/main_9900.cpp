// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1
#include "UnityEngine/TestTools/EnumerableApplyChangesToContextCommand_-ExecuteEnumerable-d__1.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.IDisposable.Dispose
void UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.MoveNext
bool UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.<>m__Finally1
void UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableApplyChangesToContextCommand/<ExecuteEnumerable>d__1.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)(int)>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)(int)>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::*)()>(&EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableApplyChangesToContextCommand::$ExecuteEnumerable$d__1*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableRepeatedTestCommand
#include "UnityEngine/TestTools/EnumerableRepeatedTestCommand.hpp"
// Including type: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestTools/EnumerableRepeatedTestCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.RepeatAttribute/RepeatedTestCommand
#include "NUnit/Framework/RepeatAttribute_RepeatedTestCommand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestTools::EnumerableRepeatedTestCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestTools::EnumerableRepeatedTestCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::*)(NUnit::Framework::RepeatAttribute::RepeatedTestCommand*)>(&EnumerableRepeatedTestCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::RepeatAttribute::RepeatedTestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::*)(NUnit::Framework::RepeatAttribute::RepeatedTestCommand*)>(&EnumerableRepeatedTestCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::RepeatAttribute::RepeatedTestCommand*>()});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (EnumerableRepeatedTestCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableRepeatedTestCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (EnumerableRepeatedTestCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableRepeatedTestCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestTools/EnumerableRepeatedTestCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.MoveNext
bool UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.<>m__Finally1
void UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRepeatedTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)(int)>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)(int)>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRepeatedTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableRetryTestCommand
#include "UnityEngine/TestTools/EnumerableRetryTestCommand.hpp"
// Including type: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestTools/EnumerableRetryTestCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.RetryAttribute/RetryCommand
#include "NUnit/Framework/RetryAttribute_RetryCommand.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestTools::EnumerableRetryTestCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestTools::EnumerableRetryTestCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: EnumerableRetryTestCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::*)(NUnit::Framework::RetryAttribute::RetryCommand*)>(&EnumerableRetryTestCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::RetryAttribute::RetryCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::*)(NUnit::Framework::RetryAttribute::RetryCommand*)>(&EnumerableRetryTestCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::RetryAttribute::RetryCommand*>()});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (EnumerableRetryTestCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableRetryTestCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (EnumerableRetryTestCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableRetryTestCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3
#include "UnityEngine/TestTools/EnumerableRetryTestCommand_-ExecuteEnumerable-d__3.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.MoveNext
bool UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.<>m__Finally1
void UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableRetryTestCommand/<ExecuteEnumerable>d__3.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)(int)>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)(int)>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::*)()>(&EnumerableRetryTestCommand::$ExecuteEnumerable$d__3::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableRetryTestCommand::$ExecuteEnumerable$d__3*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableSetUpTearDownCommand
#include "UnityEngine/TestTools/EnumerableSetUpTearDownCommand.hpp"
// Including type: UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c
#include "UnityEngine/TestTools/EnumerableSetUpTearDownCommand_--c.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand.GetMethodsWithAttributeFromFixture
::Array<System::Reflection::MethodInfo*>* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::GetMethodsWithAttributeFromFixture(System::Type* fixtureType, System::Type* setUpType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::GetMethodsWithAttributeFromFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand", "GetMethodsWithAttributeFromFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(setUpType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fixtureType, setUpType);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand.InvokeBefore
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::InvokeBefore(System::Reflection::MethodInfo* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::InvokeBefore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand.InvokeAfter
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::InvokeAfter(System::Reflection::MethodInfo* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::InvokeAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand.GetState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::GetState(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::GetMethodsWithAttributeFromFixture
// Il2CppName: GetMethodsWithAttributeFromFixture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MethodInfo*>* (*)(System::Type*, System::Type*)>(&EnumerableSetUpTearDownCommand::GetMethodsWithAttributeFromFixture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), "GetMethodsWithAttributeFromFixture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::InvokeBefore
// Il2CppName: InvokeBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableSetUpTearDownCommand::*)(System::Reflection::MethodInfo*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&EnumerableSetUpTearDownCommand::InvokeBefore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), "InvokeBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::InvokeAfter
// Il2CppName: InvokeAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableSetUpTearDownCommand::*)(System::Reflection::MethodInfo*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&EnumerableSetUpTearDownCommand::InvokeAfter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), "InvokeAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableSetUpTearDownCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&EnumerableSetUpTearDownCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableSetUpTearDownCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&EnumerableSetUpTearDownCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::GetState
// Il2CppName: GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (EnumerableSetUpTearDownCommand::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&EnumerableSetUpTearDownCommand::GetState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand*), "GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c
#include "UnityEngine/TestTools/EnumerableSetUpTearDownCommand_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c <>9
UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c*>("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c <>9
void UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_set_$$9(UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__1_0
System::Func_2<System::Reflection::MethodInfo*, bool>* UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::MethodInfo*, bool>*>("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__1_0
void UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_set_$$9__1_0(System::Func_2<System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand/<>c", "<>9__1_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c..cctor
void UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "EnumerableSetUpTearDownCommand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableSetUpTearDownCommand/<>c.<GetMethodsWithAttributeFromFixture>b__1_0
bool UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0(System::Reflection::MethodInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableSetUpTearDownCommand::$$c::<GetMethodsWithAttributeFromFixture>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMethodsWithAttributeFromFixture>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EnumerableSetUpTearDownCommand::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0
// Il2CppName: <GetMethodsWithAttributeFromFixture>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableSetUpTearDownCommand::$$c::*)(System::Reflection::MethodInfo*)>(&EnumerableSetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand::$$c*), "<GetMethodsWithAttributeFromFixture>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: EnumerableSetUpTearDownCommand::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableSetUpTearDownCommand::$$c::*)()>(&EnumerableSetUpTearDownCommand::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableSetUpTearDownCommand::$$c::*)()>(&EnumerableSetUpTearDownCommand::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableSetUpTearDownCommand::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableTestMethodCommand
#include "UnityEngine/TestTools/EnumerableTestMethodCommand.hpp"
// Including type: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2
#include "UnityEngine/TestTools/EnumerableTestMethodCommand_-ExecuteEnumerable-d__2.hpp"
// Including type: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3
#include "UnityEngine/TestTools/EnumerableTestMethodCommand_-ExecuteEnumerableAndRecordExceptions-d__3.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand.ExecuteEnumerable
System::Collections::IEnumerable* UnityEngine::TestTools::EnumerableTestMethodCommand::ExecuteEnumerable(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::ExecuteEnumerable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteEnumerable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerable*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand.ExecuteEnumerableAndRecordExceptions
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableTestMethodCommand::ExecuteEnumerableAndRecordExceptions(System::Collections::IEnumerator* enumerator, NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::ExecuteEnumerableAndRecordExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "EnumerableTestMethodCommand", "ExecuteEnumerableAndRecordExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, enumerator, context);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestTools::EnumerableTestMethodCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: EnumerableTestMethodCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::*)(NUnit::Framework::Internal::TestMethod*)>(&EnumerableTestMethodCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::*)(NUnit::Framework::Internal::TestMethod*)>(&EnumerableTestMethodCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>()});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::ExecuteEnumerable
// Il2CppName: ExecuteEnumerable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerable* (EnumerableTestMethodCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableTestMethodCommand::ExecuteEnumerable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand*), "ExecuteEnumerable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::ExecuteEnumerableAndRecordExceptions
// Il2CppName: ExecuteEnumerableAndRecordExceptions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (*)(System::Collections::IEnumerator*, NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableTestMethodCommand::ExecuteEnumerableAndRecordExceptions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand*), "ExecuteEnumerableAndRecordExceptions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (EnumerableTestMethodCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&EnumerableTestMethodCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2
#include "UnityEngine/TestTools/EnumerableTestMethodCommand_-ExecuteEnumerable-d__2.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.TestEnumerator
#include "UnityEngine/TestTools/TestEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.IDisposable.Dispose
void UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.MoveNext
bool UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerable>d__2.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)(int)>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)(int)>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator
// Il2CppName: System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<::Il2CppObject*>* (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_Generic_IEnumerable$System_Object$_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerable$d__2::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerable$d__2*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3
#include "UnityEngine/TestTools/EnumerableTestMethodCommand_-ExecuteEnumerableAndRecordExceptions-d__3.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3.MoveNext
bool UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.EnumerableTestMethodCommand/<ExecuteEnumerableAndRecordExceptions>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)(int)>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)(int)>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::*)()>(&EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestMethodCommand::$ExecuteEnumerableAndRecordExceptions$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.EnumerableTestState
#include "UnityEngine/TestTools/EnumerableTestState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: EnumerableTestState::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestState::*)()>(&EnumerableTestState::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnumerableTestState::*)()>(&EnumerableTestState::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnumerableTestState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.ImmediateEnumerableCommand
#include "UnityEngine/TestTools/ImmediateEnumerableCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.ImmediateEnumerableCommand.Execute
NUnit::Framework::Internal::TestResult* UnityEngine::TestTools::ImmediateEnumerableCommand::Execute(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::ImmediateEnumerableCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: ImmediateEnumerableCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImmediateEnumerableCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&ImmediateEnumerableCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImmediateEnumerableCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ImmediateEnumerableCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&ImmediateEnumerableCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImmediateEnumerableCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: ImmediateEnumerableCommand::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestResult* (ImmediateEnumerableCommand::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&ImmediateEnumerableCommand::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ImmediateEnumerableCommand*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.OuterUnityTestActionCommand
#include "UnityEngine/TestTools/OuterUnityTestActionCommand.hpp"
// Including type: UnityEngine.TestTools.IOuterUnityTestAction
#include "UnityEngine/TestTools/IOuterUnityTestAction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.OuterUnityTestActionCommand.GetUnityTestActionsFromMethod
::Array<UnityEngine::TestTools::IOuterUnityTestAction*>* UnityEngine::TestTools::OuterUnityTestActionCommand::GetUnityTestActionsFromMethod(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::OuterUnityTestActionCommand::GetUnityTestActionsFromMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "OuterUnityTestActionCommand", "GetUnityTestActionsFromMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::TestTools::IOuterUnityTestAction*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: UnityEngine.TestTools.OuterUnityTestActionCommand.InvokeBefore
System::Collections::IEnumerator* UnityEngine::TestTools::OuterUnityTestActionCommand::InvokeBefore(UnityEngine::TestTools::IOuterUnityTestAction* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::OuterUnityTestActionCommand::InvokeBefore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.OuterUnityTestActionCommand.InvokeAfter
System::Collections::IEnumerator* UnityEngine::TestTools::OuterUnityTestActionCommand::InvokeAfter(UnityEngine::TestTools::IOuterUnityTestAction* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::OuterUnityTestActionCommand::InvokeAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.OuterUnityTestActionCommand.GetState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestTools::OuterUnityTestActionCommand::GetState(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::OuterUnityTestActionCommand::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: OuterUnityTestActionCommand::GetUnityTestActionsFromMethod
// Il2CppName: GetUnityTestActionsFromMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::TestTools::IOuterUnityTestAction*>* (*)(System::Reflection::MethodInfo*)>(&OuterUnityTestActionCommand::GetUnityTestActionsFromMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), "GetUnityTestActionsFromMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: OuterUnityTestActionCommand::InvokeBefore
// Il2CppName: InvokeBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (OuterUnityTestActionCommand::*)(UnityEngine::TestTools::IOuterUnityTestAction*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&OuterUnityTestActionCommand::InvokeBefore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), "InvokeBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::IOuterUnityTestAction*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: OuterUnityTestActionCommand::InvokeAfter
// Il2CppName: InvokeAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (OuterUnityTestActionCommand::*)(UnityEngine::TestTools::IOuterUnityTestAction*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&OuterUnityTestActionCommand::InvokeAfter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), "InvokeAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::IOuterUnityTestAction*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: OuterUnityTestActionCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OuterUnityTestActionCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&OuterUnityTestActionCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OuterUnityTestActionCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&OuterUnityTestActionCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: OuterUnityTestActionCommand::GetState
// Il2CppName: GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (OuterUnityTestActionCommand::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&OuterUnityTestActionCommand::GetState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OuterUnityTestActionCommand*), "GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand
#include "UnityEngine/TestTools/SetUpTearDownCommand.hpp"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<>c
#include "UnityEngine/TestTools/SetUpTearDownCommand_--c.hpp"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2
#include "UnityEngine/TestTools/SetUpTearDownCommand_-InvokeBefore-d__2.hpp"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3
#include "UnityEngine/TestTools/SetUpTearDownCommand_-InvokeAfter-d__3.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand.GetMethodsWithAttributeFromFixture
::Array<System::Reflection::MethodInfo*>* UnityEngine::TestTools::SetUpTearDownCommand::GetMethodsWithAttributeFromFixture(System::Type* fixtureType, System::Type* setUpType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::GetMethodsWithAttributeFromFixture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "SetUpTearDownCommand", "GetMethodsWithAttributeFromFixture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixtureType), ::il2cpp_utils::ExtractType(setUpType)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fixtureType, setUpType);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand.InvokeBefore
System::Collections::IEnumerator* UnityEngine::TestTools::SetUpTearDownCommand::InvokeBefore(System::Reflection::MethodInfo* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::InvokeBefore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand.InvokeAfter
System::Collections::IEnumerator* UnityEngine::TestTools::SetUpTearDownCommand::InvokeAfter(System::Reflection::MethodInfo* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::InvokeAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand.GetState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestTools::SetUpTearDownCommand::GetState(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: SetUpTearDownCommand::GetMethodsWithAttributeFromFixture
// Il2CppName: GetMethodsWithAttributeFromFixture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MethodInfo*>* (*)(System::Type*, System::Type*)>(&SetUpTearDownCommand::GetMethodsWithAttributeFromFixture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), "GetMethodsWithAttributeFromFixture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::InvokeBefore
// Il2CppName: InvokeBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (SetUpTearDownCommand::*)(System::Reflection::MethodInfo*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&SetUpTearDownCommand::InvokeBefore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), "InvokeBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::InvokeAfter
// Il2CppName: InvokeAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (SetUpTearDownCommand::*)(System::Reflection::MethodInfo*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&SetUpTearDownCommand::InvokeAfter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), "InvokeAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&SetUpTearDownCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&SetUpTearDownCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::GetState
// Il2CppName: GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (SetUpTearDownCommand::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&SetUpTearDownCommand::GetState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand*), "GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<>c
#include "UnityEngine/TestTools/SetUpTearDownCommand_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.SetUpTearDownCommand/<>c <>9
UnityEngine::TestTools::SetUpTearDownCommand::$$c* UnityEngine::TestTools::SetUpTearDownCommand::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::SetUpTearDownCommand::$$c*>("UnityEngine.TestTools", "SetUpTearDownCommand/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.SetUpTearDownCommand/<>c <>9
void UnityEngine::TestTools::SetUpTearDownCommand::$$c::_set_$$9(UnityEngine::TestTools::SetUpTearDownCommand::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "SetUpTearDownCommand/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__1_0
System::Func_2<System::Reflection::MethodInfo*, bool>* UnityEngine::TestTools::SetUpTearDownCommand::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::MethodInfo*, bool>*>("UnityEngine.TestTools", "SetUpTearDownCommand/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__1_0
void UnityEngine::TestTools::SetUpTearDownCommand::$$c::_set_$$9__1_0(System::Func_2<System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "SetUpTearDownCommand/<>c", "<>9__1_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<>c..cctor
void UnityEngine::TestTools::SetUpTearDownCommand::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "SetUpTearDownCommand/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<>c.<GetMethodsWithAttributeFromFixture>b__1_0
bool UnityEngine::TestTools::SetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0(System::Reflection::MethodInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$$c::<GetMethodsWithAttributeFromFixture>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMethodsWithAttributeFromFixture>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: SetUpTearDownCommand::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SetUpTearDownCommand::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0
// Il2CppName: <GetMethodsWithAttributeFromFixture>b__1_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SetUpTearDownCommand::$$c::*)(System::Reflection::MethodInfo*)>(&SetUpTearDownCommand::$$c::$GetMethodsWithAttributeFromFixture$b__1_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$$c*), "<GetMethodsWithAttributeFromFixture>b__1_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$$c::*)()>(&SetUpTearDownCommand::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$$c::*)()>(&SetUpTearDownCommand::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2
#include "UnityEngine/TestTools/SetUpTearDownCommand_-InvokeBefore-d__2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2.System.IDisposable.Dispose
void UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2.MoveNext
bool UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeBefore>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeBefore$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeBefore$d__2::*)(int)>(&SetUpTearDownCommand::$InvokeBefore$d__2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeBefore$d__2::*)(int)>(&SetUpTearDownCommand::$InvokeBefore$d__2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeBefore$d__2::*)()>(&SetUpTearDownCommand::$InvokeBefore$d__2::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SetUpTearDownCommand::$InvokeBefore$d__2::*)()>(&SetUpTearDownCommand::$InvokeBefore$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SetUpTearDownCommand::$InvokeBefore$d__2::*)()>(&SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeBefore$d__2::*)()>(&SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SetUpTearDownCommand::$InvokeBefore$d__2::*)()>(&SetUpTearDownCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeBefore$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3
#include "UnityEngine/TestTools/SetUpTearDownCommand_-InvokeAfter-d__3.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3.MoveNext
bool UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.SetUpTearDownCommand/<InvokeAfter>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::SetUpTearDownCommand::$InvokeAfter$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeAfter$d__3::*)(int)>(&SetUpTearDownCommand::$InvokeAfter$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeAfter$d__3::*)(int)>(&SetUpTearDownCommand::$InvokeAfter$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeAfter$d__3::*)()>(&SetUpTearDownCommand::$InvokeAfter$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SetUpTearDownCommand::$InvokeAfter$d__3::*)()>(&SetUpTearDownCommand::$InvokeAfter$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SetUpTearDownCommand::$InvokeAfter$d__3::*)()>(&SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SetUpTearDownCommand::$InvokeAfter$d__3::*)()>(&SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SetUpTearDownCommand::$InvokeAfter$d__3::*)()>(&SetUpTearDownCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetUpTearDownCommand::$InvokeAfter$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestActionCommand
#include "UnityEngine/TestTools/TestActionCommand.hpp"
// Including type: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2
#include "UnityEngine/TestTools/TestActionCommand_-InvokeBefore-d__2.hpp"
// Including type: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3
#include "UnityEngine/TestTools/TestActionCommand_-InvokeAfter-d__3.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: UnityEngine.TestTools.BeforeAfterTestCommandState
#include "UnityEngine/TestTools/BeforeAfterTestCommandState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestActionCommand.GetTestActionsFromMethod
::Array<NUnit::Framework::ITestAction*>* UnityEngine::TestTools::TestActionCommand::GetTestActionsFromMethod(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::GetTestActionsFromMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools", "TestActionCommand", "GetTestActionsFromMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<NUnit::Framework::ITestAction*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand.InvokeBefore
System::Collections::IEnumerator* UnityEngine::TestTools::TestActionCommand::InvokeBefore(NUnit::Framework::ITestAction* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::InvokeBefore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand.InvokeAfter
System::Collections::IEnumerator* UnityEngine::TestTools::TestActionCommand::InvokeAfter(NUnit::Framework::ITestAction* action, NUnit::Framework::Internal::Test* test, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::InvokeAfter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, action, test, context);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand.GetState
UnityEngine::TestTools::BeforeAfterTestCommandState* UnityEngine::TestTools::TestActionCommand::GetState(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::GetState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::BeforeAfterTestCommandState*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: TestActionCommand::GetTestActionsFromMethod
// Il2CppName: GetTestActionsFromMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<NUnit::Framework::ITestAction*>* (*)(System::Reflection::MethodInfo*)>(&TestActionCommand::GetTestActionsFromMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), "GetTestActionsFromMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::InvokeBefore
// Il2CppName: InvokeBefore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (TestActionCommand::*)(NUnit::Framework::ITestAction*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&TestActionCommand::InvokeBefore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), "InvokeBefore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::ITestAction*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::InvokeAfter
// Il2CppName: InvokeAfter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (TestActionCommand::*)(NUnit::Framework::ITestAction*, NUnit::Framework::Internal::Test*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&TestActionCommand::InvokeAfter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), "InvokeAfter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::ITestAction*>(), ::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Test*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&TestActionCommand::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::*)(NUnit::Framework::Internal::Commands::TestCommand*)>(&TestActionCommand::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::Commands::TestCommand*>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::GetState
// Il2CppName: GetState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::BeforeAfterTestCommandState* (TestActionCommand::*)(UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&TestActionCommand::GetState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand*), "GetState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2
#include "UnityEngine/TestTools/TestActionCommand_-InvokeBefore-d__2.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2.System.IDisposable.Dispose
void UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2.MoveNext
bool UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeBefore>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeBefore$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeBefore$d__2::*)(int)>(&TestActionCommand::$InvokeBefore$d__2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeBefore$d__2::*)(int)>(&TestActionCommand::$InvokeBefore$d__2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeBefore$d__2::*)()>(&TestActionCommand::$InvokeBefore$d__2::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestActionCommand::$InvokeBefore$d__2::*)()>(&TestActionCommand::$InvokeBefore$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestActionCommand::$InvokeBefore$d__2::*)()>(&TestActionCommand::$InvokeBefore$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeBefore$d__2::*)()>(&TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestActionCommand::$InvokeBefore$d__2::*)()>(&TestActionCommand::$InvokeBefore$d__2::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeBefore$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3
#include "UnityEngine/TestTools/TestActionCommand_-InvokeAfter-d__3.hpp"
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3.MoveNext
bool UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestActionCommand/<InvokeAfter>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestActionCommand::$InvokeAfter$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeAfter$d__3::*)(int)>(&TestActionCommand::$InvokeAfter$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeAfter$d__3::*)(int)>(&TestActionCommand::$InvokeAfter$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeAfter$d__3::*)()>(&TestActionCommand::$InvokeAfter$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TestActionCommand::$InvokeAfter$d__3::*)()>(&TestActionCommand::$InvokeAfter$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestActionCommand::$InvokeAfter$d__3::*)()>(&TestActionCommand::$InvokeAfter$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestActionCommand::$InvokeAfter$d__3::*)()>(&TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (TestActionCommand::$InvokeAfter$d__3::*)()>(&TestActionCommand::$InvokeAfter$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestActionCommand::$InvokeAfter$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestCommandPcHelper
#include "UnityEngine/TestTools/TestCommandPcHelper.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestCommandPcHelper.SetEnumeratorPC
void UnityEngine::TestTools::TestCommandPcHelper::SetEnumeratorPC(System::Collections::IEnumerator* enumerator, int pc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestCommandPcHelper::SetEnumeratorPC");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnumeratorPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator), ::il2cpp_utils::ExtractType(pc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enumerator, pc);
}
// Autogenerated method: UnityEngine.TestTools.TestCommandPcHelper.GetEnumeratorPC
int UnityEngine::TestTools::TestCommandPcHelper::GetEnumeratorPC(System::Collections::IEnumerator* enumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestCommandPcHelper::GetEnumeratorPC");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumeratorPC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, enumerator);
}
// Writing MetadataGetter for method: TestCommandPcHelper::SetEnumeratorPC
// Il2CppName: SetEnumeratorPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestCommandPcHelper::*)(System::Collections::IEnumerator*, int)>(&TestCommandPcHelper::SetEnumeratorPC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandPcHelper*), "SetEnumeratorPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TestCommandPcHelper::GetEnumeratorPC
// Il2CppName: GetEnumeratorPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TestCommandPcHelper::*)(System::Collections::IEnumerator*)>(&TestCommandPcHelper::GetEnumeratorPC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandPcHelper*), "GetEnumeratorPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>()});
  }
};
// Writing MetadataGetter for method: TestCommandPcHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestCommandPcHelper::*)()>(&TestCommandPcHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandPcHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestCommandPcHelper::*)()>(&TestCommandPcHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestCommandPcHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.IEditModeTestYieldInstruction
#include "UnityEngine/TestTools/IEditModeTestYieldInstruction.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.IEditModeTestYieldInstruction.Perform
System::Collections::IEnumerator* UnityEngine::TestTools::IEditModeTestYieldInstruction::Perform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::IEditModeTestYieldInstruction::Perform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Perform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IEditModeTestYieldInstruction::Perform
// Il2CppName: Perform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (IEditModeTestYieldInstruction::*)()>(&IEditModeTestYieldInstruction::Perform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IEditModeTestYieldInstruction*), "Perform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestPlatform
#include "UnityEngine/TestTools/TestPlatform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TestTools.TestPlatform All
UnityEngine::TestTools::TestPlatform UnityEngine::TestTools::TestPlatform::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestPlatform>("UnityEngine.TestTools", "TestPlatform", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TestTools.TestPlatform All
void UnityEngine::TestTools::TestPlatform::_set_All(UnityEngine::TestTools::TestPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "TestPlatform", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TestTools.TestPlatform EditMode
UnityEngine::TestTools::TestPlatform UnityEngine::TestTools::TestPlatform::_get_EditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_get_EditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestPlatform>("UnityEngine.TestTools", "TestPlatform", "EditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TestTools.TestPlatform EditMode
void UnityEngine::TestTools::TestPlatform::_set_EditMode(UnityEngine::TestTools::TestPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_set_EditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "TestPlatform", "EditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TestTools.TestPlatform PlayMode
UnityEngine::TestTools::TestPlatform UnityEngine::TestTools::TestPlatform::_get_PlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_get_PlayMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestPlatform>("UnityEngine.TestTools", "TestPlatform", "PlayMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TestTools.TestPlatform PlayMode
void UnityEngine::TestTools::TestPlatform::_set_PlayMode(UnityEngine::TestTools::TestPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestPlatform::_set_PlayMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools", "TestPlatform", "PlayMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.IOuterUnityTestAction
#include "UnityEngine/TestTools/IOuterUnityTestAction.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.IOuterUnityTestAction.BeforeTest
System::Collections::IEnumerator* UnityEngine::TestTools::IOuterUnityTestAction::BeforeTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::IOuterUnityTestAction::BeforeTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.IOuterUnityTestAction.AfterTest
System::Collections::IEnumerator* UnityEngine::TestTools::IOuterUnityTestAction::AfterTest(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::IOuterUnityTestAction::AfterTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, test);
}
// Writing MetadataGetter for method: IOuterUnityTestAction::BeforeTest
// Il2CppName: BeforeTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (IOuterUnityTestAction::*)(NUnit::Framework::Interfaces::ITest*)>(&IOuterUnityTestAction::BeforeTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IOuterUnityTestAction*), "BeforeTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: IOuterUnityTestAction::AfterTest
// Il2CppName: AfterTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (IOuterUnityTestAction::*)(NUnit::Framework::Interfaces::ITest*)>(&IOuterUnityTestAction::AfterTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IOuterUnityTestAction*), "AfterTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.AssemblyLoadProxy
#include "UnityEngine/TestTools/Utils/AssemblyLoadProxy.hpp"
// Including type: UnityEngine.TestTools.Utils.IAssemblyWrapper
#include "UnityEngine/TestTools/Utils/IAssemblyWrapper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.AssemblyLoadProxy.Load
UnityEngine::TestTools::Utils::IAssemblyWrapper* UnityEngine::TestTools::Utils::AssemblyLoadProxy::Load(::Il2CppString* assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::AssemblyLoadProxy::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyString)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::Utils::IAssemblyWrapper*, false>(this, ___internal__method, assemblyString);
}
// Writing MetadataGetter for method: AssemblyLoadProxy::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::Utils::IAssemblyWrapper* (AssemblyLoadProxy::*)(::Il2CppString*)>(&AssemblyLoadProxy::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyLoadProxy*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AssemblyLoadProxy::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyLoadProxy::*)()>(&AssemblyLoadProxy::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyLoadProxy*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyLoadProxy::*)()>(&AssemblyLoadProxy::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyLoadProxy*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.Utils.AssemblyWrapper
#include "UnityEngine/TestTools/Utils/AssemblyWrapper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.AssemblyWrapper.get_Assembly
System::Reflection::Assembly* UnityEngine::TestTools::Utils::AssemblyWrapper::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::AssemblyWrapper::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AssemblyWrapper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyWrapper::*)(System::Reflection::Assembly*)>(&AssemblyWrapper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AssemblyWrapper::*)(System::Reflection::Assembly*)>(&AssemblyWrapper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: AssemblyWrapper::get_Assembly
// Il2CppName: get_Assembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (AssemblyWrapper::*)()>(&AssemblyWrapper::get_Assembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AssemblyWrapper*), "get_Assembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.IAssemblyLoadProxy
#include "UnityEngine/TestTools/Utils/IAssemblyLoadProxy.hpp"
// Including type: UnityEngine.TestTools.Utils.IAssemblyWrapper
#include "UnityEngine/TestTools/Utils/IAssemblyWrapper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.IAssemblyLoadProxy.Load
UnityEngine::TestTools::Utils::IAssemblyWrapper* UnityEngine::TestTools::Utils::IAssemblyLoadProxy::Load(::Il2CppString* assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::IAssemblyLoadProxy::Load");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyString)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::Utils::IAssemblyWrapper*, false>(this, ___internal__method, assemblyString);
}
// Writing MetadataGetter for method: IAssemblyLoadProxy::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::Utils::IAssemblyWrapper* (IAssemblyLoadProxy::*)(::Il2CppString*)>(&IAssemblyLoadProxy::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAssemblyLoadProxy*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.Utils.IAssemblyWrapper
#include "UnityEngine/TestTools/Utils/IAssemblyWrapper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.IAssemblyWrapper.get_Assembly
System::Reflection::Assembly* UnityEngine::TestTools::Utils::IAssemblyWrapper::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::IAssemblyWrapper::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IAssemblyWrapper::get_Assembly
// Il2CppName: get_Assembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (IAssemblyWrapper::*)()>(&IAssemblyWrapper::get_Assembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IAssemblyWrapper*), "get_Assembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.PlayerTestAssemblyProvider
#include "UnityEngine/TestTools/Utils/PlayerTestAssemblyProvider.hpp"
// Including type: UnityEngine.TestTools.Utils.IAssemblyLoadProxy
#include "UnityEngine/TestTools/Utils/IAssemblyLoadProxy.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TestTools.Utils.IAssemblyWrapper
#include "UnityEngine/TestTools/Utils/IAssemblyWrapper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.TestTools.Utils.IAssemblyWrapper> m_LoadedAssemblies
System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>* UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::_get_m_LoadedAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::_get_m_LoadedAssemblies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>*>("UnityEngine.TestTools.Utils", "PlayerTestAssemblyProvider", "m_LoadedAssemblies"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.TestTools.Utils.IAssemblyWrapper> m_LoadedAssemblies
void UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::_set_m_LoadedAssemblies(System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::_set_m_LoadedAssemblies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Utils", "PlayerTestAssemblyProvider", "m_LoadedAssemblies", value));
}
// Autogenerated method: UnityEngine.TestTools.Utils.PlayerTestAssemblyProvider.GetUserAssemblies
System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>* UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::GetUserAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::GetUserAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.PlayerTestAssemblyProvider.LoadAssemblies
void UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::LoadAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::PlayerTestAssemblyProvider::LoadAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlayerTestAssemblyProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerTestAssemblyProvider::*)(UnityEngine::TestTools::Utils::IAssemblyLoadProxy*, System::Collections::Generic::List_1<::Il2CppString*>*)>(&PlayerTestAssemblyProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerTestAssemblyProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Utils::IAssemblyLoadProxy*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerTestAssemblyProvider::*)(UnityEngine::TestTools::Utils::IAssemblyLoadProxy*, System::Collections::Generic::List_1<::Il2CppString*>*)>(&PlayerTestAssemblyProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerTestAssemblyProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Utils::IAssemblyLoadProxy*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerTestAssemblyProvider::GetUserAssemblies
// Il2CppName: GetUserAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::TestTools::Utils::IAssemblyWrapper*>* (PlayerTestAssemblyProvider::*)()>(&PlayerTestAssemblyProvider::GetUserAssemblies)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerTestAssemblyProvider*), "GetUserAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerTestAssemblyProvider::LoadAssemblies
// Il2CppName: LoadAssemblies
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerTestAssemblyProvider::*)()>(&PlayerTestAssemblyProvider::LoadAssemblies)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerTestAssemblyProvider*), "LoadAssemblies", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner
#include "UnityEngine/TestTools/Utils/CoroutineRunner.hpp"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-HandleEnumerableTest-d__8.hpp"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-ExMethod-d__10.hpp"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-StartTimer-d__11.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestExecutionContext
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestExecutionContext.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.HandleEnumerableTest
System::Collections::IEnumerator* UnityEngine::TestTools::Utils::CoroutineRunner::HandleEnumerableTest(System::Collections::IEnumerator* testEnumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::HandleEnumerableTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEnumerableTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testEnumerator)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, testEnumerator);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.StopAllRunningCoroutines
void UnityEngine::TestTools::Utils::CoroutineRunner::StopAllRunningCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::StopAllRunningCoroutines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllRunningCoroutines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.ExMethod
System::Collections::IEnumerator* UnityEngine::TestTools::Utils::CoroutineRunner::ExMethod(System::Collections::IEnumerator* e, int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::ExMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, e, timeout);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.StartTimer
System::Collections::IEnumerator* UnityEngine::TestTools::Utils::CoroutineRunner::StartTimer(System::Collections::IEnumerator* coroutineToBeKilled, int timeout, System::Action* onTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::StartTimer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTimer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coroutineToBeKilled), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(onTimeout)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, coroutineToBeKilled, timeout, onTimeout);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.HasFailedWithTimeout
bool UnityEngine::TestTools::Utils::CoroutineRunner::HasFailedWithTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::HasFailedWithTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFailedWithTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner.<ExMethod>b__10_0
void UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$b__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::<ExMethod>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExMethod>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineRunner::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::*)(UnityEngine::MonoBehaviour*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&CoroutineRunner::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MonoBehaviour*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::*)(UnityEngine::MonoBehaviour*, UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*)>(&CoroutineRunner::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::MonoBehaviour*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestRunner::NUnitExtensions::Runner::UnityTestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::HandleEnumerableTest
// Il2CppName: HandleEnumerableTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CoroutineRunner::*)(System::Collections::IEnumerator*)>(&CoroutineRunner::HandleEnumerableTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "HandleEnumerableTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::StopAllRunningCoroutines
// Il2CppName: StopAllRunningCoroutines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::*)()>(&CoroutineRunner::StopAllRunningCoroutines)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "StopAllRunningCoroutines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::ExMethod
// Il2CppName: ExMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CoroutineRunner::*)(System::Collections::IEnumerator*, int)>(&CoroutineRunner::ExMethod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "ExMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::StartTimer
// Il2CppName: StartTimer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (CoroutineRunner::*)(System::Collections::IEnumerator*, int, System::Action*)>(&CoroutineRunner::StartTimer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "StartTimer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEnumerator*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::HasFailedWithTimeout
// Il2CppName: HasFailedWithTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CoroutineRunner::*)()>(&CoroutineRunner::HasFailedWithTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "HasFailedWithTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$b__10_0
// Il2CppName: <ExMethod>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::*)()>(&CoroutineRunner::$ExMethod$b__10_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner*), "<ExMethod>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-HandleEnumerableTest-d__8.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8.System.IDisposable.Dispose
void UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8.MoveNext
bool UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<HandleEnumerableTest>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$HandleEnumerableTest$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$HandleEnumerableTest$d__8::*)(int)>(&CoroutineRunner::$HandleEnumerableTest$d__8::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$HandleEnumerableTest$d__8::*)(int)>(&CoroutineRunner::$HandleEnumerableTest$d__8::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$HandleEnumerableTest$d__8::*)()>(&CoroutineRunner::$HandleEnumerableTest$d__8::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CoroutineRunner::$HandleEnumerableTest$d__8::*)()>(&CoroutineRunner::$HandleEnumerableTest$d__8::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$HandleEnumerableTest$d__8::*)()>(&CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$HandleEnumerableTest$d__8::*)()>(&CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$HandleEnumerableTest$d__8::*)()>(&CoroutineRunner::$HandleEnumerableTest$d__8::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$HandleEnumerableTest$d__8*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-ExMethod-d__10.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10.System.IDisposable.Dispose
void UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10.MoveNext
bool UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<ExMethod>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$ExMethod$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$ExMethod$d__10::*)(int)>(&CoroutineRunner::$ExMethod$d__10::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$ExMethod$d__10::*)(int)>(&CoroutineRunner::$ExMethod$d__10::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$ExMethod$d__10::*)()>(&CoroutineRunner::$ExMethod$d__10::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CoroutineRunner::$ExMethod$d__10::*)()>(&CoroutineRunner::$ExMethod$d__10::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$ExMethod$d__10::*)()>(&CoroutineRunner::$ExMethod$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$ExMethod$d__10::*)()>(&CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$ExMethod$d__10::*)()>(&CoroutineRunner::$ExMethod$d__10::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$ExMethod$d__10*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11
#include "UnityEngine/TestTools/Utils/CoroutineRunner_-StartTimer-d__11.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11.System.IDisposable.Dispose
void UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11.MoveNext
bool UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Utils.CoroutineRunner/<StartTimer>d__11.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::CoroutineRunner::$StartTimer$d__11::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$StartTimer$d__11::*)(int)>(&CoroutineRunner::$StartTimer$d__11::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$StartTimer$d__11::*)(int)>(&CoroutineRunner::$StartTimer$d__11::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$StartTimer$d__11::*)()>(&CoroutineRunner::$StartTimer$d__11::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CoroutineRunner::$StartTimer$d__11::*)()>(&CoroutineRunner::$StartTimer$d__11::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$StartTimer$d__11::*)()>(&CoroutineRunner::$StartTimer$d__11::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CoroutineRunner::$StartTimer$d__11::*)()>(&CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CoroutineRunner::$StartTimer$d__11::*)()>(&CoroutineRunner::$StartTimer$d__11::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CoroutineRunner::$StartTimer$d__11*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.StackTraceFilter
#include "UnityEngine/TestTools/Utils/StackTraceFilter.hpp"
// Including type: UnityEngine.TestTools.Utils.StackTraceFilter/<>c__DisplayClass2_0
#include "UnityEngine/TestTools/Utils/StackTraceFilter_--c__DisplayClass2_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_FilteredLogMessages
::Array<::Il2CppString*>* UnityEngine::TestTools::Utils::StackTraceFilter::_get_s_FilteredLogMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::_get_s_FilteredLogMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("UnityEngine.TestTools.Utils", "StackTraceFilter", "s_FilteredLogMessages"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_FilteredLogMessages
void UnityEngine::TestTools::Utils::StackTraceFilter::_set_s_FilteredLogMessages(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::_set_s_FilteredLogMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Utils", "StackTraceFilter", "s_FilteredLogMessages", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String[] s_LastMessages
::Array<::Il2CppString*>* UnityEngine::TestTools::Utils::StackTraceFilter::_get_s_LastMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::_get_s_LastMessages");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("UnityEngine.TestTools.Utils", "StackTraceFilter", "s_LastMessages"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] s_LastMessages
void UnityEngine::TestTools::Utils::StackTraceFilter::_set_s_LastMessages(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::_set_s_LastMessages");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Utils", "StackTraceFilter", "s_LastMessages", value));
}
// Autogenerated method: UnityEngine.TestTools.Utils.StackTraceFilter.Filter
::Il2CppString* UnityEngine::TestTools::Utils::StackTraceFilter::Filter(::Il2CppString* inputStackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Utils", "StackTraceFilter", "Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputStackTrace)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputStackTrace);
}
// Autogenerated method: UnityEngine.TestTools.Utils.StackTraceFilter..cctor
void UnityEngine::TestTools::Utils::StackTraceFilter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Utils", "StackTraceFilter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: StackTraceFilter::Filter
// Il2CppName: Filter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&StackTraceFilter::Filter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StackTraceFilter*), "Filter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StackTraceFilter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StackTraceFilter::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StackTraceFilter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Utils.StackTraceFilter/<>c__DisplayClass2_0
#include "UnityEngine/TestTools/Utils/StackTraceFilter_--c__DisplayClass2_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Utils.StackTraceFilter/<>c__DisplayClass2_0.<Filter>b__0
bool UnityEngine::TestTools::Utils::StackTraceFilter::$$c__DisplayClass2_0::$Filter$b__0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Utils::StackTraceFilter::$$c__DisplayClass2_0::<Filter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Filter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s);
}
// Writing MetadataGetter for method: StackTraceFilter::$$c__DisplayClass2_0::$Filter$b__0
// Il2CppName: <Filter>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StackTraceFilter::$$c__DisplayClass2_0::*)(::Il2CppString*)>(&StackTraceFilter::$$c__DisplayClass2_0::$Filter$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StackTraceFilter::$$c__DisplayClass2_0*), "<Filter>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StackTraceFilter::$$c__DisplayClass2_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StackTraceFilter::$$c__DisplayClass2_0::*)()>(&StackTraceFilter::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StackTraceFilter::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StackTraceFilter::$$c__DisplayClass2_0::*)()>(&StackTraceFilter::$$c__DisplayClass2_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StackTraceFilter::$$c__DisplayClass2_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder
#include "UnityEngine/TestTools/NUnitExtensions/UnityTestAssemblyBuilder.hpp"
// Including type: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3
#include "UnityEngine/TestTools/NUnitExtensions/UnityTestAssemblyBuilder_-BuildAsync-d__3.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder.Build
NUnit::Framework::Interfaces::ITest* UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::Build(::Array<System::Reflection::Assembly*>* assemblies, ::Array<UnityEngine::TestTools::TestPlatform>* testPlatforms, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies), ::il2cpp_utils::ExtractType(testPlatforms), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method, assemblies, testPlatforms, options);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder.BuildAsync
System::Collections::Generic::IEnumerator_1<NUnit::Framework::Interfaces::ITest*>* UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::BuildAsync(::Array<System::Reflection::Assembly*>* assemblies, ::Array<UnityEngine::TestTools::TestPlatform>* testPlatforms, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>* options) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::BuildAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies), ::il2cpp_utils::ExtractType(testPlatforms), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<NUnit::Framework::Interfaces::ITest*>*, false>(this, ___internal__method, assemblies, testPlatforms, options);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder.GetNUnitTestBuilderSettings
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::GetNUnitTestBuilderSettings(UnityEngine::TestTools::TestPlatform testPlatform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::GetNUnitTestBuilderSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.NUnitExtensions", "UnityTestAssemblyBuilder", "GetNUnitTestBuilderSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testPlatform)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, testPlatform);
}
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::Build
// Il2CppName: Build
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITest* (UnityTestAssemblyBuilder::*)(::Array<System::Reflection::Assembly*>*, ::Array<UnityEngine::TestTools::TestPlatform>*, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&UnityTestAssemblyBuilder::Build)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder*), "Build", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::Assembly*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TestTools::TestPlatform>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::BuildAsync
// Il2CppName: BuildAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<NUnit::Framework::Interfaces::ITest*>* (UnityTestAssemblyBuilder::*)(::Array<System::Reflection::Assembly*>*, ::Array<UnityEngine::TestTools::TestPlatform>*, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*)>(&UnityTestAssemblyBuilder::BuildAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder*), "BuildAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::Assembly*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TestTools::TestPlatform>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::GetNUnitTestBuilderSettings
// Il2CppName: GetNUnitTestBuilderSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* (*)(UnityEngine::TestTools::TestPlatform)>(&UnityTestAssemblyBuilder::GetNUnitTestBuilderSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder*), "GetNUnitTestBuilderSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestPlatform>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::*)()>(&UnityTestAssemblyBuilder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::*)()>(&UnityTestAssemblyBuilder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3
#include "UnityEngine/TestTools/NUnitExtensions/UnityTestAssemblyBuilder_-BuildAsync-d__3.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3.System.IDisposable.Dispose
void UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3.MoveNext
bool UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3.System.Collections.Generic.IEnumerator<NUnit.Framework.Interfaces.ITest>.get_Current
NUnit::Framework::Interfaces::ITest* UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_Generic_IEnumerator$NUnit_Framework_Interfaces_ITest$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System.Collections.Generic.IEnumerator<NUnit.Framework.Interfaces.ITest>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<NUnit.Framework.Interfaces.ITest>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITest*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.NUnitExtensions.UnityTestAssemblyBuilder/<BuildAsync>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::NUnitExtensions::UnityTestAssemblyBuilder::$BuildAsync$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)(int)>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)(int)>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)()>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)()>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_Generic_IEnumerator$NUnit_Framework_Interfaces_ITest$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<NUnit.Framework.Interfaces.ITest>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITest* (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)()>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_Generic_IEnumerator$NUnit_Framework_Interfaces_ITest$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), "System.Collections.Generic.IEnumerator<NUnit.Framework.Interfaces.ITest>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)()>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (UnityTestAssemblyBuilder::$BuildAsync$d__3::*)()>(&UnityTestAssemblyBuilder::$BuildAsync$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestAssemblyBuilder::$BuildAsync$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Logging.LogEvent
#include "UnityEngine/TestTools/Logging/LogEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.get_Message
::Il2CppString* UnityEngine::TestTools::Logging::LogEvent::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.set_Message
void UnityEngine::TestTools::Logging::LogEvent::set_Message(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::set_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.get_StackTrace
::Il2CppString* UnityEngine::TestTools::Logging::LogEvent::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::get_StackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.set_StackTrace
void UnityEngine::TestTools::Logging::LogEvent::set_StackTrace(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::set_StackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.get_LogType
UnityEngine::LogType UnityEngine::TestTools::Logging::LogEvent::get_LogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::get_LogType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LogType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.set_LogType
void UnityEngine::TestTools::Logging::LogEvent::set_LogType(UnityEngine::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::set_LogType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.get_IsHandled
bool UnityEngine::TestTools::Logging::LogEvent::get_IsHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::get_IsHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.set_IsHandled
void UnityEngine::TestTools::Logging::LogEvent::set_IsHandled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::set_IsHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogEvent.ToString
::Il2CppString* UnityEngine::TestTools::Logging::LogEvent::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogEvent::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LogEvent::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LogEvent::*)()>(&LogEvent::get_Message)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogEvent::set_Message
// Il2CppName: set_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)(::Il2CppString*)>(&LogEvent::set_Message)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "set_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LogEvent::get_StackTrace
// Il2CppName: get_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LogEvent::*)()>(&LogEvent::get_StackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "get_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogEvent::set_StackTrace
// Il2CppName: set_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)(::Il2CppString*)>(&LogEvent::set_StackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "set_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LogEvent::get_LogType
// Il2CppName: get_LogType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LogType (LogEvent::*)()>(&LogEvent::get_LogType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "get_LogType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogEvent::set_LogType
// Il2CppName: set_LogType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)(UnityEngine::LogType)>(&LogEvent::set_LogType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "set_LogType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: LogEvent::get_IsHandled
// Il2CppName: get_IsHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LogEvent::*)()>(&LogEvent::get_IsHandled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "get_IsHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogEvent::set_IsHandled
// Il2CppName: set_IsHandled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)(bool)>(&LogEvent::set_IsHandled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "set_IsHandled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogEvent::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LogEvent::*)()>(&LogEvent::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)()>(&LogEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogEvent::*)()>(&LogEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Logging.LogMatch
#include "UnityEngine/TestTools/Logging/LogMatch.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.TestTools.Logging.LogEvent
#include "UnityEngine/TestTools/Logging/LogEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.Logging.LogMatch.get_Message
::Il2CppString* UnityEngine::TestTools::Logging::LogMatch::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogMatch::get_Message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogMatch.get_MessageRegex
System::Text::RegularExpressions::Regex* UnityEngine::TestTools::Logging::LogMatch::get_MessageRegex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogMatch::get_MessageRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MessageRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::RegularExpressions::Regex*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogMatch.get_LogType
System::Nullable_1<UnityEngine::LogType> UnityEngine::TestTools::Logging::LogMatch::get_LogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogMatch::get_LogType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<UnityEngine::LogType>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogMatch.Matches
bool UnityEngine::TestTools::Logging::LogMatch::Matches(UnityEngine::TestTools::Logging::LogEvent* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogMatch::Matches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Matches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, log);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogMatch.ToString
::Il2CppString* UnityEngine::TestTools::Logging::LogMatch::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogMatch::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LogMatch::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LogMatch::*)()>(&LogMatch::get_Message)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogMatch::get_MessageRegex
// Il2CppName: get_MessageRegex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::RegularExpressions::Regex* (LogMatch::*)()>(&LogMatch::get_MessageRegex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), "get_MessageRegex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogMatch::get_LogType
// Il2CppName: get_LogType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<UnityEngine::LogType> (LogMatch::*)()>(&LogMatch::get_LogType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), "get_LogType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogMatch::Matches
// Il2CppName: Matches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LogMatch::*)(UnityEngine::TestTools::Logging::LogEvent*)>(&LogMatch::Matches)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), "Matches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogEvent*>()});
  }
};
// Writing MetadataGetter for method: LogMatch::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LogMatch::*)()>(&LogMatch::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogMatch::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogMatch::*)()>(&LogMatch::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogMatch::*)()>(&LogMatch::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogMatch*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.Logging.LogScope
#include "UnityEngine/TestTools/Logging/LogScope.hpp"
// Including type: UnityEngine.TestTools.Logging.LogScope/<>c
#include "UnityEngine/TestTools/Logging/LogScope_--c.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.TestTools.Logging.LogMatch
#include "UnityEngine/TestTools/Logging/LogMatch.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TestTools.Logging.LogEvent
#include "UnityEngine/TestTools/Logging/LogEvent.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.TestTools.Logging.LogScope> s_ActiveScopes
System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogScope*>* UnityEngine::TestTools::Logging::LogScope::_get_s_ActiveScopes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::_get_s_ActiveScopes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogScope*>*>("UnityEngine.TestTools.Logging", "LogScope", "s_ActiveScopes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.TestTools.Logging.LogScope> s_ActiveScopes
void UnityEngine::TestTools::Logging::LogScope::_set_s_ActiveScopes(System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogScope*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::_set_s_ActiveScopes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Logging", "LogScope", "s_ActiveScopes", value));
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.get_ExpectedLogs
System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>* UnityEngine::TestTools::Logging::LogScope::get_ExpectedLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::get_ExpectedLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectedLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_ExpectedLogs
void UnityEngine::TestTools::Logging::LogScope::set_ExpectedLogs(System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_ExpectedLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpectedLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.get_AllLogs
System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>* UnityEngine::TestTools::Logging::LogScope::get_AllLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::get_AllLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.get_FailingLogs
System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>* UnityEngine::TestTools::Logging::LogScope::get_FailingLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::get_FailingLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FailingLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.get_IgnoreFailingMessages
bool UnityEngine::TestTools::Logging::LogScope::get_IgnoreFailingMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::get_IgnoreFailingMessages");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IgnoreFailingMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_IgnoreFailingMessages
void UnityEngine::TestTools::Logging::LogScope::set_IgnoreFailingMessages(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_IgnoreFailingMessages");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IgnoreFailingMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_IsNUnitException
void UnityEngine::TestTools::Logging::LogScope::set_IsNUnitException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_IsNUnitException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNUnitException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_IsNUnitSuccessException
void UnityEngine::TestTools::Logging::LogScope::set_IsNUnitSuccessException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_IsNUnitSuccessException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNUnitSuccessException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_IsNUnitInconclusiveException
void UnityEngine::TestTools::Logging::LogScope::set_IsNUnitInconclusiveException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_IsNUnitInconclusiveException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNUnitInconclusiveException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_IsNUnitIgnoreException
void UnityEngine::TestTools::Logging::LogScope::set_IsNUnitIgnoreException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_IsNUnitIgnoreException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsNUnitIgnoreException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.set_NUnitExceptionMessage
void UnityEngine::TestTools::Logging::LogScope::set_NUnitExceptionMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::set_NUnitExceptionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NUnitExceptionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.Activate
void UnityEngine::TestTools::Logging::LogScope::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.Deactivate
void UnityEngine::TestTools::Logging::LogScope::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.RegisterScope
void UnityEngine::TestTools::Logging::LogScope::RegisterScope(UnityEngine::TestTools::Logging::LogScope* logScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::RegisterScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope", "RegisterScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.UnregisterScope
void UnityEngine::TestTools::Logging::LogScope::UnregisterScope(UnityEngine::TestTools::Logging::LogScope* logScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::UnregisterScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope", "UnregisterScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logScope)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, logScope);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.AddLog
void UnityEngine::TestTools::Logging::LogScope::AddLog(::Il2CppString* message, ::Il2CppString* stacktrace, UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::AddLog");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stacktrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, stacktrace, type);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.IsNUnitResultStateException
bool UnityEngine::TestTools::Logging::LogScope::IsNUnitResultStateException(::Il2CppString* stacktrace, UnityEngine::LogType logType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::IsNUnitResultStateException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope", "IsNUnitResultStateException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stacktrace), ::il2cpp_utils::ExtractType(logType)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stacktrace, logType);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.IsFailingLog
bool UnityEngine::TestTools::Logging::LogScope::IsFailingLog(UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::IsFailingLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope", "IsFailingLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.Dispose
void UnityEngine::TestTools::Logging::LogScope::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.Dispose
void UnityEngine::TestTools::Logging::LogScope::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.AnyFailingLogs
bool UnityEngine::TestTools::Logging::LogScope::AnyFailingLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::AnyFailingLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyFailingLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.ProcessExpectedLogs
void UnityEngine::TestTools::Logging::LogScope::ProcessExpectedLogs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::ProcessExpectedLogs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessExpectedLogs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope.NoUnexpectedReceived
void UnityEngine::TestTools::Logging::LogScope::NoUnexpectedReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::NoUnexpectedReceived");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoUnexpectedReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope..cctor
void UnityEngine::TestTools::Logging::LogScope::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: LogScope::get_ExpectedLogs
// Il2CppName: get_ExpectedLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>* (LogScope::*)()>(&LogScope::get_ExpectedLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "get_ExpectedLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::set_ExpectedLogs
// Il2CppName: set_ExpectedLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>*)>(&LogScope::set_ExpectedLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_ExpectedLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::Queue_1<UnityEngine::TestTools::Logging::LogMatch*>*>()});
  }
};
// Writing MetadataGetter for method: LogScope::get_AllLogs
// Il2CppName: get_AllLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>* (LogScope::*)()>(&LogScope::get_AllLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "get_AllLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::get_FailingLogs
// Il2CppName: get_FailingLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::TestTools::Logging::LogEvent*>* (LogScope::*)()>(&LogScope::get_FailingLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "get_FailingLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::get_IgnoreFailingMessages
// Il2CppName: get_IgnoreFailingMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LogScope::*)()>(&LogScope::get_IgnoreFailingMessages)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "get_IgnoreFailingMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::set_IgnoreFailingMessages
// Il2CppName: set_IgnoreFailingMessages
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::set_IgnoreFailingMessages)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_IgnoreFailingMessages", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::set_IsNUnitException
// Il2CppName: set_IsNUnitException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::set_IsNUnitException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_IsNUnitException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::set_IsNUnitSuccessException
// Il2CppName: set_IsNUnitSuccessException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::set_IsNUnitSuccessException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_IsNUnitSuccessException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::set_IsNUnitInconclusiveException
// Il2CppName: set_IsNUnitInconclusiveException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::set_IsNUnitInconclusiveException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_IsNUnitInconclusiveException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::set_IsNUnitIgnoreException
// Il2CppName: set_IsNUnitIgnoreException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::set_IsNUnitIgnoreException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_IsNUnitIgnoreException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::set_NUnitExceptionMessage
// Il2CppName: set_NUnitExceptionMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(::Il2CppString*)>(&LogScope::set_NUnitExceptionMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "set_NUnitExceptionMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LogScope::Activate
// Il2CppName: Activate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::Activate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "Activate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::Deactivate
// Il2CppName: Deactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::Deactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "Deactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::RegisterScope
// Il2CppName: RegisterScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::TestTools::Logging::LogScope*)>(&LogScope::RegisterScope)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "RegisterScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>()});
  }
};
// Writing MetadataGetter for method: LogScope::UnregisterScope
// Il2CppName: UnregisterScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::TestTools::Logging::LogScope*)>(&LogScope::UnregisterScope)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "UnregisterScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogScope*>()});
  }
};
// Writing MetadataGetter for method: LogScope::AddLog
// Il2CppName: AddLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::LogType)>(&LogScope::AddLog)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "AddLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: LogScope::IsNUnitResultStateException
// Il2CppName: IsNUnitResultStateException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, UnityEngine::LogType)>(&LogScope::IsNUnitResultStateException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "IsNUnitResultStateException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: LogScope::IsFailingLog
// Il2CppName: IsFailingLog
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::LogType)>(&LogScope::IsFailingLog)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "IsFailingLog", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: LogScope::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)(bool)>(&LogScope::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LogScope::AnyFailingLogs
// Il2CppName: AnyFailingLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LogScope::*)()>(&LogScope::AnyFailingLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "AnyFailingLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::ProcessExpectedLogs
// Il2CppName: ProcessExpectedLogs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::ProcessExpectedLogs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "ProcessExpectedLogs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::NoUnexpectedReceived
// Il2CppName: NoUnexpectedReceived
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::NoUnexpectedReceived)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), "NoUnexpectedReceived", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LogScope::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::*)()>(&LogScope::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.Logging.LogScope/<>c
#include "UnityEngine/TestTools/Logging/LogScope_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.TestTools.Logging.LogEvent
#include "UnityEngine/TestTools/Logging/LogEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.Logging.LogScope/<>c <>9
UnityEngine::TestTools::Logging::LogScope::$$c* UnityEngine::TestTools::Logging::LogScope::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::Logging::LogScope::$$c*>("UnityEngine.TestTools.Logging", "LogScope/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.Logging.LogScope/<>c <>9
void UnityEngine::TestTools::Logging::LogScope::$$c::_set_$$9(UnityEngine::TestTools::Logging::LogScope::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Logging", "LogScope/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TestTools.Logging.LogEvent,System.Boolean> <>9__53_0
System::Func_2<UnityEngine::TestTools::Logging::LogEvent*, bool>* UnityEngine::TestTools::Logging::LogScope::$$c::_get_$$9__53_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::_get_$$9__53_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::TestTools::Logging::LogEvent*, bool>*>("UnityEngine.TestTools.Logging", "LogScope/<>c", "<>9__53_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TestTools.Logging.LogEvent,System.Boolean> <>9__53_0
void UnityEngine::TestTools::Logging::LogScope::$$c::_set_$$9__53_0(System::Func_2<UnityEngine::TestTools::Logging::LogEvent*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::_set_$$9__53_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.Logging", "LogScope/<>c", "<>9__53_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope/<>c..cctor
void UnityEngine::TestTools::Logging::LogScope::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.Logging", "LogScope/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.Logging.LogScope/<>c.<NoUnexpectedReceived>b__53_0
bool UnityEngine::TestTools::Logging::LogScope::$$c::$NoUnexpectedReceived$b__53_0(UnityEngine::TestTools::Logging::LogEvent* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::Logging::LogScope::$$c::<NoUnexpectedReceived>b__53_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NoUnexpectedReceived>b__53_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: LogScope::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LogScope::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LogScope::$$c::$NoUnexpectedReceived$b__53_0
// Il2CppName: <NoUnexpectedReceived>b__53_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LogScope::$$c::*)(UnityEngine::TestTools::Logging::LogEvent*)>(&LogScope::$$c::$NoUnexpectedReceived$b__53_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope::$$c*), "<NoUnexpectedReceived>b__53_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogEvent*>()});
  }
};
// Writing MetadataGetter for method: LogScope::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::$$c::*)()>(&LogScope::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LogScope::$$c::*)()>(&LogScope::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LogScope::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.InvalidSignatureException
#include "UnityEngine/TestTools/TestRunner/InvalidSignatureException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.InvalidSignatureException.get_ResultState
NUnit::Framework::Interfaces::ResultState* UnityEngine::TestTools::TestRunner::InvalidSignatureException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::InvalidSignatureException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: InvalidSignatureException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidSignatureException::*)(::Il2CppString*)>(&InvalidSignatureException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidSignatureException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (InvalidSignatureException::*)(::Il2CppString*)>(&InvalidSignatureException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidSignatureException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: InvalidSignatureException::get_ResultState
// Il2CppName: get_ResultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ResultState* (InvalidSignatureException::*)()>(&InvalidSignatureException::get_ResultState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(InvalidSignatureException*), "get_ResultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.UnexpectedLogMessageException
#include "UnityEngine/TestTools/TestRunner/UnexpectedLogMessageException.hpp"
// Including type: UnityEngine.TestTools.Logging.LogMatch
#include "UnityEngine/TestTools/Logging/LogMatch.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnexpectedLogMessageException.BuildMessage
::Il2CppString* UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::BuildMessage(UnityEngine::TestTools::Logging::LogMatch* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::BuildMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "UnexpectedLogMessageException", "BuildMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, log);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnexpectedLogMessageException.get_ResultState
NUnit::Framework::Interfaces::ResultState* UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnexpectedLogMessageException.get_StackTrace
::Il2CppString* UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnexpectedLogMessageException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnexpectedLogMessageException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnexpectedLogMessageException::*)(UnityEngine::TestTools::Logging::LogMatch*)>(&UnexpectedLogMessageException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnexpectedLogMessageException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogMatch*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnexpectedLogMessageException::*)(UnityEngine::TestTools::Logging::LogMatch*)>(&UnexpectedLogMessageException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnexpectedLogMessageException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogMatch*>()});
  }
};
// Writing MetadataGetter for method: UnexpectedLogMessageException::BuildMessage
// Il2CppName: BuildMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::TestTools::Logging::LogMatch*)>(&UnexpectedLogMessageException::BuildMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnexpectedLogMessageException*), "BuildMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogMatch*>()});
  }
};
// Writing MetadataGetter for method: UnexpectedLogMessageException::get_ResultState
// Il2CppName: get_ResultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ResultState* (UnexpectedLogMessageException::*)()>(&UnexpectedLogMessageException::get_ResultState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnexpectedLogMessageException*), "get_ResultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnexpectedLogMessageException::get_StackTrace
// Il2CppName: get_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnexpectedLogMessageException::*)()>(&UnexpectedLogMessageException::get_StackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnexpectedLogMessageException*), "get_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.UnhandledLogMessageException
#include "UnityEngine/TestTools/TestRunner/UnhandledLogMessageException.hpp"
// Including type: UnityEngine.TestTools.Logging.LogEvent
#include "UnityEngine/TestTools/Logging/LogEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnhandledLogMessageException.BuildMessage
::Il2CppString* UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::BuildMessage(UnityEngine::TestTools::Logging::LogEvent* log) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::BuildMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "UnhandledLogMessageException", "BuildMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(log)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, log);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnhandledLogMessageException.get_ResultState
NUnit::Framework::Interfaces::ResultState* UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnhandledLogMessageException.get_StackTrace
::Il2CppString* UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnhandledLogMessageException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnhandledLogMessageException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnhandledLogMessageException::*)(UnityEngine::TestTools::Logging::LogEvent*)>(&UnhandledLogMessageException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledLogMessageException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogEvent*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnhandledLogMessageException::*)(UnityEngine::TestTools::Logging::LogEvent*)>(&UnhandledLogMessageException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledLogMessageException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogEvent*>()});
  }
};
// Writing MetadataGetter for method: UnhandledLogMessageException::BuildMessage
// Il2CppName: BuildMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(UnityEngine::TestTools::Logging::LogEvent*)>(&UnhandledLogMessageException::BuildMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledLogMessageException*), "BuildMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Logging::LogEvent*>()});
  }
};
// Writing MetadataGetter for method: UnhandledLogMessageException::get_ResultState
// Il2CppName: get_ResultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ResultState* (UnhandledLogMessageException::*)()>(&UnhandledLogMessageException::get_ResultState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledLogMessageException*), "get_ResultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnhandledLogMessageException::get_StackTrace
// Il2CppName: get_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnhandledLogMessageException::*)()>(&UnhandledLogMessageException::get_StackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnhandledLogMessageException*), "get_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.UnityTestTimeoutException
#include "UnityEngine/TestTools/TestRunner/UnityTestTimeoutException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnityTestTimeoutException.BuildMessage
::Il2CppString* UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::BuildMessage(int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::BuildMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "UnityTestTimeoutException", "BuildMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeout);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnityTestTimeoutException.get_ResultState
NUnit::Framework::Interfaces::ResultState* UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.UnityTestTimeoutException.get_StackTrace
::Il2CppString* UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::UnityTestTimeoutException::get_StackTrace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnityTestTimeoutException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestTimeoutException::*)(int)>(&UnityTestTimeoutException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestTimeoutException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnityTestTimeoutException::*)(int)>(&UnityTestTimeoutException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestTimeoutException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityTestTimeoutException::BuildMessage
// Il2CppName: BuildMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(int)>(&UnityTestTimeoutException::BuildMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestTimeoutException*), "BuildMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnityTestTimeoutException::get_ResultState
// Il2CppName: get_ResultState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ResultState* (UnityTestTimeoutException::*)()>(&UnityTestTimeoutException::get_ResultState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestTimeoutException*), "get_ResultState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnityTestTimeoutException::get_StackTrace
// Il2CppName: get_StackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnityTestTimeoutException::*)()>(&UnityTestTimeoutException::get_StackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnityTestTimeoutException*), "get_StackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.TestFinishedEvent
#include "UnityEngine/TestTools/TestRunner/TestFinishedEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TestFinishedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestFinishedEvent::*)()>(&TestFinishedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestFinishedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestFinishedEvent::*)()>(&TestFinishedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestFinishedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.TestStartedEvent
#include "UnityEngine/TestTools/TestRunner/TestStartedEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TestStartedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestStartedEvent::*)()>(&TestStartedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestStartedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestStartedEvent::*)()>(&TestStartedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestStartedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.RunFinishedEvent
#include "UnityEngine/TestTools/TestRunner/RunFinishedEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RunFinishedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RunFinishedEvent::*)()>(&RunFinishedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RunFinishedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RunFinishedEvent::*)()>(&RunFinishedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RunFinishedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.RunStartedEvent
#include "UnityEngine/TestTools/TestRunner/RunStartedEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RunStartedEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RunStartedEvent::*)()>(&RunStartedEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RunStartedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RunStartedEvent::*)()>(&RunStartedEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RunStartedEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-Start-d__12.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-TestRunnerCoroutine-d__15.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_--c.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-Run-d__16.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.TestTools.TestRunner.TestStartedEvent
#include "UnityEngine/TestTools/TestRunner/TestStartedEvent.hpp"
// Including type: UnityEngine.TestTools.TestRunner.TestFinishedEvent
#include "UnityEngine/TestTools/TestRunner/TestFinishedEvent.hpp"
// Including type: UnityEngine.TestTools.TestRunner.RunStartedEvent
#include "UnityEngine/TestTools/TestRunner/RunStartedEvent.hpp"
// Including type: UnityEngine.TestTools.TestRunner.RunFinishedEvent
#include "UnityEngine/TestTools/TestRunner/RunFinishedEvent.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsControllerSettings.hpp"
// Including type: UnityEngine.TestRunner.NUnitExtensions.Runner.UnityTestAssemblyRunner
#include "UnityEngine/TestRunner/NUnitExtensions/Runner/UnityTestAssemblyRunner.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.String kPlaymodeTestControllerName
::Il2CppString* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::_get_kPlaymodeTestControllerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::_get_kPlaymodeTestControllerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController", "kPlaymodeTestControllerName"));
}
// Autogenerated static field setter
// Set static field: static System.String kPlaymodeTestControllerName
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::_set_kPlaymodeTestControllerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::_set_kPlaymodeTestControllerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController", "kPlaymodeTestControllerName", value));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.get_AssembliesWithTests
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::get_AssembliesWithTests() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::get_AssembliesWithTests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssembliesWithTests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.set_AssembliesWithTests
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::set_AssembliesWithTests(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::set_AssembliesWithTests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AssembliesWithTests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.Start
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.IsControllerOnScene
bool UnityEngine::TestTools::TestRunner::PlaymodeTestsController::IsControllerOnScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::IsControllerOnScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController", "IsControllerOnScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.GetController
UnityEngine::TestTools::TestRunner::PlaymodeTestsController* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::GetController() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::GetController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController", "GetController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TestTools::TestRunner::PlaymodeTestsController*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.TestRunnerCoroutine
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::TestRunnerCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::TestRunnerCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestRunnerCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.Run
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.Cleanup
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController.TryCleanup
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::TryCleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::TryCleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController", "TryCleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PlaymodeTestsController::get_AssembliesWithTests
// Il2CppName: get_AssembliesWithTests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (PlaymodeTestsController::*)()>(&PlaymodeTestsController::get_AssembliesWithTests)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "get_AssembliesWithTests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::set_AssembliesWithTests
// Il2CppName: set_AssembliesWithTests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&PlaymodeTestsController::set_AssembliesWithTests)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "set_AssembliesWithTests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (PlaymodeTestsController::*)()>(&PlaymodeTestsController::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::IsControllerOnScene
// Il2CppName: IsControllerOnScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&PlaymodeTestsController::IsControllerOnScene)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "IsControllerOnScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::GetController
// Il2CppName: GetController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TestTools::TestRunner::PlaymodeTestsController* (*)()>(&PlaymodeTestsController::GetController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "GetController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::TestRunnerCoroutine
// Il2CppName: TestRunnerCoroutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (PlaymodeTestsController::*)()>(&PlaymodeTestsController::TestRunnerCoroutine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "TestRunnerCoroutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::Run
// Il2CppName: Run
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (PlaymodeTestsController::*)()>(&PlaymodeTestsController::Run)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "Run", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::Cleanup
// Il2CppName: Cleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::*)()>(&PlaymodeTestsController::Cleanup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "Cleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::TryCleanup
// Il2CppName: TryCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlaymodeTestsController::TryCleanup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), "TryCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::*)()>(&PlaymodeTestsController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::*)()>(&PlaymodeTestsController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-Start-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12.System.IDisposable.Dispose
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12.MoveNext
bool UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Start>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Start$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Start$d__12::*)(int)>(&PlaymodeTestsController::$Start$d__12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Start$d__12::*)(int)>(&PlaymodeTestsController::$Start$d__12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Start$d__12::*)()>(&PlaymodeTestsController::$Start$d__12::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlaymodeTestsController::$Start$d__12::*)()>(&PlaymodeTestsController::$Start$d__12::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$Start$d__12::*)()>(&PlaymodeTestsController::$Start$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Start$d__12::*)()>(&PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$Start$d__12::*)()>(&PlaymodeTestsController::$Start$d__12::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Start$d__12*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-TestRunnerCoroutine-d__15.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15.System.IDisposable.Dispose
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15.MoveNext
bool UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<TestRunnerCoroutine>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$TestRunnerCoroutine$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)(int)>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)(int)>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)()>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)()>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)()>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)()>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$TestRunnerCoroutine$d__15::*)()>(&PlaymodeTestsController::$TestRunnerCoroutine$d__15::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$TestRunnerCoroutine$d__15*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.TestTools.Utils.IAssemblyWrapper
#include "UnityEngine/TestTools/Utils/IAssemblyWrapper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c <>9
UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c*>("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c <>9
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_set_$$9(UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TestTools.Utils.IAssemblyWrapper,System.Reflection.Assembly> <>9__16_0
System::Func_2<UnityEngine::TestTools::Utils::IAssemblyWrapper*, System::Reflection::Assembly*>* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_get_$$9__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_get_$$9__16_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::TestTools::Utils::IAssemblyWrapper*, System::Reflection::Assembly*>*>("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController/<>c", "<>9__16_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TestTools.Utils.IAssemblyWrapper,System.Reflection.Assembly> <>9__16_0
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_set_$$9__16_0(System::Func_2<UnityEngine::TestTools::Utils::IAssemblyWrapper*, System::Reflection::Assembly*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_set_$$9__16_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController/<>c", "<>9__16_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c..cctor
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "PlaymodeTestsController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<>c.<Run>b__16_0
System::Reflection::Assembly* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::$Run$b__16_0(UnityEngine::TestTools::Utils::IAssemblyWrapper* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$$c::<Run>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Run>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, a);
}
// Writing MetadataGetter for method: PlaymodeTestsController::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlaymodeTestsController::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$$c::$Run$b__16_0
// Il2CppName: <Run>b__16_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (PlaymodeTestsController::$$c::*)(UnityEngine::TestTools::Utils::IAssemblyWrapper*)>(&PlaymodeTestsController::$$c::$Run$b__16_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$$c*), "<Run>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::Utils::IAssemblyWrapper*>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$$c::*)()>(&PlaymodeTestsController::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$$c::*)()>(&PlaymodeTestsController::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsController_-Run-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16.System.IDisposable.Dispose
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16.MoveNext
bool UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsController/<Run>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsController::$Run$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Run$d__16::*)(int)>(&PlaymodeTestsController::$Run$d__16::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Run$d__16::*)(int)>(&PlaymodeTestsController::$Run$d__16::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Run$d__16::*)()>(&PlaymodeTestsController::$Run$d__16::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlaymodeTestsController::$Run$d__16::*)()>(&PlaymodeTestsController::$Run$d__16::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$Run$d__16::*)()>(&PlaymodeTestsController::$Run$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsController::$Run$d__16::*)()>(&PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlaymodeTestsController::$Run$d__16::*)()>(&PlaymodeTestsController::$Run$d__16::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsController::$Run$d__16*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsControllerSettings.hpp"
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsControllerSettings_--c.hpp"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings.BuildNUnitFilter
NUnit::Framework::Interfaces::ITestFilter* UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::BuildNUnitFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::BuildNUnitFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildNUnitFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestFilter*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlaymodeTestsControllerSettings::BuildNUnitFilter
// Il2CppName: BuildNUnitFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestFilter* (PlaymodeTestsControllerSettings::*)()>(&PlaymodeTestsControllerSettings::BuildNUnitFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings*), "BuildNUnitFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsControllerSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsControllerSettings::*)()>(&PlaymodeTestsControllerSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsControllerSettings::*)()>(&PlaymodeTestsControllerSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c
#include "UnityEngine/TestTools/TestRunner/PlaymodeTestsControllerSettings_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c <>9
UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c* UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c*>("UnityEngine.TestTools.TestRunner", "PlaymodeTestsControllerSettings/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c <>9
void UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_set_$$9(UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner", "PlaymodeTestsControllerSettings/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter,NUnit.Framework.Interfaces.ITestFilter> <>9__5_0
System::Func_2<UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter*, NUnit::Framework::Interfaces::ITestFilter*>* UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter*, NUnit::Framework::Interfaces::ITestFilter*>*>("UnityEngine.TestTools.TestRunner", "PlaymodeTestsControllerSettings/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter,NUnit.Framework.Interfaces.ITestFilter> <>9__5_0
void UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_set_$$9__5_0(System::Func_2<UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter*, NUnit::Framework::Interfaces::ITestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner", "PlaymodeTestsControllerSettings/<>c", "<>9__5_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c..cctor
void UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner", "PlaymodeTestsControllerSettings/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.PlaymodeTestsControllerSettings/<>c.<BuildNUnitFilter>b__5_0
NUnit::Framework::Interfaces::ITestFilter* UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::$BuildNUnitFilter$b__5_0(UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter* f) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::PlaymodeTestsControllerSettings::$$c::<BuildNUnitFilter>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildNUnitFilter>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestFilter*, false>(this, ___internal__method, f);
}
// Writing MetadataGetter for method: PlaymodeTestsControllerSettings::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlaymodeTestsControllerSettings::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsControllerSettings::$$c::$BuildNUnitFilter$b__5_0
// Il2CppName: <BuildNUnitFilter>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestFilter* (PlaymodeTestsControllerSettings::$$c::*)(UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter*)>(&PlaymodeTestsControllerSettings::$$c::$BuildNUnitFilter$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings::$$c*), "<BuildNUnitFilter>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter*>()});
  }
};
// Writing MetadataGetter for method: PlaymodeTestsControllerSettings::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsControllerSettings::$$c::*)()>(&PlaymodeTestsControllerSettings::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlaymodeTestsControllerSettings::$$c::*)()>(&PlaymodeTestsControllerSettings::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlaymodeTestsControllerSettings::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.TestEnumeratorWrapper
#include "UnityEngine/TestTools/TestRunner/TestEnumeratorWrapper.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.TestEnumeratorWrapper.GetEnumerator
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper::GetEnumerator(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, context);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.TestEnumeratorWrapper.HandleEnumerableTest
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper::HandleEnumerableTest(NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestEnumeratorWrapper::HandleEnumerableTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEnumerableTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: TestEnumeratorWrapper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumeratorWrapper::*)(NUnit::Framework::Internal::TestMethod*)>(&TestEnumeratorWrapper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumeratorWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestEnumeratorWrapper::*)(NUnit::Framework::Internal::TestMethod*)>(&TestEnumeratorWrapper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumeratorWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::TestMethod*>()});
  }
};
// Writing MetadataGetter for method: TestEnumeratorWrapper::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (TestEnumeratorWrapper::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&TestEnumeratorWrapper::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumeratorWrapper*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Writing MetadataGetter for method: TestEnumeratorWrapper::HandleEnumerableTest
// Il2CppName: HandleEnumerableTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (TestEnumeratorWrapper::*)(NUnit::Framework::Internal::ITestExecutionContext*)>(&TestEnumeratorWrapper::HandleEnumerableTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestEnumeratorWrapper*), "HandleEnumerableTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Internal::ITestExecutionContext*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.TestListenerWrapper
#include "UnityEngine/TestTools/TestRunner/TestListenerWrapper.hpp"
// Including type: UnityEngine.TestTools.TestRunner.TestFinishedEvent
#include "UnityEngine/TestTools/TestRunner/TestFinishedEvent.hpp"
// Including type: UnityEngine.TestTools.TestRunner.TestStartedEvent
#include "UnityEngine/TestTools/TestRunner/TestStartedEvent.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: NUnit.Framework.Interfaces.TestOutput
#include "NUnit/Framework/Interfaces/TestOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.TestListenerWrapper.TestStarted
void UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.TestListenerWrapper.TestFinished
void UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.TestListenerWrapper.TestOutput
void UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestOutput(NUnit::Framework::Interfaces::TestOutput* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::TestListenerWrapper::TestOutput");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output);
}
// Writing MetadataGetter for method: TestListenerWrapper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestListenerWrapper::*)(UnityEngine::TestTools::TestRunner::TestStartedEvent*, UnityEngine::TestTools::TestRunner::TestFinishedEvent*)>(&TestListenerWrapper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestListenerWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestRunner::TestStartedEvent*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestRunner::TestFinishedEvent*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestListenerWrapper::*)(UnityEngine::TestTools::TestRunner::TestStartedEvent*, UnityEngine::TestTools::TestRunner::TestFinishedEvent*)>(&TestListenerWrapper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestListenerWrapper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestRunner::TestStartedEvent*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TestTools::TestRunner::TestFinishedEvent*>()});
  }
};
// Writing MetadataGetter for method: TestListenerWrapper::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestListenerWrapper::*)(NUnit::Framework::Interfaces::ITest*)>(&TestListenerWrapper::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestListenerWrapper*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestListenerWrapper::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestListenerWrapper::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestListenerWrapper::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestListenerWrapper*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestListenerWrapper::TestOutput
// Il2CppName: TestOutput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestListenerWrapper::*)(NUnit::Framework::Interfaces::TestOutput*)>(&TestListenerWrapper::TestOutput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestListenerWrapper*), "TestOutput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::TestOutput*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter.hpp"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter_--c.hpp"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c__DisplayClass6_0
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter_--c__DisplayClass6_0.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Internal.TestFilter
#include "NUnit/Framework/Internal/TestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter.BuildNUnitFilter
NUnit::Framework::Interfaces::ITestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::BuildNUnitFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::BuildNUnitFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildNUnitFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestFilter*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter.AddFilters
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::AddFilters(System::Collections::Generic::List_1<NUnit::Framework::Interfaces::ITestFilter*>* filters, ::Array<::Il2CppString*>* values, System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* builder) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::AddFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter", "AddFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filters), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(builder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filters, values, builder);
}
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::BuildNUnitFilter
// Il2CppName: BuildNUnitFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestFilter* (RuntimeTestRunnerFilter::*)()>(&RuntimeTestRunnerFilter::BuildNUnitFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter*), "BuildNUnitFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::AddFilters
// Il2CppName: AddFilters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<NUnit::Framework::Interfaces::ITestFilter*>*, ::Array<::Il2CppString*>*, System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*)>(&RuntimeTestRunnerFilter::AddFilters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter*), "AddFilters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<NUnit::Framework::Interfaces::ITestFilter*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::*)()>(&RuntimeTestRunnerFilter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::*)()>(&RuntimeTestRunnerFilter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Internal.TestFilter
#include "NUnit/Framework/Internal/TestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c <>9
UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c <>9
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9(UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_0
System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_0
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_0(System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_1
System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_1
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_1(System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_2
System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_2
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_2(System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_3
System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__5_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,NUnit.Framework.Internal.TestFilter> <>9__5_3
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_3(System::Func_2<::Il2CppString*, NUnit::Framework::Internal::TestFilter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__5_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__5_3", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__6_0
System::Func_2<::Il2CppString*, bool>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, bool>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__6_0
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__6_0(System::Func_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__6_2
System::Func_2<::Il2CppString*, bool>* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__6_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_get_$$9__6_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, bool>*>("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__6_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__6_2
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__6_2(System::Func_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_set_$$9__6_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", "<>9__6_2", value)));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c..cctor
void UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner.GUI", "RuntimeTestRunnerFilter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<BuildNUnitFilter>b__5_0
NUnit::Framework::Internal::TestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<BuildNUnitFilter>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildNUnitFilter>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestFilter*, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<BuildNUnitFilter>b__5_1
NUnit::Framework::Internal::TestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_1(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<BuildNUnitFilter>b__5_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildNUnitFilter>b__5_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestFilter*, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<BuildNUnitFilter>b__5_2
NUnit::Framework::Internal::TestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_2(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<BuildNUnitFilter>b__5_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildNUnitFilter>b__5_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestFilter*, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<BuildNUnitFilter>b__5_3
NUnit::Framework::Internal::TestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_3(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<BuildNUnitFilter>b__5_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildNUnitFilter>b__5_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Internal::TestFilter*, false>(this, ___internal__method, s);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<AddFilters>b__6_0
bool UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_0(::Il2CppString* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<AddFilters>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddFilters>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c.<AddFilters>b__6_2
bool UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_2(::Il2CppString* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c::<AddFilters>b__6_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddFilters>b__6_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, v);
}
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RuntimeTestRunnerFilter::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_0
// Il2CppName: <BuildNUnitFilter>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestFilter* (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<BuildNUnitFilter>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_1
// Il2CppName: <BuildNUnitFilter>b__5_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestFilter* (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<BuildNUnitFilter>b__5_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_2
// Il2CppName: <BuildNUnitFilter>b__5_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestFilter* (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<BuildNUnitFilter>b__5_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_3
// Il2CppName: <BuildNUnitFilter>b__5_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Internal::TestFilter* (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$BuildNUnitFilter$b__5_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<BuildNUnitFilter>b__5_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_0
// Il2CppName: <AddFilters>b__6_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<AddFilters>b__6_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_2
// Il2CppName: <AddFilters>b__6_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RuntimeTestRunnerFilter::$$c::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c::$AddFilters$b__6_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), "<AddFilters>b__6_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::$$c::*)()>(&RuntimeTestRunnerFilter::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::$$c::*)()>(&RuntimeTestRunnerFilter::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c__DisplayClass6_0
#include "UnityEngine/TestTools/TestRunner/GUI/RuntimeTestRunnerFilter_--c__DisplayClass6_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Internal.TestFilter
#include "NUnit/Framework/Internal/TestFilter.hpp"
// Including type: NUnit.Framework.Interfaces.ITestFilter
#include "NUnit/Framework/Interfaces/ITestFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c__DisplayClass6_0.<AddFilters>b__1
NUnit::Framework::Interfaces::ITestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__1(::Il2CppString* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c__DisplayClass6_0::<AddFilters>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddFilters>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestFilter*, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.RuntimeTestRunnerFilter/<>c__DisplayClass6_0.<AddFilters>b__3
NUnit::Framework::Interfaces::ITestFilter* UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__3(::Il2CppString* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::RuntimeTestRunnerFilter::$$c__DisplayClass6_0::<AddFilters>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AddFilters>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::ITestFilter*, false>(this, ___internal__method, v);
}
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__1
// Il2CppName: <AddFilters>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestFilter* (RuntimeTestRunnerFilter::$$c__DisplayClass6_0::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c__DisplayClass6_0*), "<AddFilters>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__3
// Il2CppName: <AddFilters>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::ITestFilter* (RuntimeTestRunnerFilter::$$c__DisplayClass6_0::*)(::Il2CppString*)>(&RuntimeTestRunnerFilter::$$c__DisplayClass6_0::$AddFilters$b__3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c__DisplayClass6_0*), "<AddFilters>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RuntimeTestRunnerFilter::$$c__DisplayClass6_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::$$c__DisplayClass6_0::*)()>(&RuntimeTestRunnerFilter::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeTestRunnerFilter::$$c__DisplayClass6_0::*)()>(&RuntimeTestRunnerFilter::$$c__DisplayClass6_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeTestRunnerFilter::$$c__DisplayClass6_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter
#include "UnityEngine/TestTools/TestRunner/GUI/SynchronousFilter.hpp"
// Including type: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c
#include "UnityEngine/TestTools/TestRunner/GUI/SynchronousFilter_--c.hpp"
// Including type: NUnit.Framework.Interfaces.TNode
#include "NUnit/Framework/Interfaces/TNode.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter.ToXml
NUnit::Framework::Interfaces::TNode* UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::ToXml(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, recursive);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter.AddToXml
NUnit::Framework::Interfaces::TNode* UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::AddToXml(NUnit::Framework::Interfaces::TNode* parentNode, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::AddToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentNode), ::il2cpp_utils::ExtractType(recursive)})));
  return ::il2cpp_utils::RunMethodThrow<NUnit::Framework::Interfaces::TNode*, false>(this, ___internal__method, parentNode, recursive);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter.Pass
bool UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::Pass(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::Pass");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter.IsExplicitMatch
bool UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::IsExplicitMatch(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::IsExplicitMatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExplicitMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, test);
}
// Writing MetadataGetter for method: SynchronousFilter::ToXml
// Il2CppName: ToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::TNode* (SynchronousFilter::*)(bool)>(&SynchronousFilter::ToXml)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), "ToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::AddToXml
// Il2CppName: AddToXml
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<NUnit::Framework::Interfaces::TNode* (SynchronousFilter::*)(NUnit::Framework::Interfaces::TNode*, bool)>(&SynchronousFilter::AddToXml)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), "AddToXml", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::TNode*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::Pass
// Il2CppName: Pass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SynchronousFilter::*)(NUnit::Framework::Interfaces::ITest*)>(&SynchronousFilter::Pass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), "Pass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::IsExplicitMatch
// Il2CppName: IsExplicitMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SynchronousFilter::*)(NUnit::Framework::Interfaces::ITest*)>(&SynchronousFilter::IsExplicitMatch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), "IsExplicitMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SynchronousFilter::*)()>(&SynchronousFilter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SynchronousFilter::*)()>(&SynchronousFilter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c
#include "UnityEngine/TestTools/TestRunner/GUI/SynchronousFilter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c <>9
UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c* UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c*>("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c <>9
void UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9(UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__2_0
System::Func_2<System::Reflection::MethodInfo*, bool>* UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::MethodInfo*, bool>*>("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__2_0
void UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9__2_0(System::Func_2<System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9__2_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__2_1
System::Func_2<System::Reflection::MethodInfo*, bool>* UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9__2_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_get_$$9__2_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Reflection::MethodInfo*, bool>*>("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9__2_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Reflection.MethodInfo,System.Boolean> <>9__2_1
void UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9__2_1(System::Func_2<System::Reflection::MethodInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_set_$$9__2_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", "<>9__2_1", value)));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c..cctor
void UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner.GUI", "SynchronousFilter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c.<Pass>b__2_0
bool UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::$Pass$b__2_0(System::Reflection::MethodInfo* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::<Pass>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Pass>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mi);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.GUI.SynchronousFilter/<>c.<Pass>b__2_1
bool UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::$Pass$b__2_1(System::Reflection::MethodInfo* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::GUI::SynchronousFilter::$$c::<Pass>b__2_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Pass>b__2_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mi)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mi);
}
// Writing MetadataGetter for method: SynchronousFilter::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SynchronousFilter::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::$$c::$Pass$b__2_0
// Il2CppName: <Pass>b__2_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SynchronousFilter::$$c::*)(System::Reflection::MethodInfo*)>(&SynchronousFilter::$$c::$Pass$b__2_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter::$$c*), "<Pass>b__2_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::$$c::$Pass$b__2_1
// Il2CppName: <Pass>b__2_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SynchronousFilter::$$c::*)(System::Reflection::MethodInfo*)>(&SynchronousFilter::$$c::$Pass$b__2_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter::$$c*), "<Pass>b__2_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MethodInfo*>()});
  }
};
// Writing MetadataGetter for method: SynchronousFilter::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SynchronousFilter::$$c::*)()>(&SynchronousFilter::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SynchronousFilter::$$c::*)()>(&SynchronousFilter::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SynchronousFilter::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback
#include "UnityEngine/TestTools/TestRunner/Callbacks/PlayModeRunnerCallback.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.RunFinished
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.TestFinished
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.OnGUI
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.RunStarted
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.TestStarted
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayModeRunnerCallback.LogRecieved
void UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::LogRecieved(::Il2CppString* message, ::Il2CppString* stacktrace, UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayModeRunnerCallback::LogRecieved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogRecieved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(stacktrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message, stacktrace, type);
}
// Writing MetadataGetter for method: PlayModeRunnerCallback::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&PlayModeRunnerCallback::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&PlayModeRunnerCallback::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::OnGUI
// Il2CppName: OnGUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)()>(&PlayModeRunnerCallback::OnGUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "OnGUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&PlayModeRunnerCallback::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&PlayModeRunnerCallback::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::LogRecieved
// Il2CppName: LogRecieved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)(::Il2CppString*, ::Il2CppString*, UnityEngine::LogType)>(&PlayModeRunnerCallback::LogRecieved)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), "LogRecieved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::LogType>()});
  }
};
// Writing MetadataGetter for method: PlayModeRunnerCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)()>(&PlayModeRunnerCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayModeRunnerCallback::*)()>(&PlayModeRunnerCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayModeRunnerCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler
#include "UnityEngine/TestTools/TestRunner/Callbacks/PlayerQuitHandler.hpp"
// Including type: UnityEngine.Networking.PlayerConnection.MessageEventArgs
#include "UnityEngine/Networking/PlayerConnection/MessageEventArgs.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.Start
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.ProcessPlayerQuiteMessage
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::ProcessPlayerQuiteMessage(UnityEngine::Networking::PlayerConnection::MessageEventArgs* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::ProcessPlayerQuiteMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPlayerQuiteMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arg0);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.RunStarted
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.RunFinished
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.TestStarted
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.PlayerQuitHandler.TestFinished
void UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::PlayerQuitHandler::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: PlayerQuitHandler::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)()>(&PlayerQuitHandler::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::ProcessPlayerQuiteMessage
// Il2CppName: ProcessPlayerQuiteMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)(UnityEngine::Networking::PlayerConnection::MessageEventArgs*)>(&PlayerQuitHandler::ProcessPlayerQuiteMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "ProcessPlayerQuiteMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Networking::PlayerConnection::MessageEventArgs*>()});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)(NUnit::Framework::Interfaces::ITest*)>(&PlayerQuitHandler::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)(NUnit::Framework::Interfaces::ITestResult*)>(&PlayerQuitHandler::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)(NUnit::Framework::Interfaces::ITest*)>(&PlayerQuitHandler::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)(NUnit::Framework::Interfaces::ITestResult*)>(&PlayerQuitHandler::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: PlayerQuitHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)()>(&PlayerQuitHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerQuitHandler::*)()>(&PlayerQuitHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerQuitHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender
#include "UnityEngine/TestTools/TestRunner/Callbacks/RemoteTestResultSender.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData
#include "UnityEngine/TestTools/TestRunner/Callbacks/RemoteTestResultSender_QueueData.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12
#include "UnityEngine/TestTools/TestRunner/Callbacks/RemoteTestResultSender_-SendDataRoutine-d__12.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.TestRunner.TestLaunchers.IRemoteTestResultDataFactory
#include "UnityEngine/TestRunner/TestLaunchers/IRemoteTestResultDataFactory.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_aliveMessageFrequency
int UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::_get_k_aliveMessageFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::_get_k_aliveMessageFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.TestTools.TestRunner.Callbacks", "RemoteTestResultSender", "k_aliveMessageFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_aliveMessageFrequency
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::_set_k_aliveMessageFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::_set_k_aliveMessageFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "RemoteTestResultSender", "k_aliveMessageFrequency", value));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.Start
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.SerializeObject
::Array<uint8_t>* UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SerializeObject(::Il2CppObject* objectToSerialize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectToSerialize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, objectToSerialize);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.RunStarted
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.RunFinished
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.TestStarted
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.TestFinished
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.SendDataRoutine
System::Collections::IEnumerator* UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SendDataRoutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SendDataRoutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendDataRoutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.SendAliveMessageIfNeeded
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SendAliveMessageIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::SendAliveMessageIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAliveMessageIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender.ResetNextPlayerAliveMessageTime
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::ResetNextPlayerAliveMessageTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::ResetNextPlayerAliveMessageTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetNextPlayerAliveMessageTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RemoteTestResultSender::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)()>(&RemoteTestResultSender::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::SerializeObject
// Il2CppName: SerializeObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RemoteTestResultSender::*)(::Il2CppObject*)>(&RemoteTestResultSender::SerializeObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "SerializeObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestResultSender::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultSender::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)(NUnit::Framework::Interfaces::ITest*)>(&RemoteTestResultSender::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)(NUnit::Framework::Interfaces::ITestResult*)>(&RemoteTestResultSender::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::SendDataRoutine
// Il2CppName: SendDataRoutine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (RemoteTestResultSender::*)()>(&RemoteTestResultSender::SendDataRoutine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "SendDataRoutine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::SendAliveMessageIfNeeded
// Il2CppName: SendAliveMessageIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)()>(&RemoteTestResultSender::SendAliveMessageIfNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "SendAliveMessageIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::ResetNextPlayerAliveMessageTime
// Il2CppName: ResetNextPlayerAliveMessageTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)()>(&RemoteTestResultSender::ResetNextPlayerAliveMessageTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), "ResetNextPlayerAliveMessageTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)()>(&RemoteTestResultSender::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::*)()>(&RemoteTestResultSender::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData
#include "UnityEngine/TestTools/TestRunner/Callbacks/RemoteTestResultSender_QueueData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData.get_id
System::Guid UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData.set_id
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::set_id(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::set_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData.get_data
::Array<uint8_t>* UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/QueueData.set_data
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::set_data(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::QueueData::set_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: RemoteTestResultSender::QueueData::get_id
// Il2CppName: get_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (RemoteTestResultSender::QueueData::*)()>(&RemoteTestResultSender::QueueData::get_id)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), "get_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::QueueData::set_id
// Il2CppName: set_id
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::QueueData::*)(System::Guid)>(&RemoteTestResultSender::QueueData::set_id)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), "set_id", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Guid>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::QueueData::get_data
// Il2CppName: get_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RemoteTestResultSender::QueueData::*)()>(&RemoteTestResultSender::QueueData::get_data)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), "get_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::QueueData::set_data
// Il2CppName: set_data
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::QueueData::*)(::Array<uint8_t>*)>(&RemoteTestResultSender::QueueData::set_data)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), "set_data", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::QueueData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::QueueData::*)()>(&RemoteTestResultSender::QueueData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::QueueData::*)()>(&RemoteTestResultSender::QueueData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::QueueData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12
#include "UnityEngine/TestTools/TestRunner/Callbacks/RemoteTestResultSender_-SendDataRoutine-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.System.IDisposable.Dispose
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.MoveNext
bool UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.<>m__Finally1
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.System.Collections.IEnumerator.Reset
void UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.RemoteTestResultSender/<SendDataRoutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::RemoteTestResultSender::$SendDataRoutine$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::$SendDataRoutine$d__12::*)(int)>(&RemoteTestResultSender::$SendDataRoutine$d__12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::$SendDataRoutine$d__12::*)(int)>(&RemoteTestResultSender::$SendDataRoutine$d__12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (RemoteTestResultSender::$SendDataRoutine$d__12::*)()>(&RemoteTestResultSender::$SendDataRoutine$d__12::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteTestResultSender::$SendDataRoutine$d__12*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/Styles
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer_Styles.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxStringLength
int UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::_get_k_MaxStringLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::_get_k_MaxStringLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer", "k_MaxStringLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxStringLength
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::_set_k_MaxStringLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::_set_k_MaxStringLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer", "k_MaxStringLength", value));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer.GetFailedTests
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::GetFailedTests(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::GetFailedTests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFailedTests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer.ShowResults
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::ShowResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::ShowResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer.Draw
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Draw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Draw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Draw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TestResultRenderer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRenderer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRenderer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestResultRenderer::GetFailedTests
// Il2CppName: GetFailedTests
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRenderer::GetFailedTests)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer*), "GetFailedTests", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestResultRenderer::ShowResults
// Il2CppName: ShowResults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::*)()>(&TestResultRenderer::ShowResults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer*), "ShowResults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestResultRenderer::Draw
// Il2CppName: Draw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::*)()>(&TestResultRenderer::Draw)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer*), "Draw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/Styles
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer_Styles.hpp"
// Including type: UnityEngine.GUIStyle
#include "UnityEngine/GUIStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.GUIStyle SucceedLabelStyle
UnityEngine::GUIStyle* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_SucceedLabelStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_SucceedLabelStyle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GUIStyle*>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "SucceedLabelStyle"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.GUIStyle SucceedLabelStyle
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_SucceedLabelStyle(UnityEngine::GUIStyle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_SucceedLabelStyle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "SucceedLabelStyle", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.GUIStyle FailedLabelStyle
UnityEngine::GUIStyle* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_FailedLabelStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_FailedLabelStyle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GUIStyle*>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "FailedLabelStyle"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.GUIStyle FailedLabelStyle
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_FailedLabelStyle(UnityEngine::GUIStyle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_FailedLabelStyle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "FailedLabelStyle", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.GUIStyle FailedMessagesStyle
UnityEngine::GUIStyle* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_FailedMessagesStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_get_FailedMessagesStyle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GUIStyle*>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "FailedMessagesStyle"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.GUIStyle FailedMessagesStyle
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_FailedMessagesStyle(UnityEngine::GUIStyle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_set_FailedMessagesStyle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", "FailedMessagesStyle", value));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/Styles..cctor
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::Styles::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/Styles", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: TestResultRenderer::Styles::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TestResultRenderer::Styles::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer::Styles*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c <>9
UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c*>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c <>9
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_set_$$9(UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestResult,System.String> <>9__8_0
System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>*>("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<NUnit.Framework.Interfaces.ITestResult,System.String> <>9__8_0
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_set_$$9__8_0(System::Func_2<NUnit::Framework::Interfaces::ITestResult*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/<>c", "<>9__8_0", value)));
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c..cctor
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TestTools.TestRunner.Callbacks", "TestResultRenderer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer/<>c.<Draw>b__8_0
::Il2CppString* UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::$Draw$b__8_0(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRenderer::$$c::<Draw>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Draw>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: TestResultRenderer::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TestResultRenderer::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestResultRenderer::$$c::$Draw$b__8_0
// Il2CppName: <Draw>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TestResultRenderer::$$c::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRenderer::$$c::$Draw$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer::$$c*), "<Draw>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestResultRenderer::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::$$c::*)()>(&TestResultRenderer::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRenderer::$$c::*)()>(&TestResultRenderer::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRenderer::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRendererCallback.hpp"
// Including type: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRenderer
#include "UnityEngine/TestTools/TestRunner/Callbacks/TestResultRenderer.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
// Including type: NUnit.Framework.Interfaces.ITestResult
#include "NUnit/Framework/Interfaces/ITestResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback.RunStarted
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::RunStarted(NUnit::Framework::Interfaces::ITest* testsToRun) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::RunStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testsToRun)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testsToRun);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback.RunFinished
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::RunFinished(NUnit::Framework::Interfaces::ITestResult* testResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::RunFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, testResults);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback.OnGUI
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::OnGUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::OnGUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback.TestStarted
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::TestStarted(NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::TestStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: UnityEngine.TestTools.TestRunner.Callbacks.TestResultRendererCallback.TestFinished
void UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::TestFinished(NUnit::Framework::Interfaces::ITestResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TestTools::TestRunner::Callbacks::TestResultRendererCallback::TestFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: TestResultRendererCallback::RunStarted
// Il2CppName: RunStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&TestResultRendererCallback::RunStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), "RunStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestResultRendererCallback::RunFinished
// Il2CppName: RunFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRendererCallback::RunFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), "RunFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestResultRendererCallback::OnGUI
// Il2CppName: OnGUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)()>(&TestResultRendererCallback::OnGUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), "OnGUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TestResultRendererCallback::TestStarted
// Il2CppName: TestStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)(NUnit::Framework::Interfaces::ITest*)>(&TestResultRendererCallback::TestStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), "TestStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITest*>()});
  }
};
// Writing MetadataGetter for method: TestResultRendererCallback::TestFinished
// Il2CppName: TestFinished
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)(NUnit::Framework::Interfaces::ITestResult*)>(&TestResultRendererCallback::TestFinished)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), "TestFinished", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<NUnit::Framework::Interfaces::ITestResult*>()});
  }
};
// Writing MetadataGetter for method: TestResultRendererCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)()>(&TestResultRendererCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TestResultRendererCallback::*)()>(&TestResultRendererCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TestResultRendererCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_familyName
void UnityEngine::TextCore::FaceInfo::set_familyName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_familyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_familyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_styleName
void UnityEngine::TextCore::FaceInfo::set_styleName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_styleName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_styleName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_pointSize
int UnityEngine::TextCore::FaceInfo::get_pointSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_pointSize
void UnityEngine::TextCore::FaceInfo::set_pointSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_pointSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pointSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_scale
float UnityEngine::TextCore::FaceInfo::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_scale
void UnityEngine::TextCore::FaceInfo::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_lineHeight
float UnityEngine::TextCore::FaceInfo::get_lineHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_lineHeight
void UnityEngine::TextCore::FaceInfo::set_lineHeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_lineHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_lineHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_ascentLine
float UnityEngine::TextCore::FaceInfo::get_ascentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_ascentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ascentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_ascentLine
void UnityEngine::TextCore::FaceInfo::set_ascentLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_ascentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ascentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_capLine
float UnityEngine::TextCore::FaceInfo::get_capLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_capLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_capLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_capLine
void UnityEngine::TextCore::FaceInfo::set_capLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_capLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_capLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_meanLine
void UnityEngine::TextCore::FaceInfo::set_meanLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_meanLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_meanLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_baseline
float UnityEngine::TextCore::FaceInfo::get_baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_baseline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_baseline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_baseline
void UnityEngine::TextCore::FaceInfo::set_baseline(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_baseline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_baseline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_descentLine
float UnityEngine::TextCore::FaceInfo::get_descentLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_descentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_descentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_descentLine
void UnityEngine::TextCore::FaceInfo::set_descentLine(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_descentLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_descentLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_superscriptOffset
float UnityEngine::TextCore::FaceInfo::get_superscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_superscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_superscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_superscriptOffset
void UnityEngine::TextCore::FaceInfo::set_superscriptOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_superscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_superscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_superscriptSize
float UnityEngine::TextCore::FaceInfo::get_superscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_superscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_superscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_superscriptSize
void UnityEngine::TextCore::FaceInfo::set_superscriptSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_superscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_superscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_subscriptOffset
float UnityEngine::TextCore::FaceInfo::get_subscriptOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_subscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_subscriptOffset
void UnityEngine::TextCore::FaceInfo::set_subscriptOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_subscriptOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_subscriptOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_subscriptSize
float UnityEngine::TextCore::FaceInfo::get_subscriptSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_subscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_subscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_subscriptSize
void UnityEngine::TextCore::FaceInfo::set_subscriptSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_subscriptSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_subscriptSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_underlineOffset
float UnityEngine::TextCore::FaceInfo::get_underlineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_underlineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_underlineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_underlineOffset
void UnityEngine::TextCore::FaceInfo::set_underlineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_underlineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_underlineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_underlineThickness
float UnityEngine::TextCore::FaceInfo::get_underlineThickness() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_underlineThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_underlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_underlineThickness
void UnityEngine::TextCore::FaceInfo::set_underlineThickness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_underlineThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_underlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_strikethroughOffset
float UnityEngine::TextCore::FaceInfo::get_strikethroughOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_strikethroughOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_strikethroughOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_strikethroughOffset
void UnityEngine::TextCore::FaceInfo::set_strikethroughOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_strikethroughOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_strikethroughOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_strikethroughThickness
void UnityEngine::TextCore::FaceInfo::set_strikethroughThickness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_strikethroughThickness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_strikethroughThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.get_tabWidth
float UnityEngine::TextCore::FaceInfo::get_tabWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::get_tabWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tabWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.FaceInfo.set_tabWidth
void UnityEngine::TextCore::FaceInfo::set_tabWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::FaceInfo::set_tabWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tabWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Writing MetadataGetter for method: FaceInfo::set_familyName
// Il2CppName: set_familyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(::Il2CppString*)>(&FaceInfo::set_familyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_familyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_styleName
// Il2CppName: set_styleName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(::Il2CppString*)>(&FaceInfo::set_styleName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_styleName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_pointSize
// Il2CppName: get_pointSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FaceInfo::*)()>(&FaceInfo::get_pointSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_pointSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_pointSize
// Il2CppName: set_pointSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(int)>(&FaceInfo::set_pointSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_pointSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_scale
// Il2CppName: get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_scale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_scale
// Il2CppName: set_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_scale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_lineHeight
// Il2CppName: get_lineHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_lineHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_lineHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_lineHeight
// Il2CppName: set_lineHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_lineHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_lineHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_ascentLine
// Il2CppName: get_ascentLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_ascentLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_ascentLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_ascentLine
// Il2CppName: set_ascentLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_ascentLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_ascentLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_capLine
// Il2CppName: get_capLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_capLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_capLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_capLine
// Il2CppName: set_capLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_capLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_capLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_meanLine
// Il2CppName: set_meanLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_meanLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_meanLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_baseline
// Il2CppName: get_baseline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_baseline)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_baseline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_baseline
// Il2CppName: set_baseline
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_baseline)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_baseline", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_descentLine
// Il2CppName: get_descentLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_descentLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_descentLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_descentLine
// Il2CppName: set_descentLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_descentLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_descentLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_superscriptOffset
// Il2CppName: get_superscriptOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_superscriptOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_superscriptOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_superscriptOffset
// Il2CppName: set_superscriptOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_superscriptOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_superscriptOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_superscriptSize
// Il2CppName: get_superscriptSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_superscriptSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_superscriptSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_superscriptSize
// Il2CppName: set_superscriptSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_superscriptSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_superscriptSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_subscriptOffset
// Il2CppName: get_subscriptOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_subscriptOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_subscriptOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_subscriptOffset
// Il2CppName: set_subscriptOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_subscriptOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_subscriptOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_subscriptSize
// Il2CppName: get_subscriptSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_subscriptSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_subscriptSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_subscriptSize
// Il2CppName: set_subscriptSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_subscriptSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_subscriptSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_underlineOffset
// Il2CppName: get_underlineOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_underlineOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_underlineOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_underlineOffset
// Il2CppName: set_underlineOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_underlineOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_underlineOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_underlineThickness
// Il2CppName: get_underlineThickness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_underlineThickness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_underlineThickness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_underlineThickness
// Il2CppName: set_underlineThickness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_underlineThickness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_underlineThickness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_strikethroughOffset
// Il2CppName: get_strikethroughOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_strikethroughOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_strikethroughOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_strikethroughOffset
// Il2CppName: set_strikethroughOffset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_strikethroughOffset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_strikethroughOffset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_strikethroughThickness
// Il2CppName: set_strikethroughThickness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_strikethroughThickness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_strikethroughThickness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FaceInfo::get_tabWidth
// Il2CppName: get_tabWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FaceInfo::*)()>(&FaceInfo::get_tabWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "get_tabWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FaceInfo::set_tabWidth
// Il2CppName: set_tabWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FaceInfo::*)(float)>(&FaceInfo::set_tabWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FaceInfo), "set_tabWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.GlyphRect
#include "UnityEngine/TextCore/GlyphRect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::GlyphRect::_get_s_ZeroGlyphRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::_get_s_ZeroGlyphRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::GlyphRect>("UnityEngine.TextCore", "GlyphRect", "s_ZeroGlyphRect"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.TextCore.GlyphRect s_ZeroGlyphRect
void UnityEngine::TextCore::GlyphRect::_set_s_ZeroGlyphRect(UnityEngine::TextCore::GlyphRect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::_set_s_ZeroGlyphRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore", "GlyphRect", "s_ZeroGlyphRect", value));
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_x
int UnityEngine::TextCore::GlyphRect::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_y
int UnityEngine::TextCore::GlyphRect::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_width
int UnityEngine::TextCore::GlyphRect::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_height
int UnityEngine::TextCore::GlyphRect::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.get_zero
UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::GlyphRect::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore", "GlyphRect", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::GlyphRect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.Equals
bool UnityEngine::TextCore::GlyphRect::Equals(UnityEngine::TextCore::GlyphRect other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect..cctor
void UnityEngine::TextCore::GlyphRect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore", "GlyphRect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.GetHashCode
int UnityEngine::TextCore::GlyphRect::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphRect.Equals
bool UnityEngine::TextCore::GlyphRect::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphRect::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Writing MetadataGetter for method: GlyphRect::get_x
// Il2CppName: get_x
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphRect::*)()>(&GlyphRect::get_x)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "get_x", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::get_y
// Il2CppName: get_y
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphRect::*)()>(&GlyphRect::get_y)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "get_y", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphRect::*)()>(&GlyphRect::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphRect::*)()>(&GlyphRect::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::get_zero
// Il2CppName: get_zero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::GlyphRect (*)()>(&GlyphRect::get_zero)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "get_zero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::GlyphRect
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphRect::*)(int, int, int, int)>(&GlyphRect::GlyphRect<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphRect::*)(int, int, int, int)>(&GlyphRect::GlyphRect<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GlyphRect::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphRect::*)(UnityEngine::TextCore::GlyphRect)>(&GlyphRect::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphRect>()});
  }
};
// Writing MetadataGetter for method: GlyphRect::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&GlyphRect::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphRect::*)()>(&GlyphRect::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphRect::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphRect::*)(::Il2CppObject*)>(&GlyphRect::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphRect), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.GlyphMetrics
#include "UnityEngine/TextCore/GlyphMetrics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_width
float UnityEngine::TextCore::GlyphMetrics::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_height
float UnityEngine::TextCore::GlyphMetrics::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalBearingX
float UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalBearingX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalBearingY
float UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::get_horizontalBearingY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalBearingY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.get_horizontalAdvance
float UnityEngine::TextCore::GlyphMetrics::get_horizontalAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::get_horizontalAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_horizontalAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.Equals
bool UnityEngine::TextCore::GlyphMetrics::Equals(UnityEngine::TextCore::GlyphMetrics other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.GetHashCode
int UnityEngine::TextCore::GlyphMetrics::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.GlyphMetrics.Equals
bool UnityEngine::TextCore::GlyphMetrics::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::GlyphMetrics::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Writing MetadataGetter for method: GlyphMetrics::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphMetrics::*)()>(&GlyphMetrics::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::get_height
// Il2CppName: get_height
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphMetrics::*)()>(&GlyphMetrics::get_height)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "get_height", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::get_horizontalBearingX
// Il2CppName: get_horizontalBearingX
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphMetrics::*)()>(&GlyphMetrics::get_horizontalBearingX)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "get_horizontalBearingX", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::get_horizontalBearingY
// Il2CppName: get_horizontalBearingY
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphMetrics::*)()>(&GlyphMetrics::get_horizontalBearingY)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "get_horizontalBearingY", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::get_horizontalAdvance
// Il2CppName: get_horizontalAdvance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphMetrics::*)()>(&GlyphMetrics::get_horizontalAdvance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "get_horizontalAdvance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::GlyphMetrics
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphMetrics::*)(float, float, float, float, float)>(&GlyphMetrics::GlyphMetrics<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphMetrics::*)(float, float, float, float, float)>(&GlyphMetrics::GlyphMetrics<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphMetrics::*)(UnityEngine::TextCore::GlyphMetrics)>(&GlyphMetrics::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphMetrics>()});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphMetrics::*)()>(&GlyphMetrics::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphMetrics::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphMetrics::*)(::Il2CppObject*)>(&GlyphMetrics::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMetrics), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.Glyph.get_index
uint UnityEngine::TextCore::Glyph::get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::get_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_index
void UnityEngine::TextCore::Glyph::set_index(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::set_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_metrics
UnityEngine::TextCore::GlyphMetrics UnityEngine::TextCore::Glyph::get_metrics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::get_metrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_metrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::GlyphMetrics, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_metrics
void UnityEngine::TextCore::Glyph::set_metrics(UnityEngine::TextCore::GlyphMetrics value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::set_metrics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_metrics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_glyphRect
UnityEngine::TextCore::GlyphRect UnityEngine::TextCore::Glyph::get_glyphRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::get_glyphRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::GlyphRect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_glyphRect
void UnityEngine::TextCore::Glyph::set_glyphRect(UnityEngine::TextCore::GlyphRect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::set_glyphRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_scale
float UnityEngine::TextCore::Glyph::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_scale
void UnityEngine::TextCore::Glyph::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.get_atlasIndex
int UnityEngine::TextCore::Glyph::get_atlasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::get_atlasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_atlasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.Glyph.set_atlasIndex
void UnityEngine::TextCore::Glyph::set_atlasIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::Glyph::set_atlasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_atlasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: Glyph::get_index
// Il2CppName: get_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (Glyph::*)()>(&Glyph::get_index)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "get_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Glyph::set_index
// Il2CppName: set_index
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(uint)>(&Glyph::set_index)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "set_index", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: Glyph::get_metrics
// Il2CppName: get_metrics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::GlyphMetrics (Glyph::*)()>(&Glyph::get_metrics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "get_metrics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Glyph::set_metrics
// Il2CppName: set_metrics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(UnityEngine::TextCore::GlyphMetrics)>(&Glyph::set_metrics)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "set_metrics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphMetrics>()});
  }
};
// Writing MetadataGetter for method: Glyph::get_glyphRect
// Il2CppName: get_glyphRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::GlyphRect (Glyph::*)()>(&Glyph::get_glyphRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "get_glyphRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Glyph::set_glyphRect
// Il2CppName: set_glyphRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(UnityEngine::TextCore::GlyphRect)>(&Glyph::set_glyphRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "set_glyphRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphRect>()});
  }
};
// Writing MetadataGetter for method: Glyph::get_scale
// Il2CppName: get_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Glyph::*)()>(&Glyph::get_scale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "get_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Glyph::set_scale
// Il2CppName: set_scale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(float)>(&Glyph::set_scale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "set_scale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Glyph::get_atlasIndex
// Il2CppName: get_atlasIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Glyph::*)()>(&Glyph::get_atlasIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "get_atlasIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Glyph::set_atlasIndex
// Il2CppName: set_atlasIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(int)>(&Glyph::set_atlasIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), "set_atlasIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Glyph::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct)>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct)>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>()});
  }
};
// Writing MetadataGetter for method: Glyph::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(uint, UnityEngine::TextCore::GlyphMetrics, UnityEngine::TextCore::GlyphRect, float, int)>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphMetrics>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphRect>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)(uint, UnityEngine::TextCore::GlyphMetrics, UnityEngine::TextCore::GlyphRect, float, int)>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphMetrics>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::GlyphRect>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Glyph::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)()>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Glyph::*)()>(&Glyph::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Glyph*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags
#include "UnityEngine/TextCore/LowLevel/FontFeatureLookupFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags None
UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags None
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_None(UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreLigatures
UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreLigatures() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreLigatures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreLigatures"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreLigatures
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreLigatures(UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreLigatures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreLigatures", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreSpacingAdjustments
UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_get_IgnoreSpacingAdjustments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags>("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontFeatureLookupFlags IgnoreSpacingAdjustments
void UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments(UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontFeatureLookupFlags::_set_IgnoreSpacingAdjustments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontFeatureLookupFlags", "IgnoreSpacingAdjustments", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.LowLevel.GlyphValueRecord
#include "UnityEngine/TextCore/LowLevel/GlyphValueRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_xPlacement
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_yPlacement
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yPlacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yPlacement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yPlacement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_xAdvance
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_xAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_xAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.get_yAdvance
float UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yAdvance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::get_yAdvance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_yAdvance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.Equals
bool UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals(UnityEngine::TextCore::LowLevel::GlyphValueRecord other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.GetHashCode
int UnityEngine::TextCore::LowLevel::GlyphValueRecord::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphValueRecord.Equals
bool UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphValueRecord::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Writing MetadataGetter for method: GlyphValueRecord::get_xPlacement
// Il2CppName: get_xPlacement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphValueRecord::*)()>(&GlyphValueRecord::get_xPlacement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "get_xPlacement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::get_yPlacement
// Il2CppName: get_yPlacement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphValueRecord::*)()>(&GlyphValueRecord::get_yPlacement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "get_yPlacement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::get_xAdvance
// Il2CppName: get_xAdvance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphValueRecord::*)()>(&GlyphValueRecord::get_xAdvance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "get_xAdvance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::get_yAdvance
// Il2CppName: get_yAdvance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GlyphValueRecord::*)()>(&GlyphValueRecord::get_yAdvance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "get_yAdvance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphValueRecord::*)(UnityEngine::TextCore::LowLevel::GlyphValueRecord)>(&GlyphValueRecord::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphValueRecord>()});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GlyphValueRecord::*)()>(&GlyphValueRecord::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphValueRecord::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GlyphValueRecord::*)(::Il2CppObject*)>(&GlyphValueRecord::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphValueRecord), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord.get_glyphIndex
uint UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphAdjustmentRecord.get_glyphValueRecord
UnityEngine::TextCore::LowLevel::GlyphValueRecord UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphValueRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord::get_glyphValueRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_glyphValueRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::GlyphValueRecord, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: GlyphAdjustmentRecord::get_glyphIndex
// Il2CppName: get_glyphIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (GlyphAdjustmentRecord::*)()>(&GlyphAdjustmentRecord::get_glyphIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphAdjustmentRecord), "get_glyphIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphAdjustmentRecord::get_glyphValueRecord
// Il2CppName: get_glyphValueRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::GlyphValueRecord (GlyphAdjustmentRecord::*)()>(&GlyphAdjustmentRecord::get_glyphValueRecord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphAdjustmentRecord), "get_glyphValueRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord
#include "UnityEngine/TextCore/LowLevel/GlyphPairAdjustmentRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord.get_firstAdjustmentRecord
UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_firstAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_firstAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_firstAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord.get_secondAdjustmentRecord
UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_secondAdjustmentRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord::get_secondAdjustmentRecord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_secondAdjustmentRecord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: GlyphPairAdjustmentRecord::get_firstAdjustmentRecord
// Il2CppName: get_firstAdjustmentRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord (GlyphPairAdjustmentRecord::*)()>(&GlyphPairAdjustmentRecord::get_firstAdjustmentRecord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphPairAdjustmentRecord), "get_firstAdjustmentRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GlyphPairAdjustmentRecord::get_secondAdjustmentRecord
// Il2CppName: get_secondAdjustmentRecord
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::GlyphAdjustmentRecord (GlyphPairAdjustmentRecord::*)()>(&GlyphPairAdjustmentRecord::get_secondAdjustmentRecord)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphPairAdjustmentRecord), "get_secondAdjustmentRecord", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphLoadFlags
#include "UnityEngine/TextCore/LowLevel/GlyphLoadFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_DEFAULT
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_DEFAULT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_DEFAULT(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_DEFAULT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_SCALE
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_SCALE() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_SCALE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_SCALE"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_SCALE
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_SCALE(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_SCALE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_SCALE", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_HINTING
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_HINTING() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_HINTING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_HINTING"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_HINTING
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_HINTING(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_HINTING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_HINTING", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_RENDER
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_RENDER() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_RENDER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_RENDER"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_RENDER
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_RENDER(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_RENDER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_RENDER", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_BITMAP
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_BITMAP() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_BITMAP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_BITMAP"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_BITMAP
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_BITMAP(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_BITMAP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_BITMAP", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_FORCE_AUTOHINT
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_FORCE_AUTOHINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_FORCE_AUTOHINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_FORCE_AUTOHINT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_FORCE_AUTOHINT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_FORCE_AUTOHINT(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_FORCE_AUTOHINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_FORCE_AUTOHINT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_MONOCHROME
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_MONOCHROME() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_MONOCHROME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_MONOCHROME"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_MONOCHROME
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_MONOCHROME(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_MONOCHROME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_MONOCHROME", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_AUTOHINT
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_AUTOHINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_NO_AUTOHINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_AUTOHINT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_NO_AUTOHINT
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_AUTOHINT(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_NO_AUTOHINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_NO_AUTOHINT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_COMPUTE_METRICS
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_COMPUTE_METRICS() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_COMPUTE_METRICS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_COMPUTE_METRICS"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_COMPUTE_METRICS
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_COMPUTE_METRICS(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_COMPUTE_METRICS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_COMPUTE_METRICS", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
UnityEngine::TextCore::LowLevel::GlyphLoadFlags UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_BITMAP_METRICS_ONLY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_get_LOAD_BITMAP_METRICS_ONLY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_BITMAP_METRICS_ONLY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphLoadFlags LOAD_BITMAP_METRICS_ONLY
void UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_BITMAP_METRICS_ONLY(UnityEngine::TextCore::LowLevel::GlyphLoadFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphLoadFlags::_set_LOAD_BITMAP_METRICS_ONLY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphLoadFlags", "LOAD_BITMAP_METRICS_ONLY", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontEngineError
#include "UnityEngine/TextCore/LowLevel/FontEngineError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Success
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Success
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Success(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Path
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Path"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Path
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Path(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Path", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Format
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Format"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Format
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Format(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Format", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Structure
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Structure() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File_Structure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Structure"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File_Structure
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Structure(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File_Structure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File_Structure", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_File");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_File
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_File");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_File", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Table
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Table"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Table
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Table(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Table", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Glyph_Index
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Glyph_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Glyph_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Glyph_Index"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Glyph_Index
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Glyph_Index(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Glyph_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Glyph_Index", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Character_Code
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Character_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Character_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Character_Code"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Character_Code
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Character_Code(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Character_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Character_Code", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Pixel_Size
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Pixel_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Pixel_Size");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Pixel_Size"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Pixel_Size
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Pixel_Size(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Pixel_Size");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Pixel_Size", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Face
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Face"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Face
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Face(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Face", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library_or_Face
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library_or_Face() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_Library_or_Face");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library_or_Face"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_Library_or_Face
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library_or_Face(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_Library_or_Face");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_Library_or_Face", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Atlas_Generation_Cancelled
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Atlas_Generation_Cancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Atlas_Generation_Cancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Atlas_Generation_Cancelled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Atlas_Generation_Cancelled
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Atlas_Generation_Cancelled(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Atlas_Generation_Cancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Atlas_Generation_Cancelled", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_SharedTextureData
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_SharedTextureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_get_Invalid_SharedTextureData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::FontEngineError>("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_SharedTextureData"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.FontEngineError Invalid_SharedTextureData
void UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_SharedTextureData(UnityEngine::TextCore::LowLevel::FontEngineError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineError::_set_Invalid_SharedTextureData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngineError", "Invalid_SharedTextureData", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphRenderMode
#include "UnityEngine/TextCore/LowLevel/GlyphRenderMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH_HINTED
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH_HINTED(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SMOOTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SMOOTH
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SMOOTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SMOOTH", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER_HINTED
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER_HINTED(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_RASTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode RASTER
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_RASTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "RASTER", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF8
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF8() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF8"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF8
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF8(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF8", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF16
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF16() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF16"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF16
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF16(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF16", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF32
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF32() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDF32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF32"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDF32
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF32(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDF32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDF32", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA_HINTED
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA_HINTED() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA_HINTED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA_HINTED"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA_HINTED
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA_HINTED(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA_HINTED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA_HINTED", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA
UnityEngine::TextCore::LowLevel::GlyphRenderMode UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_get_SDFAA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphRenderMode>("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphRenderMode SDFAA
void UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA(UnityEngine::TextCore::LowLevel::GlyphRenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphRenderMode::_set_SDFAA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphRenderMode", "SDFAA", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphPackingMode
#include "UnityEngine/TextCore/LowLevel/GlyphPackingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestShortSideFit
UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestShortSideFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestShortSideFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestShortSideFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestShortSideFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestShortSideFit(UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestShortSideFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestShortSideFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestLongSideFit
UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestLongSideFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestLongSideFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestLongSideFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestLongSideFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestLongSideFit(UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestLongSideFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestLongSideFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestAreaFit
UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestAreaFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BestAreaFit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestAreaFit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BestAreaFit
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestAreaFit(UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BestAreaFit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BestAreaFit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BottomLeftRule
UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BottomLeftRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_BottomLeftRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BottomLeftRule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode BottomLeftRule
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BottomLeftRule(UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_BottomLeftRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "BottomLeftRule", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode ContactPointRule
UnityEngine::TextCore::LowLevel::GlyphPackingMode UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_ContactPointRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_get_ContactPointRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextCore::LowLevel::GlyphPackingMode>("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "ContactPointRule"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextCore.LowLevel.GlyphPackingMode ContactPointRule
void UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_ContactPointRule(UnityEngine::TextCore::LowLevel::GlyphPackingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::GlyphPackingMode::_set_ContactPointRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "GlyphPackingMode", "ContactPointRule", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextCore.LowLevel.FontEngine
#include "UnityEngine/TextCore/LowLevel/FontEngine.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.TextCore.LowLevel.FontEngineError
#include "UnityEngine/TextCore/LowLevel/FontEngineError.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.TextCore.FaceInfo
#include "UnityEngine/TextCore/FaceInfo.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphLoadFlags
#include "UnityEngine/TextCore/LowLevel/GlyphLoadFlags.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphPackingMode
#include "UnityEngine/TextCore/LowLevel/GlyphPackingMode.hpp"
// Including type: UnityEngine.TextCore.LowLevel.GlyphRenderMode
#include "UnityEngine/TextCore/LowLevel/GlyphRenderMode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
::Array<UnityEngine::TextCore::Glyph*>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_Glyphs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_Glyphs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::Glyph*>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_Glyphs"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.Glyph[] s_Glyphs
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_Glyphs(::Array<UnityEngine::TextCore::Glyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_Glyphs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_Glyphs", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
::Array<uint>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphIndexes_MarshallingArray_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphIndexes_MarshallingArray_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphIndexes_MarshallingArray_A"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32[] s_GlyphIndexes_MarshallingArray_A
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphIndexes_MarshallingArray_A(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphIndexes_MarshallingArray_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphIndexes_MarshallingArray_A", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_IN() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_IN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_IN"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_IN
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_IN(::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_IN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_IN", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_OUT() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphMarshallingStruct_OUT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_OUT"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct[] s_GlyphMarshallingStruct_OUT
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_OUT(::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphMarshallingStruct_OUT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphMarshallingStruct_OUT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
::Array<UnityEngine::TextCore::GlyphRect>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FreeGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_FreeGlyphRects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::GlyphRect>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FreeGlyphRects"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.GlyphRect[] s_FreeGlyphRects
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FreeGlyphRects(::Array<UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_FreeGlyphRects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_FreeGlyphRects", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
::Array<UnityEngine::TextCore::GlyphRect>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_UsedGlyphRects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_UsedGlyphRects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::GlyphRect>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_UsedGlyphRects"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.GlyphRect[] s_UsedGlyphRects
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_UsedGlyphRects(::Array<UnityEngine::TextCore::GlyphRect>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_UsedGlyphRects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_UsedGlyphRects", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_PairAdjustmentRecords_MarshallingArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_PairAdjustmentRecords_MarshallingArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_PairAdjustmentRecords_MarshallingArray"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.TextCore.LowLevel.GlyphPairAdjustmentRecord[] s_PairAdjustmentRecords_MarshallingArray
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_PairAdjustmentRecords_MarshallingArray(::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_PairAdjustmentRecords_MarshallingArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_PairAdjustmentRecords_MarshallingArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>* UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphLookupDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_get_s_GlyphLookupDictionary");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>*>("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphLookupDictionary")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.UInt32,UnityEngine.TextCore.Glyph> s_GlyphLookupDictionary
void UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphLookupDictionary(System::Collections::Generic::Dictionary_2<uint, UnityEngine::TextCore::Glyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::_set_s_GlyphLookupDictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.TextCore.LowLevel", "FontEngine", "s_GlyphLookupDictionary", value));
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.InitializeFontEngine
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "InitializeFontEngine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::FontEngineError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.InitializeFontEngine_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::InitializeFontEngine_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "InitializeFontEngine_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace(UnityEngine::Font* font, int pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "LoadFontFace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(pointSize)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::FontEngineError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font, pointSize);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.LoadFontFace_With_Size_FromFont_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal(UnityEngine::Font* font, int pointSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::LoadFontFace_With_Size_FromFont_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "LoadFontFace_With_Size_FromFont_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(pointSize)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font, pointSize);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetFaceInfo
UnityEngine::TextCore::FaceInfo UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetFaceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::FaceInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetFaceInfo_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal(UnityEngine::TextCore::FaceInfo& faceInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::GetFaceInfo_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetFaceInfo_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(faceInfo)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, faceInfo);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphIndex
uint UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue(uint unicode, UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, UnityEngine::TextCore::Glyph*& glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithUnicodeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, flags, glyph);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithUnicodeValue_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal(uint unicode, UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct& glyphStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithUnicodeValue_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithUnicodeValue_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(loadFlags), ::il2cpp_utils::ExtractType(glyphStruct)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, loadFlags, glyphStruct);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue(uint glyphIndex, UnityEngine::TextCore::LowLevel::GlyphLoadFlags flags, UnityEngine::TextCore::Glyph*& glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithIndexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, flags, glyph);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryGetGlyphWithIndexValue_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal(uint glyphIndex, UnityEngine::TextCore::LowLevel::GlyphLoadFlags loadFlags, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct& glyphStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryGetGlyphWithIndexValue_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryGetGlyphWithIndexValue_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(loadFlags), ::il2cpp_utils::ExtractType(glyphStruct)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, loadFlags, glyphStruct);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryPackGlyphInAtlas
bool UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas(UnityEngine::TextCore::Glyph* glyph, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int width, int height, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* freeGlyphRects, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* usedGlyphRects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryPackGlyphInAtlas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyph), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(freeGlyphRects), ::il2cpp_utils::ExtractType(usedGlyphRects)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyph, padding, packingMode, renderMode, width, height, freeGlyphRects, usedGlyphRects);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryPackGlyphInAtlas_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas_Internal(UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct& glyph, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, int width, int height, ::Array<UnityEngine::TextCore::GlyphRect>*& freeGlyphRects, int& freeGlyphRectCount, ::Array<UnityEngine::TextCore::GlyphRect>*& usedGlyphRects, int& usedGlyphRectCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryPackGlyphInAtlas_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryPackGlyphInAtlas_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyph), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(freeGlyphRectCount), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(usedGlyphRectCount)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyph, padding, packingMode, renderMode, width, height, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.RenderGlyphsToTexture
UnityEngine::TextCore::LowLevel::FontEngineError UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture(System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>* glyphs, int padding, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "RenderGlyphsToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphs), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::LowLevel::FontEngineError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphs, padding, renderMode, texture);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.RenderGlyphsToTexture_Internal
int UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture_Internal(::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>* glyphs, int glyphCount, int padding, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::RenderGlyphsToTexture_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "RenderGlyphsToTexture_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphs), ::il2cpp_utils::ExtractType(glyphCount), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphs, glyphCount, padding, renderMode, texture);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphToTexture
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture(uint glyphIndex, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* freeGlyphRects, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* usedGlyphRects, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture, UnityEngine::TextCore::Glyph*& glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(freeGlyphRects), ::il2cpp_utils::ExtractType(usedGlyphRects), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, glyph);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphToTexture_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal(uint glyphIndex, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::Array<UnityEngine::TextCore::GlyphRect>*& freeGlyphRects, int& freeGlyphRectCount, ::Array<UnityEngine::TextCore::GlyphRect>*& usedGlyphRects, int& usedGlyphRectCount, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct& glyph) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphToTexture_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphToTexture_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(freeGlyphRectCount), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(usedGlyphRectCount), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount, renderMode, texture, glyph);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphsToTexture
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture(System::Collections::Generic::List_1<uint>* glyphIndexes, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* freeGlyphRects, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>* usedGlyphRects, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture, ::Array<UnityEngine::TextCore::Glyph*>*& glyphs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphsToTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractType(freeGlyphRects), ::il2cpp_utils::ExtractType(usedGlyphRects), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::Glyph*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndexes, padding, packingMode, freeGlyphRects, usedGlyphRects, renderMode, texture, glyphs);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.TryAddGlyphsToTexture_Internal
bool UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal(::Array<uint>* glyphIndex, int padding, UnityEngine::TextCore::LowLevel::GlyphPackingMode packingMode, ::Array<UnityEngine::TextCore::GlyphRect>*& freeGlyphRects, int& freeGlyphRectCount, ::Array<UnityEngine::TextCore::GlyphRect>*& usedGlyphRects, int& usedGlyphRectCount, UnityEngine::TextCore::LowLevel::GlyphRenderMode renderMode, UnityEngine::Texture2D* texture, ::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*& glyphs, int& glyphCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::TryAddGlyphsToTexture_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "TryAddGlyphsToTexture_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndex), ::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(packingMode), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(freeGlyphRectCount), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractType(usedGlyphRectCount), ::il2cpp_utils::ExtractType(renderMode), ::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*&>(), ::il2cpp_utils::ExtractType(glyphCount)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndex, padding, packingMode, freeGlyphRects, freeGlyphRectCount, usedGlyphRects, usedGlyphRectCount, renderMode, texture, glyphs, glyphCount);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphPairAdjustmentTable
::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable(::Array<uint>* glyphIndexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphPairAdjustmentTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndexes);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
int UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes(::Array<uint>* glyphIndexes, int& recordCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glyphIndexes), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphIndexes, recordCount);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.GetGlyphPairAdjustmentRecordsFromMarshallingArray
int UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray(::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*& glyphPairAdjustmentRecords) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "GetGlyphPairAdjustmentRecordsFromMarshallingArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, glyphPairAdjustmentRecords);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine.ResetAtlasTexture
void UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture(UnityEngine::Texture2D* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::ResetAtlasTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", "ResetAtlasTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, texture);
}
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngine..cctor
void UnityEngine::TextCore::LowLevel::FontEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: FontEngine::InitializeFontEngine
// Il2CppName: InitializeFontEngine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::FontEngineError (*)()>(&FontEngine::InitializeFontEngine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "InitializeFontEngine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontEngine::InitializeFontEngine_Internal
// Il2CppName: InitializeFontEngine_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&FontEngine::InitializeFontEngine_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "InitializeFontEngine_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontEngine::LoadFontFace
// Il2CppName: LoadFontFace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::FontEngineError (*)(UnityEngine::Font*, int)>(&FontEngine::LoadFontFace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "LoadFontFace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FontEngine::LoadFontFace_With_Size_FromFont_Internal
// Il2CppName: LoadFontFace_With_Size_FromFont_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::Font*, int)>(&FontEngine::LoadFontFace_With_Size_FromFont_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "LoadFontFace_With_Size_FromFont_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FontEngine::GetFaceInfo
// Il2CppName: GetFaceInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::FaceInfo (*)()>(&FontEngine::GetFaceInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "GetFaceInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FontEngine::GetFaceInfo_Internal
// Il2CppName: GetFaceInfo_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::TextCore::FaceInfo&)>(&FontEngine::GetFaceInfo_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "GetFaceInfo_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::FaceInfo&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::GetGlyphIndex
// Il2CppName: GetGlyphIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(uint)>(&FontEngine::GetGlyphIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "GetGlyphIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryGetGlyphWithUnicodeValue
// Il2CppName: TryGetGlyphWithUnicodeValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, UnityEngine::TextCore::LowLevel::GlyphLoadFlags, UnityEngine::TextCore::Glyph*&)>(&FontEngine::TryGetGlyphWithUnicodeValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryGetGlyphWithUnicodeValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryGetGlyphWithUnicodeValue_Internal
// Il2CppName: TryGetGlyphWithUnicodeValue_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, UnityEngine::TextCore::LowLevel::GlyphLoadFlags, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&)>(&FontEngine::TryGetGlyphWithUnicodeValue_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryGetGlyphWithUnicodeValue_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryGetGlyphWithIndexValue
// Il2CppName: TryGetGlyphWithIndexValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, UnityEngine::TextCore::LowLevel::GlyphLoadFlags, UnityEngine::TextCore::Glyph*&)>(&FontEngine::TryGetGlyphWithIndexValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryGetGlyphWithIndexValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryGetGlyphWithIndexValue_Internal
// Il2CppName: TryGetGlyphWithIndexValue_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, UnityEngine::TextCore::LowLevel::GlyphLoadFlags, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&)>(&FontEngine::TryGetGlyphWithIndexValue_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryGetGlyphWithIndexValue_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphLoadFlags>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryPackGlyphInAtlas
// Il2CppName: TryPackGlyphInAtlas
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TextCore::Glyph*, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*)>(&FontEngine::TryPackGlyphInAtlas)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryPackGlyphInAtlas", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryPackGlyphInAtlas_Internal
// Il2CppName: TryPackGlyphInAtlas_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, UnityEngine::TextCore::LowLevel::GlyphRenderMode, int, int, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&)>(&FontEngine::TryPackGlyphInAtlas_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryPackGlyphInAtlas_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::RenderGlyphsToTexture
// Il2CppName: RenderGlyphsToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextCore::LowLevel::FontEngineError (*)(System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*, int, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*)>(&FontEngine::RenderGlyphsToTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "RenderGlyphsToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::Glyph*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>()});
  }
};
// Writing MetadataGetter for method: FontEngine::RenderGlyphsToTexture_Internal
// Il2CppName: RenderGlyphsToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*, int, int, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*)>(&FontEngine::RenderGlyphsToTexture_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "RenderGlyphsToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryAddGlyphToTexture
// Il2CppName: TryAddGlyphToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*, UnityEngine::TextCore::Glyph*&)>(&FontEngine::TryAddGlyphToTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryAddGlyphToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryAddGlyphToTexture_Internal
// Il2CppName: TryAddGlyphToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*, UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&)>(&FontEngine::TryAddGlyphToTexture_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryAddGlyphToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryAddGlyphsToTexture
// Il2CppName: TryAddGlyphsToTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Collections::Generic::List_1<uint>*, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*, ::Array<UnityEngine::TextCore::Glyph*>*&)>(&FontEngine::TryAddGlyphsToTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryAddGlyphsToTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::TextCore::GlyphRect>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::Glyph*>*&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::TryAddGlyphsToTexture_Internal
// Il2CppName: TryAddGlyphsToTexture_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint>*, int, UnityEngine::TextCore::LowLevel::GlyphPackingMode, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&, ::Array<UnityEngine::TextCore::GlyphRect>*&, int&, UnityEngine::TextCore::LowLevel::GlyphRenderMode, UnityEngine::Texture2D*, ::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*&, int&)>(&FontEngine::TryAddGlyphsToTexture_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "TryAddGlyphsToTexture_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphPackingMode>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::GlyphRect>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::LowLevel::GlyphRenderMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::LowLevel::GlyphMarshallingStruct>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::GetGlyphPairAdjustmentTable
// Il2CppName: GetGlyphPairAdjustmentTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>* (*)(::Array<uint>*)>(&FontEngine::GetGlyphPairAdjustmentTable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "GetGlyphPairAdjustmentTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
// Il2CppName: PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint>*, int&)>(&FontEngine::PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "PopulatePairAdjustmentRecordMarshallingArray_from_GlyphIndexes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray
// Il2CppName: GetGlyphPairAdjustmentRecordsFromMarshallingArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*&)>(&FontEngine::GetGlyphPairAdjustmentRecordsFromMarshallingArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "GetGlyphPairAdjustmentRecordsFromMarshallingArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::TextCore::LowLevel::GlyphPairAdjustmentRecord>*&>()});
  }
};
// Writing MetadataGetter for method: FontEngine::SetMarshallingArraySize
// Il2CppName: SetMarshallingArraySize
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: FontEngine::ResetAtlasTexture
// Il2CppName: ResetAtlasTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Texture2D*)>(&FontEngine::ResetAtlasTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), "ResetAtlasTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture2D*>()});
  }
};
// Writing MetadataGetter for method: FontEngine::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FontEngine::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngine*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.FontEngineUtilities
#include "UnityEngine/TextCore/LowLevel/FontEngineUtilities.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextCore.LowLevel.FontEngineUtilities.MaxValue
int UnityEngine::TextCore::LowLevel::FontEngineUtilities::MaxValue(int a, int b, int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextCore::LowLevel::FontEngineUtilities::MaxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.TextCore.LowLevel", "FontEngineUtilities", "MaxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, c);
}
// Writing MetadataGetter for method: FontEngineUtilities::MaxValue
// Il2CppName: MaxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int, int, int)>(&FontEngineUtilities::MaxValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FontEngineUtilities), "MaxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextCore.LowLevel.GlyphMarshallingStruct
#include "UnityEngine/TextCore/LowLevel/GlyphMarshallingStruct.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GlyphMarshallingStruct::GlyphMarshallingStruct
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphMarshallingStruct::*)(UnityEngine::TextCore::Glyph*)>(&GlyphMarshallingStruct::GlyphMarshallingStruct<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMarshallingStruct), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GlyphMarshallingStruct::*)(UnityEngine::TextCore::Glyph*)>(&GlyphMarshallingStruct::GlyphMarshallingStruct<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GlyphMarshallingStruct), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextCore::Glyph*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.FontStyle
#include "UnityEngine/FontStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.FontStyle Normal
UnityEngine::FontStyle UnityEngine::FontStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FontStyle>("UnityEngine", "FontStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FontStyle Normal
void UnityEngine::FontStyle::_set_Normal(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FontStyle", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FontStyle Bold
UnityEngine::FontStyle UnityEngine::FontStyle::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FontStyle>("UnityEngine", "FontStyle", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FontStyle Bold
void UnityEngine::FontStyle::_set_Bold(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FontStyle", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FontStyle Italic
UnityEngine::FontStyle UnityEngine::FontStyle::_get_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_get_Italic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FontStyle>("UnityEngine", "FontStyle", "Italic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FontStyle Italic
void UnityEngine::FontStyle::_set_Italic(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_set_Italic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FontStyle", "Italic", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.FontStyle BoldAndItalic
UnityEngine::FontStyle UnityEngine::FontStyle::_get_BoldAndItalic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_get_BoldAndItalic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::FontStyle>("UnityEngine", "FontStyle", "BoldAndItalic"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.FontStyle BoldAndItalic
void UnityEngine::FontStyle::_set_BoldAndItalic(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::FontStyle::_set_BoldAndItalic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "FontStyle", "BoldAndItalic", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextGenerationError
#include "UnityEngine/TextGenerationError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextGenerationError None
UnityEngine::TextGenerationError UnityEngine::TextGenerationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextGenerationError>("UnityEngine", "TextGenerationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextGenerationError None
void UnityEngine::TextGenerationError::_set_None(UnityEngine::TextGenerationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextGenerationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextGenerationError CustomSizeOnNonDynamicFont
UnityEngine::TextGenerationError UnityEngine::TextGenerationError::_get_CustomSizeOnNonDynamicFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_get_CustomSizeOnNonDynamicFont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextGenerationError>("UnityEngine", "TextGenerationError", "CustomSizeOnNonDynamicFont"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextGenerationError CustomSizeOnNonDynamicFont
void UnityEngine::TextGenerationError::_set_CustomSizeOnNonDynamicFont(UnityEngine::TextGenerationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_set_CustomSizeOnNonDynamicFont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextGenerationError", "CustomSizeOnNonDynamicFont", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextGenerationError CustomStyleOnNonDynamicFont
UnityEngine::TextGenerationError UnityEngine::TextGenerationError::_get_CustomStyleOnNonDynamicFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_get_CustomStyleOnNonDynamicFont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextGenerationError>("UnityEngine", "TextGenerationError", "CustomStyleOnNonDynamicFont"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextGenerationError CustomStyleOnNonDynamicFont
void UnityEngine::TextGenerationError::_set_CustomStyleOnNonDynamicFont(UnityEngine::TextGenerationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_set_CustomStyleOnNonDynamicFont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextGenerationError", "CustomStyleOnNonDynamicFont", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextGenerationError NoFont
UnityEngine::TextGenerationError UnityEngine::TextGenerationError::_get_NoFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_get_NoFont");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextGenerationError>("UnityEngine", "TextGenerationError", "NoFont"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextGenerationError NoFont
void UnityEngine::TextGenerationError::_set_NoFont(UnityEngine::TextGenerationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationError::_set_NoFont");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextGenerationError", "NoFont", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextGenerationSettings
#include "UnityEngine/TextGenerationSettings.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextGenerationSettings.CompareColors
bool UnityEngine::TextGenerationSettings::CompareColors(UnityEngine::Color left, UnityEngine::Color right) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationSettings::CompareColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.TextGenerationSettings.CompareVector2
bool UnityEngine::TextGenerationSettings::CompareVector2(UnityEngine::Vector2 left, UnityEngine::Vector2 right) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationSettings::CompareVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CompareVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, left, right);
}
// Autogenerated method: UnityEngine.TextGenerationSettings.Equals
bool UnityEngine::TextGenerationSettings::Equals(UnityEngine::TextGenerationSettings other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerationSettings::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: TextGenerationSettings::CompareColors
// Il2CppName: CompareColors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerationSettings::*)(UnityEngine::Color, UnityEngine::Color)>(&TextGenerationSettings::CompareColors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerationSettings), "CompareColors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: TextGenerationSettings::CompareVector2
// Il2CppName: CompareVector2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerationSettings::*)(UnityEngine::Vector2, UnityEngine::Vector2)>(&TextGenerationSettings::CompareVector2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerationSettings), "CompareVector2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: TextGenerationSettings::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerationSettings::*)(UnityEngine::TextGenerationSettings)>(&TextGenerationSettings::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerationSettings), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextGenerator
#include "UnityEngine/TextGenerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.FontStyle
#include "UnityEngine/FontStyle.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
// Including type: UnityEngine.VerticalWrapMode
#include "UnityEngine/VerticalWrapMode.hpp"
// Including type: UnityEngine.HorizontalWrapMode
#include "UnityEngine/HorizontalWrapMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextGenerator.System.IDisposable.Dispose
void UnityEngine::TextGenerator::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_characterCountVisible
int UnityEngine::TextGenerator::get_characterCountVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_characterCountVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterCountVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.ValidatedSettings
UnityEngine::TextGenerationSettings UnityEngine::TextGenerator::ValidatedSettings(UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::ValidatedSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidatedSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerationSettings, false>(this, ___internal__method, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.Invalidate
void UnityEngine::TextGenerator::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Invalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.GetCharacters
void UnityEngine::TextGenerator::GetCharacters(System::Collections::Generic::List_1<UnityEngine::UICharInfo>* characters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, characters);
}
// Autogenerated method: UnityEngine.TextGenerator.GetLines
void UnityEngine::TextGenerator::GetLines(System::Collections::Generic::List_1<UnityEngine::UILineInfo>* lines) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lines)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lines);
}
// Autogenerated method: UnityEngine.TextGenerator.GetVertices
void UnityEngine::TextGenerator::GetVertices(System::Collections::Generic::List_1<UnityEngine::UIVertex>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: UnityEngine.TextGenerator.GetPreferredWidth
float UnityEngine::TextGenerator::GetPreferredWidth(::Il2CppString* str, UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, str, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.GetPreferredHeight
float UnityEngine::TextGenerator::GetPreferredHeight(::Il2CppString* str, UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, str, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.PopulateWithErrors
bool UnityEngine::TextGenerator::PopulateWithErrors(::Il2CppString* str, UnityEngine::TextGenerationSettings settings, UnityEngine::GameObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::PopulateWithErrors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateWithErrors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, settings, context);
}
// Autogenerated method: UnityEngine.TextGenerator.Populate
bool UnityEngine::TextGenerator::Populate(::Il2CppString* str, UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Populate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Populate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.PopulateWithError
UnityEngine::TextGenerationError UnityEngine::TextGenerator::PopulateWithError(::Il2CppString* str, UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::PopulateWithError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateWithError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerationError, false>(this, ___internal__method, str, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.PopulateAlways
UnityEngine::TextGenerationError UnityEngine::TextGenerator::PopulateAlways(::Il2CppString* str, UnityEngine::TextGenerationSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::PopulateAlways");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateAlways", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerationError, false>(this, ___internal__method, str, settings);
}
// Autogenerated method: UnityEngine.TextGenerator.get_verts
System::Collections::Generic::IList_1<UnityEngine::UIVertex>* UnityEngine::TextGenerator::get_verts() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_verts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::UIVertex>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_characters
System::Collections::Generic::IList_1<UnityEngine::UICharInfo>* UnityEngine::TextGenerator::get_characters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_characters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::UICharInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_lines
System::Collections::Generic::IList_1<UnityEngine::UILineInfo>* UnityEngine::TextGenerator::get_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_lines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::UILineInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_rectExtents
UnityEngine::Rect UnityEngine::TextGenerator::get_rectExtents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_rectExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_characterCount
int UnityEngine::TextGenerator::get_characterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_characterCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.get_lineCount
int UnityEngine::TextGenerator::get_lineCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_lineCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.Internal_Create
System::IntPtr UnityEngine::TextGenerator::Internal_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextGenerator", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.TextGenerator.Internal_Destroy
void UnityEngine::TextGenerator::Internal_Destroy(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TextGenerator", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.TextGenerator.Populate_Internal
bool UnityEngine::TextGenerator::Populate_Internal(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, uint& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Populate_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Populate_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(fontSize), ::il2cpp_utils::ExtractType(scaleFactor), ::il2cpp_utils::ExtractType(lineSpacing), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(richText), ::il2cpp_utils::ExtractType(resizeTextForBestFit), ::il2cpp_utils::ExtractType(resizeTextMinSize), ::il2cpp_utils::ExtractType(resizeTextMaxSize), ::il2cpp_utils::ExtractType(verticalOverFlow), ::il2cpp_utils::ExtractType(horizontalOverflow), ::il2cpp_utils::ExtractType(updateBounds), ::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(extentsX), ::il2cpp_utils::ExtractType(extentsY), ::il2cpp_utils::ExtractType(pivotX), ::il2cpp_utils::ExtractType(pivotY), ::il2cpp_utils::ExtractType(generateOutOfBounds), ::il2cpp_utils::ExtractType(alignByGeometry), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extentsX, extentsY, pivotX, pivotY, generateOutOfBounds, alignByGeometry, error);
}
// Autogenerated method: UnityEngine.TextGenerator.Populate_Internal
bool UnityEngine::TextGenerator::Populate_Internal(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, UnityEngine::VerticalWrapMode verticalOverFlow, UnityEngine::HorizontalWrapMode horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, UnityEngine::Vector2 extents, UnityEngine::Vector2 pivot, bool generateOutOfBounds, bool alignByGeometry, UnityEngine::TextGenerationError& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Populate_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Populate_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(fontSize), ::il2cpp_utils::ExtractType(scaleFactor), ::il2cpp_utils::ExtractType(lineSpacing), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(richText), ::il2cpp_utils::ExtractType(resizeTextForBestFit), ::il2cpp_utils::ExtractType(resizeTextMinSize), ::il2cpp_utils::ExtractType(resizeTextMaxSize), ::il2cpp_utils::ExtractType(verticalOverFlow), ::il2cpp_utils::ExtractType(horizontalOverflow), ::il2cpp_utils::ExtractType(updateBounds), ::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(extents), ::il2cpp_utils::ExtractType(pivot), ::il2cpp_utils::ExtractType(generateOutOfBounds), ::il2cpp_utils::ExtractType(alignByGeometry), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extents, pivot, generateOutOfBounds, alignByGeometry, error);
}
// Autogenerated method: UnityEngine.TextGenerator.GetVerticesInternal
void UnityEngine::TextGenerator::GetVerticesInternal(::Il2CppObject* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetVerticesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVerticesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: UnityEngine.TextGenerator.GetCharactersInternal
void UnityEngine::TextGenerator::GetCharactersInternal(::Il2CppObject* characters) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetCharactersInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCharactersInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, characters);
}
// Autogenerated method: UnityEngine.TextGenerator.GetLinesInternal
void UnityEngine::TextGenerator::GetLinesInternal(::Il2CppObject* lines) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::GetLinesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLinesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lines)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lines);
}
// Autogenerated method: UnityEngine.TextGenerator.get_rectExtents_Injected
void UnityEngine::TextGenerator::get_rectExtents_Injected(UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::get_rectExtents_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectExtents_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.TextGenerator.Populate_Internal_Injected
bool UnityEngine::TextGenerator::Populate_Internal_Injected(::Il2CppString* str, UnityEngine::Font* font, UnityEngine::Color& color, int fontSize, float scaleFactor, float lineSpacing, UnityEngine::FontStyle style, bool richText, bool resizeTextForBestFit, int resizeTextMinSize, int resizeTextMaxSize, int verticalOverFlow, int horizontalOverflow, bool updateBounds, UnityEngine::TextAnchor anchor, float extentsX, float extentsY, float pivotX, float pivotY, bool generateOutOfBounds, bool alignByGeometry, uint& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Populate_Internal_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Populate_Internal_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(font), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(fontSize), ::il2cpp_utils::ExtractType(scaleFactor), ::il2cpp_utils::ExtractType(lineSpacing), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(richText), ::il2cpp_utils::ExtractType(resizeTextForBestFit), ::il2cpp_utils::ExtractType(resizeTextMinSize), ::il2cpp_utils::ExtractType(resizeTextMaxSize), ::il2cpp_utils::ExtractType(verticalOverFlow), ::il2cpp_utils::ExtractType(horizontalOverflow), ::il2cpp_utils::ExtractType(updateBounds), ::il2cpp_utils::ExtractType(anchor), ::il2cpp_utils::ExtractType(extentsX), ::il2cpp_utils::ExtractType(extentsY), ::il2cpp_utils::ExtractType(pivotX), ::il2cpp_utils::ExtractType(pivotY), ::il2cpp_utils::ExtractType(generateOutOfBounds), ::il2cpp_utils::ExtractType(alignByGeometry), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, str, font, color, fontSize, scaleFactor, lineSpacing, style, richText, resizeTextForBestFit, resizeTextMinSize, resizeTextMaxSize, verticalOverFlow, horizontalOverflow, updateBounds, anchor, extentsX, extentsY, pivotX, pivotY, generateOutOfBounds, alignByGeometry, error);
}
// Autogenerated method: UnityEngine.TextGenerator.Finalize
void UnityEngine::TextGenerator::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextGenerator::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TextGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(int)>(&TextGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(int)>(&TextGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)()>(&TextGenerator::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_characterCountVisible
// Il2CppName: get_characterCountVisible
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TextGenerator::*)()>(&TextGenerator::get_characterCountVisible)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_characterCountVisible", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::ValidatedSettings
// Il2CppName: ValidatedSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerationSettings (TextGenerator::*)(UnityEngine::TextGenerationSettings)>(&TextGenerator::ValidatedSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "ValidatedSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::Invalidate
// Il2CppName: Invalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)()>(&TextGenerator::Invalidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Invalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetCharacters
// Il2CppName: GetCharacters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(System::Collections::Generic::List_1<UnityEngine::UICharInfo>*)>(&TextGenerator::GetCharacters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetCharacters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UICharInfo>*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetLines
// Il2CppName: GetLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(System::Collections::Generic::List_1<UnityEngine::UILineInfo>*)>(&TextGenerator::GetLines)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UILineInfo>*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetVertices
// Il2CppName: GetVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&TextGenerator::GetVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetPreferredWidth
// Il2CppName: GetPreferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings)>(&TextGenerator::GetPreferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetPreferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetPreferredHeight
// Il2CppName: GetPreferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings)>(&TextGenerator::GetPreferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetPreferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::PopulateWithErrors
// Il2CppName: PopulateWithErrors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings, UnityEngine::GameObject*)>(&TextGenerator::PopulateWithErrors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "PopulateWithErrors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::Populate
// Il2CppName: Populate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings)>(&TextGenerator::Populate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Populate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::PopulateWithError
// Il2CppName: PopulateWithError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerationError (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings)>(&TextGenerator::PopulateWithError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "PopulateWithError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::PopulateAlways
// Il2CppName: PopulateAlways
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerationError (TextGenerator::*)(::Il2CppString*, UnityEngine::TextGenerationSettings)>(&TextGenerator::PopulateAlways)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "PopulateAlways", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationSettings>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_verts
// Il2CppName: get_verts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<UnityEngine::UIVertex>* (TextGenerator::*)()>(&TextGenerator::get_verts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_verts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_characters
// Il2CppName: get_characters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<UnityEngine::UICharInfo>* (TextGenerator::*)()>(&TextGenerator::get_characters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_characters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_lines
// Il2CppName: get_lines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<UnityEngine::UILineInfo>* (TextGenerator::*)()>(&TextGenerator::get_lines)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_lines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_rectExtents
// Il2CppName: get_rectExtents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (TextGenerator::*)()>(&TextGenerator::get_rectExtents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_rectExtents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_characterCount
// Il2CppName: get_characterCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TextGenerator::*)()>(&TextGenerator::get_characterCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_characterCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_lineCount
// Il2CppName: get_lineCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TextGenerator::*)()>(&TextGenerator::get_lineCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_lineCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::Internal_Create
// Il2CppName: Internal_Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)()>(&TextGenerator::Internal_Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Internal_Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::Internal_Destroy
// Il2CppName: Internal_Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&TextGenerator::Internal_Destroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Internal_Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::Populate_Internal
// Il2CppName: Populate_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerator::*)(::Il2CppString*, UnityEngine::Font*, UnityEngine::Color, int, float, float, UnityEngine::FontStyle, bool, bool, int, int, int, int, bool, UnityEngine::TextAnchor, float, float, float, float, bool, bool, uint&)>(&TextGenerator::Populate_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Populate_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<uint&>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::Populate_Internal
// Il2CppName: Populate_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerator::*)(::Il2CppString*, UnityEngine::Font*, UnityEngine::Color, int, float, float, UnityEngine::FontStyle, bool, bool, int, int, UnityEngine::VerticalWrapMode, UnityEngine::HorizontalWrapMode, bool, UnityEngine::TextAnchor, UnityEngine::Vector2, UnityEngine::Vector2, bool, bool, UnityEngine::TextGenerationError&)>(&TextGenerator::Populate_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Populate_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::VerticalWrapMode>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::HorizontalWrapMode>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextGenerationError&>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetVerticesInternal
// Il2CppName: GetVerticesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(::Il2CppObject*)>(&TextGenerator::GetVerticesInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetVerticesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetCharactersInternal
// Il2CppName: GetCharactersInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(::Il2CppObject*)>(&TextGenerator::GetCharactersInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetCharactersInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::GetLinesInternal
// Il2CppName: GetLinesInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(::Il2CppObject*)>(&TextGenerator::GetLinesInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "GetLinesInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::get_rectExtents_Injected
// Il2CppName: get_rectExtents_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)(UnityEngine::Rect&)>(&TextGenerator::get_rectExtents_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "get_rectExtents_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::Populate_Internal_Injected
// Il2CppName: Populate_Internal_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TextGenerator::*)(::Il2CppString*, UnityEngine::Font*, UnityEngine::Color&, int, float, float, UnityEngine::FontStyle, bool, bool, int, int, int, int, bool, UnityEngine::TextAnchor, float, float, float, float, bool, bool, uint&)>(&TextGenerator::Populate_Internal_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Populate_Internal_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<uint&>()});
  }
};
// Writing MetadataGetter for method: TextGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)()>(&TextGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)()>(&TextGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextGenerator::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextGenerator::*)()>(&TextGenerator::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextGenerator*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAlignment
#include "UnityEngine/TextAlignment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAlignment Left
UnityEngine::TextAlignment UnityEngine::TextAlignment::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAlignment>("UnityEngine", "TextAlignment", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAlignment Left
void UnityEngine::TextAlignment::_set_Left(UnityEngine::TextAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAlignment", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAlignment Center
UnityEngine::TextAlignment UnityEngine::TextAlignment::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAlignment>("UnityEngine", "TextAlignment", "Center"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAlignment Center
void UnityEngine::TextAlignment::_set_Center(UnityEngine::TextAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAlignment", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAlignment Right
UnityEngine::TextAlignment UnityEngine::TextAlignment::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAlignment>("UnityEngine", "TextAlignment", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAlignment Right
void UnityEngine::TextAlignment::_set_Right(UnityEngine::TextAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAlignment::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAlignment", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor UpperLeft
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_UpperLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_UpperLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "UpperLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor UpperLeft
void UnityEngine::TextAnchor::_set_UpperLeft(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_UpperLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "UpperLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor UpperCenter
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_UpperCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_UpperCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "UpperCenter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor UpperCenter
void UnityEngine::TextAnchor::_set_UpperCenter(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_UpperCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "UpperCenter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor UpperRight
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_UpperRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_UpperRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "UpperRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor UpperRight
void UnityEngine::TextAnchor::_set_UpperRight(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_UpperRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "UpperRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor MiddleLeft
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_MiddleLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_MiddleLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "MiddleLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor MiddleLeft
void UnityEngine::TextAnchor::_set_MiddleLeft(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_MiddleLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "MiddleLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor MiddleCenter
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_MiddleCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_MiddleCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "MiddleCenter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor MiddleCenter
void UnityEngine::TextAnchor::_set_MiddleCenter(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_MiddleCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "MiddleCenter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor MiddleRight
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_MiddleRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_MiddleRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "MiddleRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor MiddleRight
void UnityEngine::TextAnchor::_set_MiddleRight(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_MiddleRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "MiddleRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor LowerLeft
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_LowerLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_LowerLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "LowerLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor LowerLeft
void UnityEngine::TextAnchor::_set_LowerLeft(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_LowerLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "LowerLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor LowerCenter
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_LowerCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_LowerCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "LowerCenter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor LowerCenter
void UnityEngine::TextAnchor::_set_LowerCenter(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_LowerCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "LowerCenter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.TextAnchor LowerRight
UnityEngine::TextAnchor UnityEngine::TextAnchor::_get_LowerRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_get_LowerRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::TextAnchor>("UnityEngine", "TextAnchor", "LowerRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.TextAnchor LowerRight
void UnityEngine::TextAnchor::_set_LowerRight(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextAnchor::_set_LowerRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "TextAnchor", "LowerRight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HorizontalWrapMode
#include "UnityEngine/HorizontalWrapMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HorizontalWrapMode Wrap
UnityEngine::HorizontalWrapMode UnityEngine::HorizontalWrapMode::_get_Wrap() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HorizontalWrapMode::_get_Wrap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HorizontalWrapMode>("UnityEngine", "HorizontalWrapMode", "Wrap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HorizontalWrapMode Wrap
void UnityEngine::HorizontalWrapMode::_set_Wrap(UnityEngine::HorizontalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HorizontalWrapMode::_set_Wrap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HorizontalWrapMode", "Wrap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HorizontalWrapMode Overflow
UnityEngine::HorizontalWrapMode UnityEngine::HorizontalWrapMode::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HorizontalWrapMode::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HorizontalWrapMode>("UnityEngine", "HorizontalWrapMode", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HorizontalWrapMode Overflow
void UnityEngine::HorizontalWrapMode::_set_Overflow(UnityEngine::HorizontalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HorizontalWrapMode::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HorizontalWrapMode", "Overflow", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.VerticalWrapMode
#include "UnityEngine/VerticalWrapMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.VerticalWrapMode Truncate
UnityEngine::VerticalWrapMode UnityEngine::VerticalWrapMode::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VerticalWrapMode::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VerticalWrapMode>("UnityEngine", "VerticalWrapMode", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VerticalWrapMode Truncate
void UnityEngine::VerticalWrapMode::_set_Truncate(UnityEngine::VerticalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VerticalWrapMode::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VerticalWrapMode", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.VerticalWrapMode Overflow
UnityEngine::VerticalWrapMode UnityEngine::VerticalWrapMode::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VerticalWrapMode::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::VerticalWrapMode>("UnityEngine", "VerticalWrapMode", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.VerticalWrapMode Overflow
void UnityEngine::VerticalWrapMode::_set_Overflow(UnityEngine::VerticalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::VerticalWrapMode::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "VerticalWrapMode", "Overflow", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TextMesh
#include "UnityEngine/TextMesh.hpp"
// Including type: UnityEngine.TextAlignment
#include "UnityEngine/TextAlignment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextMesh.set_text
void UnityEngine::TextMesh::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextMesh::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.TextMesh.get_alignment
UnityEngine::TextAlignment UnityEngine::TextMesh::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextMesh::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAlignment, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextMesh.set_alignment
void UnityEngine::TextMesh::set_alignment(UnityEngine::TextAlignment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::TextMesh::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: TextMesh::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextMesh::*)(::Il2CppString*)>(&TextMesh::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextMesh*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TextMesh::get_alignment
// Il2CppName: get_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextAlignment (TextMesh::*)()>(&TextMesh::get_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextMesh*), "get_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TextMesh::set_alignment
// Il2CppName: set_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TextMesh::*)(UnityEngine::TextAlignment)>(&TextMesh::set_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TextMesh*), "set_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAlignment>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UIVertex
#include "UnityEngine/UIVertex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color32 s_DefaultColor
UnityEngine::Color32 UnityEngine::UIVertex::_get_s_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_get_s_DefaultColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("UnityEngine", "UIVertex", "s_DefaultColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color32 s_DefaultColor
void UnityEngine::UIVertex::_set_s_DefaultColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_set_s_DefaultColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UIVertex", "s_DefaultColor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
UnityEngine::Vector4 UnityEngine::UIVertex::_get_s_DefaultTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_get_s_DefaultTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("UnityEngine", "UIVertex", "s_DefaultTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
void UnityEngine::UIVertex::_set_s_DefaultTangent(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_set_s_DefaultTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UIVertex", "s_DefaultTangent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UIVertex simpleVert
UnityEngine::UIVertex UnityEngine::UIVertex::_get_simpleVert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_get_simpleVert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UIVertex>("UnityEngine", "UIVertex", "simpleVert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UIVertex simpleVert
void UnityEngine::UIVertex::_set_simpleVert(UnityEngine::UIVertex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::_set_simpleVert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "UIVertex", "simpleVert", value));
}
// Autogenerated method: UnityEngine.UIVertex..cctor
void UnityEngine::UIVertex::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UIVertex::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UIVertex", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: UIVertex::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UIVertex::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIVertex), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.Font/FontTextureRebuildCallback
#include "UnityEngine/Font_FontTextureRebuildCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DebuggerBrowsableAttribute] Offset: 0xDA7758
// [CompilerGeneratedAttribute] Offset: 0xDA7758
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Font> textureRebuilt
System::Action_1<UnityEngine::Font*>* UnityEngine::Font::_get_textureRebuilt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::_get_textureRebuilt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Font*>*>("UnityEngine", "Font", "textureRebuilt"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Font> textureRebuilt
void UnityEngine::Font::_set_textureRebuilt(System::Action_1<UnityEngine::Font*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::_set_textureRebuilt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Font", "textureRebuilt", value));
}
// Autogenerated method: UnityEngine.Font.add_textureRebuilt
void UnityEngine::Font::add_textureRebuilt(System::Action_1<UnityEngine::Font*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::add_textureRebuilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Font", "add_textureRebuilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Font.remove_textureRebuilt
void UnityEngine::Font::remove_textureRebuilt(System::Action_1<UnityEngine::Font*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::remove_textureRebuilt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Font", "remove_textureRebuilt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Font.get_material
UnityEngine::Material* UnityEngine::Font::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Font.get_dynamic
bool UnityEngine::Font::get_dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::get_dynamic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dynamic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Font.get_fontSize
int UnityEngine::Font::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Font.InvokeTextureRebuilt_Internal
void UnityEngine::Font::InvokeTextureRebuilt_Internal(UnityEngine::Font* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::InvokeTextureRebuilt_Internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Font", "InvokeTextureRebuilt_Internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, font);
}
// Autogenerated method: UnityEngine.Font.HasCharacter
bool UnityEngine::Font::HasCharacter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Font.HasCharacter
bool UnityEngine::Font::HasCharacter(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::HasCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Font.Internal_CreateFont
void UnityEngine::Font::Internal_CreateFont(UnityEngine::Font* self, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Font::Internal_CreateFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Font", "Internal_CreateFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, name);
}
// Writing MetadataGetter for method: Font::add_textureRebuilt
// Il2CppName: add_textureRebuilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<UnityEngine::Font*>*)>(&Font::add_textureRebuilt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "add_textureRebuilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Font*>*>()});
  }
};
// Writing MetadataGetter for method: Font::remove_textureRebuilt
// Il2CppName: remove_textureRebuilt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Action_1<UnityEngine::Font*>*)>(&Font::remove_textureRebuilt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "remove_textureRebuilt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Font*>*>()});
  }
};
// Writing MetadataGetter for method: Font::get_material
// Il2CppName: get_material
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (Font::*)()>(&Font::get_material)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "get_material", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Font::get_dynamic
// Il2CppName: get_dynamic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Font::*)()>(&Font::get_dynamic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "get_dynamic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Font::get_fontSize
// Il2CppName: get_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Font::*)()>(&Font::get_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "get_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Font::InvokeTextureRebuilt_Internal
// Il2CppName: InvokeTextureRebuilt_Internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Font*)>(&Font::InvokeTextureRebuilt_Internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "InvokeTextureRebuilt_Internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>()});
  }
};
// Writing MetadataGetter for method: Font::HasCharacter
// Il2CppName: HasCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Font::*)(::Il2CppChar)>(&Font::HasCharacter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "HasCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: Font::HasCharacter
// Il2CppName: HasCharacter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Font::*)(int)>(&Font::HasCharacter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "HasCharacter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Font::Internal_CreateFont
// Il2CppName: Internal_CreateFont
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Font*, ::Il2CppString*)>(&Font::Internal_CreateFont)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), "Internal_CreateFont", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Font::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::*)()>(&Font::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Font::*)()>(&Font::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Font*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
