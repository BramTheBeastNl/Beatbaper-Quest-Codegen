// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58
#include "UnityEngine/UI/Scrollbar_-ClickRepeat-d__58.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58.System.IDisposable.Dispose
void UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58.MoveNext
bool UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58.System.Collections.IEnumerator.Reset
void UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Scrollbar/<ClickRepeat>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Scrollbar::$ClickRepeat$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::$ClickRepeat$d__58::*)(int)>(&Scrollbar::$ClickRepeat$d__58::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::$ClickRepeat$d__58::*)(int)>(&Scrollbar::$ClickRepeat$d__58::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::$ClickRepeat$d__58::*)()>(&Scrollbar::$ClickRepeat$d__58::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Scrollbar::$ClickRepeat$d__58::*)()>(&Scrollbar::$ClickRepeat$d__58::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Scrollbar::$ClickRepeat$d__58::*)()>(&Scrollbar::$ClickRepeat$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Scrollbar::$ClickRepeat$d__58::*)()>(&Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Scrollbar::$ClickRepeat$d__58::*)()>(&Scrollbar::$ClickRepeat$d__58::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Scrollbar::$ClickRepeat$d__58*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Selectable
#include "UnityEngine/UI/Selectable.hpp"
// Including type: UnityEngine.UI.AnimationTriggers
#include "UnityEngine/UI/AnimationTriggers.hpp"
// Including type: UnityEngine.UI.Selectable/SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.UI.Selectable[] s_Selectables
::Array<UnityEngine::UI::Selectable*>* UnityEngine::UI::Selectable::_get_s_Selectables() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::_get_s_Selectables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::UI::Selectable*>*>("UnityEngine.UI", "Selectable", "s_Selectables"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.UI.Selectable[] s_Selectables
void UnityEngine::UI::Selectable::_set_s_Selectables(::Array<UnityEngine::UI::Selectable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::_set_s_Selectables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable", "s_Selectables", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 s_SelectableCount
int UnityEngine::UI::Selectable::_get_s_SelectableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::_get_s_SelectableCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.UI", "Selectable", "s_SelectableCount"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 s_SelectableCount
void UnityEngine::UI::Selectable::_set_s_SelectableCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::_set_s_SelectableCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable", "s_SelectableCount", value));
}
// Autogenerated method: UnityEngine.UI.Selectable.get_allSelectablesArray
::Array<UnityEngine::UI::Selectable*>* UnityEngine::UI::Selectable::get_allSelectablesArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_allSelectablesArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "get_allSelectablesArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::UI::Selectable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_allSelectableCount
int UnityEngine::UI::Selectable::get_allSelectableCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_allSelectableCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "get_allSelectableCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_allSelectables
System::Collections::Generic::List_1<UnityEngine::UI::Selectable*>* UnityEngine::UI::Selectable::get_allSelectables() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_allSelectables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "get_allSelectables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::UI::Selectable*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.AllSelectablesNoAlloc
int UnityEngine::UI::Selectable::AllSelectablesNoAlloc(::Array<UnityEngine::UI::Selectable*>* selectables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::AllSelectablesNoAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "AllSelectablesNoAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectables)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, selectables);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_navigation
UnityEngine::UI::Navigation UnityEngine::UI::Selectable::get_navigation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_navigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_navigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Navigation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_navigation
void UnityEngine::UI::Selectable::set_navigation(UnityEngine::UI::Navigation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_navigation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_navigation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_transition
UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable::Transition, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_transition
void UnityEngine::UI::Selectable::set_transition(UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_colors
UnityEngine::UI::ColorBlock UnityEngine::UI::Selectable::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ColorBlock, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_colors
void UnityEngine::UI::Selectable::set_colors(UnityEngine::UI::ColorBlock value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_spriteState
UnityEngine::UI::SpriteState UnityEngine::UI::Selectable::get_spriteState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_spriteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::SpriteState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_spriteState
void UnityEngine::UI::Selectable::set_spriteState(UnityEngine::UI::SpriteState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_spriteState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_animationTriggers
UnityEngine::UI::AnimationTriggers* UnityEngine::UI::Selectable::get_animationTriggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_animationTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::AnimationTriggers*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_animationTriggers
void UnityEngine::UI::Selectable::set_animationTriggers(UnityEngine::UI::AnimationTriggers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_animationTriggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animationTriggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_targetGraphic
UnityEngine::UI::Graphic* UnityEngine::UI::Selectable::get_targetGraphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_targetGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_targetGraphic
void UnityEngine::UI::Selectable::set_targetGraphic(UnityEngine::UI::Graphic* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_targetGraphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_targetGraphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_interactable
bool UnityEngine::UI::Selectable::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_interactable
void UnityEngine::UI::Selectable::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_isPointerInside
bool UnityEngine::UI::Selectable::get_isPointerInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_isPointerInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPointerInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_isPointerInside
void UnityEngine::UI::Selectable::set_isPointerInside(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_isPointerInside");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPointerInside", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_isPointerDown
bool UnityEngine::UI::Selectable::get_isPointerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_isPointerDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_isPointerDown
void UnityEngine::UI::Selectable::set_isPointerDown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_isPointerDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_hasSelection
bool UnityEngine::UI::Selectable::get_hasSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_hasSelection
void UnityEngine::UI::Selectable::set_hasSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_hasSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_image
UnityEngine::UI::Image* UnityEngine::UI::Selectable::get_image() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Image*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.set_image
void UnityEngine::UI::Selectable::set_image(UnityEngine::UI::Image* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::set_image");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_image", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_animator
UnityEngine::Animator* UnityEngine::UI::Selectable::get_animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_animator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsInteractable
bool UnityEngine::UI::Selectable::IsInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::IsInteractable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnSetProperty
void UnityEngine::UI::Selectable::OnSetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnSetProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.get_currentSelectionState
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::get_currentSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::get_currentSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable::SelectionState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.InstantClearState
void UnityEngine::UI::Selectable::InstantClearState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::InstantClearState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstantClearState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.DoStateTransition
void UnityEngine::UI::Selectable::DoStateTransition(UnityEngine::UI::Selectable::SelectionState state, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::DoStateTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoStateTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, instant);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectable
UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectable(UnityEngine::Vector3 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::FindSelectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method, dir);
}
// Autogenerated method: UnityEngine.UI.Selectable.GetPointOnRectEdge
UnityEngine::Vector3 UnityEngine::UI::Selectable::GetPointOnRectEdge(UnityEngine::RectTransform* rect, UnityEngine::Vector2 dir) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::GetPointOnRectEdge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", "GetPointOnRectEdge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(dir)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, dir);
}
// Autogenerated method: UnityEngine.UI.Selectable.Navigate
void UnityEngine::UI::Selectable::Navigate(UnityEngine::EventSystems::AxisEventData* eventData, UnityEngine::UI::Selectable* sel) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Navigate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Navigate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(sel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, sel);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnLeft
UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnRight
UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnUp
UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.FindSelectableOnDown
UnityEngine::UI::Selectable* UnityEngine::UI::Selectable::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnMove
void UnityEngine::UI::Selectable::OnMove(UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.StartColorTween
void UnityEngine::UI::Selectable::StartColorTween(UnityEngine::Color targetColor, bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::StartColorTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartColorTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, instant);
}
// Autogenerated method: UnityEngine.UI.Selectable.DoSpriteSwap
void UnityEngine::UI::Selectable::DoSpriteSwap(UnityEngine::Sprite* newSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::DoSpriteSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newSprite)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newSprite);
}
// Autogenerated method: UnityEngine.UI.Selectable.TriggerAnimation
void UnityEngine::UI::Selectable::TriggerAnimation(::Il2CppString* triggername) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::TriggerAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggername)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, triggername);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsHighlighted
bool UnityEngine::UI::Selectable::IsHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::IsHighlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHighlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.IsPressed
bool UnityEngine::UI::Selectable::IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::IsPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.EvaluateAndTransitionToSelectionState
void UnityEngine::UI::Selectable::EvaluateAndTransitionToSelectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::EvaluateAndTransitionToSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateAndTransitionToSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerDown
void UnityEngine::UI::Selectable::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerUp
void UnityEngine::UI::Selectable::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerEnter
void UnityEngine::UI::Selectable::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnPointerExit
void UnityEngine::UI::Selectable::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnSelect
void UnityEngine::UI::Selectable::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDeselect
void UnityEngine::UI::Selectable::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Selectable.Select
void UnityEngine::UI::Selectable::Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Select");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.Awake
void UnityEngine::UI::Selectable::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnCanvasGroupChanged
void UnityEngine::UI::Selectable::OnCanvasGroupChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnCanvasGroupChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasGroupChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDidApplyAnimationProperties
void UnityEngine::UI::Selectable::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnEnable
void UnityEngine::UI::Selectable::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnTransformParentChanged
void UnityEngine::UI::Selectable::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable.OnDisable
void UnityEngine::UI::Selectable::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Selectable..cctor
void UnityEngine::UI::Selectable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Selectable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Selectable::get_allSelectablesArray
// Il2CppName: get_allSelectablesArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::UI::Selectable*>* (*)()>(&Selectable::get_allSelectablesArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_allSelectablesArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::get_allSelectableCount
// Il2CppName: get_allSelectableCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Selectable::get_allSelectableCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_allSelectableCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::get_allSelectables
// Il2CppName: get_allSelectables
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::UI::Selectable*>* (*)()>(&Selectable::get_allSelectables)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_allSelectables", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::AllSelectablesNoAlloc
// Il2CppName: AllSelectablesNoAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<UnityEngine::UI::Selectable*>*)>(&Selectable::AllSelectablesNoAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "AllSelectablesNoAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::UI::Selectable*>*>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_navigation
// Il2CppName: get_navigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Navigation (Selectable::*)()>(&Selectable::get_navigation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_navigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_navigation
// Il2CppName: set_navigation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::Navigation)>(&Selectable::set_navigation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_navigation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Navigation>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_transition
// Il2CppName: get_transition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable::Transition (Selectable::*)()>(&Selectable::get_transition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_transition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_transition
// Il2CppName: set_transition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::Selectable::Transition)>(&Selectable::set_transition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_transition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable::Transition>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_colors
// Il2CppName: get_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ColorBlock (Selectable::*)()>(&Selectable::get_colors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_colors
// Il2CppName: set_colors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::ColorBlock)>(&Selectable::set_colors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_colors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ColorBlock>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_spriteState
// Il2CppName: get_spriteState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::SpriteState (Selectable::*)()>(&Selectable::get_spriteState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_spriteState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_spriteState
// Il2CppName: set_spriteState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::SpriteState)>(&Selectable::set_spriteState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_spriteState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::SpriteState>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_animationTriggers
// Il2CppName: get_animationTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::AnimationTriggers* (Selectable::*)()>(&Selectable::get_animationTriggers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_animationTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_animationTriggers
// Il2CppName: set_animationTriggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::AnimationTriggers*)>(&Selectable::set_animationTriggers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_animationTriggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::AnimationTriggers*>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_targetGraphic
// Il2CppName: get_targetGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Graphic* (Selectable::*)()>(&Selectable::get_targetGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_targetGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_targetGraphic
// Il2CppName: set_targetGraphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::Graphic*)>(&Selectable::set_targetGraphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_targetGraphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Graphic*>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_interactable
// Il2CppName: get_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::get_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_interactable
// Il2CppName: set_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(bool)>(&Selectable::set_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_isPointerInside
// Il2CppName: get_isPointerInside
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::get_isPointerInside)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_isPointerInside", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_isPointerInside
// Il2CppName: set_isPointerInside
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(bool)>(&Selectable::set_isPointerInside)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_isPointerInside", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_isPointerDown
// Il2CppName: get_isPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::get_isPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_isPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_isPointerDown
// Il2CppName: set_isPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(bool)>(&Selectable::set_isPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_isPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_hasSelection
// Il2CppName: get_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::get_hasSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_hasSelection
// Il2CppName: set_hasSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(bool)>(&Selectable::set_hasSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_hasSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_image
// Il2CppName: get_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Image* (Selectable::*)()>(&Selectable::get_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::set_image
// Il2CppName: set_image
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::Image*)>(&Selectable::set_image)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "set_image", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Image*>()});
  }
};
// Writing MetadataGetter for method: Selectable::get_animator
// Il2CppName: get_animator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Animator* (Selectable::*)()>(&Selectable::get_animator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_animator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::IsInteractable
// Il2CppName: IsInteractable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::IsInteractable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "IsInteractable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnSetProperty
// Il2CppName: OnSetProperty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnSetProperty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnSetProperty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::get_currentSelectionState
// Il2CppName: get_currentSelectionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable::SelectionState (Selectable::*)()>(&Selectable::get_currentSelectionState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "get_currentSelectionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::InstantClearState
// Il2CppName: InstantClearState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::InstantClearState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "InstantClearState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::DoStateTransition
// Il2CppName: DoStateTransition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::UI::Selectable::SelectionState, bool)>(&Selectable::DoStateTransition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "DoStateTransition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable::SelectionState>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::FindSelectable
// Il2CppName: FindSelectable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Selectable::*)(UnityEngine::Vector3)>(&Selectable::FindSelectable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "FindSelectable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: Selectable::GetPointOnRectEdge
// Il2CppName: GetPointOnRectEdge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)(UnityEngine::RectTransform*, UnityEngine::Vector2)>(&Selectable::GetPointOnRectEdge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "GetPointOnRectEdge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Selectable::Navigate
// Il2CppName: Navigate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::AxisEventData*, UnityEngine::UI::Selectable*)>(&Selectable::Navigate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "Navigate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Selectable*>()});
  }
};
// Writing MetadataGetter for method: Selectable::FindSelectableOnLeft
// Il2CppName: FindSelectableOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Selectable::*)()>(&Selectable::FindSelectableOnLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "FindSelectableOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::FindSelectableOnRight
// Il2CppName: FindSelectableOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Selectable::*)()>(&Selectable::FindSelectableOnRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "FindSelectableOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::FindSelectableOnUp
// Il2CppName: FindSelectableOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Selectable::*)()>(&Selectable::FindSelectableOnUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "FindSelectableOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::FindSelectableOnDown
// Il2CppName: FindSelectableOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Selectable::*)()>(&Selectable::FindSelectableOnDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "FindSelectableOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::AxisEventData*)>(&Selectable::OnMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::StartColorTween
// Il2CppName: StartColorTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::Color, bool)>(&Selectable::StartColorTween)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "StartColorTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Selectable::DoSpriteSwap
// Il2CppName: DoSpriteSwap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::Sprite*)>(&Selectable::DoSpriteSwap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "DoSpriteSwap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: Selectable::TriggerAnimation
// Il2CppName: TriggerAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(::Il2CppString*)>(&Selectable::TriggerAnimation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "TriggerAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Selectable::IsHighlighted
// Il2CppName: IsHighlighted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::IsHighlighted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "IsHighlighted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::IsPressed
// Il2CppName: IsPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Selectable::*)()>(&Selectable::IsPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "IsPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::EvaluateAndTransitionToSelectionState
// Il2CppName: EvaluateAndTransitionToSelectionState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::EvaluateAndTransitionToSelectionState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "EvaluateAndTransitionToSelectionState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::PointerEventData*)>(&Selectable::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::PointerEventData*)>(&Selectable::OnPointerUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::PointerEventData*)>(&Selectable::OnPointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::OnPointerExit
// Il2CppName: OnPointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::PointerEventData*)>(&Selectable::OnPointerExit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::BaseEventData*)>(&Selectable::OnSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)(UnityEngine::EventSystems::BaseEventData*)>(&Selectable::OnDeselect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Selectable::Select
// Il2CppName: Select
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::Select)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "Select", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnCanvasGroupChanged
// Il2CppName: OnCanvasGroupChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnCanvasGroupChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnCanvasGroupChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Selectable::*)()>(&Selectable::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Selectable::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Selectable::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Selectable*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Selectable/Transition
#include "UnityEngine/UI/Selectable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition None
UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition None
void UnityEngine::UI::Selectable::Transition::_set_None(UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition ColorTint
UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_ColorTint() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_get_ColorTint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "ColorTint"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition ColorTint
void UnityEngine::UI::Selectable::Transition::_set_ColorTint(UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_set_ColorTint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "ColorTint", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition SpriteSwap
UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_SpriteSwap() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_get_SpriteSwap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "SpriteSwap"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition SpriteSwap
void UnityEngine::UI::Selectable::Transition::_set_SpriteSwap(UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_set_SpriteSwap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "SpriteSwap", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/Transition Animation
UnityEngine::UI::Selectable::Transition UnityEngine::UI::Selectable::Transition::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::Transition>("UnityEngine.UI", "Selectable/Transition", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/Transition Animation
void UnityEngine::UI::Selectable::Transition::_set_Animation(UnityEngine::UI::Selectable::Transition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::Transition::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/Transition", "Animation", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Selectable/SelectionState
#include "UnityEngine/UI/Selectable_SelectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Normal
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Normal
void UnityEngine::UI::Selectable::SelectionState::_set_Normal(UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Highlighted
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Highlighted
void UnityEngine::UI::Selectable::SelectionState::_set_Highlighted(UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Pressed
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Pressed
void UnityEngine::UI::Selectable::SelectionState::_set_Pressed(UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Selected
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Selected
void UnityEngine::UI::Selectable::SelectionState::_set_Selected(UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Selectable/SelectionState Disabled
UnityEngine::UI::Selectable::SelectionState UnityEngine::UI::Selectable::SelectionState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Selectable::SelectionState>("UnityEngine.UI", "Selectable/SelectionState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Selectable/SelectionState Disabled
void UnityEngine::UI::Selectable::SelectionState::_set_Disabled(UnityEngine::UI::Selectable::SelectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Selectable::SelectionState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Selectable/SelectionState", "Disabled", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.SetPropertyUtility
#include "UnityEngine/UI/SetPropertyUtility.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.SetPropertyUtility.SetColor
bool UnityEngine::UI::SetPropertyUtility::SetColor(UnityEngine::Color& currentValue, UnityEngine::Color newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SetPropertyUtility::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "SetPropertyUtility", "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentValue), ::il2cpp_utils::ExtractType(newValue)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentValue, newValue);
}
// Writing MetadataGetter for method: SetPropertyUtility::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Color&, UnityEngine::Color)>(&SetPropertyUtility::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SetPropertyUtility*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: SetPropertyUtility::SetStruct
// Il2CppName: SetStruct
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: SetPropertyUtility::SetClass
// Il2CppName: SetClass
// Cannot write MetadataGetter for generic methods!
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider
#include "UnityEngine/UI/Slider.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Slider/SliderEvent
#include "UnityEngine/UI/Slider_SliderEvent.hpp"
// Including type: UnityEngine.UI.Slider/Axis
#include "UnityEngine/UI/Slider_Axis.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Slider.get_fillRect
UnityEngine::RectTransform* UnityEngine::UI::Slider::get_fillRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_fillRect
void UnityEngine::UI::Slider::set_fillRect(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_fillRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_handleRect
UnityEngine::RectTransform* UnityEngine::UI::Slider::get_handleRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_handleRect
void UnityEngine::UI::Slider::set_handleRect(UnityEngine::RectTransform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_handleRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_direction
UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::get_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Slider::Direction, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_direction
void UnityEngine::UI::Slider::set_direction(UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_minValue
float UnityEngine::UI::Slider::get_minValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_minValue
void UnityEngine::UI::Slider::set_minValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_minValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_minValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_maxValue
float UnityEngine::UI::Slider::get_maxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_maxValue
void UnityEngine::UI::Slider::set_maxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_maxValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_wholeNumbers
bool UnityEngine::UI::Slider::get_wholeNumbers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_wholeNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wholeNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_wholeNumbers
void UnityEngine::UI::Slider::set_wholeNumbers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_wholeNumbers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wholeNumbers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_value
float UnityEngine::UI::Slider::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_value
void UnityEngine::UI::Slider::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.SetValueWithoutNotify
void UnityEngine::UI::Slider::SetValueWithoutNotify(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::SetValueWithoutNotify");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValueWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Slider.get_normalizedValue
float UnityEngine::UI::Slider::get_normalizedValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_normalizedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalizedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_normalizedValue
void UnityEngine::UI::Slider::set_normalizedValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_normalizedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_normalizedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_onValueChanged
UnityEngine::UI::Slider::SliderEvent* UnityEngine::UI::Slider::get_onValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Slider::SliderEvent*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.set_onValueChanged
void UnityEngine::UI::Slider::set_onValueChanged(UnityEngine::UI::Slider::SliderEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::set_onValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_onValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Slider.get_stepSize
float UnityEngine::UI::Slider::get_stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_stepSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stepSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.Rebuild
void UnityEngine::UI::Slider::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Slider.LayoutComplete
void UnityEngine::UI::Slider::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.GraphicUpdateComplete
void UnityEngine::UI::Slider::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.Update
void UnityEngine::UI::Slider::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateCachedReferences
void UnityEngine::UI::Slider::UpdateCachedReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::UpdateCachedReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCachedReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.ClampValue
float UnityEngine::UI::Slider::ClampValue(float input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::ClampValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, input);
}
// Autogenerated method: UnityEngine.UI.Slider.Set
void UnityEngine::UI::Slider::Set(float input, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Slider.get_axis
UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Slider::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.get_reverseValue
bool UnityEngine::UI::Slider::get_reverseValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::get_reverseValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverseValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateVisuals
void UnityEngine::UI::Slider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::UpdateVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.UpdateDrag
void UnityEngine::UI::Slider::UpdateDrag(UnityEngine::EventSystems::PointerEventData* eventData, UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::UpdateDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, cam);
}
// Autogenerated method: UnityEngine.UI.Slider.MayDrag
bool UnityEngine::UI::Slider::MayDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::MayDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MayDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDrag
void UnityEngine::UI::Slider::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnInitializePotentialDrag
void UnityEngine::UI::Slider::OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.SetDirection
void UnityEngine::UI::Slider::SetDirection(UnityEngine::UI::Slider::Direction direction, bool includeRectLayouts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::SetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractType(includeRectLayouts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, direction, includeRectLayouts);
}
// Autogenerated method: UnityEngine.UI.Slider.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::Slider::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnEnable
void UnityEngine::UI::Slider::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDisable
void UnityEngine::UI::Slider::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnDidApplyAnimationProperties
void UnityEngine::UI::Slider::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnRectTransformDimensionsChange
void UnityEngine::UI::Slider::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.OnPointerDown
void UnityEngine::UI::Slider::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.OnMove
void UnityEngine::UI::Slider::OnMove(UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::OnMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnLeft
UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::FindSelectableOnLeft");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnRight
UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::FindSelectableOnRight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnUp
UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::FindSelectableOnUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Slider.FindSelectableOnDown
UnityEngine::UI::Selectable* UnityEngine::UI::Slider::FindSelectableOnDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::FindSelectableOnDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindSelectableOnDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Selectable*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Slider::get_fillRect
// Il2CppName: get_fillRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Slider::*)()>(&Slider::get_fillRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_fillRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_fillRect
// Il2CppName: set_fillRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::RectTransform*)>(&Slider::set_fillRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_fillRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: Slider::get_handleRect
// Il2CppName: get_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RectTransform* (Slider::*)()>(&Slider::get_handleRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_handleRect
// Il2CppName: set_handleRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::RectTransform*)>(&Slider::set_handleRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_handleRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>()});
  }
};
// Writing MetadataGetter for method: Slider::get_direction
// Il2CppName: get_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Slider::Direction (Slider::*)()>(&Slider::get_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_direction
// Il2CppName: set_direction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::UI::Slider::Direction)>(&Slider::set_direction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_direction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Slider::Direction>()});
  }
};
// Writing MetadataGetter for method: Slider::get_minValue
// Il2CppName: get_minValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)()>(&Slider::get_minValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_minValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_minValue
// Il2CppName: set_minValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float)>(&Slider::set_minValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_minValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::get_maxValue
// Il2CppName: get_maxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)()>(&Slider::get_maxValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_maxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_maxValue
// Il2CppName: set_maxValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float)>(&Slider::set_maxValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_maxValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::get_wholeNumbers
// Il2CppName: get_wholeNumbers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Slider::*)()>(&Slider::get_wholeNumbers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_wholeNumbers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_wholeNumbers
// Il2CppName: set_wholeNumbers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(bool)>(&Slider::set_wholeNumbers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_wholeNumbers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Slider::get_value
// Il2CppName: get_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)()>(&Slider::get_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_value
// Il2CppName: set_value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float)>(&Slider::set_value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::SetValueWithoutNotify
// Il2CppName: SetValueWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float)>(&Slider::SetValueWithoutNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "SetValueWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::get_normalizedValue
// Il2CppName: get_normalizedValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)()>(&Slider::get_normalizedValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_normalizedValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_normalizedValue
// Il2CppName: set_normalizedValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float)>(&Slider::set_normalizedValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_normalizedValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::get_onValueChanged
// Il2CppName: get_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Slider::SliderEvent* (Slider::*)()>(&Slider::get_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::set_onValueChanged
// Il2CppName: set_onValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::UI::Slider::SliderEvent*)>(&Slider::set_onValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "set_onValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Slider::SliderEvent*>()});
  }
};
// Writing MetadataGetter for method: Slider::get_stepSize
// Il2CppName: get_stepSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)()>(&Slider::get_stepSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_stepSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::UI::CanvasUpdate)>(&Slider::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: Slider::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::UpdateCachedReferences
// Il2CppName: UpdateCachedReferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::UpdateCachedReferences)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "UpdateCachedReferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::ClampValue
// Il2CppName: ClampValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Slider::*)(float)>(&Slider::ClampValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "ClampValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Slider::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(float, bool)>(&Slider::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Slider::get_axis
// Il2CppName: get_axis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Slider::Axis (Slider::*)()>(&Slider::get_axis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_axis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::get_reverseValue
// Il2CppName: get_reverseValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Slider::*)()>(&Slider::get_reverseValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "get_reverseValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::UpdateVisuals
// Il2CppName: UpdateVisuals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::UpdateVisuals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "UpdateVisuals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::UpdateDrag
// Il2CppName: UpdateDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::Camera*)>(&Slider::UpdateDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "UpdateDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: Slider::MayDrag
// Il2CppName: MayDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Slider::*)(UnityEngine::EventSystems::PointerEventData*)>(&Slider::MayDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "MayDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Slider::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::EventSystems::PointerEventData*)>(&Slider::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Slider::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::EventSystems::PointerEventData*)>(&Slider::OnInitializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Slider::SetDirection
// Il2CppName: SetDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::UI::Slider::Direction, bool)>(&Slider::SetDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "SetDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Slider::Direction>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Slider::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Slider::*)()>(&Slider::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)()>(&Slider::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::EventSystems::PointerEventData*)>(&Slider::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Slider::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::*)(UnityEngine::EventSystems::AxisEventData*)>(&Slider::OnMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
  }
};
// Writing MetadataGetter for method: Slider::FindSelectableOnLeft
// Il2CppName: FindSelectableOnLeft
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Slider::*)()>(&Slider::FindSelectableOnLeft)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "FindSelectableOnLeft", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::FindSelectableOnRight
// Il2CppName: FindSelectableOnRight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Slider::*)()>(&Slider::FindSelectableOnRight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "FindSelectableOnRight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::FindSelectableOnUp
// Il2CppName: FindSelectableOnUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Slider::*)()>(&Slider::FindSelectableOnUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "FindSelectableOnUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Slider::FindSelectableOnDown
// Il2CppName: FindSelectableOnDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Selectable* (Slider::*)()>(&Slider::FindSelectableOnDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider*), "FindSelectableOnDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/Direction
#include "UnityEngine/UI/Slider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction LeftToRight
UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_LeftToRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_get_LeftToRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "LeftToRight"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction LeftToRight
void UnityEngine::UI::Slider::Direction::_set_LeftToRight(UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_set_LeftToRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "LeftToRight", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction RightToLeft
UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_RightToLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_get_RightToLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "RightToLeft"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction RightToLeft
void UnityEngine::UI::Slider::Direction::_set_RightToLeft(UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_set_RightToLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "RightToLeft", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction BottomToTop
UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_BottomToTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_get_BottomToTop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "BottomToTop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction BottomToTop
void UnityEngine::UI::Slider::Direction::_set_BottomToTop(UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_set_BottomToTop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "BottomToTop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Direction TopToBottom
UnityEngine::UI::Slider::Direction UnityEngine::UI::Slider::Direction::_get_TopToBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_get_TopToBottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Direction>("UnityEngine.UI", "Slider/Direction", "TopToBottom"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Direction TopToBottom
void UnityEngine::UI::Slider::Direction::_set_TopToBottom(UnityEngine::UI::Slider::Direction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Direction::_set_TopToBottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Direction", "TopToBottom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/SliderEvent
#include "UnityEngine/UI/Slider_SliderEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Slider::SliderEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::SliderEvent::*)()>(&Slider::SliderEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider::SliderEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Slider::SliderEvent::*)()>(&Slider::SliderEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Slider::SliderEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Slider/Axis
#include "UnityEngine/UI/Slider_Axis.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Axis Horizontal
UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::Axis::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Axis::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Axis>("UnityEngine.UI", "Slider/Axis", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Axis Horizontal
void UnityEngine::UI::Slider::Axis::_set_Horizontal(UnityEngine::UI::Slider::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Axis::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Axis", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Slider/Axis Vertical
UnityEngine::UI::Slider::Axis UnityEngine::UI::Slider::Axis::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Axis::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Slider::Axis>("UnityEngine.UI", "Slider/Axis", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Slider/Axis Vertical
void UnityEngine::UI::Slider::Axis::_set_Vertical(UnityEngine::UI::Slider::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Slider::Axis::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Slider/Axis", "Vertical", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.SpriteState
#include "UnityEngine/UI/SpriteState.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.SpriteState.get_highlightedSprite
UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_highlightedSprite
void UnityEngine::UI::SpriteState::set_highlightedSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::set_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_pressedSprite
UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_pressedSprite
void UnityEngine::UI::SpriteState::set_pressedSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::set_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_selectedSprite
UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::get_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_selectedSprite
void UnityEngine::UI::SpriteState::set_selectedSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::set_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.get_disabledSprite
UnityEngine::Sprite* UnityEngine::UI::SpriteState::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.SpriteState.set_disabledSprite
void UnityEngine::UI::SpriteState::set_disabledSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::set_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.SpriteState.Equals
bool UnityEngine::UI::SpriteState::Equals(UnityEngine::UI::SpriteState other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::SpriteState::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Writing MetadataGetter for method: SpriteState::get_highlightedSprite
// Il2CppName: get_highlightedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (SpriteState::*)()>(&SpriteState::get_highlightedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "get_highlightedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SpriteState::set_highlightedSprite
// Il2CppName: set_highlightedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteState::*)(UnityEngine::Sprite*)>(&SpriteState::set_highlightedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "set_highlightedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteState::get_pressedSprite
// Il2CppName: get_pressedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (SpriteState::*)()>(&SpriteState::get_pressedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "get_pressedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SpriteState::set_pressedSprite
// Il2CppName: set_pressedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteState::*)(UnityEngine::Sprite*)>(&SpriteState::set_pressedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "set_pressedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteState::get_selectedSprite
// Il2CppName: get_selectedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (SpriteState::*)()>(&SpriteState::get_selectedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "get_selectedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SpriteState::set_selectedSprite
// Il2CppName: set_selectedSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteState::*)(UnityEngine::Sprite*)>(&SpriteState::set_selectedSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "set_selectedSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteState::get_disabledSprite
// Il2CppName: get_disabledSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Sprite* (SpriteState::*)()>(&SpriteState::get_disabledSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "get_disabledSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SpriteState::set_disabledSprite
// Il2CppName: set_disabledSprite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SpriteState::*)(UnityEngine::Sprite*)>(&SpriteState::set_disabledSprite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "set_disabledSprite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Sprite*>()});
  }
};
// Writing MetadataGetter for method: SpriteState::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SpriteState::*)(UnityEngine::UI::SpriteState)>(&SpriteState::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SpriteState), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::SpriteState>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.StencilMaterial
#include "UnityEngine/UI/StencilMaterial.hpp"
// Including type: UnityEngine.UI.StencilMaterial/MatEntry
#include "UnityEngine/UI/StencilMaterial_MatEntry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.StencilOp
#include "UnityEngine/Rendering/StencilOp.hpp"
// Including type: UnityEngine.Rendering.CompareFunction
#include "UnityEngine/Rendering/CompareFunction.hpp"
// Including type: UnityEngine.Rendering.ColorWriteMask
#include "UnityEngine/Rendering/ColorWriteMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.UI.StencilMaterial/MatEntry> m_List
System::Collections::Generic::List_1<UnityEngine::UI::StencilMaterial::MatEntry*>* UnityEngine::UI::StencilMaterial::_get_m_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::_get_m_List");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::UI::StencilMaterial::MatEntry*>*>("UnityEngine.UI", "StencilMaterial", "m_List"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.UI.StencilMaterial/MatEntry> m_List
void UnityEngine::UI::StencilMaterial::_set_m_List(System::Collections::Generic::List_1<UnityEngine::UI::StencilMaterial::MatEntry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::_set_m_List");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "StencilMaterial", "m_List", value));
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(UnityEngine::Material* baseMat, int stencilID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMat, stencilID);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(UnityEngine::Material* baseMat, int stencilID, UnityEngine::Rendering::StencilOp operation, UnityEngine::Rendering::CompareFunction compareFunction, UnityEngine::Rendering::ColorWriteMask colorWriteMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID), ::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(compareFunction), ::il2cpp_utils::ExtractType(colorWriteMask)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMat, stencilID, operation, compareFunction, colorWriteMask);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Add
UnityEngine::Material* UnityEngine::UI::StencilMaterial::Add(UnityEngine::Material* baseMat, int stencilID, UnityEngine::Rendering::StencilOp operation, UnityEngine::Rendering::CompareFunction compareFunction, UnityEngine::Rendering::ColorWriteMask colorWriteMask, int readMask, int writeMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMat), ::il2cpp_utils::ExtractType(stencilID), ::il2cpp_utils::ExtractType(operation), ::il2cpp_utils::ExtractType(compareFunction), ::il2cpp_utils::ExtractType(colorWriteMask), ::il2cpp_utils::ExtractType(readMask), ::il2cpp_utils::ExtractType(writeMask)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseMat, stencilID, operation, compareFunction, colorWriteMask, readMask, writeMask);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.Remove
void UnityEngine::UI::StencilMaterial::Remove(UnityEngine::Material* customMat) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(customMat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, customMat);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial.ClearAll
void UnityEngine::UI::StencilMaterial::ClearAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::ClearAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", "ClearAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.StencilMaterial..cctor
void UnityEngine::UI::StencilMaterial::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::StencilMaterial::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "StencilMaterial", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: StencilMaterial::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)(UnityEngine::Material*, int)>(&StencilMaterial::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StencilMaterial::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)(UnityEngine::Material*, int, UnityEngine::Rendering::StencilOp, UnityEngine::Rendering::CompareFunction, UnityEngine::Rendering::ColorWriteMask)>(&StencilMaterial::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::StencilOp>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CompareFunction>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ColorWriteMask>()});
  }
};
// Writing MetadataGetter for method: StencilMaterial::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (*)(UnityEngine::Material*, int, UnityEngine::Rendering::StencilOp, UnityEngine::Rendering::CompareFunction, UnityEngine::Rendering::ColorWriteMask, int, int)>(&StencilMaterial::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::StencilOp>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::CompareFunction>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rendering::ColorWriteMask>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StencilMaterial::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Material*)>(&StencilMaterial::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>()});
  }
};
// Writing MetadataGetter for method: StencilMaterial::ClearAll
// Il2CppName: ClearAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StencilMaterial::ClearAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), "ClearAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StencilMaterial::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&StencilMaterial::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.StencilMaterial/MatEntry
#include "UnityEngine/UI/StencilMaterial_MatEntry.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: StencilMaterial::MatEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StencilMaterial::MatEntry::*)()>(&StencilMaterial::MatEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial::MatEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StencilMaterial::MatEntry::*)()>(&StencilMaterial::MatEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StencilMaterial::MatEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.FontData
#include "UnityEngine/UI/FontData.hpp"
// Including type: UnityEngine.TextGenerator
#include "UnityEngine/TextGenerator.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Font
#include "UnityEngine/Font.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
// Including type: UnityEngine.HorizontalWrapMode
#include "UnityEngine/HorizontalWrapMode.hpp"
// Including type: UnityEngine.VerticalWrapMode
#include "UnityEngine/VerticalWrapMode.hpp"
// Including type: UnityEngine.FontStyle
#include "UnityEngine/FontStyle.hpp"
// Including type: UnityEngine.TextGenerationSettings
#include "UnityEngine/TextGenerationSettings.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Material s_DefaultText
UnityEngine::Material* UnityEngine::UI::Text::_get_s_DefaultText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::_get_s_DefaultText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("UnityEngine.UI", "Text", "s_DefaultText"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Material s_DefaultText
void UnityEngine::UI::Text::_set_s_DefaultText(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::_set_s_DefaultText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Text", "s_DefaultText", value));
}
// Autogenerated method: UnityEngine.UI.Text.get_cachedTextGenerator
UnityEngine::TextGenerator* UnityEngine::UI::Text::get_cachedTextGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_cachedTextGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedTextGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_cachedTextGeneratorForLayout
UnityEngine::TextGenerator* UnityEngine::UI::Text::get_cachedTextGeneratorForLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_cachedTextGeneratorForLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cachedTextGeneratorForLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.FontTextureChanged
void UnityEngine::UI::Text::FontTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::FontTextureChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FontTextureChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_font
UnityEngine::Font* UnityEngine::UI::Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Font*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_font
void UnityEngine::UI::Text::set_font(UnityEngine::Font* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_text
::Il2CppString* UnityEngine::UI::Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_text
void UnityEngine::UI::Text::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_text");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_supportRichText
bool UnityEngine::UI::Text::get_supportRichText() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_supportRichText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_supportRichText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_supportRichText
void UnityEngine::UI::Text::set_supportRichText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_supportRichText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_supportRichText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextForBestFit
bool UnityEngine::UI::Text::get_resizeTextForBestFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_resizeTextForBestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextForBestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextForBestFit
void UnityEngine::UI::Text::set_resizeTextForBestFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_resizeTextForBestFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextForBestFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextMinSize
int UnityEngine::UI::Text::get_resizeTextMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_resizeTextMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextMinSize
void UnityEngine::UI::Text::set_resizeTextMinSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_resizeTextMinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextMinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_resizeTextMaxSize
int UnityEngine::UI::Text::get_resizeTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_resizeTextMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resizeTextMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_resizeTextMaxSize
void UnityEngine::UI::Text::set_resizeTextMaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_resizeTextMaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_resizeTextMaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_alignment
UnityEngine::TextAnchor UnityEngine::UI::Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAnchor, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_alignment
void UnityEngine::UI::Text::set_alignment(UnityEngine::TextAnchor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_alignByGeometry
bool UnityEngine::UI::Text::get_alignByGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_alignByGeometry
void UnityEngine::UI::Text::set_alignByGeometry(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_alignByGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignByGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_fontSize
int UnityEngine::UI::Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_fontSize
void UnityEngine::UI::Text::set_fontSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_horizontalOverflow
UnityEngine::HorizontalWrapMode UnityEngine::UI::Text::get_horizontalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::HorizontalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_horizontalOverflow
void UnityEngine::UI::Text::set_horizontalOverflow(UnityEngine::HorizontalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_horizontalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_verticalOverflow
UnityEngine::VerticalWrapMode UnityEngine::UI::Text::get_verticalOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::VerticalWrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_verticalOverflow
void UnityEngine::UI::Text::set_verticalOverflow(UnityEngine::VerticalWrapMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_verticalOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_lineSpacing
float UnityEngine::UI::Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_lineSpacing
void UnityEngine::UI::Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_fontStyle
UnityEngine::FontStyle UnityEngine::UI::Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::FontStyle, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.set_fontStyle
void UnityEngine::UI::Text::set_fontStyle(UnityEngine::FontStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Text.get_pixelsPerUnit
float UnityEngine::UI::Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.AssignDefaultFont
void UnityEngine::UI::Text::AssignDefaultFont() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::AssignDefaultFont");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignDefaultFont", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.GetGenerationSettings
UnityEngine::TextGenerationSettings UnityEngine::UI::Text::GetGenerationSettings(UnityEngine::Vector2 extents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::GetGenerationSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenerationSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extents)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextGenerationSettings, false>(this, ___internal__method, extents);
}
// Autogenerated method: UnityEngine.UI.Text.GetTextAnchorPivot
UnityEngine::Vector2 UnityEngine::UI::Text::GetTextAnchorPivot(UnityEngine::TextAnchor anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::GetTextAnchorPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Text", "GetTextAnchorPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, anchor);
}
// Autogenerated method: UnityEngine.UI.Text.CalculateLayoutInputHorizontal
void UnityEngine::UI::Text::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.CalculateLayoutInputVertical
void UnityEngine::UI::Text::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_minWidth
float UnityEngine::UI::Text::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_preferredWidth
float UnityEngine::UI::Text::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_flexibleWidth
float UnityEngine::UI::Text::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_minHeight
float UnityEngine::UI::Text::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_preferredHeight
float UnityEngine::UI::Text::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_flexibleHeight
float UnityEngine::UI::Text::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_layoutPriority
int UnityEngine::UI::Text::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.get_mainTexture
UnityEngine::Texture* UnityEngine::UI::Text::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnEnable
void UnityEngine::UI::Text::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnDisable
void UnityEngine::UI::Text::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.UpdateGeometry
void UnityEngine::UI::Text::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Text.OnPopulateMesh
void UnityEngine::UI::Text::OnPopulateMesh(UnityEngine::UI::VertexHelper* toFill) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::OnPopulateMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPopulateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toFill)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toFill);
}
// Autogenerated method: UnityEngine.UI.Text..cctor
void UnityEngine::UI::Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "Text", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Text::get_cachedTextGenerator
// Il2CppName: get_cachedTextGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (Text::*)()>(&Text::get_cachedTextGenerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_cachedTextGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_cachedTextGeneratorForLayout
// Il2CppName: get_cachedTextGeneratorForLayout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerator* (Text::*)()>(&Text::get_cachedTextGeneratorForLayout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_cachedTextGeneratorForLayout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::FontTextureChanged
// Il2CppName: FontTextureChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::FontTextureChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "FontTextureChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_font
// Il2CppName: get_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Font* (Text::*)()>(&Text::get_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_font
// Il2CppName: set_font
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::Font*)>(&Text::set_font)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_font", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Font*>()});
  }
};
// Writing MetadataGetter for method: Text::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Text::*)()>(&Text::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(::Il2CppString*)>(&Text::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Text::get_supportRichText
// Il2CppName: get_supportRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Text::*)()>(&Text::get_supportRichText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_supportRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_supportRichText
// Il2CppName: set_supportRichText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(bool)>(&Text::set_supportRichText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_supportRichText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Text::get_resizeTextForBestFit
// Il2CppName: get_resizeTextForBestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Text::*)()>(&Text::get_resizeTextForBestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_resizeTextForBestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_resizeTextForBestFit
// Il2CppName: set_resizeTextForBestFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(bool)>(&Text::set_resizeTextForBestFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_resizeTextForBestFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Text::get_resizeTextMinSize
// Il2CppName: get_resizeTextMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Text::*)()>(&Text::get_resizeTextMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_resizeTextMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_resizeTextMinSize
// Il2CppName: set_resizeTextMinSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(int)>(&Text::set_resizeTextMinSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_resizeTextMinSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Text::get_resizeTextMaxSize
// Il2CppName: get_resizeTextMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Text::*)()>(&Text::get_resizeTextMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_resizeTextMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_resizeTextMaxSize
// Il2CppName: set_resizeTextMaxSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(int)>(&Text::set_resizeTextMaxSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_resizeTextMaxSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Text::get_alignment
// Il2CppName: get_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextAnchor (Text::*)()>(&Text::get_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_alignment
// Il2CppName: set_alignment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::TextAnchor)>(&Text::set_alignment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_alignment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: Text::get_alignByGeometry
// Il2CppName: get_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Text::*)()>(&Text::get_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_alignByGeometry
// Il2CppName: set_alignByGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(bool)>(&Text::set_alignByGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_alignByGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Text::get_fontSize
// Il2CppName: get_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Text::*)()>(&Text::get_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_fontSize
// Il2CppName: set_fontSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(int)>(&Text::set_fontSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_fontSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Text::get_horizontalOverflow
// Il2CppName: get_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::HorizontalWrapMode (Text::*)()>(&Text::get_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_horizontalOverflow
// Il2CppName: set_horizontalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::HorizontalWrapMode)>(&Text::set_horizontalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_horizontalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::HorizontalWrapMode>()});
  }
};
// Writing MetadataGetter for method: Text::get_verticalOverflow
// Il2CppName: get_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::VerticalWrapMode (Text::*)()>(&Text::get_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_verticalOverflow
// Il2CppName: set_verticalOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::VerticalWrapMode)>(&Text::set_verticalOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_verticalOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::VerticalWrapMode>()});
  }
};
// Writing MetadataGetter for method: Text::get_lineSpacing
// Il2CppName: get_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_lineSpacing
// Il2CppName: set_lineSpacing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(float)>(&Text::set_lineSpacing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_lineSpacing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Text::get_fontStyle
// Il2CppName: get_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::FontStyle (Text::*)()>(&Text::get_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::set_fontStyle
// Il2CppName: set_fontStyle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::FontStyle)>(&Text::set_fontStyle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "set_fontStyle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::FontStyle>()});
  }
};
// Writing MetadataGetter for method: Text::get_pixelsPerUnit
// Il2CppName: get_pixelsPerUnit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_pixelsPerUnit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_pixelsPerUnit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::AssignDefaultFont
// Il2CppName: AssignDefaultFont
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::AssignDefaultFont)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "AssignDefaultFont", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::GetGenerationSettings
// Il2CppName: GetGenerationSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::TextGenerationSettings (Text::*)(UnityEngine::Vector2)>(&Text::GetGenerationSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "GetGenerationSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Text::GetTextAnchorPivot
// Il2CppName: GetTextAnchorPivot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::TextAnchor)>(&Text::GetTextAnchorPivot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "GetTextAnchorPivot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::TextAnchor>()});
  }
};
// Writing MetadataGetter for method: Text::CalculateLayoutInputHorizontal
// Il2CppName: CalculateLayoutInputHorizontal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::CalculateLayoutInputHorizontal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::CalculateLayoutInputVertical
// Il2CppName: CalculateLayoutInputVertical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::CalculateLayoutInputVertical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "CalculateLayoutInputVertical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_minWidth
// Il2CppName: get_minWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_minWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_minWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_preferredWidth
// Il2CppName: get_preferredWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_preferredWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_preferredWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_flexibleWidth
// Il2CppName: get_flexibleWidth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_flexibleWidth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_flexibleWidth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_minHeight
// Il2CppName: get_minHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_minHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_minHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_preferredHeight
// Il2CppName: get_preferredHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_preferredHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_preferredHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_flexibleHeight
// Il2CppName: get_flexibleHeight
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Text::*)()>(&Text::get_flexibleHeight)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_flexibleHeight", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_layoutPriority
// Il2CppName: get_layoutPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Text::*)()>(&Text::get_layoutPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_layoutPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::get_mainTexture
// Il2CppName: get_mainTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Texture* (Text::*)()>(&Text::get_mainTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "get_mainTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::UpdateGeometry
// Il2CppName: UpdateGeometry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)()>(&Text::UpdateGeometry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "UpdateGeometry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Text::OnPopulateMesh
// Il2CppName: OnPopulateMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Text::*)(UnityEngine::UI::VertexHelper*)>(&Text::OnPopulateMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), "OnPopulateMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: Text::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Text::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Text*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Toggle/ToggleEvent
#include "UnityEngine/UI/Toggle_ToggleEvent.hpp"
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Toggle.get_group
UnityEngine::UI::ToggleGroup* UnityEngine::UI::Toggle::get_group() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::get_group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ToggleGroup*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.set_group
void UnityEngine::UI::Toggle::set_group(UnityEngine::UI::ToggleGroup* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::set_group");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_group", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.Rebuild
void UnityEngine::UI::Toggle::Rebuild(UnityEngine::UI::CanvasUpdate executing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(executing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, executing);
}
// Autogenerated method: UnityEngine.UI.Toggle.LayoutComplete
void UnityEngine::UI::Toggle::LayoutComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::LayoutComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LayoutComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.GraphicUpdateComplete
void UnityEngine::UI::Toggle::GraphicUpdateComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::GraphicUpdateComplete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GraphicUpdateComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.SetToggleGroup
void UnityEngine::UI::Toggle::SetToggleGroup(UnityEngine::UI::ToggleGroup* newGroup, bool setMemberValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::SetToggleGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToggleGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGroup), ::il2cpp_utils::ExtractType(setMemberValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGroup, setMemberValue);
}
// Autogenerated method: UnityEngine.UI.Toggle.get_isOn
bool UnityEngine::UI::Toggle::get_isOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::get_isOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.set_isOn
void UnityEngine::UI::Toggle::set_isOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::set_isOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.SetIsOnWithoutNotify
void UnityEngine::UI::Toggle::SetIsOnWithoutNotify(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::SetIsOnWithoutNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsOnWithoutNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Toggle.Set
void UnityEngine::UI::Toggle::Set(bool value, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, sendCallback);
}
// Autogenerated method: UnityEngine.UI.Toggle.PlayEffect
void UnityEngine::UI::Toggle::PlayEffect(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::PlayEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: UnityEngine.UI.Toggle.InternalToggle
void UnityEngine::UI::Toggle::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::InternalToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnPointerClick
void UnityEngine::UI::Toggle::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnSubmit
void UnityEngine::UI::Toggle::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.UI.Toggle.UnityEngine.UI.ICanvasElement.get_transform
UnityEngine::Transform* UnityEngine::UI::Toggle::UnityEngine_UI_ICanvasElement_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::UnityEngine.UI.ICanvasElement.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnDestroy
void UnityEngine::UI::Toggle::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnEnable
void UnityEngine::UI::Toggle::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnDisable
void UnityEngine::UI::Toggle::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.OnDidApplyAnimationProperties
void UnityEngine::UI::Toggle::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Toggle.Start
void UnityEngine::UI::Toggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Toggle::get_group
// Il2CppName: get_group
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ToggleGroup* (Toggle::*)()>(&Toggle::get_group)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "get_group", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::set_group
// Il2CppName: set_group
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(UnityEngine::UI::ToggleGroup*)>(&Toggle::set_group)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "set_group", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ToggleGroup*>()});
  }
};
// Writing MetadataGetter for method: Toggle::Rebuild
// Il2CppName: Rebuild
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(UnityEngine::UI::CanvasUpdate)>(&Toggle::Rebuild)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "Rebuild", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CanvasUpdate>()});
  }
};
// Writing MetadataGetter for method: Toggle::LayoutComplete
// Il2CppName: LayoutComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::LayoutComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "LayoutComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::GraphicUpdateComplete
// Il2CppName: GraphicUpdateComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::GraphicUpdateComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "GraphicUpdateComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::SetToggleGroup
// Il2CppName: SetToggleGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(UnityEngine::UI::ToggleGroup*, bool)>(&Toggle::SetToggleGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "SetToggleGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::ToggleGroup*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Toggle::get_isOn
// Il2CppName: get_isOn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Toggle::*)()>(&Toggle::get_isOn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "get_isOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::set_isOn
// Il2CppName: set_isOn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(bool)>(&Toggle::set_isOn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "set_isOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Toggle::SetIsOnWithoutNotify
// Il2CppName: SetIsOnWithoutNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(bool)>(&Toggle::SetIsOnWithoutNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "SetIsOnWithoutNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Toggle::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(bool, bool)>(&Toggle::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Toggle::PlayEffect
// Il2CppName: PlayEffect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(bool)>(&Toggle::PlayEffect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "PlayEffect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Toggle::InternalToggle
// Il2CppName: InternalToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::InternalToggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "InternalToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(UnityEngine::EventSystems::PointerEventData*)>(&Toggle::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: Toggle::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)(UnityEngine::EventSystems::BaseEventData*)>(&Toggle::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: Toggle::UnityEngine_UI_ICanvasElement_get_transform
// Il2CppName: UnityEngine.UI.ICanvasElement.get_transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Transform* (Toggle::*)()>(&Toggle::UnityEngine_UI_ICanvasElement_get_transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "UnityEngine.UI.ICanvasElement.get_transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Toggle::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::*)()>(&Toggle::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle/ToggleTransition
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Toggle/ToggleTransition None
UnityEngine::UI::Toggle::ToggleTransition UnityEngine::UI::Toggle::ToggleTransition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::ToggleTransition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Toggle::ToggleTransition>("UnityEngine.UI", "Toggle/ToggleTransition", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Toggle/ToggleTransition None
void UnityEngine::UI::Toggle::ToggleTransition::_set_None(UnityEngine::UI::Toggle::ToggleTransition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::ToggleTransition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Toggle/ToggleTransition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.Toggle/ToggleTransition Fade
UnityEngine::UI::Toggle::ToggleTransition UnityEngine::UI::Toggle::ToggleTransition::_get_Fade() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::ToggleTransition::_get_Fade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::Toggle::ToggleTransition>("UnityEngine.UI", "Toggle/ToggleTransition", "Fade"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.Toggle/ToggleTransition Fade
void UnityEngine::UI::Toggle::ToggleTransition::_set_Fade(UnityEngine::UI::Toggle::ToggleTransition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Toggle::ToggleTransition::_set_Fade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Toggle/ToggleTransition", "Fade", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Toggle/ToggleEvent
#include "UnityEngine/UI/Toggle_ToggleEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Toggle::ToggleEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::ToggleEvent::*)()>(&Toggle::ToggleEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle::ToggleEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Toggle::ToggleEvent::*)()>(&Toggle::ToggleEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Toggle::ToggleEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ToggleGroup
#include "UnityEngine/UI/ToggleGroup.hpp"
// Including type: UnityEngine.UI.ToggleGroup/<>c
#include "UnityEngine/UI/ToggleGroup_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ToggleGroup.get_allowSwitchOff
bool UnityEngine::UI::ToggleGroup::get_allowSwitchOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::get_allowSwitchOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSwitchOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.set_allowSwitchOff
void UnityEngine::UI::ToggleGroup::set_allowSwitchOff(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::set_allowSwitchOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSwitchOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.ValidateToggleIsInGroup
void UnityEngine::UI::ToggleGroup::ValidateToggleIsInGroup(UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::ValidateToggleIsInGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateToggleIsInGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.NotifyToggleOn
void UnityEngine::UI::ToggleGroup::NotifyToggleOn(UnityEngine::UI::Toggle* toggle, bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::NotifyToggleOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyToggleOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle), ::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle, sendCallback);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.UnregisterToggle
void UnityEngine::UI::ToggleGroup::UnregisterToggle(UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::UnregisterToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.RegisterToggle
void UnityEngine::UI::ToggleGroup::RegisterToggle(UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::RegisterToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.EnsureValidState
void UnityEngine::UI::ToggleGroup::EnsureValidState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::EnsureValidState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureValidState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.AnyTogglesOn
bool UnityEngine::UI::ToggleGroup::AnyTogglesOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::AnyTogglesOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyTogglesOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.ActiveToggles
System::Collections::Generic::IEnumerable_1<UnityEngine::UI::Toggle*>* UnityEngine::UI::ToggleGroup::ActiveToggles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::ActiveToggles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActiveToggles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::UI::Toggle*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.SetAllTogglesOff
void UnityEngine::UI::ToggleGroup::SetAllTogglesOff(bool sendCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::SetAllTogglesOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllTogglesOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sendCallback);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup.Start
void UnityEngine::UI::ToggleGroup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ToggleGroup::get_allowSwitchOff
// Il2CppName: get_allowSwitchOff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ToggleGroup::*)()>(&ToggleGroup::get_allowSwitchOff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "get_allowSwitchOff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::set_allowSwitchOff
// Il2CppName: set_allowSwitchOff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(bool)>(&ToggleGroup::set_allowSwitchOff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "set_allowSwitchOff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::ValidateToggleIsInGroup
// Il2CppName: ValidateToggleIsInGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(UnityEngine::UI::Toggle*)>(&ToggleGroup::ValidateToggleIsInGroup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "ValidateToggleIsInGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::NotifyToggleOn
// Il2CppName: NotifyToggleOn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(UnityEngine::UI::Toggle*, bool)>(&ToggleGroup::NotifyToggleOn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "NotifyToggleOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::UnregisterToggle
// Il2CppName: UnregisterToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(UnityEngine::UI::Toggle*)>(&ToggleGroup::UnregisterToggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "UnregisterToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::RegisterToggle
// Il2CppName: RegisterToggle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(UnityEngine::UI::Toggle*)>(&ToggleGroup::RegisterToggle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "RegisterToggle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::EnsureValidState
// Il2CppName: EnsureValidState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)()>(&ToggleGroup::EnsureValidState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "EnsureValidState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::AnyTogglesOn
// Il2CppName: AnyTogglesOn
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ToggleGroup::*)()>(&ToggleGroup::AnyTogglesOn)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "AnyTogglesOn", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::ActiveToggles
// Il2CppName: ActiveToggles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerable_1<UnityEngine::UI::Toggle*>* (ToggleGroup::*)()>(&ToggleGroup::ActiveToggles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "ActiveToggles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::SetAllTogglesOff
// Il2CppName: SetAllTogglesOff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)(bool)>(&ToggleGroup::SetAllTogglesOff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "SetAllTogglesOff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)()>(&ToggleGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)()>(&ToggleGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::*)()>(&ToggleGroup::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ToggleGroup/<>c
#include "UnityEngine/UI/ToggleGroup_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UI.ToggleGroup/<>c <>9
UnityEngine::UI::ToggleGroup::$$c* UnityEngine::UI::ToggleGroup::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::UI::ToggleGroup::$$c*>("UnityEngine.UI", "ToggleGroup/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UI.ToggleGroup/<>c <>9
void UnityEngine::UI::ToggleGroup::$$c::_set_$$9(UnityEngine::UI::ToggleGroup::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "ToggleGroup/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<UnityEngine.UI.Toggle> <>9__12_0
System::Predicate_1<UnityEngine::UI::Toggle*>* UnityEngine::UI::ToggleGroup::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<UnityEngine::UI::Toggle*>*>("UnityEngine.UI", "ToggleGroup/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<UnityEngine.UI.Toggle> <>9__12_0
void UnityEngine::UI::ToggleGroup::$$c::_set_$$9__12_0(System::Predicate_1<UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "ToggleGroup/<>c", "<>9__12_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<UnityEngine.UI.Toggle,System.Boolean> <>9__13_0
System::Func_2<UnityEngine::UI::Toggle*, bool>* UnityEngine::UI::ToggleGroup::$$c::_get_$$9__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_get_$$9__13_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<UnityEngine::UI::Toggle*, bool>*>("UnityEngine.UI", "ToggleGroup/<>c", "<>9__13_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<UnityEngine.UI.Toggle,System.Boolean> <>9__13_0
void UnityEngine::UI::ToggleGroup::$$c::_set_$$9__13_0(System::Func_2<UnityEngine::UI::Toggle*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::_set_$$9__13_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.UI", "ToggleGroup/<>c", "<>9__13_0", value)));
}
// Autogenerated method: UnityEngine.UI.ToggleGroup/<>c..cctor
void UnityEngine::UI::ToggleGroup::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ToggleGroup/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup/<>c.<AnyTogglesOn>b__12_0
bool UnityEngine::UI::ToggleGroup::$$c::$AnyTogglesOn$b__12_0(UnityEngine::UI::Toggle* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::<AnyTogglesOn>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnyTogglesOn>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: UnityEngine.UI.ToggleGroup/<>c.<ActiveToggles>b__13_0
bool UnityEngine::UI::ToggleGroup::$$c::$ActiveToggles$b__13_0(UnityEngine::UI::Toggle* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ToggleGroup::$$c::<ActiveToggles>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ActiveToggles>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: ToggleGroup::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ToggleGroup::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ToggleGroup::$$c::$AnyTogglesOn$b__12_0
// Il2CppName: <AnyTogglesOn>b__12_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ToggleGroup::$$c::*)(UnityEngine::UI::Toggle*)>(&ToggleGroup::$$c::$AnyTogglesOn$b__12_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup::$$c*), "<AnyTogglesOn>b__12_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::$$c::$ActiveToggles$b__13_0
// Il2CppName: <ActiveToggles>b__13_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ToggleGroup::$$c::*)(UnityEngine::UI::Toggle*)>(&ToggleGroup::$$c::$ActiveToggles$b__13_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup::$$c*), "<ActiveToggles>b__13_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: ToggleGroup::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::$$c::*)()>(&ToggleGroup::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ToggleGroup::$$c::*)()>(&ToggleGroup::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ToggleGroup::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.ReflectionMethodsCache
#include "UnityEngine/UI/ReflectionMethodsCache.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast3DCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_RaycastAllCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRaycastNonAllocCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast2DCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllCallback.hpp"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllNonAllocCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
UnityEngine::UI::ReflectionMethodsCache* UnityEngine::UI::ReflectionMethodsCache::_get_s_ReflectionMethodsCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::_get_s_ReflectionMethodsCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ReflectionMethodsCache*>("UnityEngine.UI", "ReflectionMethodsCache", "s_ReflectionMethodsCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.UI.ReflectionMethodsCache s_ReflectionMethodsCache
void UnityEngine::UI::ReflectionMethodsCache::_set_s_ReflectionMethodsCache(UnityEngine::UI::ReflectionMethodsCache* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::_set_s_ReflectionMethodsCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "ReflectionMethodsCache", "s_ReflectionMethodsCache", value));
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache.get_Singleton
UnityEngine::UI::ReflectionMethodsCache* UnityEngine::UI::ReflectionMethodsCache::get_Singleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::get_Singleton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ReflectionMethodsCache", "get_Singleton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::ReflectionMethodsCache*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache..cctor
void UnityEngine::UI::ReflectionMethodsCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "ReflectionMethodsCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::get_Singleton
// Il2CppName: get_Singleton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::ReflectionMethodsCache* (*)()>(&ReflectionMethodsCache::get_Singleton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache*), "get_Singleton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ReflectionMethodsCache::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::*)()>(&ReflectionMethodsCache::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::*)()>(&ReflectionMethodsCache::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast3DCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: UnityEngine.RaycastHit
#include "UnityEngine/RaycastHit.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.Invoke
bool UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::Invoke(UnityEngine::Ray r, UnityEngine::RaycastHit& hit, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, r, hit, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::BeginInvoke(UnityEngine::Ray r, UnityEngine::RaycastHit& hit, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, r, hit, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast3DCallback.EndInvoke
bool UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::EndInvoke(UnityEngine::RaycastHit& hit, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast3DCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, hit, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast3DCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::Raycast3DCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::Raycast3DCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast3DCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::Raycast3DCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::Raycast3DCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast3DCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast3DCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ReflectionMethodsCache::Raycast3DCallback::*)(UnityEngine::Ray, UnityEngine::RaycastHit&, float, int)>(&ReflectionMethodsCache::Raycast3DCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast3DCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast3DCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::Raycast3DCallback::*)(UnityEngine::Ray, UnityEngine::RaycastHit&, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::Raycast3DCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast3DCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast3DCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ReflectionMethodsCache::Raycast3DCallback::*)(UnityEngine::RaycastHit&, System::IAsyncResult*)>(&ReflectionMethodsCache::Raycast3DCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast3DCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_RaycastAllCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.Invoke
::Array<UnityEngine::RaycastHit>* UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::Invoke(UnityEngine::Ray r, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(this, ___internal__method, r, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::BeginInvoke(UnityEngine::Ray r, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, r, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/RaycastAllCallback.EndInvoke
::Array<UnityEngine::RaycastHit>* UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::RaycastAllCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit>*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::RaycastAllCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::RaycastAllCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::RaycastAllCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::RaycastAllCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::RaycastAllCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::RaycastAllCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::RaycastAllCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::RaycastAllCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (ReflectionMethodsCache::RaycastAllCallback::*)(UnityEngine::Ray, float, int)>(&ReflectionMethodsCache::RaycastAllCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::RaycastAllCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::RaycastAllCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::RaycastAllCallback::*)(UnityEngine::Ray, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::RaycastAllCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::RaycastAllCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::RaycastAllCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit>* (ReflectionMethodsCache::RaycastAllCallback::*)(System::IAsyncResult*)>(&ReflectionMethodsCache::RaycastAllCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::RaycastAllCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRaycastNonAllocCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.Invoke
int UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke(UnityEngine::Ray r, ::Array<UnityEngine::RaycastHit>* results, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, r, results, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke(UnityEngine::Ray r, ::Array<UnityEngine::RaycastHit>* results, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, r, results, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRaycastNonAllocCallback.EndInvoke
int UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRaycastNonAllocCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRaycastNonAllocCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRaycastNonAllocCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRaycastNonAllocCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRaycastNonAllocCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRaycastNonAllocCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRaycastNonAllocCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ReflectionMethodsCache::GetRaycastNonAllocCallback::*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float, int)>(&ReflectionMethodsCache::GetRaycastNonAllocCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRaycastNonAllocCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::GetRaycastNonAllocCallback::*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit>*, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::GetRaycastNonAllocCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRaycastNonAllocCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ReflectionMethodsCache::GetRaycastNonAllocCallback::*)(System::IAsyncResult*)>(&ReflectionMethodsCache::GetRaycastNonAllocCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRaycastNonAllocCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback
#include "UnityEngine/UI/ReflectionMethodsCache_Raycast2DCallback.hpp"
// Including type: UnityEngine.RaycastHit2D
#include "UnityEngine/RaycastHit2D.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.Invoke
UnityEngine::RaycastHit2D UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::Invoke(UnityEngine::Vector2 p1, UnityEngine::Vector2 p2, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RaycastHit2D, false>(this, ___internal__method, p1, p2, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::BeginInvoke(UnityEngine::Vector2 p1, UnityEngine::Vector2 p2, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, p1, p2, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/Raycast2DCallback.EndInvoke
UnityEngine::RaycastHit2D UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::Raycast2DCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RaycastHit2D, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast2DCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::Raycast2DCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::Raycast2DCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast2DCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::Raycast2DCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::Raycast2DCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast2DCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast2DCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RaycastHit2D (ReflectionMethodsCache::Raycast2DCallback::*)(UnityEngine::Vector2, UnityEngine::Vector2, float, int)>(&ReflectionMethodsCache::Raycast2DCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast2DCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast2DCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::Raycast2DCallback::*)(UnityEngine::Vector2, UnityEngine::Vector2, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::Raycast2DCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast2DCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::Raycast2DCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::RaycastHit2D (ReflectionMethodsCache::Raycast2DCallback::*)(System::IAsyncResult*)>(&ReflectionMethodsCache::Raycast2DCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::Raycast2DCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.Invoke
::Array<UnityEngine::RaycastHit2D>* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke(UnityEngine::Ray r, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit2D>*, false>(this, ___internal__method, r, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke(UnityEngine::Ray r, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, r, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllCallback.EndInvoke
::Array<UnityEngine::RaycastHit2D>* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::RaycastHit2D>*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRayIntersectionAllCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRayIntersectionAllCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRayIntersectionAllCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRayIntersectionAllCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit2D>* (ReflectionMethodsCache::GetRayIntersectionAllCallback::*)(UnityEngine::Ray, float, int)>(&ReflectionMethodsCache::GetRayIntersectionAllCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::GetRayIntersectionAllCallback::*)(UnityEngine::Ray, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::GetRayIntersectionAllCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<UnityEngine::RaycastHit2D>* (ReflectionMethodsCache::GetRayIntersectionAllCallback::*)(System::IAsyncResult*)>(&ReflectionMethodsCache::GetRayIntersectionAllCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback
#include "UnityEngine/UI/ReflectionMethodsCache_GetRayIntersectionAllNonAllocCallback.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.Invoke
int UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke(UnityEngine::Ray r, ::Array<UnityEngine::RaycastHit2D>* results, float f, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, r, results, f, i);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.BeginInvoke
System::IAsyncResult* UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke(UnityEngine::Ray r, ::Array<UnityEngine::RaycastHit2D>* results, float f, int i, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(results), ::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, r, results, f, i, callback, object);
}
// Autogenerated method: UnityEngine.UI.ReflectionMethodsCache/GetRayIntersectionAllNonAllocCallback.EndInvoke
int UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::*)(::Il2CppObject*, System::IntPtr)>(&ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit2D>*, float, int)>(&ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit2D>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::*)(UnityEngine::Ray, ::Array<UnityEngine::RaycastHit2D>*, float, int, System::AsyncCallback*, ::Il2CppObject*)>(&ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray>(), ::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::RaycastHit2D>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::*)(System::IAsyncResult*)>(&ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReflectionMethodsCache::GetRayIntersectionAllNonAllocCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
UnityEngine::Vector4 UnityEngine::UI::VertexHelper::_get_s_DefaultTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::_get_s_DefaultTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("UnityEngine.UI", "VertexHelper", "s_DefaultTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
void UnityEngine::UI::VertexHelper::_set_s_DefaultTangent(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::_set_s_DefaultTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "VertexHelper", "s_DefaultTangent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
UnityEngine::Vector3 UnityEngine::UI::VertexHelper::_get_s_DefaultNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::_get_s_DefaultNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("UnityEngine.UI", "VertexHelper", "s_DefaultNormal"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
void UnityEngine::UI::VertexHelper::_set_s_DefaultNormal(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::_set_s_DefaultNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "VertexHelper", "s_DefaultNormal", value));
}
// Autogenerated method: UnityEngine.UI.VertexHelper.InitializeListIfRequired
void UnityEngine::UI::VertexHelper::InitializeListIfRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::InitializeListIfRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeListIfRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.Dispose
void UnityEngine::UI::VertexHelper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.Clear
void UnityEngine::UI::VertexHelper::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.get_currentVertCount
int UnityEngine::UI::VertexHelper::get_currentVertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::get_currentVertCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentVertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.get_currentIndexCount
int UnityEngine::UI::VertexHelper::get_currentIndexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::get_currentIndexCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentIndexCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.PopulateUIVertex
void UnityEngine::UI::VertexHelper::PopulateUIVertex(UnityEngine::UIVertex& vertex, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::PopulateUIVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopulateUIVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertex), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertex, i);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.SetUIVertex
void UnityEngine::UI::VertexHelper::SetUIVertex(UnityEngine::UIVertex vertex, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::SetUIVertex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUIVertex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertex), ::il2cpp_utils::ExtractType(i)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertex, i);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.FillMesh
void UnityEngine::UI::VertexHelper::FillMesh(UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::FillMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(UnityEngine::Vector3 position, UnityEngine::Color32 color, UnityEngine::Vector2 uv0, UnityEngine::Vector2 uv1, UnityEngine::Vector2 uv2, UnityEngine::Vector2 uv3, UnityEngine::Vector3 normal, UnityEngine::Vector4 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0), ::il2cpp_utils::ExtractType(uv1), ::il2cpp_utils::ExtractType(uv2), ::il2cpp_utils::ExtractType(uv3), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, color, uv0, uv1, uv2, uv3, normal, tangent);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(UnityEngine::Vector3 position, UnityEngine::Color32 color, UnityEngine::Vector2 uv0, UnityEngine::Vector2 uv1, UnityEngine::Vector3 normal, UnityEngine::Vector4 tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0), ::il2cpp_utils::ExtractType(uv1), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, color, uv0, uv1, normal, tangent);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(UnityEngine::Vector3 position, UnityEngine::Color32 color, UnityEngine::Vector2 uv0) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(uv0)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, position, color, uv0);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddVert
void UnityEngine::UI::VertexHelper::AddVert(UnityEngine::UIVertex v) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddVert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddVert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddTriangle
void UnityEngine::UI::VertexHelper::AddTriangle(int idx0, int idx1, int idx2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddTriangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTriangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx0), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(idx2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx0, idx1, idx2);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexQuad
void UnityEngine::UI::VertexHelper::AddUIVertexQuad(::Array<UnityEngine::UIVertex>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddUIVertexQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexStream
void UnityEngine::UI::VertexHelper::AddUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts, indices);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.AddUIVertexTriangleStream
void UnityEngine::UI::VertexHelper::AddUIVertexTriangleStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::AddUIVertexTriangleStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddUIVertexTriangleStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts);
}
// Autogenerated method: UnityEngine.UI.VertexHelper.GetUIVertexStream
void UnityEngine::UI::VertexHelper::GetUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::GetUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.UI.VertexHelper..cctor
void UnityEngine::UI::VertexHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::VertexHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.UI", "VertexHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: VertexHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Mesh*)>(&VertexHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Mesh*)>(&VertexHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::InitializeListIfRequired
// Il2CppName: InitializeListIfRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)()>(&VertexHelper::InitializeListIfRequired)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "InitializeListIfRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)()>(&VertexHelper::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)()>(&VertexHelper::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::get_currentVertCount
// Il2CppName: get_currentVertCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VertexHelper::*)()>(&VertexHelper::get_currentVertCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "get_currentVertCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::get_currentIndexCount
// Il2CppName: get_currentIndexCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (VertexHelper::*)()>(&VertexHelper::get_currentIndexCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "get_currentIndexCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::PopulateUIVertex
// Il2CppName: PopulateUIVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::UIVertex&, int)>(&VertexHelper::PopulateUIVertex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "PopulateUIVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UIVertex&>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::SetUIVertex
// Il2CppName: SetUIVertex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::UIVertex, int)>(&VertexHelper::SetUIVertex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "SetUIVertex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UIVertex>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::FillMesh
// Il2CppName: FillMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Mesh*)>(&VertexHelper::FillMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "FillMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddVert
// Il2CppName: AddVert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Vector3, UnityEngine::Color32, UnityEngine::Vector2, UnityEngine::Vector2, UnityEngine::Vector2, UnityEngine::Vector2, UnityEngine::Vector3, UnityEngine::Vector4)>(&VertexHelper::AddVert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddVert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddVert
// Il2CppName: AddVert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Vector3, UnityEngine::Color32, UnityEngine::Vector2, UnityEngine::Vector2, UnityEngine::Vector3, UnityEngine::Vector4)>(&VertexHelper::AddVert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddVert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddVert
// Il2CppName: AddVert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::Vector3, UnityEngine::Color32, UnityEngine::Vector2)>(&VertexHelper::AddVert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddVert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddVert
// Il2CppName: AddVert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(UnityEngine::UIVertex)>(&VertexHelper::AddVert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddVert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UIVertex>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddTriangle
// Il2CppName: AddTriangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(int, int, int)>(&VertexHelper::AddTriangle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddTriangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddUIVertexQuad
// Il2CppName: AddUIVertexQuad
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(::Array<UnityEngine::UIVertex>*)>(&VertexHelper::AddUIVertexQuad)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddUIVertexQuad", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddUIVertexStream
// Il2CppName: AddUIVertexStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, System::Collections::Generic::List_1<int>*)>(&VertexHelper::AddUIVertexStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddUIVertexStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::AddUIVertexTriangleStream
// Il2CppName: AddUIVertexTriangleStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&VertexHelper::AddUIVertexTriangleStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "AddUIVertexTriangleStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::GetUIVertexStream
// Il2CppName: GetUIVertexStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&VertexHelper::GetUIVertexStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), "GetUIVertexStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: VertexHelper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&VertexHelper::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: VertexHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)()>(&VertexHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (VertexHelper::*)()>(&VertexHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(VertexHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.BaseVertexEffect
#include "UnityEngine/UI/BaseVertexEffect.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.BaseVertexEffect.ModifyVertices
void UnityEngine::UI::BaseVertexEffect::ModifyVertices(System::Collections::Generic::List_1<UnityEngine::UIVertex>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseVertexEffect::ModifyVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Writing MetadataGetter for method: BaseVertexEffect::ModifyVertices
// Il2CppName: ModifyVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseVertexEffect::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&BaseVertexEffect::ModifyVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseVertexEffect*), "ModifyVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Writing MetadataGetter for method: BaseVertexEffect::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseVertexEffect::*)()>(&BaseVertexEffect::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseVertexEffect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseVertexEffect::*)()>(&BaseVertexEffect::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseVertexEffect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.BaseMeshEffect
#include "UnityEngine/UI/BaseMeshEffect.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.get_graphic
UnityEngine::UI::Graphic* UnityEngine::UI::BaseMeshEffect::get_graphic() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::get_graphic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Graphic*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.ModifyMesh
void UnityEngine::UI::BaseMeshEffect::ModifyMesh(UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.ModifyMesh
void UnityEngine::UI::BaseMeshEffect::ModifyMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnEnable
void UnityEngine::UI::BaseMeshEffect::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnDisable
void UnityEngine::UI::BaseMeshEffect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.BaseMeshEffect.OnDidApplyAnimationProperties
void UnityEngine::UI::BaseMeshEffect::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::BaseMeshEffect::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BaseMeshEffect::get_graphic
// Il2CppName: get_graphic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Graphic* (BaseMeshEffect::*)()>(&BaseMeshEffect::get_graphic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "get_graphic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)(UnityEngine::Mesh*)>(&BaseMeshEffect::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)(UnityEngine::UI::VertexHelper*)>(&BaseMeshEffect::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)()>(&BaseMeshEffect::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)()>(&BaseMeshEffect::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)()>(&BaseMeshEffect::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseMeshEffect::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)()>(&BaseMeshEffect::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMeshEffect::*)()>(&BaseMeshEffect::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMeshEffect*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IVertexModifier
#include "UnityEngine/UI/IVertexModifier.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IVertexModifier.ModifyVertices
void UnityEngine::UI::IVertexModifier::ModifyVertices(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IVertexModifier::ModifyVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts);
}
// Writing MetadataGetter for method: IVertexModifier::ModifyVertices
// Il2CppName: ModifyVertices
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IVertexModifier::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*)>(&IVertexModifier::ModifyVertices)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IVertexModifier*), "ModifyVertices", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.IMeshModifier
#include "UnityEngine/UI/IMeshModifier.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.IMeshModifier.ModifyMesh
void UnityEngine::UI::IMeshModifier::ModifyMesh(UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMeshModifier::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.UI.IMeshModifier.ModifyMesh
void UnityEngine::UI::IMeshModifier::ModifyMesh(UnityEngine::UI::VertexHelper* verts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::IMeshModifier::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts);
}
// Writing MetadataGetter for method: IMeshModifier::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMeshModifier::*)(UnityEngine::Mesh*)>(&IMeshModifier::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMeshModifier*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: IMeshModifier::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMeshModifier::*)(UnityEngine::UI::VertexHelper*)>(&IMeshModifier::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMeshModifier*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Outline
#include "UnityEngine/UI/Outline.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.Outline.ModifyMesh
void UnityEngine::UI::Outline::ModifyMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Outline::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Writing MetadataGetter for method: Outline::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Outline::*)()>(&Outline::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Outline*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Outline::*)()>(&Outline::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Outline*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Outline::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Outline::*)(UnityEngine::UI::VertexHelper*)>(&Outline::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Outline*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.PositionAsUV1
#include "UnityEngine/UI/PositionAsUV1.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.PositionAsUV1.ModifyMesh
void UnityEngine::UI::PositionAsUV1::ModifyMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::PositionAsUV1::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Writing MetadataGetter for method: PositionAsUV1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionAsUV1::*)()>(&PositionAsUV1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PositionAsUV1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionAsUV1::*)()>(&PositionAsUV1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PositionAsUV1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PositionAsUV1::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PositionAsUV1::*)(UnityEngine::UI::VertexHelper*)>(&PositionAsUV1::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PositionAsUV1*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.Shadow
#include "UnityEngine/UI/Shadow.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.VertexHelper
#include "UnityEngine/UI/VertexHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxEffectDistance
float UnityEngine::UI::Shadow::_get_kMaxEffectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::_get_kMaxEffectDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.UI", "Shadow", "kMaxEffectDistance"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxEffectDistance
void UnityEngine::UI::Shadow::_set_kMaxEffectDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::_set_kMaxEffectDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI", "Shadow", "kMaxEffectDistance", value));
}
// Autogenerated method: UnityEngine.UI.Shadow.get_effectColor
UnityEngine::Color UnityEngine::UI::Shadow::get_effectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::get_effectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_effectColor
void UnityEngine::UI::Shadow::set_effectColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::set_effectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_effectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.get_effectDistance
UnityEngine::Vector2 UnityEngine::UI::Shadow::get_effectDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::get_effectDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_effectDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_effectDistance
void UnityEngine::UI::Shadow::set_effectDistance(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::set_effectDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_effectDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.get_useGraphicAlpha
bool UnityEngine::UI::Shadow::get_useGraphicAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::get_useGraphicAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGraphicAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.Shadow.set_useGraphicAlpha
void UnityEngine::UI::Shadow::set_useGraphicAlpha(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::set_useGraphicAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGraphicAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.Shadow.ApplyShadowZeroAlloc
void UnityEngine::UI::Shadow::ApplyShadowZeroAlloc(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, UnityEngine::Color32 color, int start, int end, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::ApplyShadowZeroAlloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyShadowZeroAlloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts, color, start, end, x, y);
}
// Autogenerated method: UnityEngine.UI.Shadow.ApplyShadow
void UnityEngine::UI::Shadow::ApplyShadow(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, UnityEngine::Color32 color, int start, int end, float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::ApplyShadow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyShadow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, verts, color, start, end, x, y);
}
// Autogenerated method: UnityEngine.UI.Shadow.ModifyMesh
void UnityEngine::UI::Shadow::ModifyMesh(UnityEngine::UI::VertexHelper* vh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::Shadow::ModifyMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModifyMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vh);
}
// Writing MetadataGetter for method: Shadow::get_effectColor
// Il2CppName: get_effectColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (Shadow::*)()>(&Shadow::get_effectColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "get_effectColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shadow::set_effectColor
// Il2CppName: set_effectColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(UnityEngine::Color)>(&Shadow::set_effectColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "set_effectColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: Shadow::get_effectDistance
// Il2CppName: get_effectDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Shadow::*)()>(&Shadow::get_effectDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "get_effectDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shadow::set_effectDistance
// Il2CppName: set_effectDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(UnityEngine::Vector2)>(&Shadow::set_effectDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "set_effectDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: Shadow::get_useGraphicAlpha
// Il2CppName: get_useGraphicAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Shadow::*)()>(&Shadow::get_useGraphicAlpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "get_useGraphicAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shadow::set_useGraphicAlpha
// Il2CppName: set_useGraphicAlpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(bool)>(&Shadow::set_useGraphicAlpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "set_useGraphicAlpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Shadow::ApplyShadowZeroAlloc
// Il2CppName: ApplyShadowZeroAlloc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, UnityEngine::Color32, int, int, float, float)>(&Shadow::ApplyShadowZeroAlloc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "ApplyShadowZeroAlloc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Shadow::ApplyShadow
// Il2CppName: ApplyShadow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, UnityEngine::Color32, int, int, float, float)>(&Shadow::ApplyShadow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "ApplyShadow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color32>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Shadow::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)()>(&Shadow::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)()>(&Shadow::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Shadow::ModifyMesh
// Il2CppName: ModifyMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Shadow::*)(UnityEngine::UI::VertexHelper*)>(&Shadow::ModifyMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Shadow*), "ModifyMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::VertexHelper*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.ITweenValue
#include "UnityEngine/UI/CoroutineTween/ITweenValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.CoroutineTween.ITweenValue.TweenValue
void UnityEngine::UI::CoroutineTween::ITweenValue::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ITweenValue::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, floatPercentage);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ITweenValue.get_ignoreTimeScale
bool UnityEngine::UI::CoroutineTween::ITweenValue::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ITweenValue::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ITweenValue.get_duration
float UnityEngine::UI::CoroutineTween::ITweenValue::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ITweenValue::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ITweenValue.ValidTarget
bool UnityEngine::UI::CoroutineTween::ITweenValue::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ITweenValue::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ITweenValue::TweenValue
// Il2CppName: TweenValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ITweenValue::*)(float)>(&ITweenValue::TweenValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITweenValue*), "TweenValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ITweenValue::get_ignoreTimeScale
// Il2CppName: get_ignoreTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ITweenValue::*)()>(&ITweenValue::get_ignoreTimeScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITweenValue*), "get_ignoreTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ITweenValue::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ITweenValue::*)()>(&ITweenValue::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITweenValue*), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ITweenValue::ValidTarget
// Il2CppName: ValidTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ITweenValue::*)()>(&ITweenValue::ValidTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ITweenValue*), "ValidTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.ColorTween
#include "UnityEngine/UI/CoroutineTween/ColorTween.hpp"
// Including type: UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenCallback
#include "UnityEngine/UI/CoroutineTween/ColorTween_ColorTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.get_startColor
UnityEngine::Color UnityEngine::UI::CoroutineTween::ColorTween::get_startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::get_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.set_startColor
void UnityEngine::UI::CoroutineTween::ColorTween::set_startColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::set_startColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.get_targetColor
UnityEngine::Color UnityEngine::UI::CoroutineTween::ColorTween::get_targetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::get_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.set_targetColor
void UnityEngine::UI::CoroutineTween::ColorTween::set_targetColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::set_targetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.get_tweenMode
UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode UnityEngine::UI::CoroutineTween::ColorTween::get_tweenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::get_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.set_tweenMode
void UnityEngine::UI::CoroutineTween::ColorTween::set_tweenMode(UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::set_tweenMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tweenMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.get_duration
float UnityEngine::UI::CoroutineTween::ColorTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.set_duration
void UnityEngine::UI::CoroutineTween::ColorTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.get_ignoreTimeScale
bool UnityEngine::UI::CoroutineTween::ColorTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.set_ignoreTimeScale
void UnityEngine::UI::CoroutineTween::ColorTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.TweenValue
void UnityEngine::UI::CoroutineTween::ColorTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, floatPercentage);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.AddOnChangedCallback
void UnityEngine::UI::CoroutineTween::ColorTween::AddOnChangedCallback(UnityEngine::Events::UnityAction_1<UnityEngine::Color>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.GetIgnoreTimescale
bool UnityEngine::UI::CoroutineTween::ColorTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.GetDuration
float UnityEngine::UI::CoroutineTween::ColorTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.ColorTween.ValidTarget
bool UnityEngine::UI::CoroutineTween::ColorTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: ColorTween::get_startColor
// Il2CppName: get_startColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorTween::*)()>(&ColorTween::get_startColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "get_startColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::set_startColor
// Il2CppName: set_startColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color)>(&ColorTween::set_startColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "set_startColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorTween::get_targetColor
// Il2CppName: get_targetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorTween::*)()>(&ColorTween::get_targetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "get_targetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::set_targetColor
// Il2CppName: set_targetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color)>(&ColorTween::set_targetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "set_targetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: ColorTween::get_tweenMode
// Il2CppName: get_tweenMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode (ColorTween::*)()>(&ColorTween::get_tweenMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "get_tweenMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::set_tweenMode
// Il2CppName: set_tweenMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode)>(&ColorTween::set_tweenMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "set_tweenMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode>()});
  }
};
// Writing MetadataGetter for method: ColorTween::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ColorTween::*)()>(&ColorTween::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(float)>(&ColorTween::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorTween::get_ignoreTimeScale
// Il2CppName: get_ignoreTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ColorTween::*)()>(&ColorTween::get_ignoreTimeScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "get_ignoreTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::set_ignoreTimeScale
// Il2CppName: set_ignoreTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(bool)>(&ColorTween::set_ignoreTimeScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "set_ignoreTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ColorTween::TweenValue
// Il2CppName: TweenValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(float)>(&ColorTween::TweenValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "TweenValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorTween::AddOnChangedCallback
// Il2CppName: AddOnChangedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Events::UnityAction_1<UnityEngine::Color>*)>(&ColorTween::AddOnChangedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "AddOnChangedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<UnityEngine::Color>*>()});
  }
};
// Writing MetadataGetter for method: ColorTween::GetIgnoreTimescale
// Il2CppName: GetIgnoreTimescale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ColorTween::*)()>(&ColorTween::GetIgnoreTimescale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "GetIgnoreTimescale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::GetDuration
// Il2CppName: GetDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (ColorTween::*)()>(&ColorTween::GetDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "GetDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::ValidTarget
// Il2CppName: ValidTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ColorTween::*)()>(&ColorTween::ValidTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween), "ValidTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode
#include "UnityEngine/UI/CoroutineTween/ColorTween.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode All
UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode>("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode All
void UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_All(UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode RGB
UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_RGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_RGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode>("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "RGB"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode RGB
void UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_RGB(UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_RGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "RGB", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode Alpha
UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_Alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_get_Alpha");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode>("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "Alpha"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenMode Alpha
void UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_Alpha(UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::ColorTween::ColorTweenMode::_set_Alpha");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.UI.CoroutineTween", "ColorTween/ColorTweenMode", "Alpha", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.ColorTween/ColorTweenCallback
#include "UnityEngine/UI/CoroutineTween/ColorTween_ColorTweenCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ColorTween::ColorTweenCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::ColorTweenCallback::*)()>(&ColorTween::ColorTweenCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween::ColorTweenCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::ColorTweenCallback::*)()>(&ColorTween::ColorTweenCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween::ColorTweenCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.FloatTween
#include "UnityEngine/UI/CoroutineTween/FloatTween.hpp"
// Including type: UnityEngine.UI.CoroutineTween.FloatTween/FloatTweenCallback
#include "UnityEngine/UI/CoroutineTween/FloatTween_FloatTweenCallback.hpp"
// Including type: UnityEngine.Events.UnityAction`1
#include "UnityEngine/Events/UnityAction_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.get_startValue
float UnityEngine::UI::CoroutineTween::FloatTween::get_startValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::get_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.set_startValue
void UnityEngine::UI::CoroutineTween::FloatTween::set_startValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::set_startValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_startValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.get_targetValue
float UnityEngine::UI::CoroutineTween::FloatTween::get_targetValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::get_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.set_targetValue
void UnityEngine::UI::CoroutineTween::FloatTween::set_targetValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::set_targetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.get_duration
float UnityEngine::UI::CoroutineTween::FloatTween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.set_duration
void UnityEngine::UI::CoroutineTween::FloatTween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.get_ignoreTimeScale
bool UnityEngine::UI::CoroutineTween::FloatTween::get_ignoreTimeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::get_ignoreTimeScale");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.set_ignoreTimeScale
void UnityEngine::UI::CoroutineTween::FloatTween::set_ignoreTimeScale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::set_ignoreTimeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ignoreTimeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.TweenValue
void UnityEngine::UI::CoroutineTween::FloatTween::TweenValue(float floatPercentage) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::TweenValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "TweenValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatPercentage)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, floatPercentage);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.AddOnChangedCallback
void UnityEngine::UI::CoroutineTween::FloatTween::AddOnChangedCallback(UnityEngine::Events::UnityAction_1<float>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::AddOnChangedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "AddOnChangedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, callback);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.GetIgnoreTimescale
bool UnityEngine::UI::CoroutineTween::FloatTween::GetIgnoreTimescale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::GetIgnoreTimescale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIgnoreTimescale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.GetDuration
float UnityEngine::UI::CoroutineTween::FloatTween::GetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::GetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.UI.CoroutineTween.FloatTween.ValidTarget
bool UnityEngine::UI::CoroutineTween::FloatTween::ValidTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::UI::CoroutineTween::FloatTween::ValidTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ValidTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: FloatTween::get_startValue
// Il2CppName: get_startValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FloatTween::*)()>(&FloatTween::get_startValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "get_startValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::set_startValue
// Il2CppName: set_startValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float)>(&FloatTween::set_startValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "set_startValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::get_targetValue
// Il2CppName: get_targetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FloatTween::*)()>(&FloatTween::get_targetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "get_targetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::set_targetValue
// Il2CppName: set_targetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float)>(&FloatTween::set_targetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "set_targetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FloatTween::*)()>(&FloatTween::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float)>(&FloatTween::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::get_ignoreTimeScale
// Il2CppName: get_ignoreTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FloatTween::*)()>(&FloatTween::get_ignoreTimeScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "get_ignoreTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::set_ignoreTimeScale
// Il2CppName: set_ignoreTimeScale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(bool)>(&FloatTween::set_ignoreTimeScale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "set_ignoreTimeScale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: FloatTween::TweenValue
// Il2CppName: TweenValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float)>(&FloatTween::TweenValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "TweenValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::AddOnChangedCallback
// Il2CppName: AddOnChangedCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(UnityEngine::Events::UnityAction_1<float>*)>(&FloatTween::AddOnChangedCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "AddOnChangedCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Events::UnityAction_1<float>*>()});
  }
};
// Writing MetadataGetter for method: FloatTween::GetIgnoreTimescale
// Il2CppName: GetIgnoreTimescale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FloatTween::*)()>(&FloatTween::GetIgnoreTimescale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "GetIgnoreTimescale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::GetDuration
// Il2CppName: GetDuration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FloatTween::*)()>(&FloatTween::GetDuration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "GetDuration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::ValidTarget
// Il2CppName: ValidTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FloatTween::*)()>(&FloatTween::ValidTarget)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween), "ValidTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UI.CoroutineTween.FloatTween/FloatTweenCallback
#include "UnityEngine/UI/CoroutineTween/FloatTween_FloatTweenCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: FloatTween::FloatTweenCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::FloatTweenCallback::*)()>(&FloatTween::FloatTweenCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween::FloatTweenCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::FloatTweenCallback::*)()>(&FloatTween::FloatTweenCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween::FloatTweenCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.AxisEventData.get_moveVector
UnityEngine::Vector2 UnityEngine::EventSystems::AxisEventData::get_moveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AxisEventData::get_moveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.AxisEventData.set_moveVector
void UnityEngine::EventSystems::AxisEventData::set_moveVector(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AxisEventData::set_moveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.AxisEventData.get_moveDir
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::AxisEventData::get_moveDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AxisEventData::get_moveDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_moveDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::MoveDirection, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.AxisEventData.set_moveDir
void UnityEngine::EventSystems::AxisEventData::set_moveDir(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AxisEventData::set_moveDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_moveDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: AxisEventData::get_moveVector
// Il2CppName: get_moveVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (AxisEventData::*)()>(&AxisEventData::get_moveVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), "get_moveVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AxisEventData::set_moveVector
// Il2CppName: set_moveVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AxisEventData::*)(UnityEngine::Vector2)>(&AxisEventData::set_moveVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), "set_moveVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: AxisEventData::get_moveDir
// Il2CppName: get_moveDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::MoveDirection (AxisEventData::*)()>(&AxisEventData::get_moveDir)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), "get_moveDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AxisEventData::set_moveDir
// Il2CppName: set_moveDir
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AxisEventData::*)(UnityEngine::EventSystems::MoveDirection)>(&AxisEventData::set_moveDir)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), "set_moveDir", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::MoveDirection>()});
  }
};
// Writing MetadataGetter for method: AxisEventData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AxisEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&AxisEventData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AxisEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&AxisEventData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AxisEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.AbstractEventData
#include "UnityEngine/EventSystems/AbstractEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.AbstractEventData.Reset
void UnityEngine::EventSystems::AbstractEventData::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AbstractEventData::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.AbstractEventData.Use
void UnityEngine::EventSystems::AbstractEventData::Use() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AbstractEventData::Use");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Use", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.AbstractEventData.get_used
bool UnityEngine::EventSystems::AbstractEventData::get_used() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::AbstractEventData::get_used");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_used", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AbstractEventData::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbstractEventData::*)()>(&AbstractEventData::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbstractEventData*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AbstractEventData::Use
// Il2CppName: Use
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbstractEventData::*)()>(&AbstractEventData::Use)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbstractEventData*), "Use", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AbstractEventData::get_used
// Il2CppName: get_used
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AbstractEventData::*)()>(&AbstractEventData::get_used)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbstractEventData*), "get_used", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AbstractEventData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbstractEventData::*)()>(&AbstractEventData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbstractEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AbstractEventData::*)()>(&AbstractEventData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AbstractEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.BaseEventData.get_currentInputModule
UnityEngine::EventSystems::BaseInputModule* UnityEngine::EventSystems::BaseEventData::get_currentInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseEventData::get_currentInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInputModule*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseEventData.get_selectedObject
UnityEngine::GameObject* UnityEngine::EventSystems::BaseEventData::get_selectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseEventData::get_selectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseEventData.set_selectedObject
void UnityEngine::EventSystems::BaseEventData::set_selectedObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseEventData::set_selectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: BaseEventData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&BaseEventData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&BaseEventData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
// Writing MetadataGetter for method: BaseEventData::get_currentInputModule
// Il2CppName: get_currentInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInputModule* (BaseEventData::*)()>(&BaseEventData::get_currentInputModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseEventData*), "get_currentInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseEventData::get_selectedObject
// Il2CppName: get_selectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (BaseEventData::*)()>(&BaseEventData::get_selectedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseEventData*), "get_selectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseEventData::set_selectedObject
// Il2CppName: set_selectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseEventData::*)(UnityEngine::GameObject*)>(&BaseEventData::set_selectedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseEventData*), "set_selectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerEnter
UnityEngine::GameObject* UnityEngine::EventSystems::PointerEventData::get_pointerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerEnter
void UnityEngine::EventSystems::PointerEventData::set_pointerEnter(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_lastPress
UnityEngine::GameObject* UnityEngine::EventSystems::PointerEventData::get_lastPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_lastPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_lastPress
void UnityEngine::EventSystems::PointerEventData::set_lastPress(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_lastPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_rawPointerPress
UnityEngine::GameObject* UnityEngine::EventSystems::PointerEventData::get_rawPointerPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_rawPointerPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawPointerPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_rawPointerPress
void UnityEngine::EventSystems::PointerEventData::set_rawPointerPress(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_rawPointerPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rawPointerPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerDrag
UnityEngine::GameObject* UnityEngine::EventSystems::PointerEventData::get_pointerDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerDrag
void UnityEngine::EventSystems::PointerEventData::set_pointerDrag(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerCurrentRaycast
UnityEngine::EventSystems::RaycastResult UnityEngine::EventSystems::PointerEventData::get_pointerCurrentRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerCurrentRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerCurrentRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerCurrentRaycast
void UnityEngine::EventSystems::PointerEventData::set_pointerCurrentRaycast(UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerCurrentRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerCurrentRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerPressRaycast
UnityEngine::EventSystems::RaycastResult UnityEngine::EventSystems::PointerEventData::get_pointerPressRaycast() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerPressRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerPressRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::RaycastResult, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerPressRaycast
void UnityEngine::EventSystems::PointerEventData::set_pointerPressRaycast(UnityEngine::EventSystems::RaycastResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerPressRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerPressRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_eligibleForClick
bool UnityEngine::EventSystems::PointerEventData::get_eligibleForClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_eligibleForClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eligibleForClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_eligibleForClick
void UnityEngine::EventSystems::PointerEventData::set_eligibleForClick(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_eligibleForClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eligibleForClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerId
int UnityEngine::EventSystems::PointerEventData::get_pointerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerId
void UnityEngine::EventSystems::PointerEventData::set_pointerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_position
UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventData::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_position
void UnityEngine::EventSystems::PointerEventData::set_position(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_delta
UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventData::get_delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_delta
void UnityEngine::EventSystems::PointerEventData::set_delta(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_delta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pressPosition
UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventData::get_pressPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pressPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pressPosition
void UnityEngine::EventSystems::PointerEventData::set_pressPosition(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pressPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pressPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_worldPosition
UnityEngine::Vector3 UnityEngine::EventSystems::PointerEventData::get_worldPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_worldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_worldPosition
void UnityEngine::EventSystems::PointerEventData::set_worldPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_worldPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_worldNormal
UnityEngine::Vector3 UnityEngine::EventSystems::PointerEventData::get_worldNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_worldNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_worldNormal
void UnityEngine::EventSystems::PointerEventData::set_worldNormal(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_worldNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_worldNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_clickTime
float UnityEngine::EventSystems::PointerEventData::get_clickTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_clickTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clickTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_clickTime
void UnityEngine::EventSystems::PointerEventData::set_clickTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_clickTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clickTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_clickCount
int UnityEngine::EventSystems::PointerEventData::get_clickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_clickCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clickCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_clickCount
void UnityEngine::EventSystems::PointerEventData::set_clickCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_clickCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clickCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_scrollDelta
UnityEngine::Vector2 UnityEngine::EventSystems::PointerEventData::get_scrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_scrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_scrollDelta
void UnityEngine::EventSystems::PointerEventData::set_scrollDelta(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_scrollDelta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_useDragThreshold
bool UnityEngine::EventSystems::PointerEventData::get_useDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_useDragThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDragThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_useDragThreshold
void UnityEngine::EventSystems::PointerEventData::set_useDragThreshold(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_useDragThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useDragThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_dragging
bool UnityEngine::EventSystems::PointerEventData::get_dragging() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_dragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_dragging
void UnityEngine::EventSystems::PointerEventData::set_dragging(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_dragging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_dragging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_button
UnityEngine::EventSystems::PointerEventData::InputButton UnityEngine::EventSystems::PointerEventData::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData::InputButton, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_button
void UnityEngine::EventSystems::PointerEventData::set_button(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.IsPointerMoving
bool UnityEngine::EventSystems::PointerEventData::IsPointerMoving() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::IsPointerMoving");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerMoving", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.IsScrolling
bool UnityEngine::EventSystems::PointerEventData::IsScrolling() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::IsScrolling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsScrolling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_enterEventCamera
UnityEngine::Camera* UnityEngine::EventSystems::PointerEventData::get_enterEventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_enterEventCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enterEventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pressEventCamera
UnityEngine::Camera* UnityEngine::EventSystems::PointerEventData::get_pressEventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pressEventCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressEventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.get_pointerPress
UnityEngine::GameObject* UnityEngine::EventSystems::PointerEventData::get_pointerPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::get_pointerPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.set_pointerPress
void UnityEngine::EventSystems::PointerEventData::set_pointerPress(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::set_pointerPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerEventData.ToString
::Il2CppString* UnityEngine::EventSystems::PointerEventData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PointerEventData::get_pointerEnter
// Il2CppName: get_pointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (PointerEventData::*)()>(&PointerEventData::get_pointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerEnter
// Il2CppName: set_pointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::GameObject*)>(&PointerEventData::set_pointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_lastPress
// Il2CppName: get_lastPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (PointerEventData::*)()>(&PointerEventData::get_lastPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_lastPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_lastPress
// Il2CppName: set_lastPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::GameObject*)>(&PointerEventData::set_lastPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_lastPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_rawPointerPress
// Il2CppName: get_rawPointerPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (PointerEventData::*)()>(&PointerEventData::get_rawPointerPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_rawPointerPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_rawPointerPress
// Il2CppName: set_rawPointerPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::GameObject*)>(&PointerEventData::set_rawPointerPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_rawPointerPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pointerDrag
// Il2CppName: get_pointerDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (PointerEventData::*)()>(&PointerEventData::get_pointerDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerDrag
// Il2CppName: set_pointerDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::GameObject*)>(&PointerEventData::set_pointerDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pointerCurrentRaycast
// Il2CppName: get_pointerCurrentRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::RaycastResult (PointerEventData::*)()>(&PointerEventData::get_pointerCurrentRaycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerCurrentRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerCurrentRaycast
// Il2CppName: set_pointerCurrentRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::EventSystems::RaycastResult)>(&PointerEventData::set_pointerCurrentRaycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerCurrentRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::RaycastResult>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pointerPressRaycast
// Il2CppName: get_pointerPressRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::RaycastResult (PointerEventData::*)()>(&PointerEventData::get_pointerPressRaycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerPressRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerPressRaycast
// Il2CppName: set_pointerPressRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::EventSystems::RaycastResult)>(&PointerEventData::set_pointerPressRaycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerPressRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::RaycastResult>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_eligibleForClick
// Il2CppName: get_eligibleForClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerEventData::*)()>(&PointerEventData::get_eligibleForClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_eligibleForClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_eligibleForClick
// Il2CppName: set_eligibleForClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(bool)>(&PointerEventData::set_eligibleForClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_eligibleForClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pointerId
// Il2CppName: get_pointerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PointerEventData::*)()>(&PointerEventData::get_pointerId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerId
// Il2CppName: set_pointerId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(int)>(&PointerEventData::set_pointerId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_position
// Il2CppName: get_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (PointerEventData::*)()>(&PointerEventData::get_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_position
// Il2CppName: set_position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector2)>(&PointerEventData::set_position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_delta
// Il2CppName: get_delta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (PointerEventData::*)()>(&PointerEventData::get_delta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_delta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_delta
// Il2CppName: set_delta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector2)>(&PointerEventData::set_delta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_delta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pressPosition
// Il2CppName: get_pressPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (PointerEventData::*)()>(&PointerEventData::get_pressPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pressPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pressPosition
// Il2CppName: set_pressPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector2)>(&PointerEventData::set_pressPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pressPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_worldPosition
// Il2CppName: get_worldPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (PointerEventData::*)()>(&PointerEventData::get_worldPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_worldPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_worldPosition
// Il2CppName: set_worldPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector3)>(&PointerEventData::set_worldPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_worldPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_worldNormal
// Il2CppName: get_worldNormal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (PointerEventData::*)()>(&PointerEventData::get_worldNormal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_worldNormal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_worldNormal
// Il2CppName: set_worldNormal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector3)>(&PointerEventData::set_worldNormal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_worldNormal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_clickTime
// Il2CppName: get_clickTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (PointerEventData::*)()>(&PointerEventData::get_clickTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_clickTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_clickTime
// Il2CppName: set_clickTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(float)>(&PointerEventData::set_clickTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_clickTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_clickCount
// Il2CppName: get_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PointerEventData::*)()>(&PointerEventData::get_clickCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_clickCount
// Il2CppName: set_clickCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(int)>(&PointerEventData::set_clickCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_clickCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_scrollDelta
// Il2CppName: get_scrollDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (PointerEventData::*)()>(&PointerEventData::get_scrollDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_scrollDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_scrollDelta
// Il2CppName: set_scrollDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::Vector2)>(&PointerEventData::set_scrollDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_scrollDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_useDragThreshold
// Il2CppName: get_useDragThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerEventData::*)()>(&PointerEventData::get_useDragThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_useDragThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_useDragThreshold
// Il2CppName: set_useDragThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(bool)>(&PointerEventData::set_useDragThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_useDragThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_dragging
// Il2CppName: get_dragging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerEventData::*)()>(&PointerEventData::get_dragging)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_dragging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_dragging
// Il2CppName: set_dragging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(bool)>(&PointerEventData::set_dragging)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_dragging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_button
// Il2CppName: get_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerEventData::InputButton (PointerEventData::*)()>(&PointerEventData::get_button)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_button
// Il2CppName: set_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::EventSystems::PointerEventData::InputButton)>(&PointerEventData::set_button)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData::InputButton>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::IsPointerMoving
// Il2CppName: IsPointerMoving
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerEventData::*)()>(&PointerEventData::IsPointerMoving)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "IsPointerMoving", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::IsScrolling
// Il2CppName: IsScrolling
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerEventData::*)()>(&PointerEventData::IsScrolling)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "IsScrolling", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_enterEventCamera
// Il2CppName: get_enterEventCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (PointerEventData::*)()>(&PointerEventData::get_enterEventCamera)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_enterEventCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pressEventCamera
// Il2CppName: get_pressEventCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (PointerEventData::*)()>(&PointerEventData::get_pressEventCamera)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pressEventCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::get_pointerPress
// Il2CppName: get_pointerPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (PointerEventData::*)()>(&PointerEventData::get_pointerPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "get_pointerPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerEventData::set_pointerPress
// Il2CppName: set_pointerPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::GameObject*)>(&PointerEventData::set_pointerPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "set_pointerPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&PointerEventData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerEventData::*)(UnityEngine::EventSystems::EventSystem*)>(&PointerEventData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
// Writing MetadataGetter for method: PointerEventData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PointerEventData::*)()>(&PointerEventData::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerEventData*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventData/InputButton
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Left
UnityEngine::EventSystems::PointerEventData::InputButton UnityEngine::EventSystems::PointerEventData::InputButton::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::InputButton>("UnityEngine.EventSystems", "PointerEventData/InputButton", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Left
void UnityEngine::EventSystems::PointerEventData::InputButton::_set_Left(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/InputButton", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Right
UnityEngine::EventSystems::PointerEventData::InputButton UnityEngine::EventSystems::PointerEventData::InputButton::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::InputButton>("UnityEngine.EventSystems", "PointerEventData/InputButton", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Right
void UnityEngine::EventSystems::PointerEventData::InputButton::_set_Right(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/InputButton", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Middle
UnityEngine::EventSystems::PointerEventData::InputButton UnityEngine::EventSystems::PointerEventData::InputButton::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::InputButton>("UnityEngine.EventSystems", "PointerEventData/InputButton", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/InputButton Middle
void UnityEngine::EventSystems::PointerEventData::InputButton::_set_Middle(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::InputButton::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/InputButton", "Middle", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState Pressed
UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::PointerEventData::FramePressState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::FramePressState>("UnityEngine.EventSystems", "PointerEventData/FramePressState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState Pressed
void UnityEngine::EventSystems::PointerEventData::FramePressState::_set_Pressed(UnityEngine::EventSystems::PointerEventData::FramePressState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/FramePressState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState Released
UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::PointerEventData::FramePressState::_get_Released() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_get_Released");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::FramePressState>("UnityEngine.EventSystems", "PointerEventData/FramePressState", "Released"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState Released
void UnityEngine::EventSystems::PointerEventData::FramePressState::_set_Released(UnityEngine::EventSystems::PointerEventData::FramePressState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_set_Released");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/FramePressState", "Released", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState PressedAndReleased
UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::PointerEventData::FramePressState::_get_PressedAndReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_get_PressedAndReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::FramePressState>("UnityEngine.EventSystems", "PointerEventData/FramePressState", "PressedAndReleased"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState PressedAndReleased
void UnityEngine::EventSystems::PointerEventData::FramePressState::_set_PressedAndReleased(UnityEngine::EventSystems::PointerEventData::FramePressState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_set_PressedAndReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/FramePressState", "PressedAndReleased", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState NotChanged
UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::PointerEventData::FramePressState::_get_NotChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_get_NotChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PointerEventData::FramePressState>("UnityEngine.EventSystems", "PointerEventData/FramePressState", "NotChanged"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PointerEventData/FramePressState NotChanged
void UnityEngine::EventSystems::PointerEventData::FramePressState::_set_NotChanged(UnityEngine::EventSystems::PointerEventData::FramePressState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerEventData::FramePressState::_set_NotChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerEventData/FramePressState", "NotChanged", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.EventHandle
#include "UnityEngine/EventSystems/EventHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventHandle Unused
UnityEngine::EventSystems::EventHandle UnityEngine::EventSystems::EventHandle::_get_Unused() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventHandle::_get_Unused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventHandle>("UnityEngine.EventSystems", "EventHandle", "Unused"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventHandle Unused
void UnityEngine::EventSystems::EventHandle::_set_Unused(UnityEngine::EventSystems::EventHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventHandle::_set_Unused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventHandle", "Unused", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventHandle Used
UnityEngine::EventSystems::EventHandle UnityEngine::EventSystems::EventHandle::_get_Used() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventHandle::_get_Used");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventHandle>("UnityEngine.EventSystems", "EventHandle", "Used"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventHandle Used
void UnityEngine::EventSystems::EventHandle::_set_Used(UnityEngine::EventSystems::EventHandle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventHandle::_set_Used");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventHandle", "Used", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IPointerEnterHandler
#include "UnityEngine/EventSystems/IPointerEnterHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IPointerEnterHandler.OnPointerEnter
void UnityEngine::EventSystems::IPointerEnterHandler::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IPointerEnterHandler::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IPointerEnterHandler::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPointerEnterHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IPointerEnterHandler::OnPointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPointerEnterHandler*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IPointerExitHandler
#include "UnityEngine/EventSystems/IPointerExitHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IPointerExitHandler.OnPointerExit
void UnityEngine::EventSystems::IPointerExitHandler::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IPointerExitHandler::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IPointerExitHandler::OnPointerExit
// Il2CppName: OnPointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPointerExitHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IPointerExitHandler::OnPointerExit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPointerExitHandler*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown
void UnityEngine::EventSystems::IPointerDownHandler::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IPointerDownHandler::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IPointerDownHandler::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPointerDownHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IPointerDownHandler::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPointerDownHandler*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp
void UnityEngine::EventSystems::IPointerUpHandler::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IPointerUpHandler::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IPointerUpHandler::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPointerUpHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IPointerUpHandler::OnPointerUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPointerUpHandler*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IPointerClickHandler.OnPointerClick
void UnityEngine::EventSystems::IPointerClickHandler::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IPointerClickHandler::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IPointerClickHandler::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPointerClickHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IPointerClickHandler::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPointerClickHandler*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IBeginDragHandler.OnBeginDrag
void UnityEngine::EventSystems::IBeginDragHandler::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IBeginDragHandler::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IBeginDragHandler::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IBeginDragHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IBeginDragHandler::OnBeginDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IBeginDragHandler*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IInitializePotentialDragHandler.OnInitializePotentialDrag
void UnityEngine::EventSystems::IInitializePotentialDragHandler::OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IInitializePotentialDragHandler::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IInitializePotentialDragHandler::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IInitializePotentialDragHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IInitializePotentialDragHandler::OnInitializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IInitializePotentialDragHandler*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IDragHandler.OnDrag
void UnityEngine::EventSystems::IDragHandler::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IDragHandler::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IDragHandler::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDragHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IDragHandler::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDragHandler*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IEndDragHandler.OnEndDrag
void UnityEngine::EventSystems::IEndDragHandler::OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IEndDragHandler::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IEndDragHandler::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IEndDragHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IEndDragHandler::OnEndDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IEndDragHandler*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IDropHandler
#include "UnityEngine/EventSystems/IDropHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IDropHandler.OnDrop
void UnityEngine::EventSystems::IDropHandler::OnDrop(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IDropHandler::OnDrop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IDropHandler::OnDrop
// Il2CppName: OnDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDropHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IDropHandler::OnDrop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDropHandler*), "OnDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IScrollHandler.OnScroll
void UnityEngine::EventSystems::IScrollHandler::OnScroll(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IScrollHandler::OnScroll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IScrollHandler::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IScrollHandler::*)(UnityEngine::EventSystems::PointerEventData*)>(&IScrollHandler::OnScroll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IScrollHandler*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IUpdateSelectedHandler
#include "UnityEngine/EventSystems/IUpdateSelectedHandler.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IUpdateSelectedHandler.OnUpdateSelected
void UnityEngine::EventSystems::IUpdateSelectedHandler::OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IUpdateSelectedHandler::OnUpdateSelected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IUpdateSelectedHandler::OnUpdateSelected
// Il2CppName: OnUpdateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IUpdateSelectedHandler::*)(UnityEngine::EventSystems::BaseEventData*)>(&IUpdateSelectedHandler::OnUpdateSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IUpdateSelectedHandler*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.ISelectHandler
#include "UnityEngine/EventSystems/ISelectHandler.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.ISelectHandler.OnSelect
void UnityEngine::EventSystems::ISelectHandler::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ISelectHandler::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: ISelectHandler::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISelectHandler::*)(UnityEngine::EventSystems::BaseEventData*)>(&ISelectHandler::OnSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISelectHandler*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IDeselectHandler
#include "UnityEngine/EventSystems/IDeselectHandler.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IDeselectHandler.OnDeselect
void UnityEngine::EventSystems::IDeselectHandler::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IDeselectHandler::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IDeselectHandler::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDeselectHandler::*)(UnityEngine::EventSystems::BaseEventData*)>(&IDeselectHandler::OnDeselect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDeselectHandler*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.IMoveHandler
#include "UnityEngine/EventSystems/IMoveHandler.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.IMoveHandler.OnMove
void UnityEngine::EventSystems::IMoveHandler::OnMove(UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::IMoveHandler::OnMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: IMoveHandler::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMoveHandler::*)(UnityEngine::EventSystems::AxisEventData*)>(&IMoveHandler::OnMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMoveHandler*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.ISubmitHandler.OnSubmit
void UnityEngine::EventSystems::ISubmitHandler::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ISubmitHandler::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: ISubmitHandler::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISubmitHandler::*)(UnityEngine::EventSystems::BaseEventData*)>(&ISubmitHandler::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISubmitHandler*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.ICancelHandler
#include "UnityEngine/EventSystems/ICancelHandler.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.ICancelHandler.OnCancel
void UnityEngine::EventSystems::ICancelHandler::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ICancelHandler::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: ICancelHandler::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ICancelHandler::*)(UnityEngine::EventSystems::BaseEventData*)>(&ICancelHandler::OnCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICancelHandler*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* UnityEngine::EventSystems::EventSystem::_get_m_EventSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::_get_m_EventSystems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>*>("UnityEngine.EventSystems", "EventSystem", "m_EventSystems"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<UnityEngine.EventSystems.EventSystem> m_EventSystems
void UnityEngine::EventSystems::EventSystem::_set_m_EventSystems(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::_set_m_EventSystems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventSystem", "m_EventSystems", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* UnityEngine::EventSystems::EventSystem::_get_s_RaycastComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::_get_s_RaycastComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::EventSystems::RaycastResult>*>("UnityEngine.EventSystems", "EventSystem", "s_RaycastComparer"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Comparison`1<UnityEngine.EventSystems.RaycastResult> s_RaycastComparer
void UnityEngine::EventSystems::EventSystem::_set_s_RaycastComparer(System::Comparison_1<UnityEngine::EventSystems::RaycastResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::_set_s_RaycastComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventSystem", "s_RaycastComparer", value));
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_current
UnityEngine::EventSystems::EventSystem* UnityEngine::EventSystems::EventSystem::get_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "EventSystem", "get_current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::EventSystem*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.set_current
void UnityEngine::EventSystems::EventSystem::set_current(UnityEngine::EventSystems::EventSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::set_current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "EventSystem", "set_current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_sendNavigationEvents
bool UnityEngine::EventSystems::EventSystem::get_sendNavigationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_sendNavigationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sendNavigationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.set_sendNavigationEvents
void UnityEngine::EventSystems::EventSystem::set_sendNavigationEvents(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::set_sendNavigationEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sendNavigationEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_pixelDragThreshold
int UnityEngine::EventSystems::EventSystem::get_pixelDragThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_pixelDragThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelDragThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.set_pixelDragThreshold
void UnityEngine::EventSystems::EventSystem::set_pixelDragThreshold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::set_pixelDragThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pixelDragThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_currentInputModule
UnityEngine::EventSystems::BaseInputModule* UnityEngine::EventSystems::EventSystem::get_currentInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_currentInputModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentInputModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInputModule*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_firstSelectedGameObject
UnityEngine::GameObject* UnityEngine::EventSystems::EventSystem::get_firstSelectedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_firstSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.set_firstSelectedGameObject
void UnityEngine::EventSystems::EventSystem::set_firstSelectedGameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::set_firstSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_currentSelectedGameObject
UnityEngine::GameObject* UnityEngine::EventSystems::EventSystem::get_currentSelectedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_currentSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_lastSelectedGameObject
UnityEngine::GameObject* UnityEngine::EventSystems::EventSystem::get_lastSelectedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_lastSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_isFocused
bool UnityEngine::EventSystems::EventSystem::get_isFocused() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_isFocused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFocused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.UpdateModules
void UnityEngine::EventSystems::EventSystem::UpdateModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::UpdateModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_alreadySelecting
bool UnityEngine::EventSystems::EventSystem::get_alreadySelecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_alreadySelecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alreadySelecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.SetSelectedGameObject
void UnityEngine::EventSystems::EventSystem::SetSelectedGameObject(UnityEngine::GameObject* selected, UnityEngine::EventSystems::BaseEventData* pointer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::SetSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected), ::il2cpp_utils::ExtractType(pointer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selected, pointer);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.get_baseEventDataCache
UnityEngine::EventSystems::BaseEventData* UnityEngine::EventSystems::EventSystem::get_baseEventDataCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::get_baseEventDataCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseEventDataCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.SetSelectedGameObject
void UnityEngine::EventSystems::EventSystem::SetSelectedGameObject(UnityEngine::GameObject* selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::SetSelectedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.RaycastComparer
int UnityEngine::EventSystems::EventSystem::RaycastComparer(UnityEngine::EventSystems::RaycastResult lhs, UnityEngine::EventSystems::RaycastResult rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::RaycastComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "EventSystem", "RaycastComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.RaycastAll
void UnityEngine::EventSystems::EventSystem::RaycastAll(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* raycastResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::RaycastAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaycastAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(raycastResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, raycastResults);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject
bool UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerOverGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.IsPointerOverGameObject
bool UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::IsPointerOverGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerOverGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.TickModules
void UnityEngine::EventSystems::EventSystem::TickModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::TickModules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TickModules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.OnApplicationFocus
void UnityEngine::EventSystems::EventSystem::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::OnApplicationFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hasFocus);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.Update
void UnityEngine::EventSystems::EventSystem::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.ChangeEventModule
void UnityEngine::EventSystems::EventSystem::ChangeEventModule(UnityEngine::EventSystems::BaseInputModule* module) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::ChangeEventModule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeEventModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(module)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, module);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.OnEnable
void UnityEngine::EventSystems::EventSystem::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.OnDisable
void UnityEngine::EventSystems::EventSystem::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem.ToString
::Il2CppString* UnityEngine::EventSystems::EventSystem::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventSystem..cctor
void UnityEngine::EventSystems::EventSystem::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventSystem::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "EventSystem", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: EventSystem::get_current
// Il2CppName: get_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::EventSystem* (*)()>(&EventSystem::get_current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::set_current
// Il2CppName: set_current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::EventSystem*)>(&EventSystem::set_current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "set_current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventSystem*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::get_sendNavigationEvents
// Il2CppName: get_sendNavigationEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventSystem::*)()>(&EventSystem::get_sendNavigationEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_sendNavigationEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::set_sendNavigationEvents
// Il2CppName: set_sendNavigationEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(bool)>(&EventSystem::set_sendNavigationEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "set_sendNavigationEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EventSystem::get_pixelDragThreshold
// Il2CppName: get_pixelDragThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EventSystem::*)()>(&EventSystem::get_pixelDragThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_pixelDragThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::set_pixelDragThreshold
// Il2CppName: set_pixelDragThreshold
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(int)>(&EventSystem::set_pixelDragThreshold)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "set_pixelDragThreshold", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EventSystem::get_currentInputModule
// Il2CppName: get_currentInputModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInputModule* (EventSystem::*)()>(&EventSystem::get_currentInputModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_currentInputModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::get_firstSelectedGameObject
// Il2CppName: get_firstSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (EventSystem::*)()>(&EventSystem::get_firstSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_firstSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::set_firstSelectedGameObject
// Il2CppName: set_firstSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(UnityEngine::GameObject*)>(&EventSystem::set_firstSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "set_firstSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::get_currentSelectedGameObject
// Il2CppName: get_currentSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (EventSystem::*)()>(&EventSystem::get_currentSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_currentSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::get_lastSelectedGameObject
// Il2CppName: get_lastSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (EventSystem::*)()>(&EventSystem::get_lastSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_lastSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::get_isFocused
// Il2CppName: get_isFocused
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventSystem::*)()>(&EventSystem::get_isFocused)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_isFocused", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::UpdateModules
// Il2CppName: UpdateModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::UpdateModules)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "UpdateModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::get_alreadySelecting
// Il2CppName: get_alreadySelecting
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventSystem::*)()>(&EventSystem::get_alreadySelecting)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_alreadySelecting", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::SetSelectedGameObject
// Il2CppName: SetSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(UnityEngine::GameObject*, UnityEngine::EventSystems::BaseEventData*)>(&EventSystem::SetSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "SetSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::get_baseEventDataCache
// Il2CppName: get_baseEventDataCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseEventData* (EventSystem::*)()>(&EventSystem::get_baseEventDataCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "get_baseEventDataCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::SetSelectedGameObject
// Il2CppName: SetSelectedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(UnityEngine::GameObject*)>(&EventSystem::SetSelectedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "SetSelectedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::RaycastComparer
// Il2CppName: RaycastComparer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(UnityEngine::EventSystems::RaycastResult, UnityEngine::EventSystems::RaycastResult)>(&EventSystem::RaycastComparer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "RaycastComparer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::RaycastResult>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::RaycastResult>()});
  }
};
// Writing MetadataGetter for method: EventSystem::RaycastAll
// Il2CppName: RaycastAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(UnityEngine::EventSystems::PointerEventData*, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&EventSystem::RaycastAll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "RaycastAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventSystem::*)()>(&EventSystem::IsPointerOverGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EventSystem::*)(int)>(&EventSystem::IsPointerOverGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: EventSystem::TickModules
// Il2CppName: TickModules
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::TickModules)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "TickModules", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::OnApplicationFocus
// Il2CppName: OnApplicationFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(bool)>(&EventSystem::OnApplicationFocus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "OnApplicationFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EventSystem::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::ChangeEventModule
// Il2CppName: ChangeEventModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)(UnityEngine::EventSystems::BaseInputModule*)>(&EventSystem::ChangeEventModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "ChangeEventModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseInputModule*>()});
  }
};
// Writing MetadataGetter for method: EventSystem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventSystem::*)()>(&EventSystem::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (EventSystem::*)()>(&EventSystem::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventSystem::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EventSystem::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventSystem*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.EventTrigger
#include "UnityEngine/EventSystems/EventTrigger.hpp"
// Including type: UnityEngine.EventSystems.EventTrigger/TriggerEvent
#include "UnityEngine/EventSystems/EventTrigger_TriggerEvent.hpp"
// Including type: UnityEngine.EventSystems.EventTrigger/Entry
#include "UnityEngine/EventSystems/EventTrigger_Entry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.EventTriggerType
#include "UnityEngine/EventSystems/EventTriggerType.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.get_delegates
System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* UnityEngine::EventSystems::EventTrigger::get_delegates() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::get_delegates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delegates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.set_delegates
void UnityEngine::EventSystems::EventTrigger::set_delegates(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::set_delegates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delegates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.get_triggers
System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* UnityEngine::EventSystems::EventTrigger::get_triggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::get_triggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.set_triggers
void UnityEngine::EventSystems::EventTrigger::set_triggers(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::set_triggers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.Execute
void UnityEngine::EventSystems::EventTrigger::Execute(UnityEngine::EventSystems::EventTriggerType id, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnPointerEnter
void UnityEngine::EventSystems::EventTrigger::OnPointerEnter(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnPointerExit
void UnityEngine::EventSystems::EventTrigger::OnPointerExit(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnDrag
void UnityEngine::EventSystems::EventTrigger::OnDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnDrop
void UnityEngine::EventSystems::EventTrigger::OnDrop(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnDrop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnPointerDown
void UnityEngine::EventSystems::EventTrigger::OnPointerDown(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnPointerDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnPointerUp
void UnityEngine::EventSystems::EventTrigger::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnPointerClick
void UnityEngine::EventSystems::EventTrigger::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnSelect
void UnityEngine::EventSystems::EventTrigger::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnDeselect
void UnityEngine::EventSystems::EventTrigger::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnScroll
void UnityEngine::EventSystems::EventTrigger::OnScroll(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnScroll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnScroll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnMove
void UnityEngine::EventSystems::EventTrigger::OnMove(UnityEngine::EventSystems::AxisEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnUpdateSelected
void UnityEngine::EventSystems::EventTrigger::OnUpdateSelected(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnUpdateSelected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpdateSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnInitializePotentialDrag
void UnityEngine::EventSystems::EventTrigger::OnInitializePotentialDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnInitializePotentialDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInitializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnBeginDrag
void UnityEngine::EventSystems::EventTrigger::OnBeginDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnBeginDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnEndDrag
void UnityEngine::EventSystems::EventTrigger::OnEndDrag(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnEndDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnSubmit
void UnityEngine::EventSystems::EventTrigger::OnSubmit(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.EventTrigger.OnCancel
void UnityEngine::EventSystems::EventTrigger::OnCancel(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTrigger::OnCancel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Writing MetadataGetter for method: EventTrigger::get_delegates
// Il2CppName: get_delegates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* (EventTrigger::*)()>(&EventTrigger::get_delegates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "get_delegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventTrigger::set_delegates
// Il2CppName: set_delegates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*)>(&EventTrigger::set_delegates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "set_delegates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::get_triggers
// Il2CppName: get_triggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>* (EventTrigger::*)()>(&EventTrigger::get_triggers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "get_triggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventTrigger::set_triggers
// Il2CppName: set_triggers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*)>(&EventTrigger::set_triggers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "set_triggers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::EventTrigger::Entry*>*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::EventTriggerType, UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::EventTriggerType>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnPointerEnter
// Il2CppName: OnPointerEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnPointerExit
// Il2CppName: OnPointerExit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerExit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerExit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnDrag
// Il2CppName: OnDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnDrop
// Il2CppName: OnDrop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnDrop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDrop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnPointerDown
// Il2CppName: OnPointerDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnPointerUp
// Il2CppName: OnPointerUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnPointerClick
// Il2CppName: OnPointerClick
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnPointerClick)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnPointerClick", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnSelect
// Il2CppName: OnSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnDeselect
// Il2CppName: OnDeselect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnDeselect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnDeselect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnScroll
// Il2CppName: OnScroll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnScroll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnScroll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnMove
// Il2CppName: OnMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::AxisEventData*)>(&EventTrigger::OnMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::AxisEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnUpdateSelected
// Il2CppName: OnUpdateSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnUpdateSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnUpdateSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnInitializePotentialDrag
// Il2CppName: OnInitializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnInitializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnInitializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnBeginDrag
// Il2CppName: OnBeginDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnBeginDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnBeginDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnEndDrag
// Il2CppName: OnEndDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::PointerEventData*)>(&EventTrigger::OnEndDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnEndDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnSubmit
// Il2CppName: OnSubmit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnSubmit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnSubmit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::OnCancel
// Il2CppName: OnCancel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)(UnityEngine::EventSystems::BaseEventData*)>(&EventTrigger::OnCancel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), "OnCancel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: EventTrigger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)()>(&EventTrigger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::*)()>(&EventTrigger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.EventTrigger/TriggerEvent
#include "UnityEngine/EventSystems/EventTrigger_TriggerEvent.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: EventTrigger::TriggerEvent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::TriggerEvent::*)()>(&EventTrigger::TriggerEvent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger::TriggerEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::TriggerEvent::*)()>(&EventTrigger::TriggerEvent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger::TriggerEvent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.EventTrigger/Entry
#include "UnityEngine/EventSystems/EventTrigger_Entry.hpp"
// Including type: UnityEngine.EventSystems.EventTrigger/TriggerEvent
#include "UnityEngine/EventSystems/EventTrigger_TriggerEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: EventTrigger::Entry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::Entry::*)()>(&EventTrigger::Entry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger::Entry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventTrigger::Entry::*)()>(&EventTrigger::Entry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventTrigger::Entry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.EventTriggerType
#include "UnityEngine/EventSystems/EventTriggerType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType PointerEnter
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_PointerEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_PointerEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "PointerEnter"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType PointerEnter
void UnityEngine::EventSystems::EventTriggerType::_set_PointerEnter(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_PointerEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "PointerEnter", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType PointerExit
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_PointerExit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_PointerExit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "PointerExit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType PointerExit
void UnityEngine::EventSystems::EventTriggerType::_set_PointerExit(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_PointerExit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "PointerExit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType PointerDown
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_PointerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_PointerDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "PointerDown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType PointerDown
void UnityEngine::EventSystems::EventTriggerType::_set_PointerDown(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_PointerDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "PointerDown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType PointerUp
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_PointerUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_PointerUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "PointerUp"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType PointerUp
void UnityEngine::EventSystems::EventTriggerType::_set_PointerUp(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_PointerUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "PointerUp", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType PointerClick
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_PointerClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_PointerClick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "PointerClick"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType PointerClick
void UnityEngine::EventSystems::EventTriggerType::_set_PointerClick(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_PointerClick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "PointerClick", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Drag
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Drag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Drag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Drag"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Drag
void UnityEngine::EventSystems::EventTriggerType::_set_Drag(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Drag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Drag", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Drop
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Drop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Drop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Drop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Drop
void UnityEngine::EventSystems::EventTriggerType::_set_Drop(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Drop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Drop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Scroll
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Scroll"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Scroll
void UnityEngine::EventSystems::EventTriggerType::_set_Scroll(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType UpdateSelected
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_UpdateSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_UpdateSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "UpdateSelected"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType UpdateSelected
void UnityEngine::EventSystems::EventTriggerType::_set_UpdateSelected(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_UpdateSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "UpdateSelected", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Select
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Select() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Select");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Select"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Select
void UnityEngine::EventSystems::EventTriggerType::_set_Select(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Select");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Select", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Deselect
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Deselect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Deselect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Deselect"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Deselect
void UnityEngine::EventSystems::EventTriggerType::_set_Deselect(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Deselect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Deselect", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Move
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Move"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Move
void UnityEngine::EventSystems::EventTriggerType::_set_Move(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Move", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType InitializePotentialDrag
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_InitializePotentialDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_InitializePotentialDrag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "InitializePotentialDrag"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType InitializePotentialDrag
void UnityEngine::EventSystems::EventTriggerType::_set_InitializePotentialDrag(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_InitializePotentialDrag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "InitializePotentialDrag", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType BeginDrag
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_BeginDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_BeginDrag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "BeginDrag"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType BeginDrag
void UnityEngine::EventSystems::EventTriggerType::_set_BeginDrag(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_BeginDrag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "BeginDrag", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType EndDrag
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_EndDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_EndDrag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "EndDrag"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType EndDrag
void UnityEngine::EventSystems::EventTriggerType::_set_EndDrag(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_EndDrag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "EndDrag", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Submit
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Submit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Submit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Submit"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Submit
void UnityEngine::EventSystems::EventTriggerType::_set_Submit(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Submit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Submit", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.EventTriggerType Cancel
UnityEngine::EventSystems::EventTriggerType UnityEngine::EventSystems::EventTriggerType::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::EventTriggerType>("UnityEngine.EventSystems", "EventTriggerType", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.EventTriggerType Cancel
void UnityEngine::EventSystems::EventTriggerType::_set_Cancel(UnityEngine::EventSystems::EventTriggerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::EventTriggerType::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "EventTriggerType", "Cancel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.ExecuteEvents
#include "UnityEngine/EventSystems/ExecuteEvents.hpp"
// Including type: UnityEngine.EventSystems.ExecuteEvents/EventFunction`1
#include "UnityEngine/EventSystems/ExecuteEvents_EventFunction_1.hpp"
// Including type: UnityEngine.EventSystems.ExecuteEvents/<>c
#include "UnityEngine/EventSystems/ExecuteEvents_--c.hpp"
// Including type: UnityEngine.EventSystems.IPointerEnterHandler
#include "UnityEngine/EventSystems/IPointerEnterHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerExitHandler
#include "UnityEngine/EventSystems/IPointerExitHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerDownHandler
#include "UnityEngine/EventSystems/IPointerDownHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerUpHandler
#include "UnityEngine/EventSystems/IPointerUpHandler.hpp"
// Including type: UnityEngine.EventSystems.IPointerClickHandler
#include "UnityEngine/EventSystems/IPointerClickHandler.hpp"
// Including type: UnityEngine.EventSystems.IInitializePotentialDragHandler
#include "UnityEngine/EventSystems/IInitializePotentialDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IBeginDragHandler
#include "UnityEngine/EventSystems/IBeginDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDragHandler
#include "UnityEngine/EventSystems/IDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IEndDragHandler
#include "UnityEngine/EventSystems/IEndDragHandler.hpp"
// Including type: UnityEngine.EventSystems.IDropHandler
#include "UnityEngine/EventSystems/IDropHandler.hpp"
// Including type: UnityEngine.EventSystems.IScrollHandler
#include "UnityEngine/EventSystems/IScrollHandler.hpp"
// Including type: UnityEngine.EventSystems.IUpdateSelectedHandler
#include "UnityEngine/EventSystems/IUpdateSelectedHandler.hpp"
// Including type: UnityEngine.EventSystems.ISelectHandler
#include "UnityEngine/EventSystems/ISelectHandler.hpp"
// Including type: UnityEngine.EventSystems.IDeselectHandler
#include "UnityEngine/EventSystems/IDeselectHandler.hpp"
// Including type: UnityEngine.EventSystems.IMoveHandler
#include "UnityEngine/EventSystems/IMoveHandler.hpp"
// Including type: UnityEngine.EventSystems.ISubmitHandler
#include "UnityEngine/EventSystems/ISubmitHandler.hpp"
// Including type: UnityEngine.EventSystems.ICancelHandler
#include "UnityEngine/EventSystems/ICancelHandler.hpp"
// Including type: UnityEngine.UI.ObjectPool`1
#include "UnityEngine/UI/ObjectPool_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.IEventSystemHandler
#include "UnityEngine/EventSystems/IEventSystemHandler.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerEnterHandler> s_PointerEnterHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerEnterHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerEnterHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerEnterHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerEnterHandler> s_PointerEnterHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerEnterHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerEnterHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerEnterHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerExitHandler> s_PointerExitHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerExitHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerExitHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerExitHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerExitHandler> s_PointerExitHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerExitHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerExitHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerExitHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerDownHandler> s_PointerDownHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerDownHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerDownHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerDownHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerDownHandler> s_PointerDownHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerDownHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerDownHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerDownHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerUpHandler> s_PointerUpHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerUpHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerUpHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerUpHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerUpHandler> s_PointerUpHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerUpHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerUpHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerUpHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerClickHandler> s_PointerClickHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerClickHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_PointerClickHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerClickHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IPointerClickHandler> s_PointerClickHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerClickHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_PointerClickHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_PointerClickHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IInitializePotentialDragHandler> s_InitializePotentialDragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_InitializePotentialDragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_InitializePotentialDragHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_InitializePotentialDragHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IInitializePotentialDragHandler> s_InitializePotentialDragHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_InitializePotentialDragHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_InitializePotentialDragHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_InitializePotentialDragHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IBeginDragHandler> s_BeginDragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_BeginDragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_BeginDragHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_BeginDragHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IBeginDragHandler> s_BeginDragHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_BeginDragHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_BeginDragHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_BeginDragHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDragHandler> s_DragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_DragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_DragHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_DragHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDragHandler> s_DragHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_DragHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_DragHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_DragHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IEndDragHandler> s_EndDragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_EndDragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_EndDragHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_EndDragHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IEndDragHandler> s_EndDragHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_EndDragHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_EndDragHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_EndDragHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDropHandler> s_DropHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_DropHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_DropHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_DropHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDropHandler> s_DropHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_DropHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_DropHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_DropHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IScrollHandler> s_ScrollHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_ScrollHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_ScrollHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_ScrollHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IScrollHandler> s_ScrollHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_ScrollHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_ScrollHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_ScrollHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IUpdateSelectedHandler> s_UpdateSelectedHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_UpdateSelectedHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_UpdateSelectedHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_UpdateSelectedHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IUpdateSelectedHandler> s_UpdateSelectedHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_UpdateSelectedHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_UpdateSelectedHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_UpdateSelectedHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ISelectHandler> s_SelectHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_SelectHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_SelectHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_SelectHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ISelectHandler> s_SelectHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_SelectHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_SelectHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_SelectHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDeselectHandler> s_DeselectHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_DeselectHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_DeselectHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_DeselectHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IDeselectHandler> s_DeselectHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_DeselectHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_DeselectHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_DeselectHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IMoveHandler> s_MoveHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_MoveHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_MoveHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_MoveHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.IMoveHandler> s_MoveHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_MoveHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_MoveHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_MoveHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ISubmitHandler> s_SubmitHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_SubmitHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_SubmitHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_SubmitHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ISubmitHandler> s_SubmitHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_SubmitHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_SubmitHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_SubmitHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ICancelHandler> s_CancelHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_CancelHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_CancelHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_CancelHandler"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.EventSystems.ExecuteEvents/EventFunction`1<UnityEngine.EventSystems.ICancelHandler> s_CancelHandler
void UnityEngine::EventSystems::ExecuteEvents::_set_s_CancelHandler(UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_CancelHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_CancelHandler", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.UI.ObjectPool`1<System.Collections.Generic.List`1<UnityEngine.EventSystems.IEventSystemHandler>> s_HandlerListPool
UnityEngine::UI::ObjectPool_1<System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_HandlerListPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_HandlerListPool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::UI::ObjectPool_1<System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_HandlerListPool"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.UI.ObjectPool`1<System.Collections.Generic.List`1<UnityEngine.EventSystems.IEventSystemHandler>> s_HandlerListPool
void UnityEngine::EventSystems::ExecuteEvents::_set_s_HandlerListPool(UnityEngine::UI::ObjectPool_1<System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_HandlerListPool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_HandlerListPool", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Transform> s_InternalTransformList
System::Collections::Generic::List_1<UnityEngine::Transform*>* UnityEngine::EventSystems::ExecuteEvents::_get_s_InternalTransformList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_get_s_InternalTransformList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::Transform*>*>("UnityEngine.EventSystems", "ExecuteEvents", "s_InternalTransformList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Transform> s_InternalTransformList
void UnityEngine::EventSystems::ExecuteEvents::_set_s_InternalTransformList(System::Collections::Generic::List_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::_set_s_InternalTransformList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents", "s_InternalTransformList", value));
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IPointerEnterHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IPointerExitHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IPointerDownHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IPointerUpHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IPointerClickHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IInitializePotentialDragHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IBeginDragHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IDragHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IEndDragHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IDropHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IScrollHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IUpdateSelectedHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::ISelectHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IDeselectHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::IMoveHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::ISubmitHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.Execute
void UnityEngine::EventSystems::ExecuteEvents::Execute(UnityEngine::EventSystems::ICancelHandler* handler, UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::Execute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler), ::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handler, eventData);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_pointerEnterHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_pointerEnterHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_pointerEnterHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_pointerEnterHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_pointerExitHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_pointerExitHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_pointerExitHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_pointerExitHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_pointerDownHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_pointerDownHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_pointerDownHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_pointerDownHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_pointerUpHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_pointerUpHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_pointerUpHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_pointerUpHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_pointerClickHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_pointerClickHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_pointerClickHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_pointerClickHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_initializePotentialDrag
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_initializePotentialDrag() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_initializePotentialDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_initializePotentialDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_beginDragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_beginDragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_beginDragHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_beginDragHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_dragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_dragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_dragHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_dragHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_endDragHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_endDragHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_endDragHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_endDragHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_dropHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_dropHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_dropHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_dropHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_scrollHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_scrollHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_scrollHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_scrollHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_updateSelectedHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_updateSelectedHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_updateSelectedHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_updateSelectedHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_selectHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_selectHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_selectHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_selectHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_deselectHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_deselectHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_deselectHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_deselectHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_moveHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_moveHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_moveHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_moveHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_submitHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_submitHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_submitHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_submitHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.get_cancelHandler
UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>* UnityEngine::EventSystems::ExecuteEvents::get_cancelHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::get_cancelHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "get_cancelHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents.GetEventChain
void UnityEngine::EventSystems::ExecuteEvents::GetEventChain(UnityEngine::GameObject* root, System::Collections::Generic::IList_1<UnityEngine::Transform*>* eventChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::GetEventChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", "GetEventChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(eventChain)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root, eventChain);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents..cctor
void UnityEngine::EventSystems::ExecuteEvents::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ExecuteEvents::ValidateEventData
// Il2CppName: ValidateEventData
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IPointerEnterHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IPointerEnterHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IPointerExitHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IPointerExitHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IPointerDownHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IPointerDownHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IPointerUpHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IPointerUpHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IPointerClickHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IPointerClickHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IInitializePotentialDragHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IInitializePotentialDragHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IBeginDragHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IBeginDragHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IDragHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IDragHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IEndDragHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IEndDragHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IDropHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IDropHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IScrollHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IScrollHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IUpdateSelectedHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IUpdateSelectedHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::ISelectHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::ISelectHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IDeselectHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IDeselectHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::IMoveHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::IMoveHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::ISubmitHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::ISubmitHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::ICancelHandler*, UnityEngine::EventSystems::BaseEventData*)>(&ExecuteEvents::Execute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "Execute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::ICancelHandler*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_pointerEnterHandler
// Il2CppName: get_pointerEnterHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerEnterHandler*>* (*)()>(&ExecuteEvents::get_pointerEnterHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_pointerEnterHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_pointerExitHandler
// Il2CppName: get_pointerExitHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerExitHandler*>* (*)()>(&ExecuteEvents::get_pointerExitHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_pointerExitHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_pointerDownHandler
// Il2CppName: get_pointerDownHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerDownHandler*>* (*)()>(&ExecuteEvents::get_pointerDownHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_pointerDownHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_pointerUpHandler
// Il2CppName: get_pointerUpHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerUpHandler*>* (*)()>(&ExecuteEvents::get_pointerUpHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_pointerUpHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_pointerClickHandler
// Il2CppName: get_pointerClickHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IPointerClickHandler*>* (*)()>(&ExecuteEvents::get_pointerClickHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_pointerClickHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_initializePotentialDrag
// Il2CppName: get_initializePotentialDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IInitializePotentialDragHandler*>* (*)()>(&ExecuteEvents::get_initializePotentialDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_initializePotentialDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_beginDragHandler
// Il2CppName: get_beginDragHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IBeginDragHandler*>* (*)()>(&ExecuteEvents::get_beginDragHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_beginDragHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_dragHandler
// Il2CppName: get_dragHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDragHandler*>* (*)()>(&ExecuteEvents::get_dragHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_dragHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_endDragHandler
// Il2CppName: get_endDragHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IEndDragHandler*>* (*)()>(&ExecuteEvents::get_endDragHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_endDragHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_dropHandler
// Il2CppName: get_dropHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDropHandler*>* (*)()>(&ExecuteEvents::get_dropHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_dropHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_scrollHandler
// Il2CppName: get_scrollHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IScrollHandler*>* (*)()>(&ExecuteEvents::get_scrollHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_scrollHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_updateSelectedHandler
// Il2CppName: get_updateSelectedHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IUpdateSelectedHandler*>* (*)()>(&ExecuteEvents::get_updateSelectedHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_updateSelectedHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_selectHandler
// Il2CppName: get_selectHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISelectHandler*>* (*)()>(&ExecuteEvents::get_selectHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_selectHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_deselectHandler
// Il2CppName: get_deselectHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IDeselectHandler*>* (*)()>(&ExecuteEvents::get_deselectHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_deselectHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_moveHandler
// Il2CppName: get_moveHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::IMoveHandler*>* (*)()>(&ExecuteEvents::get_moveHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_moveHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_submitHandler
// Il2CppName: get_submitHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ISubmitHandler*>* (*)()>(&ExecuteEvents::get_submitHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_submitHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::get_cancelHandler
// Il2CppName: get_cancelHandler
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::ExecuteEvents::EventFunction_1<UnityEngine::EventSystems::ICancelHandler*>* (*)()>(&ExecuteEvents::get_cancelHandler)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "get_cancelHandler", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::GetEventChain
// Il2CppName: GetEventChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::GameObject*, System::Collections::Generic::IList_1<UnityEngine::Transform*>*)>(&ExecuteEvents::GetEventChain)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), "GetEventChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<UnityEngine::Transform*>*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::Execute
// Il2CppName: Execute
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::ExecuteHierarchy
// Il2CppName: ExecuteHierarchy
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::ShouldSendToComponent
// Il2CppName: ShouldSendToComponent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::GetEventList
// Il2CppName: GetEventList
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::CanHandleEvent
// Il2CppName: CanHandleEvent
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::GetEventHandler
// Il2CppName: GetEventHandler
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: ExecuteEvents::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExecuteEvents::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.ExecuteEvents/<>c
#include "UnityEngine/EventSystems/ExecuteEvents_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.IEventSystemHandler
#include "UnityEngine/EventSystems/IEventSystemHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.EventSystems.ExecuteEvents/<>c <>9
UnityEngine::EventSystems::ExecuteEvents::$$c* UnityEngine::EventSystems::ExecuteEvents::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::ExecuteEvents::$$c*>("UnityEngine.EventSystems", "ExecuteEvents/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.EventSystems.ExecuteEvents/<>c <>9
void UnityEngine::EventSystems::ExecuteEvents::$$c::_set_$$9(UnityEngine::EventSystems::ExecuteEvents::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "ExecuteEvents/<>c", "<>9", value)));
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents/<>c..cctor
void UnityEngine::EventSystems::ExecuteEvents::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "ExecuteEvents/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.ExecuteEvents/<>c.<.cctor>b__79_0
void UnityEngine::EventSystems::ExecuteEvents::$$c::$_cctor$b__79_0(System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::ExecuteEvents::$$c::<.cctor>b__79_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__79_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, l);
}
// Writing MetadataGetter for method: ExecuteEvents::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ExecuteEvents::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::$$c::$_cctor$b__79_0
// Il2CppName: <.cctor>b__79_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExecuteEvents::$$c::*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>*)>(&ExecuteEvents::$$c::$_cctor$b__79_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents::$$c*), "<.cctor>b__79_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::IEventSystemHandler*>*>()});
  }
};
// Writing MetadataGetter for method: ExecuteEvents::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExecuteEvents::$$c::*)()>(&ExecuteEvents::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ExecuteEvents::$$c::*)()>(&ExecuteEvents::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ExecuteEvents::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: UnityEngine.IMECompositionMode
#include "UnityEngine/IMECompositionMode.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Touch
#include "UnityEngine/Touch.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_compositionString
::Il2CppString* UnityEngine::EventSystems::BaseInput::get_compositionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_compositionString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_imeCompositionMode
UnityEngine::IMECompositionMode UnityEngine::EventSystems::BaseInput::get_imeCompositionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_imeCompositionMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_imeCompositionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::IMECompositionMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.set_imeCompositionMode
void UnityEngine::EventSystems::BaseInput::set_imeCompositionMode(UnityEngine::IMECompositionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::set_imeCompositionMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_imeCompositionMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_compositionCursorPos
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_compositionCursorPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_compositionCursorPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compositionCursorPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.set_compositionCursorPos
void UnityEngine::EventSystems::BaseInput::set_compositionCursorPos(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::set_compositionCursorPos");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_compositionCursorPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mousePresent
bool UnityEngine::EventSystems::BaseInput::get_mousePresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_mousePresent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mousePresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButtonDown
bool UnityEngine::EventSystems::BaseInput::GetMouseButtonDown(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetMouseButtonDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMouseButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButtonUp
bool UnityEngine::EventSystems::BaseInput::GetMouseButtonUp(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetMouseButtonUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMouseButtonUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetMouseButton
bool UnityEngine::EventSystems::BaseInput::GetMouseButton(int button) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetMouseButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMouseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mousePosition
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_mousePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_mousePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mousePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_mouseScrollDelta
UnityEngine::Vector2 UnityEngine::EventSystems::BaseInput::get_mouseScrollDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_mouseScrollDelta");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mouseScrollDelta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_touchSupported
bool UnityEngine::EventSystems::BaseInput::get_touchSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_touchSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.get_touchCount
int UnityEngine::EventSystems::BaseInput::get_touchCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::get_touchCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetTouch
UnityEngine::Touch UnityEngine::EventSystems::BaseInput::GetTouch(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetTouch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Touch, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetAxisRaw
float UnityEngine::EventSystems::BaseInput::GetAxisRaw(::Il2CppString* axisName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetAxisRaw");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxisRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axisName)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, axisName);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInput.GetButtonDown
bool UnityEngine::EventSystems::BaseInput::GetButtonDown(::Il2CppString* buttonName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInput::GetButtonDown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, buttonName);
}
// Writing MetadataGetter for method: BaseInput::get_compositionString
// Il2CppName: get_compositionString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BaseInput::*)()>(&BaseInput::get_compositionString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_compositionString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::get_imeCompositionMode
// Il2CppName: get_imeCompositionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::IMECompositionMode (BaseInput::*)()>(&BaseInput::get_imeCompositionMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_imeCompositionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::set_imeCompositionMode
// Il2CppName: set_imeCompositionMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInput::*)(UnityEngine::IMECompositionMode)>(&BaseInput::set_imeCompositionMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "set_imeCompositionMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::IMECompositionMode>()});
  }
};
// Writing MetadataGetter for method: BaseInput::get_compositionCursorPos
// Il2CppName: get_compositionCursorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (BaseInput::*)()>(&BaseInput::get_compositionCursorPos)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_compositionCursorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::set_compositionCursorPos
// Il2CppName: set_compositionCursorPos
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInput::*)(UnityEngine::Vector2)>(&BaseInput::set_compositionCursorPos)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "set_compositionCursorPos", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: BaseInput::get_mousePresent
// Il2CppName: get_mousePresent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)()>(&BaseInput::get_mousePresent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_mousePresent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::GetMouseButtonDown
// Il2CppName: GetMouseButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)(int)>(&BaseInput::GetMouseButtonDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetMouseButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInput::GetMouseButtonUp
// Il2CppName: GetMouseButtonUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)(int)>(&BaseInput::GetMouseButtonUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetMouseButtonUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInput::GetMouseButton
// Il2CppName: GetMouseButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)(int)>(&BaseInput::GetMouseButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetMouseButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInput::get_mousePosition
// Il2CppName: get_mousePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (BaseInput::*)()>(&BaseInput::get_mousePosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_mousePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::get_mouseScrollDelta
// Il2CppName: get_mouseScrollDelta
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (BaseInput::*)()>(&BaseInput::get_mouseScrollDelta)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_mouseScrollDelta", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::get_touchSupported
// Il2CppName: get_touchSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)()>(&BaseInput::get_touchSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_touchSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::get_touchCount
// Il2CppName: get_touchCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseInput::*)()>(&BaseInput::get_touchCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "get_touchCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInput::GetTouch
// Il2CppName: GetTouch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Touch (BaseInput::*)(int)>(&BaseInput::GetTouch)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetTouch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInput::GetAxisRaw
// Il2CppName: GetAxisRaw
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BaseInput::*)(::Il2CppString*)>(&BaseInput::GetAxisRaw)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetAxisRaw", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BaseInput::GetButtonDown
// Il2CppName: GetButtonDown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInput::*)(::Il2CppString*)>(&BaseInput::GetButtonDown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), "GetButtonDown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BaseInput::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInput::*)()>(&BaseInput::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInput::*)()>(&BaseInput::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInput*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.BaseInputModule
#include "UnityEngine/EventSystems/BaseInputModule.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.AxisEventData
#include "UnityEngine/EventSystems/AxisEventData.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseInput
#include "UnityEngine/EventSystems/BaseInput.hpp"
// Including type: UnityEngine.EventSystems.MoveDirection
#include "UnityEngine/EventSystems/MoveDirection.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.get_input
UnityEngine::EventSystems::BaseInput* UnityEngine::EventSystems::BaseInputModule::get_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::get_input");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_input", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInput*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.get_inputOverride
UnityEngine::EventSystems::BaseInput* UnityEngine::EventSystems::BaseInputModule::get_inputOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::get_inputOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseInput*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.set_inputOverride
void UnityEngine::EventSystems::BaseInputModule::set_inputOverride(UnityEngine::EventSystems::BaseInput* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::set_inputOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.get_eventSystem
UnityEngine::EventSystems::EventSystem* UnityEngine::EventSystems::BaseInputModule::get_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::get_eventSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::EventSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.Process
void UnityEngine::EventSystems::BaseInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.FindFirstRaycast
UnityEngine::EventSystems::RaycastResult UnityEngine::EventSystems::BaseInputModule::FindFirstRaycast(System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* candidates) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::FindFirstRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "BaseInputModule", "FindFirstRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(candidates)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::RaycastResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, candidates);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::BaseInputModule::DetermineMoveDirection(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::DetermineMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "BaseInputModule", "DetermineMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::MoveDirection, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.DetermineMoveDirection
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::BaseInputModule::DetermineMoveDirection(float x, float y, float deadZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::DetermineMoveDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "BaseInputModule", "DetermineMoveDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(deadZone)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::MoveDirection, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, y, deadZone);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.FindCommonRoot
UnityEngine::GameObject* UnityEngine::EventSystems::BaseInputModule::FindCommonRoot(UnityEngine::GameObject* g1, UnityEngine::GameObject* g2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::FindCommonRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "BaseInputModule", "FindCommonRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(g1), ::il2cpp_utils::ExtractType(g2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, g1, g2);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.HandlePointerExitAndEnter
void UnityEngine::EventSystems::BaseInputModule::HandlePointerExitAndEnter(UnityEngine::EventSystems::PointerEventData* currentPointerData, UnityEngine::GameObject* newEnterTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::HandlePointerExitAndEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePointerExitAndEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPointerData), ::il2cpp_utils::ExtractType(newEnterTarget)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPointerData, newEnterTarget);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.GetAxisEventData
UnityEngine::EventSystems::AxisEventData* UnityEngine::EventSystems::BaseInputModule::GetAxisEventData(float x, float y, float moveDeadZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::GetAxisEventData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAxisEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(moveDeadZone)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::AxisEventData*, false>(this, ___internal__method, x, y, moveDeadZone);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.GetBaseEventData
UnityEngine::EventSystems::BaseEventData* UnityEngine::EventSystems::BaseInputModule::GetBaseEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::GetBaseEventData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.IsPointerOverGameObject
bool UnityEngine::EventSystems::BaseInputModule::IsPointerOverGameObject(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::IsPointerOverGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerOverGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::BaseInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.DeactivateModule
void UnityEngine::EventSystems::BaseInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.ActivateModule
void UnityEngine::EventSystems::BaseInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.UpdateModule
void UnityEngine::EventSystems::BaseInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.IsModuleSupported
bool UnityEngine::EventSystems::BaseInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.OnEnable
void UnityEngine::EventSystems::BaseInputModule::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseInputModule.OnDisable
void UnityEngine::EventSystems::BaseInputModule::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseInputModule::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BaseInputModule::get_input
// Il2CppName: get_input
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInput* (BaseInputModule::*)()>(&BaseInputModule::get_input)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "get_input", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::get_inputOverride
// Il2CppName: get_inputOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseInput* (BaseInputModule::*)()>(&BaseInputModule::get_inputOverride)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "get_inputOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::set_inputOverride
// Il2CppName: set_inputOverride
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)(UnityEngine::EventSystems::BaseInput*)>(&BaseInputModule::set_inputOverride)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "set_inputOverride", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseInput*>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::get_eventSystem
// Il2CppName: get_eventSystem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::EventSystem* (BaseInputModule::*)()>(&BaseInputModule::get_eventSystem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "get_eventSystem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::Process)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::FindFirstRaycast
// Il2CppName: FindFirstRaycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::RaycastResult (*)(System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&BaseInputModule::FindFirstRaycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "FindFirstRaycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::DetermineMoveDirection
// Il2CppName: DetermineMoveDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::MoveDirection (*)(float, float)>(&BaseInputModule::DetermineMoveDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "DetermineMoveDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::DetermineMoveDirection
// Il2CppName: DetermineMoveDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::MoveDirection (*)(float, float, float)>(&BaseInputModule::DetermineMoveDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "DetermineMoveDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::FindCommonRoot
// Il2CppName: FindCommonRoot
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (*)(UnityEngine::GameObject*, UnityEngine::GameObject*)>(&BaseInputModule::FindCommonRoot)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "FindCommonRoot", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::HandlePointerExitAndEnter
// Il2CppName: HandlePointerExitAndEnter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::GameObject*)>(&BaseInputModule::HandlePointerExitAndEnter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "HandlePointerExitAndEnter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::GetAxisEventData
// Il2CppName: GetAxisEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::AxisEventData* (BaseInputModule::*)(float, float, float)>(&BaseInputModule::GetAxisEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "GetAxisEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::GetBaseEventData
// Il2CppName: GetBaseEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseEventData* (BaseInputModule::*)()>(&BaseInputModule::GetBaseEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "GetBaseEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputModule::*)(int)>(&BaseInputModule::IsPointerOverGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BaseInputModule::ShouldActivateModule
// Il2CppName: ShouldActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputModule::*)()>(&BaseInputModule::ShouldActivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "ShouldActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::DeactivateModule
// Il2CppName: DeactivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::DeactivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "DeactivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::ActivateModule
// Il2CppName: ActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::ActivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "ActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::UpdateModule
// Il2CppName: UpdateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::UpdateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "UpdateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::IsModuleSupported
// Il2CppName: IsModuleSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BaseInputModule::*)()>(&BaseInputModule::IsModuleSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "IsModuleSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseInputModule::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseInputModule::*)()>(&BaseInputModule::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.PointerInputModule
#include "UnityEngine/EventSystems/PointerInputModule.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/ButtonState
#include "UnityEngine/EventSystems/PointerInputModule_ButtonState.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Touch
#include "UnityEngine/Touch.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMouseLeftId
int UnityEngine::EventSystems::PointerInputModule::_get_kMouseLeftId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_get_kMouseLeftId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PointerInputModule", "kMouseLeftId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMouseLeftId
void UnityEngine::EventSystems::PointerInputModule::_set_kMouseLeftId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_set_kMouseLeftId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerInputModule", "kMouseLeftId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMouseRightId
int UnityEngine::EventSystems::PointerInputModule::_get_kMouseRightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_get_kMouseRightId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PointerInputModule", "kMouseRightId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMouseRightId
void UnityEngine::EventSystems::PointerInputModule::_set_kMouseRightId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_set_kMouseRightId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerInputModule", "kMouseRightId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMouseMiddleId
int UnityEngine::EventSystems::PointerInputModule::_get_kMouseMiddleId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_get_kMouseMiddleId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PointerInputModule", "kMouseMiddleId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMouseMiddleId
void UnityEngine::EventSystems::PointerInputModule::_set_kMouseMiddleId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_set_kMouseMiddleId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerInputModule", "kMouseMiddleId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFakeTouchesId
int UnityEngine::EventSystems::PointerInputModule::_get_kFakeTouchesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_get_kFakeTouchesId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PointerInputModule", "kFakeTouchesId"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFakeTouchesId
void UnityEngine::EventSystems::PointerInputModule::_set_kFakeTouchesId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::_set_kFakeTouchesId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PointerInputModule", "kFakeTouchesId", value));
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.GetPointerData
bool UnityEngine::EventSystems::PointerInputModule::GetPointerData(int id, UnityEngine::EventSystems::PointerEventData*& data, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::GetPointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*&>(), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id, data, create);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.RemovePointerData
void UnityEngine::EventSystems::PointerInputModule::RemovePointerData(UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::RemovePointerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePointerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.GetTouchPointerEventData
UnityEngine::EventSystems::PointerEventData* UnityEngine::EventSystems::PointerInputModule::GetTouchPointerEventData(UnityEngine::Touch input, bool& pressed, bool& released) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::GetTouchPointerEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTouchPointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData*, false>(this, ___internal__method, input, pressed, released);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.CopyFromTo
void UnityEngine::EventSystems::PointerInputModule::CopyFromTo(UnityEngine::EventSystems::PointerEventData* from, UnityEngine::EventSystems::PointerEventData* to) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::CopyFromTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFromTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.StateForMouseButton
UnityEngine::EventSystems::PointerEventData::FramePressState UnityEngine::EventSystems::PointerInputModule::StateForMouseButton(int buttonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::StateForMouseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StateForMouseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData::FramePressState, false>(this, ___internal__method, buttonId);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.GetMousePointerEventData
UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::PointerInputModule::GetMousePointerEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::GetMousePointerEventData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMousePointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.GetMousePointerEventData
UnityEngine::EventSystems::PointerInputModule::MouseState* UnityEngine::EventSystems::PointerInputModule::GetMousePointerEventData(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::GetMousePointerEventData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMousePointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerInputModule::MouseState*, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.GetLastPointerEventData
UnityEngine::EventSystems::PointerEventData* UnityEngine::EventSystems::PointerInputModule::GetLastPointerEventData(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::GetLastPointerEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastPointerEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData*, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.ShouldStartDrag
bool UnityEngine::EventSystems::PointerInputModule::ShouldStartDrag(UnityEngine::Vector2 pressPos, UnityEngine::Vector2 currentPos, float threshold, bool useDragThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ShouldStartDrag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PointerInputModule", "ShouldStartDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressPos), ::il2cpp_utils::ExtractType(currentPos), ::il2cpp_utils::ExtractType(threshold), ::il2cpp_utils::ExtractType(useDragThreshold)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pressPos, currentPos, threshold, useDragThreshold);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.ProcessMove
void UnityEngine::EventSystems::PointerInputModule::ProcessMove(UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ProcessMove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.ProcessDrag
void UnityEngine::EventSystems::PointerInputModule::ProcessDrag(UnityEngine::EventSystems::PointerEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ProcessDrag");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDrag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.ClearSelection
void UnityEngine::EventSystems::PointerInputModule::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.DeselectIfSelectionChanged
void UnityEngine::EventSystems::PointerInputModule::DeselectIfSelectionChanged(UnityEngine::GameObject* currentOverGo, UnityEngine::EventSystems::BaseEventData* pointerEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::DeselectIfSelectionChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeselectIfSelectionChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentOverGo), ::il2cpp_utils::ExtractType(pointerEvent)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentOverGo, pointerEvent);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.IsPointerOverGameObject
bool UnityEngine::EventSystems::PointerInputModule::IsPointerOverGameObject(int pointerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::IsPointerOverGameObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerOverGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pointerId);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule.ToString
::Il2CppString* UnityEngine::EventSystems::PointerInputModule::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PointerInputModule::GetPointerData
// Il2CppName: GetPointerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::*)(int, UnityEngine::EventSystems::PointerEventData*&, bool)>(&PointerInputModule::GetPointerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "GetPointerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::RemovePointerData
// Il2CppName: RemovePointerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)(UnityEngine::EventSystems::PointerEventData*)>(&PointerInputModule::RemovePointerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "RemovePointerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::GetTouchPointerEventData
// Il2CppName: GetTouchPointerEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerEventData* (PointerInputModule::*)(UnityEngine::Touch, bool&, bool&)>(&PointerInputModule::GetTouchPointerEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "GetTouchPointerEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Touch>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::CopyFromTo
// Il2CppName: CopyFromTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::EventSystems::PointerEventData*)>(&PointerInputModule::CopyFromTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "CopyFromTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::StateForMouseButton
// Il2CppName: StateForMouseButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerEventData::FramePressState (PointerInputModule::*)(int)>(&PointerInputModule::StateForMouseButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "StateForMouseButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::GetMousePointerEventData
// Il2CppName: GetMousePointerEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerInputModule::MouseState* (PointerInputModule::*)()>(&PointerInputModule::GetMousePointerEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "GetMousePointerEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::GetMousePointerEventData
// Il2CppName: GetMousePointerEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerInputModule::MouseState* (PointerInputModule::*)(int)>(&PointerInputModule::GetMousePointerEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "GetMousePointerEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::GetLastPointerEventData
// Il2CppName: GetLastPointerEventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerEventData* (PointerInputModule::*)(int)>(&PointerInputModule::GetLastPointerEventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "GetLastPointerEventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ShouldStartDrag
// Il2CppName: ShouldStartDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector2, UnityEngine::Vector2, float, bool)>(&PointerInputModule::ShouldStartDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "ShouldStartDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ProcessMove
// Il2CppName: ProcessMove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)(UnityEngine::EventSystems::PointerEventData*)>(&PointerInputModule::ProcessMove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "ProcessMove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ProcessDrag
// Il2CppName: ProcessDrag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)(UnityEngine::EventSystems::PointerEventData*)>(&PointerInputModule::ProcessDrag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "ProcessDrag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ClearSelection
// Il2CppName: ClearSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)()>(&PointerInputModule::ClearSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "ClearSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::DeselectIfSelectionChanged
// Il2CppName: DeselectIfSelectionChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)(UnityEngine::GameObject*, UnityEngine::EventSystems::BaseEventData*)>(&PointerInputModule::DeselectIfSelectionChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "DeselectIfSelectionChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::IsPointerOverGameObject
// Il2CppName: IsPointerOverGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::*)(int)>(&PointerInputModule::IsPointerOverGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "IsPointerOverGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PointerInputModule::*)()>(&PointerInputModule::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)()>(&PointerInputModule::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::*)()>(&PointerInputModule::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerInputModule/ButtonState
#include "UnityEngine/EventSystems/PointerInputModule_ButtonState.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/ButtonState.get_eventData
UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* UnityEngine::EventSystems::PointerInputModule::ButtonState::get_eventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ButtonState::get_eventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/ButtonState.set_eventData
void UnityEngine::EventSystems::PointerInputModule::ButtonState::set_eventData(UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ButtonState::set_eventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/ButtonState.get_button
UnityEngine::EventSystems::PointerEventData::InputButton UnityEngine::EventSystems::PointerInputModule::ButtonState::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ButtonState::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerEventData::InputButton, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/ButtonState.set_button
void UnityEngine::EventSystems::PointerInputModule::ButtonState::set_button(UnityEngine::EventSystems::PointerEventData::InputButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::ButtonState::set_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: PointerInputModule::ButtonState::get_eventData
// Il2CppName: get_eventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* (PointerInputModule::ButtonState::*)()>(&PointerInputModule::ButtonState::get_eventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), "get_eventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ButtonState::set_eventData
// Il2CppName: set_eventData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::ButtonState::*)(UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData*)>(&PointerInputModule::ButtonState::set_eventData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), "set_eventData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ButtonState::get_button
// Il2CppName: get_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerEventData::InputButton (PointerInputModule::ButtonState::*)()>(&PointerInputModule::ButtonState::get_button)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), "get_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ButtonState::set_button
// Il2CppName: set_button
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::ButtonState::*)(UnityEngine::EventSystems::PointerEventData::InputButton)>(&PointerInputModule::ButtonState::set_button)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), "set_button", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData::InputButton>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::ButtonState::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::ButtonState::*)()>(&PointerInputModule::ButtonState::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::ButtonState::*)()>(&PointerInputModule::ButtonState::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::ButtonState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseState
#include "UnityEngine/EventSystems/PointerInputModule_MouseState.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/ButtonState
#include "UnityEngine/EventSystems/PointerInputModule_ButtonState.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData/FramePressState
#include "UnityEngine/EventSystems/PointerEventData_FramePressState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseState.AnyPressesThisFrame
bool UnityEngine::EventSystems::PointerInputModule::MouseState::AnyPressesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseState::AnyPressesThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyPressesThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseState.AnyReleasesThisFrame
bool UnityEngine::EventSystems::PointerInputModule::MouseState::AnyReleasesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseState::AnyReleasesThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyReleasesThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseState.GetButtonState
UnityEngine::EventSystems::PointerInputModule::ButtonState* UnityEngine::EventSystems::PointerInputModule::MouseState::GetButtonState(UnityEngine::EventSystems::PointerEventData::InputButton button) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseState::GetButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::PointerInputModule::ButtonState*, false>(this, ___internal__method, button);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseState.SetButtonState
void UnityEngine::EventSystems::PointerInputModule::MouseState::SetButtonState(UnityEngine::EventSystems::PointerEventData::InputButton button, UnityEngine::EventSystems::PointerEventData::FramePressState stateForMouseButton, UnityEngine::EventSystems::PointerEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseState::SetButtonState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetButtonState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(button), ::il2cpp_utils::ExtractType(stateForMouseButton), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, button, stateForMouseButton, data);
}
// Writing MetadataGetter for method: PointerInputModule::MouseState::AnyPressesThisFrame
// Il2CppName: AnyPressesThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::MouseState::*)()>(&PointerInputModule::MouseState::AnyPressesThisFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), "AnyPressesThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseState::AnyReleasesThisFrame
// Il2CppName: AnyReleasesThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::MouseState::*)()>(&PointerInputModule::MouseState::AnyReleasesThisFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), "AnyReleasesThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseState::GetButtonState
// Il2CppName: GetButtonState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::PointerInputModule::ButtonState* (PointerInputModule::MouseState::*)(UnityEngine::EventSystems::PointerEventData::InputButton)>(&PointerInputModule::MouseState::GetButtonState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), "GetButtonState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData::InputButton>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseState::SetButtonState
// Il2CppName: SetButtonState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::MouseState::*)(UnityEngine::EventSystems::PointerEventData::InputButton, UnityEngine::EventSystems::PointerEventData::FramePressState, UnityEngine::EventSystems::PointerEventData*)>(&PointerInputModule::MouseState::SetButtonState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), "SetButtonState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData::InputButton>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData::FramePressState>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>()});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseState::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::MouseState::*)()>(&PointerInputModule::MouseState::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::MouseState::*)()>(&PointerInputModule::MouseState::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseState*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData.PressedThisFrame
bool UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData::PressedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData::PressedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData.ReleasedThisFrame
bool UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData::ReleasedThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData::ReleasedThisFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleasedThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PointerInputModule::MouseButtonEventData::PressedThisFrame
// Il2CppName: PressedThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::MouseButtonEventData::*)()>(&PointerInputModule::MouseButtonEventData::PressedThisFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseButtonEventData*), "PressedThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseButtonEventData::ReleasedThisFrame
// Il2CppName: ReleasedThisFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PointerInputModule::MouseButtonEventData::*)()>(&PointerInputModule::MouseButtonEventData::ReleasedThisFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseButtonEventData*), "ReleasedThisFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PointerInputModule::MouseButtonEventData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::MouseButtonEventData::*)()>(&PointerInputModule::MouseButtonEventData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseButtonEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PointerInputModule::MouseButtonEventData::*)()>(&PointerInputModule::MouseButtonEventData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PointerInputModule::MouseButtonEventData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.StandaloneInputModule
#include "UnityEngine/EventSystems/StandaloneInputModule.hpp"
// Including type: UnityEngine.EventSystems.StandaloneInputModule/InputMode
#include "UnityEngine/EventSystems/StandaloneInputModule_InputMode.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.PointerInputModule/MouseButtonEventData
#include "UnityEngine/EventSystems/PointerInputModule_MouseButtonEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_inputMode
UnityEngine::EventSystems::StandaloneInputModule::InputMode UnityEngine::EventSystems::StandaloneInputModule::get_inputMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_inputMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::StandaloneInputModule::InputMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_allowActivationOnMobileDevice
bool UnityEngine::EventSystems::StandaloneInputModule::get_allowActivationOnMobileDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_allowActivationOnMobileDevice
void UnityEngine::EventSystems::StandaloneInputModule::set_allowActivationOnMobileDevice(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_allowActivationOnMobileDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_forceModuleActive
bool UnityEngine::EventSystems::StandaloneInputModule::get_forceModuleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_forceModuleActive
void UnityEngine::EventSystems::StandaloneInputModule::set_forceModuleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_inputActionsPerSecond
float UnityEngine::EventSystems::StandaloneInputModule::get_inputActionsPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_inputActionsPerSecond
void UnityEngine::EventSystems::StandaloneInputModule::set_inputActionsPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_inputActionsPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inputActionsPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_repeatDelay
float UnityEngine::EventSystems::StandaloneInputModule::get_repeatDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_repeatDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_repeatDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_repeatDelay
void UnityEngine::EventSystems::StandaloneInputModule::set_repeatDelay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_repeatDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_repeatDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_horizontalAxis
::Il2CppString* UnityEngine::EventSystems::StandaloneInputModule::get_horizontalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_horizontalAxis
void UnityEngine::EventSystems::StandaloneInputModule::set_horizontalAxis(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_horizontalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_verticalAxis
::Il2CppString* UnityEngine::EventSystems::StandaloneInputModule::get_verticalAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_verticalAxis
void UnityEngine::EventSystems::StandaloneInputModule::set_verticalAxis(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_verticalAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_submitButton
::Il2CppString* UnityEngine::EventSystems::StandaloneInputModule::get_submitButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_submitButton
void UnityEngine::EventSystems::StandaloneInputModule::set_submitButton(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_submitButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_submitButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.get_cancelButton
::Il2CppString* UnityEngine::EventSystems::StandaloneInputModule::get_cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::get_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.set_cancelButton
void UnityEngine::EventSystems::StandaloneInputModule::set_cancelButton(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::set_cancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ShouldIgnoreEventsOnNoFocus
bool UnityEngine::EventSystems::StandaloneInputModule::ShouldIgnoreEventsOnNoFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ShouldIgnoreEventsOnNoFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldIgnoreEventsOnNoFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ReleaseMouse
void UnityEngine::EventSystems::StandaloneInputModule::ReleaseMouse(UnityEngine::EventSystems::PointerEventData* pointerEvent, UnityEngine::GameObject* currentOverGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ReleaseMouse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseMouse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(currentOverGo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent, currentOverGo);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ProcessTouchEvents
bool UnityEngine::EventSystems::StandaloneInputModule::ProcessTouchEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ProcessTouchEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ProcessTouchPress
void UnityEngine::EventSystems::StandaloneInputModule::ProcessTouchPress(UnityEngine::EventSystems::PointerEventData* pointerEvent, bool pressed, bool released) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ProcessTouchPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent, pressed, released);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.SendSubmitEventToSelectedObject
bool UnityEngine::EventSystems::StandaloneInputModule::SendSubmitEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::SendSubmitEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.GetRawMoveVector
UnityEngine::Vector2 UnityEngine::EventSystems::StandaloneInputModule::GetRawMoveVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::GetRawMoveVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawMoveVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.SendMoveEventToSelectedObject
bool UnityEngine::EventSystems::StandaloneInputModule::SendMoveEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::SendMoveEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::StandaloneInputModule::ProcessMouseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ForceAutoSelect
bool UnityEngine::EventSystems::StandaloneInputModule::ForceAutoSelect() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ForceAutoSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceAutoSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ProcessMouseEvent
void UnityEngine::EventSystems::StandaloneInputModule::ProcessMouseEvent(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ProcessMouseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMouseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.SendUpdateEventToSelectedObject
bool UnityEngine::EventSystems::StandaloneInputModule::SendUpdateEventToSelectedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::SendUpdateEventToSelectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ProcessMousePress
void UnityEngine::EventSystems::StandaloneInputModule::ProcessMousePress(UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.GetCurrentFocusedGameObject
UnityEngine::GameObject* UnityEngine::EventSystems::StandaloneInputModule::GetCurrentFocusedGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::GetCurrentFocusedGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentFocusedGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.UpdateModule
void UnityEngine::EventSystems::StandaloneInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.IsModuleSupported
bool UnityEngine::EventSystems::StandaloneInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::StandaloneInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.ActivateModule
void UnityEngine::EventSystems::StandaloneInputModule::ActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::ActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.DeactivateModule
void UnityEngine::EventSystems::StandaloneInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.StandaloneInputModule.Process
void UnityEngine::EventSystems::StandaloneInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: StandaloneInputModule::get_inputMode
// Il2CppName: get_inputMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::StandaloneInputModule::InputMode (StandaloneInputModule::*)()>(&StandaloneInputModule::get_inputMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_inputMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_allowActivationOnMobileDevice
// Il2CppName: get_allowActivationOnMobileDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::get_allowActivationOnMobileDevice)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_allowActivationOnMobileDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_allowActivationOnMobileDevice
// Il2CppName: set_allowActivationOnMobileDevice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(bool)>(&StandaloneInputModule::set_allowActivationOnMobileDevice)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_allowActivationOnMobileDevice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_forceModuleActive
// Il2CppName: get_forceModuleActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::get_forceModuleActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_forceModuleActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_forceModuleActive
// Il2CppName: set_forceModuleActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(bool)>(&StandaloneInputModule::set_forceModuleActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_forceModuleActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_inputActionsPerSecond
// Il2CppName: get_inputActionsPerSecond
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (StandaloneInputModule::*)()>(&StandaloneInputModule::get_inputActionsPerSecond)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_inputActionsPerSecond", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_inputActionsPerSecond
// Il2CppName: set_inputActionsPerSecond
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(float)>(&StandaloneInputModule::set_inputActionsPerSecond)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_inputActionsPerSecond", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_repeatDelay
// Il2CppName: get_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (StandaloneInputModule::*)()>(&StandaloneInputModule::get_repeatDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_repeatDelay
// Il2CppName: set_repeatDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(float)>(&StandaloneInputModule::set_repeatDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_repeatDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_horizontalAxis
// Il2CppName: get_horizontalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StandaloneInputModule::*)()>(&StandaloneInputModule::get_horizontalAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_horizontalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_horizontalAxis
// Il2CppName: set_horizontalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(::Il2CppString*)>(&StandaloneInputModule::set_horizontalAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_horizontalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_verticalAxis
// Il2CppName: get_verticalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StandaloneInputModule::*)()>(&StandaloneInputModule::get_verticalAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_verticalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_verticalAxis
// Il2CppName: set_verticalAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(::Il2CppString*)>(&StandaloneInputModule::set_verticalAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_verticalAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_submitButton
// Il2CppName: get_submitButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StandaloneInputModule::*)()>(&StandaloneInputModule::get_submitButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_submitButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_submitButton
// Il2CppName: set_submitButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(::Il2CppString*)>(&StandaloneInputModule::set_submitButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_submitButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::get_cancelButton
// Il2CppName: get_cancelButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StandaloneInputModule::*)()>(&StandaloneInputModule::get_cancelButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "get_cancelButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::set_cancelButton
// Il2CppName: set_cancelButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(::Il2CppString*)>(&StandaloneInputModule::set_cancelButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "set_cancelButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ShouldIgnoreEventsOnNoFocus
// Il2CppName: ShouldIgnoreEventsOnNoFocus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::ShouldIgnoreEventsOnNoFocus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ShouldIgnoreEventsOnNoFocus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ReleaseMouse
// Il2CppName: ReleaseMouse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::GameObject*)>(&StandaloneInputModule::ReleaseMouse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ReleaseMouse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ProcessTouchEvents
// Il2CppName: ProcessTouchEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::ProcessTouchEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ProcessTouchEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ProcessTouchPress
// Il2CppName: ProcessTouchPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(UnityEngine::EventSystems::PointerEventData*, bool, bool)>(&StandaloneInputModule::ProcessTouchPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ProcessTouchPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::SendSubmitEventToSelectedObject
// Il2CppName: SendSubmitEventToSelectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::SendSubmitEventToSelectedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "SendSubmitEventToSelectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::GetRawMoveVector
// Il2CppName: GetRawMoveVector
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (StandaloneInputModule::*)()>(&StandaloneInputModule::GetRawMoveVector)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "GetRawMoveVector", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::SendMoveEventToSelectedObject
// Il2CppName: SendMoveEventToSelectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::SendMoveEventToSelectedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "SendMoveEventToSelectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ProcessMouseEvent
// Il2CppName: ProcessMouseEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::ProcessMouseEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ProcessMouseEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ForceAutoSelect
// Il2CppName: ForceAutoSelect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::ForceAutoSelect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ForceAutoSelect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ProcessMouseEvent
// Il2CppName: ProcessMouseEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(int)>(&StandaloneInputModule::ProcessMouseEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ProcessMouseEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::SendUpdateEventToSelectedObject
// Il2CppName: SendUpdateEventToSelectedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::SendUpdateEventToSelectedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "SendUpdateEventToSelectedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ProcessMousePress
// Il2CppName: ProcessMousePress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)(UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData*)>(&StandaloneInputModule::ProcessMousePress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ProcessMousePress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerInputModule::MouseButtonEventData*>()});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::GetCurrentFocusedGameObject
// Il2CppName: GetCurrentFocusedGameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (StandaloneInputModule::*)()>(&StandaloneInputModule::GetCurrentFocusedGameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "GetCurrentFocusedGameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::UpdateModule
// Il2CppName: UpdateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::UpdateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "UpdateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::IsModuleSupported
// Il2CppName: IsModuleSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::IsModuleSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "IsModuleSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ShouldActivateModule
// Il2CppName: ShouldActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StandaloneInputModule::*)()>(&StandaloneInputModule::ShouldActivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ShouldActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::ActivateModule
// Il2CppName: ActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::ActivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "ActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::DeactivateModule
// Il2CppName: DeactivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::DeactivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "DeactivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandaloneInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandaloneInputModule::*)()>(&StandaloneInputModule::Process)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandaloneInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.StandaloneInputModule/InputMode
#include "UnityEngine/EventSystems/StandaloneInputModule_InputMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.StandaloneInputModule/InputMode Mouse
UnityEngine::EventSystems::StandaloneInputModule::InputMode UnityEngine::EventSystems::StandaloneInputModule::InputMode::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::InputMode::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::StandaloneInputModule::InputMode>("UnityEngine.EventSystems", "StandaloneInputModule/InputMode", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.StandaloneInputModule/InputMode Mouse
void UnityEngine::EventSystems::StandaloneInputModule::InputMode::_set_Mouse(UnityEngine::EventSystems::StandaloneInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::InputMode::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "StandaloneInputModule/InputMode", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.StandaloneInputModule/InputMode Buttons
UnityEngine::EventSystems::StandaloneInputModule::InputMode UnityEngine::EventSystems::StandaloneInputModule::InputMode::_get_Buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::InputMode::_get_Buttons");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::StandaloneInputModule::InputMode>("UnityEngine.EventSystems", "StandaloneInputModule/InputMode", "Buttons"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.StandaloneInputModule/InputMode Buttons
void UnityEngine::EventSystems::StandaloneInputModule::InputMode::_set_Buttons(UnityEngine::EventSystems::StandaloneInputModule::InputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::StandaloneInputModule::InputMode::_set_Buttons");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "StandaloneInputModule/InputMode", "Buttons", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.TouchInputModule
#include "UnityEngine/EventSystems/TouchInputModule.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_allowActivationOnStandalone
bool UnityEngine::EventSystems::TouchInputModule::get_allowActivationOnStandalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::get_allowActivationOnStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowActivationOnStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_allowActivationOnStandalone
void UnityEngine::EventSystems::TouchInputModule::set_allowActivationOnStandalone(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::set_allowActivationOnStandalone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowActivationOnStandalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.get_forceModuleActive
bool UnityEngine::EventSystems::TouchInputModule::get_forceModuleActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::get_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.set_forceModuleActive
void UnityEngine::EventSystems::TouchInputModule::set_forceModuleActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::set_forceModuleActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_forceModuleActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UseFakeInput
bool UnityEngine::EventSystems::TouchInputModule::UseFakeInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::UseFakeInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseFakeInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.FakeTouches
void UnityEngine::EventSystems::TouchInputModule::FakeTouches() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::FakeTouches");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeTouches", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchEvents
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::ProcessTouchEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ProcessTouchPress
void UnityEngine::EventSystems::TouchInputModule::ProcessTouchPress(UnityEngine::EventSystems::PointerEventData* pointerEvent, bool pressed, bool released) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::ProcessTouchPress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessTouchPress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointerEvent), ::il2cpp_utils::ExtractType(pressed), ::il2cpp_utils::ExtractType(released)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pointerEvent, pressed, released);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.UpdateModule
void UnityEngine::EventSystems::TouchInputModule::UpdateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::UpdateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.IsModuleSupported
bool UnityEngine::EventSystems::TouchInputModule::IsModuleSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::IsModuleSupported");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModuleSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ShouldActivateModule
bool UnityEngine::EventSystems::TouchInputModule::ShouldActivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::ShouldActivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldActivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.Process
void UnityEngine::EventSystems::TouchInputModule::Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::Process");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.DeactivateModule
void UnityEngine::EventSystems::TouchInputModule::DeactivateModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::DeactivateModule");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateModule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.TouchInputModule.ToString
::Il2CppString* UnityEngine::EventSystems::TouchInputModule::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::TouchInputModule::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TouchInputModule::get_allowActivationOnStandalone
// Il2CppName: get_allowActivationOnStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchInputModule::*)()>(&TouchInputModule::get_allowActivationOnStandalone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "get_allowActivationOnStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::set_allowActivationOnStandalone
// Il2CppName: set_allowActivationOnStandalone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)(bool)>(&TouchInputModule::set_allowActivationOnStandalone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "set_allowActivationOnStandalone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchInputModule::get_forceModuleActive
// Il2CppName: get_forceModuleActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchInputModule::*)()>(&TouchInputModule::get_forceModuleActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "get_forceModuleActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::set_forceModuleActive
// Il2CppName: set_forceModuleActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)(bool)>(&TouchInputModule::set_forceModuleActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "set_forceModuleActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchInputModule::UseFakeInput
// Il2CppName: UseFakeInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchInputModule::*)()>(&TouchInputModule::UseFakeInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "UseFakeInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::FakeTouches
// Il2CppName: FakeTouches
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::FakeTouches)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "FakeTouches", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::ProcessTouchEvents
// Il2CppName: ProcessTouchEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::ProcessTouchEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "ProcessTouchEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::ProcessTouchPress
// Il2CppName: ProcessTouchPress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)(UnityEngine::EventSystems::PointerEventData*, bool, bool)>(&TouchInputModule::ProcessTouchPress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "ProcessTouchPress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TouchInputModule::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::UpdateModule
// Il2CppName: UpdateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::UpdateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "UpdateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::IsModuleSupported
// Il2CppName: IsModuleSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchInputModule::*)()>(&TouchInputModule::IsModuleSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "IsModuleSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::ShouldActivateModule
// Il2CppName: ShouldActivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TouchInputModule::*)()>(&TouchInputModule::ShouldActivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "ShouldActivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::Process
// Il2CppName: Process
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::Process)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "Process", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::DeactivateModule
// Il2CppName: DeactivateModule
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TouchInputModule::*)()>(&TouchInputModule::DeactivateModule)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "DeactivateModule", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TouchInputModule::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TouchInputModule::*)()>(&TouchInputModule::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TouchInputModule*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.MoveDirection
#include "UnityEngine/EventSystems/MoveDirection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Left
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Left
void UnityEngine::EventSystems::MoveDirection::_set_Left(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Up
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Up
void UnityEngine::EventSystems::MoveDirection::_set_Up(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Right
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Right
void UnityEngine::EventSystems::MoveDirection::_set_Right(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection Down
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection Down
void UnityEngine::EventSystems::MoveDirection::_set_Down(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.MoveDirection None
UnityEngine::EventSystems::MoveDirection UnityEngine::EventSystems::MoveDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::MoveDirection>("UnityEngine.EventSystems", "MoveDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.MoveDirection None
void UnityEngine::EventSystems::MoveDirection::_set_None(UnityEngine::EventSystems::MoveDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::MoveDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "MoveDirection", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.RaycastResult
#include "UnityEngine/EventSystems/RaycastResult.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.get_gameObject
UnityEngine::GameObject* UnityEngine::EventSystems::RaycastResult::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycastResult::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.set_gameObject
void UnityEngine::EventSystems::RaycastResult::set_gameObject(UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycastResult::set_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.get_isValid
bool UnityEngine::EventSystems::RaycastResult::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycastResult::get_isValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.Clear
void UnityEngine::EventSystems::RaycastResult::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycastResult::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycastResult.ToString
::Il2CppString* UnityEngine::EventSystems::RaycastResult::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycastResult::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RaycastResult::get_gameObject
// Il2CppName: get_gameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::GameObject* (RaycastResult::*)()>(&RaycastResult::get_gameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycastResult), "get_gameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RaycastResult::set_gameObject
// Il2CppName: set_gameObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RaycastResult::*)(UnityEngine::GameObject*)>(&RaycastResult::set_gameObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycastResult), "set_gameObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: RaycastResult::get_isValid
// Il2CppName: get_isValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RaycastResult::*)()>(&RaycastResult::get_isValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycastResult), "get_isValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RaycastResult::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RaycastResult::*)()>(&RaycastResult::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycastResult), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RaycastResult::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (RaycastResult::*)()>(&RaycastResult::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycastResult), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.RaycasterManager
#include "UnityEngine/EventSystems/RaycasterManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseRaycaster> s_Raycasters
System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>* UnityEngine::EventSystems::RaycasterManager::_get_s_Raycasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::_get_s_Raycasters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>*>("UnityEngine.EventSystems", "RaycasterManager", "s_Raycasters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.EventSystems.BaseRaycaster> s_Raycasters
void UnityEngine::EventSystems::RaycasterManager::_set_s_Raycasters(System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::_set_s_Raycasters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "RaycasterManager", "s_Raycasters", value));
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.AddRaycaster
void UnityEngine::EventSystems::RaycasterManager::AddRaycaster(UnityEngine::EventSystems::BaseRaycaster* baseRaycaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::AddRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "AddRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRaycaster)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseRaycaster);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.GetRaycasters
System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>* UnityEngine::EventSystems::RaycasterManager::GetRaycasters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::GetRaycasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "GetRaycasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager.RemoveRaycasters
void UnityEngine::EventSystems::RaycasterManager::RemoveRaycasters(UnityEngine::EventSystems::BaseRaycaster* baseRaycaster) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::RemoveRaycasters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", "RemoveRaycasters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseRaycaster)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseRaycaster);
}
// Autogenerated method: UnityEngine.EventSystems.RaycasterManager..cctor
void UnityEngine::EventSystems::RaycasterManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::RaycasterManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "RaycasterManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: RaycasterManager::AddRaycaster
// Il2CppName: AddRaycaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::BaseRaycaster*)>(&RaycasterManager::AddRaycaster)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycasterManager*), "AddRaycaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseRaycaster*>()});
  }
};
// Writing MetadataGetter for method: RaycasterManager::GetRaycasters
// Il2CppName: GetRaycasters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<UnityEngine::EventSystems::BaseRaycaster*>* (*)()>(&RaycasterManager::GetRaycasters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycasterManager*), "GetRaycasters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RaycasterManager::RemoveRaycasters
// Il2CppName: RemoveRaycasters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::EventSystems::BaseRaycaster*)>(&RaycasterManager::RemoveRaycasters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycasterManager*), "RemoveRaycasters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::BaseRaycaster*>()});
  }
};
// Writing MetadataGetter for method: RaycasterManager::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RaycasterManager::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RaycasterManager*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.BaseRaycaster
#include "UnityEngine/EventSystems/BaseRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.Raycast
void UnityEngine::EventSystems::BaseRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_eventCamera
UnityEngine::Camera* UnityEngine::EventSystems::BaseRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_priority
int UnityEngine::EventSystems::BaseRaycaster::get_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::get_priority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_sortOrderPriority
int UnityEngine::EventSystems::BaseRaycaster::get_sortOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::get_sortOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_renderOrderPriority
int UnityEngine::EventSystems::BaseRaycaster::get_renderOrderPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::get_renderOrderPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderOrderPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.get_rootRaycaster
UnityEngine::EventSystems::BaseRaycaster* UnityEngine::EventSystems::BaseRaycaster::get_rootRaycaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::get_rootRaycaster");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRaycaster", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::EventSystems::BaseRaycaster*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.ToString
::Il2CppString* UnityEngine::EventSystems::BaseRaycaster::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnEnable
void UnityEngine::EventSystems::BaseRaycaster::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnDisable
void UnityEngine::EventSystems::BaseRaycaster::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnCanvasHierarchyChanged
void UnityEngine::EventSystems::BaseRaycaster::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.BaseRaycaster.OnTransformParentChanged
void UnityEngine::EventSystems::BaseRaycaster::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::BaseRaycaster::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BaseRaycaster::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)(UnityEngine::EventSystems::PointerEventData*, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&BaseRaycaster::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::get_eventCamera
// Il2CppName: get_eventCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (BaseRaycaster::*)()>(&BaseRaycaster::get_eventCamera)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "get_eventCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::get_priority
// Il2CppName: get_priority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseRaycaster::*)()>(&BaseRaycaster::get_priority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "get_priority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::get_sortOrderPriority
// Il2CppName: get_sortOrderPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseRaycaster::*)()>(&BaseRaycaster::get_sortOrderPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "get_sortOrderPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::get_renderOrderPriority
// Il2CppName: get_renderOrderPriority
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BaseRaycaster::*)()>(&BaseRaycaster::get_renderOrderPriority)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "get_renderOrderPriority", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::get_rootRaycaster
// Il2CppName: get_rootRaycaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::EventSystems::BaseRaycaster* (BaseRaycaster::*)()>(&BaseRaycaster::get_rootRaycaster)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "get_rootRaycaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BaseRaycaster::*)()>(&BaseRaycaster::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseRaycaster::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseRaycaster::*)()>(&BaseRaycaster::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.Physics2DRaycaster
#include "UnityEngine/EventSystems/Physics2DRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.Physics2DRaycaster.Raycast
void UnityEngine::EventSystems::Physics2DRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::Physics2DRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Writing MetadataGetter for method: Physics2DRaycaster::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Physics2DRaycaster::*)()>(&Physics2DRaycaster::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics2DRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Physics2DRaycaster::*)()>(&Physics2DRaycaster::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics2DRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Physics2DRaycaster::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Physics2DRaycaster::*)(UnityEngine::EventSystems::PointerEventData*, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&Physics2DRaycaster::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Physics2DRaycaster*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.EventSystems.PhysicsRaycaster
#include "UnityEngine/EventSystems/PhysicsRaycaster.hpp"
// Including type: UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer
#include "UnityEngine/EventSystems/PhysicsRaycaster_RaycastHitComparer.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Int32 kNoEventMaskSet
int UnityEngine::EventSystems::PhysicsRaycaster::_get_kNoEventMaskSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::_get_kNoEventMaskSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.EventSystems", "PhysicsRaycaster", "kNoEventMaskSet"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 kNoEventMaskSet
void UnityEngine::EventSystems::PhysicsRaycaster::_set_kNoEventMaskSet(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::_set_kNoEventMaskSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PhysicsRaycaster", "kNoEventMaskSet", value));
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_depth
int UnityEngine::EventSystems::PhysicsRaycaster::get_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::get_depth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_depth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_finalEventMask
int UnityEngine::EventSystems::PhysicsRaycaster::get_finalEventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::get_finalEventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalEventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_eventMask
UnityEngine::LayerMask UnityEngine::EventSystems::PhysicsRaycaster::get_eventMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::get_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.set_eventMask
void UnityEngine::EventSystems::PhysicsRaycaster::set_eventMask(UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::set_eventMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eventMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_maxRayIntersections
int UnityEngine::EventSystems::PhysicsRaycaster::get_maxRayIntersections() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::get_maxRayIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxRayIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.set_maxRayIntersections
void UnityEngine::EventSystems::PhysicsRaycaster::set_maxRayIntersections(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::set_maxRayIntersections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxRayIntersections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.ComputeRayAndDistance
bool UnityEngine::EventSystems::PhysicsRaycaster::ComputeRayAndDistance(UnityEngine::EventSystems::PointerEventData* eventData, UnityEngine::Ray& ray, int& eventDisplayIndex, float& distanceToClipPlane) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::ComputeRayAndDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeRayAndDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(ray), ::il2cpp_utils::ExtractType(eventDisplayIndex), ::il2cpp_utils::ExtractType(distanceToClipPlane)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, eventData, ray, eventDisplayIndex, distanceToClipPlane);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.get_eventCamera
UnityEngine::Camera* UnityEngine::EventSystems::PhysicsRaycaster::get_eventCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::get_eventCamera");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster.Raycast
void UnityEngine::EventSystems::PhysicsRaycaster::Raycast(UnityEngine::EventSystems::PointerEventData* eventData, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>* resultAppendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::Raycast");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Raycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData), ::il2cpp_utils::ExtractType(resultAppendList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, resultAppendList);
}
// Writing MetadataGetter for method: PhysicsRaycaster::get_depth
// Il2CppName: get_depth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsRaycaster::*)()>(&PhysicsRaycaster::get_depth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "get_depth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::get_finalEventMask
// Il2CppName: get_finalEventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsRaycaster::*)()>(&PhysicsRaycaster::get_finalEventMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "get_finalEventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::get_eventMask
// Il2CppName: get_eventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::LayerMask (PhysicsRaycaster::*)()>(&PhysicsRaycaster::get_eventMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "get_eventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::set_eventMask
// Il2CppName: set_eventMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::*)(UnityEngine::LayerMask)>(&PhysicsRaycaster::set_eventMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "set_eventMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::LayerMask>()});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::get_maxRayIntersections
// Il2CppName: get_maxRayIntersections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsRaycaster::*)()>(&PhysicsRaycaster::get_maxRayIntersections)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "get_maxRayIntersections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::set_maxRayIntersections
// Il2CppName: set_maxRayIntersections
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::*)(int)>(&PhysicsRaycaster::set_maxRayIntersections)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "set_maxRayIntersections", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::ComputeRayAndDistance
// Il2CppName: ComputeRayAndDistance
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PhysicsRaycaster::*)(UnityEngine::EventSystems::PointerEventData*, UnityEngine::Ray&, int&, float&)>(&PhysicsRaycaster::ComputeRayAndDistance)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "ComputeRayAndDistance", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Ray&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<float&>()});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::*)()>(&PhysicsRaycaster::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::*)()>(&PhysicsRaycaster::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::get_eventCamera
// Il2CppName: get_eventCamera
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Camera* (PhysicsRaycaster::*)()>(&PhysicsRaycaster::get_eventCamera)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "get_eventCamera", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::Raycast
// Il2CppName: Raycast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::*)(UnityEngine::EventSystems::PointerEventData*, System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*)>(&PhysicsRaycaster::Raycast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster*), "Raycast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::EventSystems::PointerEventData*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::EventSystems::RaycastResult>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer
#include "UnityEngine/EventSystems/PhysicsRaycaster_RaycastHitComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer instance
UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer* UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer*>("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", "instance"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer instance
void UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_set_instance(UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", "instance", value));
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer.Compare
int UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::Compare(UnityEngine::RaycastHit x, UnityEngine::RaycastHit y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.EventSystems.PhysicsRaycaster/RaycastHitComparer..cctor
void UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::PhysicsRaycaster::RaycastHitComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.EventSystems", "PhysicsRaycaster/RaycastHitComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PhysicsRaycaster::RaycastHitComparer::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PhysicsRaycaster::RaycastHitComparer::*)(UnityEngine::RaycastHit, UnityEngine::RaycastHit)>(&PhysicsRaycaster::RaycastHitComparer::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster::RaycastHitComparer*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RaycastHit>()});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::RaycastHitComparer::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PhysicsRaycaster::RaycastHitComparer::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster::RaycastHitComparer*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PhysicsRaycaster::RaycastHitComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::RaycastHitComparer::*)()>(&PhysicsRaycaster::RaycastHitComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster::RaycastHitComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PhysicsRaycaster::RaycastHitComparer::*)()>(&PhysicsRaycaster::RaycastHitComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PhysicsRaycaster::RaycastHitComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.EventSystems.UIBehaviour
#include "UnityEngine/EventSystems/UIBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.Awake
void UnityEngine::EventSystems::UIBehaviour::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnEnable
void UnityEngine::EventSystems::UIBehaviour::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.Start
void UnityEngine::EventSystems::UIBehaviour::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDisable
void UnityEngine::EventSystems::UIBehaviour::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDestroy
void UnityEngine::EventSystems::UIBehaviour::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.IsActive
bool UnityEngine::EventSystems::UIBehaviour::IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::IsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange
void UnityEngine::EventSystems::UIBehaviour::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged
void UnityEngine::EventSystems::UIBehaviour::OnBeforeTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnBeforeTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnTransformParentChanged
void UnityEngine::EventSystems::UIBehaviour::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnDidApplyAnimationProperties
void UnityEngine::EventSystems::UIBehaviour::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnCanvasGroupChanged
void UnityEngine::EventSystems::UIBehaviour::OnCanvasGroupChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnCanvasGroupChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasGroupChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged
void UnityEngine::EventSystems::UIBehaviour::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.EventSystems.UIBehaviour.IsDestroyed
bool UnityEngine::EventSystems::UIBehaviour::IsDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::EventSystems::UIBehaviour::IsDestroyed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UIBehaviour::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::IsActive
// Il2CppName: IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UIBehaviour::*)()>(&UIBehaviour::IsActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnRectTransformDimensionsChange
// Il2CppName: OnRectTransformDimensionsChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnRectTransformDimensionsChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnBeforeTransformParentChanged
// Il2CppName: OnBeforeTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnBeforeTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnBeforeTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnTransformParentChanged
// Il2CppName: OnTransformParentChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnTransformParentChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnTransformParentChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnDidApplyAnimationProperties
// Il2CppName: OnDidApplyAnimationProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnDidApplyAnimationProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnCanvasGroupChanged
// Il2CppName: OnCanvasGroupChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnCanvasGroupChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnCanvasGroupChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::OnCanvasHierarchyChanged
// Il2CppName: OnCanvasHierarchyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::OnCanvasHierarchyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::IsDestroyed
// Il2CppName: IsDestroyed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UIBehaviour::*)()>(&UIBehaviour::IsDestroyed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), "IsDestroyed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UIBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UIBehaviour::*)()>(&UIBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UIBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ICanvasRaycastFilter
#include "UnityEngine/ICanvasRaycastFilter.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ICanvasRaycastFilter.IsRaycastLocationValid
bool UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::ICanvasRaycastFilter::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Writing MetadataGetter for method: ICanvasRaycastFilter::IsRaycastLocationValid
// Il2CppName: IsRaycastLocationValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ICanvasRaycastFilter::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&ICanvasRaycastFilter::IsRaycastLocationValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICanvasRaycastFilter*), "IsRaycastLocationValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CanvasGroup.get_alpha
float UnityEngine::CanvasGroup::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_alpha
void UnityEngine::CanvasGroup::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_interactable
bool UnityEngine::CanvasGroup::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_interactable
void UnityEngine::CanvasGroup::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_blocksRaycasts
bool UnityEngine::CanvasGroup::get_blocksRaycasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::get_blocksRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blocksRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_blocksRaycasts
void UnityEngine::CanvasGroup::set_blocksRaycasts(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::set_blocksRaycasts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blocksRaycasts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.get_ignoreParentGroups
bool UnityEngine::CanvasGroup::get_ignoreParentGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::get_ignoreParentGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreParentGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasGroup.set_ignoreParentGroups
void UnityEngine::CanvasGroup::set_ignoreParentGroups(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::set_ignoreParentGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreParentGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasGroup.IsRaycastLocationValid
bool UnityEngine::CanvasGroup::IsRaycastLocationValid(UnityEngine::Vector2 sp, UnityEngine::Camera* eventCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasGroup::IsRaycastLocationValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRaycastLocationValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sp), ::il2cpp_utils::ExtractType(eventCamera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sp, eventCamera);
}
// Writing MetadataGetter for method: CanvasGroup::get_alpha
// Il2CppName: get_alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CanvasGroup::*)()>(&CanvasGroup::get_alpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "get_alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasGroup::set_alpha
// Il2CppName: set_alpha
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasGroup::*)(float)>(&CanvasGroup::set_alpha)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "set_alpha", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CanvasGroup::get_interactable
// Il2CppName: get_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasGroup::*)()>(&CanvasGroup::get_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "get_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasGroup::set_interactable
// Il2CppName: set_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasGroup::*)(bool)>(&CanvasGroup::set_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "set_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CanvasGroup::get_blocksRaycasts
// Il2CppName: get_blocksRaycasts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasGroup::*)()>(&CanvasGroup::get_blocksRaycasts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "get_blocksRaycasts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasGroup::set_blocksRaycasts
// Il2CppName: set_blocksRaycasts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasGroup::*)(bool)>(&CanvasGroup::set_blocksRaycasts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "set_blocksRaycasts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CanvasGroup::get_ignoreParentGroups
// Il2CppName: get_ignoreParentGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasGroup::*)()>(&CanvasGroup::get_ignoreParentGroups)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "get_ignoreParentGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasGroup::set_ignoreParentGroups
// Il2CppName: set_ignoreParentGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasGroup::*)(bool)>(&CanvasGroup::set_ignoreParentGroups)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "set_ignoreParentGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CanvasGroup::IsRaycastLocationValid
// Il2CppName: IsRaycastLocationValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasGroup::*)(UnityEngine::Vector2, UnityEngine::Camera*)>(&CanvasGroup::IsRaycastLocationValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasGroup*), "IsRaycastLocationValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CanvasRenderer.set_hasPopInstruction
void UnityEngine::CanvasRenderer::set_hasPopInstruction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_hasPopInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasPopInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_materialCount
int UnityEngine::CanvasRenderer::get_materialCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::get_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_materialCount
void UnityEngine::CanvasRenderer::set_materialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_materialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_materialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_popMaterialCount
void UnityEngine::CanvasRenderer::set_popMaterialCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_popMaterialCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_popMaterialCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_absoluteDepth
int UnityEngine::CanvasRenderer::get_absoluteDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::get_absoluteDepth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_absoluteDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_hasMoved
bool UnityEngine::CanvasRenderer::get_hasMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::get_hasMoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasMoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.get_cull
bool UnityEngine::CanvasRenderer::get_cull() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::get_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_cull
void UnityEngine::CanvasRenderer::set_cull(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_cull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor
void UnityEngine::CanvasRenderer::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor
UnityEngine::Color UnityEngine::CanvasRenderer::GetColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping
void UnityEngine::CanvasRenderer::EnableRectClipping(UnityEngine::Rect rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::EnableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_clippingSoftness
void UnityEngine::CanvasRenderer::set_clippingSoftness(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_clippingSoftness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clippingSoftness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CanvasRenderer.DisableRectClipping
void UnityEngine::CanvasRenderer::DisableRectClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::DisableRectClipping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableRectClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetPopMaterial
void UnityEngine::CanvasRenderer::SetPopMaterial(UnityEngine::Material* material, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetPopMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPopMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, material, index);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetTexture
void UnityEngine::CanvasRenderer::SetTexture(UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetAlphaTexture
void UnityEngine::CanvasRenderer::SetAlphaTexture(UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetAlphaTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAlphaTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMesh
void UnityEngine::CanvasRenderer::SetMesh(UnityEngine::Mesh* mesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh);
}
// Autogenerated method: UnityEngine.CanvasRenderer.Clear
void UnityEngine::CanvasRenderer::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetMaterial
void UnityEngine::CanvasRenderer::SetMaterial(UnityEngine::Material* material, UnityEngine::Texture* texture) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(texture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, material, texture);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetMaterial
UnityEngine::Material* UnityEngine::CanvasRenderer::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreams
void UnityEngine::CanvasRenderer::SplitUIVertexStreams(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents, System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SplitUIVertexStreams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStream
void UnityEngine::CanvasRenderer::CreateUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents, System::Collections::Generic::List_1<int>* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::CreateUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.AddUIVertexStream
void UnityEngine::CanvasRenderer::AddUIVertexStream(System::Collections::Generic::List_1<UnityEngine::UIVertex>* verts, System::Collections::Generic::List_1<UnityEngine::Vector3>* positions, System::Collections::Generic::List_1<UnityEngine::Color32>* colors, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv0S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv1S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv2S, System::Collections::Generic::List_1<UnityEngine::Vector2>* uv3S, System::Collections::Generic::List_1<UnityEngine::Vector3>* normals, System::Collections::Generic::List_1<UnityEngine::Vector4>* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::AddUIVertexStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "AddUIVertexStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitIndicesStreamsInternal
void UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SplitIndicesStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitIndicesStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SplitUIVertexStreamsInternal
void UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SplitUIVertexStreamsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "SplitUIVertexStreamsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents);
}
// Autogenerated method: UnityEngine.CanvasRenderer.CreateUIVertexStreamInternal
void UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal(::Il2CppObject* verts, ::Il2CppObject* positions, ::Il2CppObject* colors, ::Il2CppObject* uv0S, ::Il2CppObject* uv1S, ::Il2CppObject* uv2S, ::Il2CppObject* uv3S, ::Il2CppObject* normals, ::Il2CppObject* tangents, ::Il2CppObject* indices) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::CreateUIVertexStreamInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "CanvasRenderer", "CreateUIVertexStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(verts), ::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(uv0S), ::il2cpp_utils::ExtractType(uv1S), ::il2cpp_utils::ExtractType(uv2S), ::il2cpp_utils::ExtractType(uv3S), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(tangents), ::il2cpp_utils::ExtractType(indices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verts, positions, colors, uv0S, uv1S, uv2S, uv3S, normals, tangents, indices);
}
// Autogenerated method: UnityEngine.CanvasRenderer.SetColor_Injected
void UnityEngine::CanvasRenderer::SetColor_Injected(UnityEngine::Color& color) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::SetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: UnityEngine.CanvasRenderer.GetColor_Injected
void UnityEngine::CanvasRenderer::GetColor_Injected(UnityEngine::Color& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::GetColor_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.CanvasRenderer.EnableRectClipping_Injected
void UnityEngine::CanvasRenderer::EnableRectClipping_Injected(UnityEngine::Rect& rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::EnableRectClipping_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableRectClipping_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rect);
}
// Autogenerated method: UnityEngine.CanvasRenderer.set_clippingSoftness_Injected
void UnityEngine::CanvasRenderer::set_clippingSoftness_Injected(UnityEngine::Vector2& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::CanvasRenderer::set_clippingSoftness_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clippingSoftness_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: CanvasRenderer::set_hasPopInstruction
// Il2CppName: set_hasPopInstruction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(bool)>(&CanvasRenderer::set_hasPopInstruction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_hasPopInstruction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::get_materialCount
// Il2CppName: get_materialCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CanvasRenderer::*)()>(&CanvasRenderer::get_materialCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "get_materialCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::set_materialCount
// Il2CppName: set_materialCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(int)>(&CanvasRenderer::set_materialCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_materialCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::set_popMaterialCount
// Il2CppName: set_popMaterialCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(int)>(&CanvasRenderer::set_popMaterialCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_popMaterialCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::get_absoluteDepth
// Il2CppName: get_absoluteDepth
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CanvasRenderer::*)()>(&CanvasRenderer::get_absoluteDepth)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "get_absoluteDepth", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::get_hasMoved
// Il2CppName: get_hasMoved
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasRenderer::*)()>(&CanvasRenderer::get_hasMoved)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "get_hasMoved", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::get_cull
// Il2CppName: get_cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CanvasRenderer::*)()>(&CanvasRenderer::get_cull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "get_cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::set_cull
// Il2CppName: set_cull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(bool)>(&CanvasRenderer::set_cull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_cull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetColor
// Il2CppName: SetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Color)>(&CanvasRenderer::SetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::GetColor
// Il2CppName: GetColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (CanvasRenderer::*)()>(&CanvasRenderer::GetColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "GetColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::EnableRectClipping
// Il2CppName: EnableRectClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Rect)>(&CanvasRenderer::EnableRectClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "EnableRectClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::set_clippingSoftness
// Il2CppName: set_clippingSoftness
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Vector2)>(&CanvasRenderer::set_clippingSoftness)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_clippingSoftness", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::DisableRectClipping
// Il2CppName: DisableRectClipping
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)()>(&CanvasRenderer::DisableRectClipping)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "DisableRectClipping", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetMaterial
// Il2CppName: SetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Material*, int)>(&CanvasRenderer::SetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::GetMaterial
// Il2CppName: GetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (CanvasRenderer::*)(int)>(&CanvasRenderer::GetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "GetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetPopMaterial
// Il2CppName: SetPopMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Material*, int)>(&CanvasRenderer::SetPopMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetPopMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetTexture
// Il2CppName: SetTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Texture*)>(&CanvasRenderer::SetTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetAlphaTexture
// Il2CppName: SetAlphaTexture
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Texture*)>(&CanvasRenderer::SetAlphaTexture)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetAlphaTexture", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetMesh
// Il2CppName: SetMesh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Mesh*)>(&CanvasRenderer::SetMesh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetMesh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Mesh*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)()>(&CanvasRenderer::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetMaterial
// Il2CppName: SetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Material*, UnityEngine::Texture*)>(&CanvasRenderer::SetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Material*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Texture*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::GetMaterial
// Il2CppName: GetMaterial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Material* (CanvasRenderer::*)()>(&CanvasRenderer::GetMaterial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "GetMaterial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SplitUIVertexStreams
// Il2CppName: SplitUIVertexStreams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Color32>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Vector4>*, System::Collections::Generic::List_1<int>*)>(&CanvasRenderer::SplitUIVertexStreams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SplitUIVertexStreams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::CreateUIVertexStream
// Il2CppName: CreateUIVertexStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Color32>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Vector4>*, System::Collections::Generic::List_1<int>*)>(&CanvasRenderer::CreateUIVertexStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "CreateUIVertexStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<int>*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::AddUIVertexStream
// Il2CppName: AddUIVertexStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Collections::Generic::List_1<UnityEngine::UIVertex>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Color32>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector2>*, System::Collections::Generic::List_1<UnityEngine::Vector3>*, System::Collections::Generic::List_1<UnityEngine::Vector4>*)>(&CanvasRenderer::AddUIVertexStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "AddUIVertexStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::UIVertex>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Color32>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<UnityEngine::Vector4>*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SplitIndicesStreamsInternal
// Il2CppName: SplitIndicesStreamsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*)>(&CanvasRenderer::SplitIndicesStreamsInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SplitIndicesStreamsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SplitUIVertexStreamsInternal
// Il2CppName: SplitUIVertexStreamsInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&CanvasRenderer::SplitUIVertexStreamsInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SplitUIVertexStreamsInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::CreateUIVertexStreamInternal
// Il2CppName: CreateUIVertexStreamInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*, ::Il2CppObject*)>(&CanvasRenderer::CreateUIVertexStreamInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "CreateUIVertexStreamInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::SetColor_Injected
// Il2CppName: SetColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Color&)>(&CanvasRenderer::SetColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "SetColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::GetColor_Injected
// Il2CppName: GetColor_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Color&)>(&CanvasRenderer::GetColor_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "GetColor_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color&>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::EnableRectClipping_Injected
// Il2CppName: EnableRectClipping_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Rect&)>(&CanvasRenderer::EnableRectClipping_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "EnableRectClipping_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: CanvasRenderer::set_clippingSoftness_Injected
// Il2CppName: set_clippingSoftness_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CanvasRenderer::*)(UnityEngine::Vector2&)>(&CanvasRenderer::set_clippingSoftness_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CanvasRenderer*), "set_clippingSoftness_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.RectTransformUtility
#include "UnityEngine/RectTransformUtility.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Ray
#include "UnityEngine/Ray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3[] s_Corners
::Array<UnityEngine::Vector3>* UnityEngine::RectTransformUtility::_get_s_Corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::_get_s_Corners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("UnityEngine", "RectTransformUtility", "s_Corners"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3[] s_Corners
void UnityEngine::RectTransformUtility::_set_s_Corners(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::_set_s_Corners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RectTransformUtility", "s_Corners", value));
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint
UnityEngine::Vector2 UnityEngine::RectTransformUtility::PixelAdjustPoint(UnityEngine::Vector2 point, UnityEngine::Transform* elementTransform, UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PixelAdjustPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point, elementTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect
UnityEngine::Rect UnityEngine::RectTransformUtility::PixelAdjustRect(UnityEngine::RectTransform* rectTransform, UnityEngine::Canvas* canvas) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PixelAdjustRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, canvas);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle
bool UnityEngine::RectTransformUtility::PointInRectangle(UnityEngine::Vector2 screenPoint, UnityEngine::RectTransform* rect, UnityEngine::Camera* cam, UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenPoint, rect, cam, offset);
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::RectangleContainsScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, screenPoint, cam);
}
// Autogenerated method: UnityEngine.RectTransformUtility.RectangleContainsScreenPoint
bool UnityEngine::RectTransformUtility::RectangleContainsScreenPoint(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector4 offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::RectangleContainsScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "RectangleContainsScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, screenPoint, cam, offset);
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToWorldPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector3& worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, screenPoint, cam, worldPoint);
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToLocalPointInRectangle
bool UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle(UnityEngine::RectTransform* rect, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector2& localPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::ScreenPointToLocalPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToLocalPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, screenPoint, cam, localPoint);
}
// Autogenerated method: UnityEngine.RectTransformUtility.ScreenPointToRay
UnityEngine::Ray UnityEngine::RectTransformUtility::ScreenPointToRay(UnityEngine::Camera* cam, UnityEngine::Vector2 screenPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::ScreenPointToRay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "ScreenPointToRay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(screenPos)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Ray, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam, screenPos);
}
// Autogenerated method: UnityEngine.RectTransformUtility.WorldToScreenPoint
UnityEngine::Vector2 UnityEngine::RectTransformUtility::WorldToScreenPoint(UnityEngine::Camera* cam, UnityEngine::Vector3 worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::WorldToScreenPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "WorldToScreenPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(worldPoint)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cam, worldPoint);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutOnAxis
void UnityEngine::RectTransformUtility::FlipLayoutOnAxis(UnityEngine::RectTransform* rect, int axis, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::FlipLayoutOnAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutOnAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, axis, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.FlipLayoutAxes
void UnityEngine::RectTransformUtility::FlipLayoutAxes(UnityEngine::RectTransform* rect, bool keepPositioning, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::FlipLayoutAxes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "FlipLayoutAxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(keepPositioning), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rect, keepPositioning, recursive);
}
// Autogenerated method: UnityEngine.RectTransformUtility.GetTransposed
UnityEngine::Vector2 UnityEngine::RectTransformUtility::GetTransposed(UnityEngine::Vector2 input) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::GetTransposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "GetTransposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: UnityEngine.RectTransformUtility..cctor
void UnityEngine::RectTransformUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustPoint_Injected
void UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected(UnityEngine::Vector2& point, UnityEngine::Transform* elementTransform, UnityEngine::Canvas* canvas, UnityEngine::Vector2& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PixelAdjustPoint_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustPoint_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(elementTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, point, elementTransform, canvas, ret);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PixelAdjustRect_Injected
void UnityEngine::RectTransformUtility::PixelAdjustRect_Injected(UnityEngine::RectTransform* rectTransform, UnityEngine::Canvas* canvas, UnityEngine::Rect& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PixelAdjustRect_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PixelAdjustRect_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(canvas), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, canvas, ret);
}
// Autogenerated method: UnityEngine.RectTransformUtility.PointInRectangle_Injected
bool UnityEngine::RectTransformUtility::PointInRectangle_Injected(UnityEngine::Vector2& screenPoint, UnityEngine::RectTransform* rect, UnityEngine::Camera* cam, UnityEngine::Vector4& offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RectTransformUtility::PointInRectangle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "RectTransformUtility", "PointInRectangle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(rect), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, screenPoint, rect, cam, offset);
}
// Writing MetadataGetter for method: RectTransformUtility::PixelAdjustPoint
// Il2CppName: PixelAdjustPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Vector2, UnityEngine::Transform*, UnityEngine::Canvas*)>(&RectTransformUtility::PixelAdjustPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PixelAdjustPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::PixelAdjustRect
// Il2CppName: PixelAdjustRect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Rect (*)(UnityEngine::RectTransform*, UnityEngine::Canvas*)>(&RectTransformUtility::PixelAdjustRect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PixelAdjustRect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::PointInRectangle
// Il2CppName: PointInRectangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector2, UnityEngine::RectTransform*, UnityEngine::Camera*, UnityEngine::Vector4)>(&RectTransformUtility::PointInRectangle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PointInRectangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::RectangleContainsScreenPoint
// Il2CppName: RectangleContainsScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RectTransform*, UnityEngine::Vector2, UnityEngine::Camera*)>(&RectTransformUtility::RectangleContainsScreenPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "RectangleContainsScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::RectangleContainsScreenPoint
// Il2CppName: RectangleContainsScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RectTransform*, UnityEngine::Vector2, UnityEngine::Camera*, UnityEngine::Vector4)>(&RectTransformUtility::RectangleContainsScreenPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "RectangleContainsScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::ScreenPointToWorldPointInRectangle
// Il2CppName: ScreenPointToWorldPointInRectangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RectTransform*, UnityEngine::Vector2, UnityEngine::Camera*, UnityEngine::Vector3&)>(&RectTransformUtility::ScreenPointToWorldPointInRectangle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::ScreenPointToLocalPointInRectangle
// Il2CppName: ScreenPointToLocalPointInRectangle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::RectTransform*, UnityEngine::Vector2, UnityEngine::Camera*, UnityEngine::Vector2&)>(&RectTransformUtility::ScreenPointToLocalPointInRectangle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "ScreenPointToLocalPointInRectangle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::ScreenPointToRay
// Il2CppName: ScreenPointToRay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Ray (*)(UnityEngine::Camera*, UnityEngine::Vector2)>(&RectTransformUtility::ScreenPointToRay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "ScreenPointToRay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::WorldToScreenPoint
// Il2CppName: WorldToScreenPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Camera*, UnityEngine::Vector3)>(&RectTransformUtility::WorldToScreenPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "WorldToScreenPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::FlipLayoutOnAxis
// Il2CppName: FlipLayoutOnAxis
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*, int, bool, bool)>(&RectTransformUtility::FlipLayoutOnAxis)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "FlipLayoutOnAxis", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::FlipLayoutAxes
// Il2CppName: FlipLayoutAxes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*, bool, bool)>(&RectTransformUtility::FlipLayoutAxes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "FlipLayoutAxes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::GetTransposed
// Il2CppName: GetTransposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (*)(UnityEngine::Vector2)>(&RectTransformUtility::GetTransposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "GetTransposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RectTransformUtility::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::PixelAdjustPoint_Injected
// Il2CppName: PixelAdjustPoint_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::Vector2&, UnityEngine::Transform*, UnityEngine::Canvas*, UnityEngine::Vector2&)>(&RectTransformUtility::PixelAdjustPoint_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PixelAdjustPoint_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Transform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::PixelAdjustRect_Injected
// Il2CppName: PixelAdjustRect_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(UnityEngine::RectTransform*, UnityEngine::Canvas*, UnityEngine::Rect&)>(&RectTransformUtility::PixelAdjustRect_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PixelAdjustRect_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Canvas*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Rect&>()});
  }
};
// Writing MetadataGetter for method: RectTransformUtility::PointInRectangle_Injected
// Il2CppName: PointInRectangle_Injected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(UnityEngine::Vector2&, UnityEngine::RectTransform*, UnityEngine::Camera*, UnityEngine::Vector4&)>(&RectTransformUtility::PointInRectangle_Injected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RectTransformUtility*), "PointInRectangle_Injected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::RectTransform*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Camera*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector4&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderMode
#include "UnityEngine/RenderMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_get_ScreenSpaceOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceOverlay"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceOverlay
void UnityEngine::RenderMode::_set_ScreenSpaceOverlay(UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_set_ScreenSpaceOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode ScreenSpaceCamera
UnityEngine::RenderMode UnityEngine::RenderMode::_get_ScreenSpaceCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_get_ScreenSpaceCamera");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderMode>("UnityEngine", "RenderMode", "ScreenSpaceCamera"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode ScreenSpaceCamera
void UnityEngine::RenderMode::_set_ScreenSpaceCamera(UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_set_ScreenSpaceCamera");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "ScreenSpaceCamera", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RenderMode WorldSpace
UnityEngine::RenderMode UnityEngine::RenderMode::_get_WorldSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_get_WorldSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::RenderMode>("UnityEngine", "RenderMode", "WorldSpace"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RenderMode WorldSpace
void UnityEngine::RenderMode::_set_WorldSpace(UnityEngine::RenderMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::RenderMode::_set_WorldSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RenderMode", "WorldSpace", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AdditionalCanvasShaderChannels
#include "UnityEngine/AdditionalCanvasShaderChannels.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels None
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels None
void UnityEngine::AdditionalCanvasShaderChannels::_set_None(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord1
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord1", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord2
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord2", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_TexCoord3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels TexCoord3
void UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_TexCoord3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "TexCoord3", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Normal
void UnityEngine::AdditionalCanvasShaderChannels::_set_Normal(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
UnityEngine::AdditionalCanvasShaderChannels UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_get_Tangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AdditionalCanvasShaderChannels>("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AdditionalCanvasShaderChannels Tangent
void UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent(UnityEngine::AdditionalCanvasShaderChannels value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AdditionalCanvasShaderChannels::_set_Tangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AdditionalCanvasShaderChannels", "Tangent", value));
}
